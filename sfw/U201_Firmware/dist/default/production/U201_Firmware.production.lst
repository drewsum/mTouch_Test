

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Aug 28 00:57:30 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           ; Version 1.45 (B)
    28                           ; Generated 30/01/2018 GMT
    29                           ; 
    30                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18LF67K40 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	nvCOMRAM
    63  000016                     __pnvCOMRAM:
    64                           	opt stack 0
    65  000016                     _EUSART2_RxDefaultInterruptHandler:
    66                           	opt stack 0
    67  000016                     	ds	3
    68  000019                     _EUSART2_TxDefaultInterruptHandler:
    69                           	opt stack 0
    70  000019                     	ds	3
    71  00001C                     _eusart2TxBufferRemaining:
    72                           	opt stack 0
    73  00001C                     	ds	1
    74  0000                     _PMD5	set	3665
    75  0000                     _PMD4	set	3664
    76  0000                     _PMD3	set	3663
    77  0000                     _PMD2	set	3662
    78  0000                     _PMD1	set	3661
    79  0000                     _PMD0	set	3660
    80  0000                     _OSCTUNE	set	3656
    81  0000                     _OSCFRQ	set	3657
    82  0000                     _OSCEN	set	3655
    83  0000                     _OSCCON3	set	3653
    84  0000                     _OSCCON1	set	3651
    85  0000                     _RC2REG	set	3825
    86  0000                     _RC2STAbits	set	3829
    87  0000                     _TX2REG	set	3826
    88  0000                     _TX2STAbits	set	3830
    89  0000                     _SP2BRGH	set	3828
    90  0000                     _SP2BRGL	set	3827
    91  0000                     _TX2STA	set	3830
    92  0000                     _RC2STA	set	3829
    93  0000                     _BAUD2CON	set	3831
    94  0000                     _PIR3bits	set	3638
    95  0000                     _PIE3bits	set	3628
    96  0000                     _IPR3bits	set	3618
    97  0000                     _RX2PPSbits	set	3601
    98  0000                     _RG7PPS	set	3721
    99  0000                     _ODCOND	set	3749
   100  0000                     _ODCONC	set	3744
   101  0000                     _ODCONH	set	3775
   102  0000                     _ODCONB	set	3736
   103  0000                     _ODCONG	set	3770
   104  0000                     _ODCONA	set	3728
   105  0000                     _ODCONF	set	3762
   106  0000                     _ODCONE	set	3757
   107  0000                     _WPUH	set	3776
   108  0000                     _WPUC	set	3745
   109  0000                     _WPUA	set	3729
   110  0000                     _WPUG	set	3771
   111  0000                     _WPUB	set	3737
   112  0000                     _WPUE	set	3758
   113  0000                     _WPUF	set	3763
   114  0000                     _WPUD	set	3750
   115  0000                     _ANSELA	set	3730
   116  0000                     _ANSELF	set	3764
   117  0000                     _ANSELG	set	3772
   118  0000                     _ANSELE	set	3759
   119  0000                     _ANSELB	set	3738
   120  0000                     _ANSELD	set	3751
   121  0000                     _INTCONbits	set	4082
   122  0000                     _TRISD	set	3972
   123  0000                     _TRISC	set	3971
   124  0000                     _TRISH	set	3976
   125  0000                     _TRISB	set	3970
   126  0000                     _TRISG	set	3975
   127  0000                     _TRISA	set	3969
   128  0000                     _TRISF	set	3974
   129  0000                     _TRISE	set	3973
   130  0000                     _LATH	set	3968
   131  0000                     _LATC	set	3963
   132  0000                     _LATG	set	3967
   133  0000                     _LATB	set	3962
   134  0000                     _LATF	set	3966
   135  0000                     _LATA	set	3961
   136  0000                     _LATD	set	3964
   137  0000                     _LATE	set	3965
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  00022C                     __pcinit:
   143                           	opt stack 0
   144  00022C                     start_initialization:
   145                           	opt stack 0
   146  00022C                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK0 (128 bytes)
   150  00022C  EE00  F060         	lfsr	0,__pbssBANK0
   151  000230  0E80               	movlw	128
   152  000232                     clear_0:
   153  000232  6AEE               	clrf	postinc0,c
   154  000234  06E8               	decf	wreg,f,c
   155  000236  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to COMRAM (5 bytes)
   158  000238  6A21               	clrf	(__pbssCOMRAM+4)& (0+255),c
   159  00023A  6A20               	clrf	(__pbssCOMRAM+3)& (0+255),c
   160  00023C  6A1F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   161  00023E  6A1E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   162  000240  6A1D               	clrf	__pbssCOMRAM& (0+255),c
   163  000242                     end_of_initialization:
   164                           	opt stack 0
   165  000242                     __end_of__initialization:
   166                           	opt stack 0
   167  000242  9022               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   168  000244  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   169  000246  0100               	movlb	0
   170  000248  EF59  F001         	goto	_main	;jump to C main() function
   171                           postinc0	equ	0xFEE
   172                           wreg	equ	0xFE8
   173                           
   174                           	psect	bssCOMRAM
   175  00001D                     __pbssCOMRAM:
   176                           	opt stack 0
   177  00001D                     _eusart2RxCount:
   178                           	opt stack 0
   179  00001D                     	ds	1
   180  00001E                     _eusart2RxTail:
   181                           	opt stack 0
   182  00001E                     	ds	1
   183  00001F                     _eusart2RxHead:
   184                           	opt stack 0
   185  00001F                     	ds	1
   186  000020                     _eusart2TxTail:
   187                           	opt stack 0
   188  000020                     	ds	1
   189  000021                     _eusart2TxHead:
   190                           	opt stack 0
   191  000021                     	ds	1
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           
   195                           	psect	bssBANK0
   196  000060                     __pbssBANK0:
   197                           	opt stack 0
   198  000060                     _eusart2RxBuffer:
   199                           	opt stack 0
   200  000060                     	ds	64
   201  0000A0                     _eusart2TxBuffer:
   202                           	opt stack 0
   203  0000A0                     	ds	64
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	cstackCOMRAM
   208  000001                     __pcstackCOMRAM:
   209                           	opt stack 0
   210  000001                     ??_INTERRUPT_InterruptManagerHigh:
   211  000001                     
   212                           ; 1 bytes @ 0x0
   213  000001                     	ds	18
   214  000013                     EUSART2_SetTxInterruptHandler@interruptHandler:
   215                           	opt stack 0
   216  000013                     EUSART2_SetRxInterruptHandler@interruptHandler:
   217                           	opt stack 0
   218                           
   219                           ; 3 bytes @ 0x12
   220  000013                     	ds	3
   221  000016                     postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           
   224                           ; 1 bytes @ 0x15
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 49 in file "main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, status,2, status,0, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   248 ;;Total ram usage:        0 bytes
   249 ;; Hardware stack levels required when called:    5
   250 ;; This function calls:
   251 ;;		_SYSTEM_Initialize
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           	psect	text0
   258  0002B2                     __ptext0:
   259                           	opt stack 0
   260  0002B2                     _main:
   261                           	opt stack 26
   262                           
   263                           ;main.c: 52: SYSTEM_Initialize();
   264                           
   265                           ;incstack = 0
   266  0002B2  EC40  F001         	call	_SYSTEM_Initialize	;wreg free
   267                           
   268                           ;main.c: 59: (INTCONbits.GIEH = 1);
   269  0002B6  8EF2               	bsf	intcon,7,c	;volatile
   270                           
   271                           ;main.c: 62: (INTCONbits.GIEL = 1);
   272  0002B8  8CF2               	bsf	intcon,6,c	;volatile
   273  0002BA                     
   274                           ;main.c: 65: {
   275                           ;main.c: 67: __nop();
   276  0002BA  F000               	nop	
   277  0002BC  D7FE               	goto	l269
   278  0002BE                     __end_of_main:
   279                           	opt stack 0
   280                           intcon	equ	0xFF2
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           
   284 ;; *************** function _SYSTEM_Initialize *****************
   285 ;; Defined at:
   286 ;;		line 50 in file "mcc_generated_files/mcc.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   304 ;;Total ram usage:        0 bytes
   305 ;; Hardware stack levels used:    1
   306 ;; Hardware stack levels required when called:    4
   307 ;; This function calls:
   308 ;;		_EUSART2_Initialize
   309 ;;		_INTERRUPT_Initialize
   310 ;;		_OSCILLATOR_Initialize
   311 ;;		_PIN_MANAGER_Initialize
   312 ;;		_PMD_Initialize
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text1
   319  000280                     __ptext1:
   320                           	opt stack 0
   321  000280                     _SYSTEM_Initialize:
   322                           	opt stack 26
   323                           
   324                           ;mcc.c: 52: INTERRUPT_Initialize();
   325                           
   326                           ;incstack = 0
   327  000280  EC5F  F001         	call	_INTERRUPT_Initialize	;wreg free
   328                           
   329                           ;mcc.c: 53: PMD_Initialize();
   330  000284  EC26  F001         	call	_PMD_Initialize	;wreg free
   331                           
   332                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   333  000288  EC6E  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   334                           
   335                           ;mcc.c: 55: OSCILLATOR_Initialize();
   336  00028C  EC34  F001         	call	_OSCILLATOR_Initialize	;wreg free
   337                           
   338                           ;mcc.c: 56: EUSART2_Initialize();
   339  000290  ECB9  F000         	call	_EUSART2_Initialize	;wreg free
   340  000294  0012               	return		;funcret
   341  000296                     __end_of_SYSTEM_Initialize:
   342                           	opt stack 0
   343                           intcon	equ	0xFF2
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           
   347 ;; *************** function _PMD_Initialize *****************
   348 ;; Defined at:
   349 ;;		line 73 in file "mcc_generated_files/mcc.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels used:    1
   369 ;; Hardware stack levels required when called:    2
   370 ;; This function calls:
   371 ;;		Nothing
   372 ;; This function is called by:
   373 ;;		_SYSTEM_Initialize
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text2
   378  00024C                     __ptext2:
   379                           	opt stack 0
   380  00024C                     _PMD_Initialize:
   381                           	opt stack 27
   382                           
   383                           ;mcc.c: 76: PMD0 = 0x00;
   384                           
   385                           ;incstack = 0
   386  00024C  0E00               	movlw	0
   387  00024E  010E               	movlb	14	; () banked
   388  000250  6F4C               	movwf	76,b	;volatile
   389                           
   390                           ;mcc.c: 78: PMD1 = 0x00;
   391  000252  0E00               	movlw	0
   392  000254  6F4D               	movwf	77,b	;volatile
   393                           
   394                           ;mcc.c: 80: PMD2 = 0x00;
   395  000256  0E00               	movlw	0
   396  000258  6F4E               	movwf	78,b	;volatile
   397                           
   398                           ;mcc.c: 82: PMD3 = 0x00;
   399  00025A  0E00               	movlw	0
   400  00025C  6F4F               	movwf	79,b	;volatile
   401                           
   402                           ;mcc.c: 84: PMD4 = 0x00;
   403  00025E  0E00               	movlw	0
   404  000260  6F50               	movwf	80,b	;volatile
   405                           
   406                           ;mcc.c: 86: PMD5 = 0x00;
   407  000262  0E00               	movlw	0
   408  000264  6F51               	movwf	81,b	;volatile
   409                           
   410                           ; BSR set to: 14
   411  000266  0012               	return		;funcret
   412  000268                     __end_of_PMD_Initialize:
   413                           	opt stack 0
   414                           intcon	equ	0xFF2
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           
   418 ;; *************** function _PIN_MANAGER_Initialize *****************
   419 ;; Defined at:
   420 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; Hardware stack levels required when called:    2
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		_SYSTEM_Initialize
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           	psect	text3
   449  0000DC                     __ptext3:
   450                           	opt stack 0
   451  0000DC                     _PIN_MANAGER_Initialize:
   452                           	opt stack 27
   453                           
   454                           ;pin_manager.c: 62: LATE = 0x00;
   455                           
   456                           ; BSR set to: 14
   457                           ;incstack = 0
   458  0000DC  0E00               	movlw	0
   459  0000DE  6E7D               	movwf	3965,c	;volatile
   460                           
   461                           ;pin_manager.c: 63: LATD = 0x00;
   462  0000E0  0E00               	movlw	0
   463  0000E2  6E7C               	movwf	3964,c	;volatile
   464                           
   465                           ;pin_manager.c: 64: LATA = 0x00;
   466  0000E4  0E00               	movlw	0
   467  0000E6  6E79               	movwf	3961,c	;volatile
   468                           
   469                           ;pin_manager.c: 65: LATF = 0x00;
   470  0000E8  0E00               	movlw	0
   471  0000EA  6E7E               	movwf	3966,c	;volatile
   472                           
   473                           ;pin_manager.c: 66: LATB = 0x00;
   474  0000EC  0E00               	movlw	0
   475  0000EE  6E7A               	movwf	3962,c	;volatile
   476                           
   477                           ;pin_manager.c: 67: LATG = 0x00;
   478  0000F0  0E00               	movlw	0
   479  0000F2  6E7F               	movwf	3967,c	;volatile
   480                           
   481                           ;pin_manager.c: 68: LATC = 0x00;
   482  0000F4  0E00               	movlw	0
   483  0000F6  6E7B               	movwf	3963,c	;volatile
   484                           
   485                           ;pin_manager.c: 69: LATH = 0x00;
   486  0000F8  0E00               	movlw	0
   487  0000FA  6E80               	movwf	3968,c	;volatile
   488                           
   489                           ;pin_manager.c: 74: TRISE = 0xFF;
   490  0000FC  6885               	setf	3973,c	;volatile
   491                           
   492                           ;pin_manager.c: 75: TRISF = 0xFF;
   493  0000FE  6886               	setf	3974,c	;volatile
   494                           
   495                           ;pin_manager.c: 76: TRISA = 0xFF;
   496  000100  6881               	setf	3969,c	;volatile
   497                           
   498                           ;pin_manager.c: 77: TRISG = 0x5F;
   499  000102  0E5F               	movlw	95
   500  000104  6E87               	movwf	3975,c	;volatile
   501                           
   502                           ;pin_manager.c: 78: TRISB = 0xFF;
   503  000106  6882               	setf	3970,c	;volatile
   504                           
   505                           ;pin_manager.c: 79: TRISH = 0x0F;
   506  000108  0E0F               	movlw	15
   507  00010A  6E88               	movwf	3976,c	;volatile
   508                           
   509                           ;pin_manager.c: 80: TRISC = 0xFF;
   510  00010C  6883               	setf	3971,c	;volatile
   511                           
   512                           ;pin_manager.c: 81: TRISD = 0xFF;
   513  00010E  6884               	setf	3972,c	;volatile
   514                           
   515                           ;pin_manager.c: 86: ANSELD = 0xFF;
   516  000110  010E               	movlb	14	; () banked
   517  000112  69A7               	setf	167,b	;volatile
   518                           
   519                           ; BSR set to: 14
   520                           ;pin_manager.c: 87: ANSELB = 0xFF;
   521  000114  699A               	setf	154,b	;volatile
   522                           
   523                           ; BSR set to: 14
   524                           ;pin_manager.c: 88: ANSELE = 0xFF;
   525  000116  69AF               	setf	175,b	;volatile
   526                           
   527                           ;pin_manager.c: 89: ANSELG = 0xBF;
   528  000118  0EBF               	movlw	191
   529  00011A  6FBC               	movwf	188,b	;volatile
   530                           
   531                           ; BSR set to: 14
   532                           ;pin_manager.c: 90: ANSELF = 0xFF;
   533  00011C  69B4               	setf	180,b	;volatile
   534                           
   535                           ; BSR set to: 14
   536                           ;pin_manager.c: 91: ANSELA = 0xFF;
   537  00011E  6992               	setf	146,b	;volatile
   538                           
   539                           ;pin_manager.c: 96: WPUD = 0x00;
   540  000120  0E00               	movlw	0
   541  000122  6FA6               	movwf	166,b	;volatile
   542                           
   543                           ;pin_manager.c: 97: WPUF = 0x00;
   544  000124  0E00               	movlw	0
   545  000126  6FB3               	movwf	179,b	;volatile
   546                           
   547                           ;pin_manager.c: 98: WPUE = 0x00;
   548  000128  0E00               	movlw	0
   549  00012A  6FAE               	movwf	174,b	;volatile
   550                           
   551                           ;pin_manager.c: 99: WPUB = 0x00;
   552  00012C  0E00               	movlw	0
   553  00012E  6F99               	movwf	153,b	;volatile
   554                           
   555                           ;pin_manager.c: 100: WPUG = 0x00;
   556  000130  0E00               	movlw	0
   557  000132  6FBB               	movwf	187,b	;volatile
   558                           
   559                           ;pin_manager.c: 101: WPUA = 0x00;
   560  000134  0E00               	movlw	0
   561  000136  6F91               	movwf	145,b	;volatile
   562                           
   563                           ;pin_manager.c: 102: WPUC = 0x00;
   564  000138  0E00               	movlw	0
   565  00013A  6FA1               	movwf	161,b	;volatile
   566                           
   567                           ;pin_manager.c: 103: WPUH = 0x00;
   568  00013C  0E00               	movlw	0
   569  00013E  6FC0               	movwf	192,b	;volatile
   570                           
   571                           ;pin_manager.c: 108: ODCONE = 0x00;
   572  000140  0E00               	movlw	0
   573  000142  6FAD               	movwf	173,b	;volatile
   574                           
   575                           ;pin_manager.c: 109: ODCONF = 0x00;
   576  000144  0E00               	movlw	0
   577  000146  6FB2               	movwf	178,b	;volatile
   578                           
   579                           ;pin_manager.c: 110: ODCONA = 0x00;
   580  000148  0E00               	movlw	0
   581  00014A  6F90               	movwf	144,b	;volatile
   582                           
   583                           ;pin_manager.c: 111: ODCONG = 0x00;
   584  00014C  0E00               	movlw	0
   585  00014E  6FBA               	movwf	186,b	;volatile
   586                           
   587                           ;pin_manager.c: 112: ODCONB = 0x00;
   588  000150  0E00               	movlw	0
   589  000152  6F98               	movwf	152,b	;volatile
   590                           
   591                           ;pin_manager.c: 113: ODCONH = 0x00;
   592  000154  0E00               	movlw	0
   593  000156  6FBF               	movwf	191,b	;volatile
   594                           
   595                           ;pin_manager.c: 114: ODCONC = 0x00;
   596  000158  0E00               	movlw	0
   597  00015A  6FA0               	movwf	160,b	;volatile
   598                           
   599                           ;pin_manager.c: 115: ODCOND = 0x00;
   600  00015C  0E00               	movlw	0
   601  00015E  6FA5               	movwf	165,b	;volatile
   602                           
   603                           ;pin_manager.c: 124: RG7PPS = 0x0E;
   604  000160  0E0E               	movlw	14
   605  000162  6F89               	movwf	137,b	;volatile
   606                           
   607                           ; BSR set to: 14
   608                           ;pin_manager.c: 125: RX2PPSbits.RX2PPS = 0x36;
   609  000164  9111               	bcf	17,0,b	;volatile
   610  000166  8311               	bsf	17,1,b	;volatile
   611  000168  8511               	bsf	17,2,b	;volatile
   612  00016A  9711               	bcf	17,3,b	;volatile
   613  00016C  8911               	bsf	17,4,b	;volatile
   614  00016E  8B11               	bsf	17,5,b	;volatile
   615                           
   616                           ; BSR set to: 14
   617  000170  0012               	return		;funcret
   618  000172                     __end_of_PIN_MANAGER_Initialize:
   619                           	opt stack 0
   620                           intcon	equ	0xFF2
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           
   624 ;; *************** function _OSCILLATOR_Initialize *****************
   625 ;; Defined at:
   626 ;;		line 59 in file "mcc_generated_files/mcc.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    2
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_SYSTEM_Initialize
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text4
   655  000268                     __ptext4:
   656                           	opt stack 0
   657  000268                     _OSCILLATOR_Initialize:
   658                           	opt stack 27
   659                           
   660                           ;mcc.c: 62: OSCCON1 = 0x60;
   661                           
   662                           ; BSR set to: 14
   663                           ;incstack = 0
   664  000268  0E60               	movlw	96
   665  00026A  010E               	movlb	14	; () banked
   666  00026C  6F43               	movwf	67,b	;volatile
   667                           
   668                           ;mcc.c: 64: OSCCON3 = 0x00;
   669  00026E  0E00               	movlw	0
   670  000270  6F45               	movwf	69,b	;volatile
   671                           
   672                           ;mcc.c: 66: OSCEN = 0x00;
   673  000272  0E00               	movlw	0
   674  000274  6F47               	movwf	71,b	;volatile
   675                           
   676                           ;mcc.c: 68: OSCFRQ = 0x08;
   677  000276  0E08               	movlw	8
   678  000278  6F49               	movwf	73,b	;volatile
   679                           
   680                           ;mcc.c: 70: OSCTUNE = 0x00;
   681  00027A  0E00               	movlw	0
   682  00027C  6F48               	movwf	72,b	;volatile
   683                           
   684                           ; BSR set to: 14
   685  00027E  0012               	return		;funcret
   686  000280                     __end_of_OSCILLATOR_Initialize:
   687                           	opt stack 0
   688                           intcon	equ	0xFF2
   689                           postinc0	equ	0xFEE
   690                           wreg	equ	0xFE8
   691                           
   692 ;; *************** function _INTERRUPT_Initialize *****************
   693 ;; Defined at:
   694 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		None
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    2
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_SYSTEM_Initialize
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text5
   723  0002BE                     __ptext5:
   724                           	opt stack 0
   725  0002BE                     _INTERRUPT_Initialize:
   726                           	opt stack 27
   727                           
   728                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
   729                           
   730                           ; BSR set to: 14
   731                           ;incstack = 0
   732  0002BE  8AF2               	bsf	intcon,5,c	;volatile
   733                           
   734                           ;interrupt_manager.c: 60: IPR3bits.TX2IP = 1;
   735  0002C0  010E               	movlb	14	; () banked
   736  0002C2  8D22               	bsf	34,6,b	;volatile
   737                           
   738                           ;interrupt_manager.c: 63: IPR3bits.RC2IP = 1;
   739  0002C4  8F22               	bsf	34,7,b	;volatile
   740                           
   741                           ; BSR set to: 14
   742  0002C6  0012               	return		;funcret
   743  0002C8                     __end_of_INTERRUPT_Initialize:
   744                           	opt stack 0
   745                           intcon	equ	0xFF2
   746                           postinc0	equ	0xFEE
   747                           wreg	equ	0xFE8
   748                           
   749 ;; *************** function _EUSART2_Initialize *****************
   750 ;; Defined at:
   751 ;;		line 75 in file "mcc_generated_files/eusart2.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    3
   772 ;; This function calls:
   773 ;;		_EUSART2_SetRxInterruptHandler
   774 ;;		_EUSART2_SetTxInterruptHandler
   775 ;; This function is called by:
   776 ;;		_SYSTEM_Initialize
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text6
   781  000172                     __ptext6:
   782                           	opt stack 0
   783  000172                     _EUSART2_Initialize:
   784                           	opt stack 26
   785                           
   786                           ;eusart2.c: 78: PIE3bits.RC2IE = 0;
   787                           
   788                           ; BSR set to: 14
   789                           ;incstack = 0
   790  000172  010E               	movlb	14	; () banked
   791  000174  9F2C               	bcf	44,7,b	;volatile
   792                           
   793                           ; BSR set to: 14
   794                           ;eusart2.c: 79: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
   795  000176  0EFE               	movlw	low _EUSART2_Receive_ISR
   796  000178  6E13               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler,c
   797  00017A  0E01               	movlw	high _EUSART2_Receive_ISR
   798  00017C  6E14               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1,c
   799  00017E  0E00               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
   800  000180  6E15               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+2,c
   801  000182  EC52  F001         	call	_EUSART2_SetRxInterruptHandler	;wreg free
   802                           
   803                           ;eusart2.c: 80: PIE3bits.TX2IE = 0;
   804  000186  010E               	movlb	14	; () banked
   805  000188  9D2C               	bcf	44,6,b	;volatile
   806                           
   807                           ;eusart2.c: 81: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
   808  00018A  0ECC               	movlw	low _EUSART2_Transmit_ISR
   809  00018C  6E13               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler,c
   810  00018E  0E01               	movlw	high _EUSART2_Transmit_ISR
   811  000190  6E14               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1,c
   812  000192  0E00               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
   813  000194  6E15               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+2,c
   814  000196  EC4B  F001         	call	_EUSART2_SetTxInterruptHandler	;wreg free
   815                           
   816                           ;eusart2.c: 85: BAUD2CON = 0x08;
   817  00019A  0E08               	movlw	8
   818  00019C  010E               	movlb	14	; () banked
   819  00019E  6FF7               	movwf	247,b	;volatile
   820                           
   821                           ; BSR set to: 14
   822                           ;eusart2.c: 88: RC2STA = 0x90;
   823  0001A0  0E90               	movlw	144
   824  0001A2  6FF5               	movwf	245,b	;volatile
   825                           
   826                           ; BSR set to: 14
   827                           ;eusart2.c: 91: TX2STA = 0x24;
   828  0001A4  0E24               	movlw	36
   829  0001A6  6FF6               	movwf	246,b	;volatile
   830                           
   831                           ; BSR set to: 14
   832                           ;eusart2.c: 94: SP2BRGL = 0x8A;
   833  0001A8  0E8A               	movlw	138
   834  0001AA  6FF3               	movwf	243,b	;volatile
   835                           
   836                           ; BSR set to: 14
   837                           ;eusart2.c: 97: SP2BRGH = 0x00;
   838  0001AC  0E00               	movlw	0
   839  0001AE  6FF4               	movwf	244,b	;volatile
   840                           
   841                           ; BSR set to: 14
   842                           ;eusart2.c: 101: eusart2TxHead = 0;
   843  0001B0  0E00               	movlw	0
   844  0001B2  6E21               	movwf	_eusart2TxHead,c	;volatile
   845                           
   846                           ; BSR set to: 14
   847                           ;eusart2.c: 102: eusart2TxTail = 0;
   848  0001B4  0E00               	movlw	0
   849  0001B6  6E20               	movwf	_eusart2TxTail,c	;volatile
   850                           
   851                           ; BSR set to: 14
   852                           ;eusart2.c: 103: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
   853  0001B8  0E40               	movlw	64
   854  0001BA  6E1C               	movwf	_eusart2TxBufferRemaining,c	;volatile
   855                           
   856                           ; BSR set to: 14
   857                           ;eusart2.c: 105: eusart2RxHead = 0;
   858  0001BC  0E00               	movlw	0
   859  0001BE  6E1F               	movwf	_eusart2RxHead,c	;volatile
   860                           
   861                           ; BSR set to: 14
   862                           ;eusart2.c: 106: eusart2RxTail = 0;
   863  0001C0  0E00               	movlw	0
   864  0001C2  6E1E               	movwf	_eusart2RxTail,c	;volatile
   865                           
   866                           ; BSR set to: 14
   867                           ;eusart2.c: 107: eusart2RxCount = 0;
   868  0001C4  0E00               	movlw	0
   869  0001C6  6E1D               	movwf	_eusart2RxCount,c	;volatile
   870                           
   871                           ; BSR set to: 14
   872                           ;eusart2.c: 110: PIE3bits.RC2IE = 1;
   873  0001C8  8F2C               	bsf	44,7,b	;volatile
   874                           
   875                           ; BSR set to: 14
   876  0001CA  0012               	return		;funcret
   877  0001CC                     __end_of_EUSART2_Initialize:
   878                           	opt stack 0
   879                           intcon	equ	0xFF2
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           
   883 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
   884 ;; Defined at:
   885 ;;		line 220 in file "mcc_generated_files/eusart2.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  interruptHan    3   18[COMRAM] PTR FTN()void 
   888 ;;		 -> EUSART2_Transmit_ISR(1), 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   900 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   904 ;;Total ram usage:        3 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    2
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_EUSART2_Initialize
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text7
   915  000296                     __ptext7:
   916                           	opt stack 0
   917  000296                     _EUSART2_SetTxInterruptHandler:
   918                           	opt stack 26
   919                           
   920                           ;eusart2.c: 221: EUSART2_TxDefaultInterruptHandler = interruptHandler;
   921                           
   922                           ; BSR set to: 14
   923                           ;incstack = 0
   924  000296  C013  F019         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
   925  00029A  C014  F01A         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
   926  00029E  C015  F01B         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
   927  0002A2  0012               	return		;funcret
   928  0002A4                     __end_of_EUSART2_SetTxInterruptHandler:
   929                           	opt stack 0
   930                           intcon	equ	0xFF2
   931                           postinc0	equ	0xFEE
   932                           wreg	equ	0xFE8
   933                           
   934 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
   935 ;; Defined at:
   936 ;;		line 224 in file "mcc_generated_files/eusart2.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  interruptHan    3   18[COMRAM] PTR FTN()void 
   939 ;;		 -> EUSART2_Receive_ISR(1), 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   951 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   955 ;;Total ram usage:        3 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    2
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_EUSART2_Initialize
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text8
   966  0002A4                     __ptext8:
   967                           	opt stack 0
   968  0002A4                     _EUSART2_SetRxInterruptHandler:
   969                           	opt stack 26
   970                           
   971                           ;eusart2.c: 225: EUSART2_RxDefaultInterruptHandler = interruptHandler;
   972                           
   973                           ;incstack = 0
   974  0002A4  C013  F016         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
   975  0002A8  C014  F017         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
   976  0002AC  C015  F018         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
   977  0002B0  0012               	return		;funcret
   978  0002B2                     __end_of_EUSART2_SetRxInterruptHandler:
   979                           	opt stack 0
   980                           intcon	equ	0xFF2
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           
   984 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
   985 ;; Defined at:
   986 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1002 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1003 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1004 ;;Total ram usage:       18 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    1
  1007 ;; This function calls:
  1008 ;;		Absolute function
  1009 ;;		_EUSART2_Receive_ISR
  1010 ;;		_EUSART2_Transmit_ISR
  1011 ;; This function is called by:
  1012 ;;		Interrupt level 2
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	intcode
  1017  000008                     __pintcode:
  1018                           	opt stack 0
  1019  000008                     _INTERRUPT_InterruptManagerHigh:
  1020                           	opt stack 26
  1021                           
  1022                           ;incstack = 0
  1023  000008  8222               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1024  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  1025  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  1026  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  1027  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  1028  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  1029  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  1030  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  1031  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  1032  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  1033  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  1034  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  1035  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  1036  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  1037  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  1038  000042  C022  F00F         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
  1039  000046  C023  F010         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
  1040  00004A  C024  F011         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
  1041  00004E  C025  F012         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
  1042                           
  1043                           ;interrupt_manager.c: 71: if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  1044  000052  010E               	movlb	14	; () banked
  1045  000054  BD2C               	btfsc	44,6,b	;volatile
  1046                           
  1047                           ; BSR set to: 14
  1048  000056  AD36               	btfss	54,6,b	;volatile
  1049  000058  D00A               	goto	i2l106
  1050                           
  1051                           ; BSR set to: 14
  1052                           ;interrupt_manager.c: 72: {
  1053                           ;interrupt_manager.c: 73: EUSART2_TxDefaultInterruptHandler();
  1054  00005A  D801               	call	i2u27_48
  1055  00005C  D017               	goto	i2u30_49
  1056  00005E                     i2u27_48:
  1057  00005E  0005               	push	
  1058  000060  6EFA               	movwf	pclath,c
  1059  000062  5019               	movf	_EUSART2_TxDefaultInterruptHandler,w,c
  1060  000064  6EFD               	movwf	tosl,c
  1061  000066  501A               	movf	_EUSART2_TxDefaultInterruptHandler+1,w,c
  1062  000068  6EFE               	movwf	tosh,c
  1063  00006A  501B               	movf	_EUSART2_TxDefaultInterruptHandler+2,w,c
  1064  00006C  D00C               	goto	L1
  1065  00006E                     i2l106:
  1066                           
  1067                           ; BSR set to: 14
  1068                           ;interrupt_manager.c: 75: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
  1069  00006E  BF2C               	btfsc	44,7,b	;volatile
  1070                           
  1071                           ; BSR set to: 14
  1072  000070  AF36               	btfss	54,7,b	;volatile
  1073  000072  D00C               	goto	i2u30_49
  1074                           
  1075                           ; BSR set to: 14
  1076                           ;interrupt_manager.c: 76: {
  1077                           ;interrupt_manager.c: 77: EUSART2_RxDefaultInterruptHandler();
  1078  000074  D801               	call	i2u30_48
  1079  000076  D00A               	goto	i2u30_49
  1080  000078                     i2u30_48:
  1081  000078  0005               	push	
  1082  00007A  6EFA               	movwf	pclath,c
  1083  00007C  5016               	movf	_EUSART2_RxDefaultInterruptHandler,w,c
  1084  00007E  6EFD               	movwf	tosl,c
  1085  000080  5017               	movf	_EUSART2_RxDefaultInterruptHandler+1,w,c
  1086  000082  6EFE               	movwf	tosh,c
  1087  000084  5018               	movf	_EUSART2_RxDefaultInterruptHandler+2,w,c
  1088  000086                     L1:
  1089  000086  6EFF               	movwf	tosu,c
  1090  000088  50FA               	movf	pclath,w,c
  1091  00008A  0012               	return		;indir
  1092  00008C                     i2u30_49:
  1093                           
  1094                           ;interrupt_manager.c: 79: else
  1095                           ;interrupt_manager.c: 80: {
  1096                           
  1097                           ;interrupt_manager.c: 78: }
  1098  00008C  C012  F025         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
  1099  000090  C011  F024         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
  1100  000094  C010  F023         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
  1101  000098  C00F  F022         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
  1102  00009C  C00E  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  1103  0000A0  C00D  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  1104  0000A4  C00C  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  1105  0000A8  C00B  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  1106  0000AC  C00A  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  1107  0000B0  C009  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  1108  0000B4  C008  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  1109  0000B8  C007  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  1110  0000BC  C006  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  1111  0000C0  C005  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  1112  0000C4  C004  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  1113  0000C8  C003  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  1114  0000CC  C002  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  1115  0000D0  C001  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  1116  0000D4  9222               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1117  0000D6  0011               	retfie		f
  1118  0000D8                     __end_of_INTERRUPT_InterruptManagerHigh:
  1119                           	opt stack 0
  1120                           tosu	equ	0xFFF
  1121                           tosh	equ	0xFFE
  1122                           tosl	equ	0xFFD
  1123                           pclatu	equ	0xFFB
  1124                           pclath	equ	0xFFA
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           prodh	equ	0xFF4
  1130                           prodl	equ	0xFF3
  1131                           intcon	equ	0xFF2
  1132                           postinc0	equ	0xFEE
  1133                           fsr0h	equ	0xFEA
  1134                           fsr0l	equ	0xFE9
  1135                           wreg	equ	0xFE8
  1136                           fsr1h	equ	0xFE2
  1137                           fsr1l	equ	0xFE1
  1138                           fsr2h	equ	0xFDA
  1139                           fsr2l	equ	0xFD9
  1140                           
  1141 ;; *************** function _EUSART2_Transmit_ISR *****************
  1142 ;; Defined at:
  1143 ;;		line 181 in file "mcc_generated_files/eusart2.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_EUSART2_Initialize
  1167 ;;		_INTERRUPT_InterruptManagerHigh
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text10
  1172  0001CC                     __ptext10:
  1173                           	opt stack 0
  1174  0001CC                     _EUSART2_Transmit_ISR:
  1175                           	opt stack 26
  1176                           
  1177                           ;eusart2.c: 185: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
  1178                           
  1179                           ;incstack = 0
  1180  0001CC  0E40               	movlw	64
  1181  0001CE  601C               	cpfslt	_eusart2TxBufferRemaining,c	;volatile
  1182  0001D0  D013               	goto	i2l195
  1183                           
  1184                           ;eusart2.c: 186: {
  1185                           ;eusart2.c: 187: TX2REG = eusart2TxBuffer[eusart2TxTail++];
  1186  0001D2  5020               	movf	_eusart2TxTail,w,c	;volatile
  1187  0001D4  0D01               	mullw	1
  1188  0001D6  0EA0               	movlw	low _eusart2TxBuffer
  1189  0001D8  24F3               	addwf	prodl,w,c
  1190  0001DA  6ED9               	movwf	fsr2l,c
  1191  0001DC  0E00               	movlw	high _eusart2TxBuffer
  1192  0001DE  20F4               	addwfc	prodh,w,c
  1193  0001E0  6EDA               	movwf	fsr2h,c
  1194  0001E2  50DF               	movf	indf2,w,c
  1195  0001E4  010E               	movlb	14	; () banked
  1196  0001E6  6FF2               	movwf	242,b	;volatile
  1197                           
  1198                           ; BSR set to: 14
  1199  0001E8  2A20               	incf	_eusart2TxTail,f,c	;volatile
  1200                           
  1201                           ; BSR set to: 14
  1202                           ;eusart2.c: 188: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
  1203  0001EA  0E3F               	movlw	63
  1204  0001EC  6420               	cpfsgt	_eusart2TxTail,c	;volatile
  1205  0001EE  D002               	goto	i2l196
  1206                           
  1207                           ; BSR set to: 14
  1208                           ;eusart2.c: 189: {
  1209                           ;eusart2.c: 190: eusart2TxTail = 0;
  1210  0001F0  0E00               	movlw	0
  1211  0001F2  6E20               	movwf	_eusart2TxTail,c	;volatile
  1212  0001F4                     i2l196:
  1213                           
  1214                           ; BSR set to: 14
  1215                           ;eusart2.c: 191: }
  1216                           ;eusart2.c: 192: eusart2TxBufferRemaining++;
  1217                           
  1218                           ; BSR set to: 14
  1219  0001F4  2A1C               	incf	_eusart2TxBufferRemaining,f,c	;volatile
  1220                           
  1221                           ;eusart2.c: 193: }
  1222  0001F6  0012               	return	
  1223  0001F8                     i2l195:
  1224                           
  1225                           ;eusart2.c: 194: else
  1226                           ;eusart2.c: 195: {
  1227                           ;eusart2.c: 196: PIE3bits.TX2IE = 0;
  1228  0001F8  010E               	movlb	14	; () banked
  1229  0001FA  9D2C               	bcf	44,6,b	;volatile
  1230  0001FC  0012               	return	
  1231  0001FE                     __end_of_EUSART2_Transmit_ISR:
  1232                           	opt stack 0
  1233                           tosu	equ	0xFFF
  1234                           tosh	equ	0xFFE
  1235                           tosl	equ	0xFFD
  1236                           pclatu	equ	0xFFB
  1237                           pclath	equ	0xFFA
  1238                           tblptru	equ	0xFF8
  1239                           tblptrh	equ	0xFF7
  1240                           tblptrl	equ	0xFF6
  1241                           tablat	equ	0xFF5
  1242                           prodh	equ	0xFF4
  1243                           prodl	equ	0xFF3
  1244                           intcon	equ	0xFF2
  1245                           postinc0	equ	0xFEE
  1246                           fsr0h	equ	0xFEA
  1247                           fsr0l	equ	0xFE9
  1248                           wreg	equ	0xFE8
  1249                           fsr1h	equ	0xFE2
  1250                           fsr1l	equ	0xFE1
  1251                           indf2	equ	0xFDF
  1252                           fsr2h	equ	0xFDA
  1253                           fsr2l	equ	0xFD9
  1254                           
  1255 ;; *************** function _EUSART2_Receive_ISR *****************
  1256 ;; Defined at:
  1257 ;;		line 200 in file "mcc_generated_files/eusart2.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_EUSART2_Initialize
  1281 ;;		_INTERRUPT_InterruptManagerHigh
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text11
  1286  0001FE                     __ptext11:
  1287                           	opt stack 0
  1288  0001FE                     _EUSART2_Receive_ISR:
  1289                           	opt stack 26
  1290                           
  1291                           ;eusart2.c: 203: if(1 == RC2STAbits.OERR)
  1292                           
  1293                           ; BSR set to: 14
  1294                           ;incstack = 0
  1295  0001FE  010E               	movlb	14	; () banked
  1296  000200  A3F5               	btfss	245,1,b	;volatile
  1297  000202  D002               	goto	i2l201
  1298                           
  1299                           ; BSR set to: 14
  1300                           ;eusart2.c: 204: {
  1301                           ;eusart2.c: 207: RC2STAbits.CREN = 0;
  1302  000204  99F5               	bcf	245,4,b	;volatile
  1303                           
  1304                           ;eusart2.c: 208: RC2STAbits.CREN = 1;
  1305  000206  89F5               	bsf	245,4,b	;volatile
  1306  000208                     i2l201:
  1307                           
  1308                           ; BSR set to: 14
  1309                           ;eusart2.c: 209: }
  1310                           ;eusart2.c: 212: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  1311                           
  1312                           ; BSR set to: 14
  1313  000208  501F               	movf	_eusart2RxHead,w,c	;volatile
  1314  00020A  0D01               	mullw	1
  1315  00020C  0E60               	movlw	low _eusart2RxBuffer
  1316  00020E  24F3               	addwf	prodl,w,c
  1317  000210  6ED9               	movwf	fsr2l,c
  1318  000212  0E00               	movlw	high _eusart2RxBuffer
  1319  000214  20F4               	addwfc	prodh,w,c
  1320  000216  6EDA               	movwf	fsr2h,c
  1321  000218  CEF1 FFDF          	movff	3825,indf2	;volatile
  1322                           
  1323                           ; BSR set to: 14
  1324  00021C  2A1F               	incf	_eusart2RxHead,f,c	;volatile
  1325                           
  1326                           ; BSR set to: 14
  1327                           ;eusart2.c: 213: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  1328  00021E  0E3F               	movlw	63
  1329  000220  641F               	cpfsgt	_eusart2RxHead,c	;volatile
  1330  000222  D002               	goto	i2l202
  1331                           
  1332                           ; BSR set to: 14
  1333                           ;eusart2.c: 214: {
  1334                           ;eusart2.c: 215: eusart2RxHead = 0;
  1335  000224  0E00               	movlw	0
  1336  000226  6E1F               	movwf	_eusart2RxHead,c	;volatile
  1337  000228                     i2l202:
  1338                           
  1339                           ; BSR set to: 14
  1340                           ;eusart2.c: 216: }
  1341                           ;eusart2.c: 217: eusart2RxCount++;
  1342                           
  1343                           ; BSR set to: 14
  1344  000228  2A1D               	incf	_eusart2RxCount,f,c	;volatile
  1345                           
  1346                           ; BSR set to: 14
  1347  00022A  0012               	return		;funcret
  1348  00022C                     __end_of_EUSART2_Receive_ISR:
  1349                           	opt stack 0
  1350  0000                     tosu	equ	0xFFF
  1351                           tosh	equ	0xFFE
  1352                           tosl	equ	0xFFD
  1353                           pclatu	equ	0xFFB
  1354                           pclath	equ	0xFFA
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           prodh	equ	0xFF4
  1360                           prodl	equ	0xFF3
  1361                           intcon	equ	0xFF2
  1362                           postinc0	equ	0xFEE
  1363                           fsr0h	equ	0xFEA
  1364                           fsr0l	equ	0xFE9
  1365                           wreg	equ	0xFE8
  1366                           fsr1h	equ	0xFE2
  1367                           fsr1l	equ	0xFE1
  1368                           indf2	equ	0xFDF
  1369                           fsr2h	equ	0xFDA
  1370                           fsr2l	equ	0xFD9
  1371                           tosu	equ	0xFFF
  1372                           tosh	equ	0xFFE
  1373                           tosl	equ	0xFFD
  1374                           pclatu	equ	0xFFB
  1375                           pclath	equ	0xFFA
  1376                           tblptru	equ	0xFF8
  1377                           tblptrh	equ	0xFF7
  1378                           tblptrl	equ	0xFF6
  1379                           tablat	equ	0xFF5
  1380                           prodh	equ	0xFF4
  1381                           prodl	equ	0xFF3
  1382                           intcon	equ	0xFF2
  1383                           postinc0	equ	0xFEE
  1384                           fsr0h	equ	0xFEA
  1385                           fsr0l	equ	0xFE9
  1386                           wreg	equ	0xFE8
  1387                           fsr1h	equ	0xFE2
  1388                           fsr1l	equ	0xFE1
  1389                           indf2	equ	0xFDF
  1390                           fsr2h	equ	0xFDA
  1391                           fsr2l	equ	0xFD9
  1392                           
  1393                           	psect	text12
  1394  000000                     __ptext12:
  1395                           	opt stack 0
  1396                           tosu	equ	0xFFF
  1397                           tosh	equ	0xFFE
  1398                           tosl	equ	0xFFD
  1399                           pclatu	equ	0xFFB
  1400                           pclath	equ	0xFFA
  1401                           tblptru	equ	0xFF8
  1402                           tblptrh	equ	0xFF7
  1403                           tblptrl	equ	0xFF6
  1404                           tablat	equ	0xFF5
  1405                           prodh	equ	0xFF4
  1406                           prodl	equ	0xFF3
  1407                           intcon	equ	0xFF2
  1408                           postinc0	equ	0xFEE
  1409                           fsr0h	equ	0xFEA
  1410                           fsr0l	equ	0xFE9
  1411                           wreg	equ	0xFE8
  1412                           fsr1h	equ	0xFE2
  1413                           fsr1l	equ	0xFE1
  1414                           indf2	equ	0xFDF
  1415                           fsr2h	equ	0xFDA
  1416                           fsr2l	equ	0xFD9
  1417                           
  1418                           	psect	rparam
  1419  0000                     tosu	equ	0xFFF
  1420                           tosh	equ	0xFFE
  1421                           tosl	equ	0xFFD
  1422                           pclatu	equ	0xFFB
  1423                           pclath	equ	0xFFA
  1424                           tblptru	equ	0xFF8
  1425                           tblptrh	equ	0xFF7
  1426                           tblptrl	equ	0xFF6
  1427                           tablat	equ	0xFF5
  1428                           prodh	equ	0xFF4
  1429                           prodl	equ	0xFF3
  1430                           intcon	equ	0xFF2
  1431                           postinc0	equ	0xFEE
  1432                           fsr0h	equ	0xFEA
  1433                           fsr0l	equ	0xFE9
  1434                           wreg	equ	0xFE8
  1435                           fsr1h	equ	0xFE2
  1436                           fsr1l	equ	0xFE1
  1437                           indf2	equ	0xFDF
  1438                           fsr2h	equ	0xFDA
  1439                           fsr2l	equ	0xFD9
  1440                           
  1441                           	psect	temp
  1442  000022                     btemp:
  1443                           	opt stack 0
  1444  000022                     	ds	1
  1445  0000                     int$flags	set	btemp
  1446  0000                     wtemp6	set	btemp+1
  1447                           tosu	equ	0xFFF
  1448                           tosh	equ	0xFFE
  1449                           tosl	equ	0xFFD
  1450                           pclatu	equ	0xFFB
  1451                           pclath	equ	0xFFA
  1452                           tblptru	equ	0xFF8
  1453                           tblptrh	equ	0xFF7
  1454                           tblptrl	equ	0xFF6
  1455                           tablat	equ	0xFF5
  1456                           prodh	equ	0xFF4
  1457                           prodl	equ	0xFF3
  1458                           intcon	equ	0xFF2
  1459                           postinc0	equ	0xFEE
  1460                           fsr0h	equ	0xFEA
  1461                           fsr0l	equ	0xFE9
  1462                           wreg	equ	0xFE8
  1463                           fsr1h	equ	0xFE2
  1464                           fsr1l	equ	0xFE1
  1465                           indf2	equ	0xFDF
  1466                           fsr2h	equ	0xFDA
  1467                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         133
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      33
    BANK0           160      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     196
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     196
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3      98
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3      98
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManagerHigh                      18    18      0       0
                                              0 COMRAM    18    18      0
                   Absolute function *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _EUSART2_Receive_ISR *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      21       1       35.1%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1       8        0.0%
DATA                 0      0      A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Aug 28 00:57:30 2018

                                  __CFG_CP$OFF 000000                                            l269 02BA  
                                 __CFG_CPD$OFF 000000                        __size_of_PMD_Initialize 001C  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                   __CFG_LVP$OFF 000000  
                                 __CFG_ZCD$OFF 000000                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 0001  
                                __CFG_FCMEN$ON 000000                                           _main 02B2  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 0022  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00D8                   __end_of_EUSART2_Transmit_ISR 01FE  
                                __CFG_CSWEN$ON 000000                                   ___param_bank 000000  
                                __CFG_SCANE$ON 000000                 __size_of_OSCILLATOR_Initialize 0018  
                __end_of_OSCILLATOR_Initialize 0280                                          ?_main 0001  
                                __CFG_WDTE$OFF 000000                                 __CFG_DEBUG$OFF 000000  
                                        i2l201 0208                                          i2l202 0228  
                                        i2l106 006E                                          i2l195 01F8  
                                        i2l196 01F4                                          _OSCEN 000E47  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                                 __CFG_EBTRB$OFF 000000  
                           __CFG_MCLRE$EXTMCLR 000000                                          pclath 000FFA  
                                        tablat 000FF5                                          wtemp6 0023  
        __end_of_EUSART2_SetTxInterruptHandler 02A4         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 0296                                __initialization 022C  
                                 __end_of_main 02BE                                         ??_main 0016  
                                __activetblptr 000003                     __end_of_EUSART2_Initialize 01CC  
                     _eusart2TxBufferRemaining 001C                                         _ANSELA 000E92  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                                       _ANSELG 000EBC                                         _RC2REG 000EF1  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                 __CFG_WDTCCS$SC 000000  
                                       _RG7PPS 000E89                                         _OSCFRQ 000E49  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                               __CFG_PWRTE$OFF 000000                                 __CFG_XINST$OFF 000000  
                    __CFG_RSTOSC$HFINTOSC_1MHZ 000000                                 __CFG_STVREN$ON 000000  
                                       clear_0 0232                                 _PMD_Initialize 024C  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                           _EUSART2_Transmit_ISR 01CC  
                __size_of_INTERRUPT_Initialize 000A                                _eusart2RxBuffer 0060  
             ??_INTERRUPT_InterruptManagerHigh 0001                ?_INTERRUPT_InterruptManagerHigh 0001  
                            _SYSTEM_Initialize 0280                                _eusart2TxBuffer 00A0  
                                   __accesstop 0060                        __end_of__initialization 0242  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                               __pcstackCOMRAM 0001                            ??_SYSTEM_Initialize 0016  
               ?_EUSART2_SetTxInterruptHandler 0013                         __end_of_PMD_Initialize 0268  
                        ?_EUSART2_Transmit_ISR 0001                      __end_of_SYSTEM_Initialize 0296  
                                _eusart2RxHead 001F                                  _eusart2TxHead 0021  
                                   __pbssBANK0 0060                                  _eusart2RxTail 001E  
                                _eusart2TxTail 0020                                     __pnvCOMRAM 0016  
                              ?_PMD_Initialize 0001                                        _SP2BRGH 000EF4  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 022C  
                                      i2u30_48 0078                                        i2u30_49 008C  
                                      i2u27_48 005E                                        _OSCTUNE 000E48  
                                      __Hparam 0000                                        __Lparam 0000  
                                      __pcinit 022C                                        __ramtop 0E00  
                                      __ptext0 02B2                                        __ptext1 0280  
                                      __ptext2 024C                                        __ptext3 00DC  
                                      __ptext4 0268                                        __ptext5 02BE  
                                      __ptext6 0172                                        __ptext7 0296  
                                      __ptext8 02A4                          _OSCILLATOR_Initialize 0268  
                       ??_EUSART2_Transmit_ISR 0001                       ??_PIN_MANAGER_Initialize 0013  
                   __size_of_SYSTEM_Initialize 0016                           end_of_initialization 0242  
                           _EUSART2_Initialize 0172                                        postinc0 000FEE  
                        __CFG_WDTCPS$WDTCPS_31 000000                            ?_EUSART2_Initialize 0001  
                             __CFG_FEXTOSC$OFF 000000                           ??_EUSART2_Initialize 0016  
                 __end_of_INTERRUPT_Initialize 02C8                         ?_OSCILLATOR_Initialize 0001  
                          start_initialization 022C                __size_of_PIN_MANAGER_Initialize 0096  
EUSART2_SetRxInterruptHandler@interruptHandler 0013  EUSART2_SetTxInterruptHandler@interruptHandler 0013  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 0013  
                               _eusart2RxCount 001D                                    __pbssCOMRAM 001D  
              ??_EUSART2_SetRxInterruptHandler 0016                         _PIN_MANAGER_Initialize 00DC  
                                    __pintcode 0008              _EUSART2_TxDefaultInterruptHandler 0019  
                             __CFG_PPS1WAY$OFF 000000                                       _BAUD2CON 000EF7  
                         _INTERRUPT_Initialize 02BE                   __size_of_EUSART2_Receive_ISR 002E  
                                     _IPR3bits 000E22                                       _PIE3bits 000E2C  
                                     _PIR3bits 000E36                  __size_of_EUSART2_Transmit_ISR 0032  
                        ?_INTERRUPT_Initialize 0001                                       __Hrparam 0000  
        __end_of_EUSART2_SetRxInterruptHandler 02B2         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 02A4                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                        ??_OSCILLATOR_Initialize 0013  
                                     __ptext10 01CC                                       __ptext11 01FE  
                                     __ptext12 0000                    __size_of_EUSART2_Initialize 005A  
                                __size_of_main 000C                           __CFG_WDTCWS$WDTCWS_7 000000  
                           __CFG_BORV$VBOR_190 000000                                     _RC2STAbits 000EF5  
                                     int$flags 0022                                     _INTCONbits 000FF2  
                       ??_INTERRUPT_Initialize 0013                                       intlevel2 0000  
                      ?_PIN_MANAGER_Initialize 0001                              __CFG_CLKOUTEN$OFF 000000  
               ?_EUSART2_SetRxInterruptHandler 0013                            _EUSART2_Receive_ISR 01FE  
       __end_of_INTERRUPT_InterruptManagerHigh 00D8        __size_of_INTERRUPT_InterruptManagerHigh 00D0  
               _INTERRUPT_InterruptManagerHigh 0008                                     _RX2PPSbits 000E11  
                                   _TX2STAbits 000EF6                 __end_of_PIN_MANAGER_Initialize 0172  
              ??_EUSART2_SetTxInterruptHandler 0016                           ?_EUSART2_Receive_ISR 0001  
            _EUSART2_RxDefaultInterruptHandler 0016  
