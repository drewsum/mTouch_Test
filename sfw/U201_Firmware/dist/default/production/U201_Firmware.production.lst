

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Aug 28 14:03:44 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           ; Version 1.45 (B)
    85                           ; Generated 30/01/2018 GMT
    86                           ; 
    87                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18LF67K40 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	mediumconst
   120  00FBFA                     __pmediumconst:
   121                           	opt stack 0
   122  00FBFA  00                 	db	0
   123  00FBFB                     __powers_:
   124                           	opt stack 0
   125  00FBFB  0000               	dw	0
   126  00FBFD  3F80               	dw	16256
   127  00FBFF  0000               	dw	0
   128  00FC01  4120               	dw	16672
   129  00FC03  0000               	dw	0
   130  00FC05  42C8               	dw	17096
   131  00FC07  0000               	dw	0
   132  00FC09  447A               	dw	17530
   133  00FC0B  4000               	dw	16384
   134  00FC0D  461C               	dw	17948
   135  00FC0F  5000               	dw	20480
   136  00FC11  47C3               	dw	18371
   137  00FC13  2400               	dw	9216
   138  00FC15  4974               	dw	18804
   139  00FC17  9680               	dw	38528
   140  00FC19  4B18               	dw	19224
   141  00FC1B  BC20               	dw	48160
   142  00FC1D  4CBE               	dw	19646
   143  00FC1F  6B28               	dw	27432
   144  00FC21  4E6E               	dw	20078
   145  00FC23  02F9               	dw	761
   146  00FC25  5015               	dw	20501
   147  00FC27  78EC               	dw	30956
   148  00FC29  60AD               	dw	24749
   149  00FC2B  F2CA               	dw	62154
   150  00FC2D  7149               	dw	29001
   151  00FC2F                     __end_of__powers_:
   152                           	opt stack 0
   153  00FC2F                     __npowers_:
   154                           	opt stack 0
   155  00FC2F  0000               	dw	0
   156  00FC31  3F80               	dw	16256
   157  00FC33  CCCD               	dw	52429
   158  00FC35  3DCC               	dw	15820
   159  00FC37  D70A               	dw	55050
   160  00FC39  3C23               	dw	15395
   161  00FC3B  126F               	dw	4719
   162  00FC3D  3A83               	dw	14979
   163  00FC3F  B717               	dw	46871
   164  00FC41  38D1               	dw	14545
   165  00FC43  C5AC               	dw	50604
   166  00FC45  3727               	dw	14119
   167  00FC47  37BD               	dw	14269
   168  00FC49  3586               	dw	13702
   169  00FC4B  BF95               	dw	49045
   170  00FC4D  33D6               	dw	13270
   171  00FC4F  CC77               	dw	52343
   172  00FC51  322B               	dw	12843
   173  00FC53  705F               	dw	28767
   174  00FC55  3089               	dw	12425
   175  00FC57  E6FF               	dw	59135
   176  00FC59  2EDB               	dw	11995
   177  00FC5B  E508               	dw	58632
   178  00FC5D  1E3C               	dw	7740
   179  00FC5F  4260               	dw	16992
   180  00FC61  0DA2               	dw	3490
   181  00FC63                     __end_of__npowers_:
   182                           	opt stack 0
   183  00FC63                     _dpowers:
   184                           	opt stack 0
   185  00FC63  0001               	dw	1
   186  00FC65  0000               	dw	0
   187  00FC67  000A               	dw	10
   188  00FC69  0000               	dw	0
   189  00FC6B  0064               	dw	100
   190  00FC6D  0000               	dw	0
   191  00FC6F  03E8               	dw	1000
   192  00FC71  0000               	dw	0
   193  00FC73  2710               	dw	10000
   194  00FC75  0000               	dw	0
   195  00FC77  86A0               	dw	34464
   196  00FC79  0001               	dw	1
   197  00FC7B  4240               	dw	16960
   198  00FC7D  000F               	dw	15
   199  00FC7F  9680               	dw	38528
   200  00FC81  0098               	dw	152
   201  00FC83  E100               	dw	57600
   202  00FC85  05F5               	dw	1525
   203  00FC87  CA00               	dw	51712
   204  00FC89  3B9A               	dw	15258
   205  00FC8B                     __end_of_dpowers:
   206                           	opt stack 0
   207  00FC8B                     STR_32:
   208  00FC8B  20                 	db	32
   209  00FC8C  20                 	db	32
   210  00FC8D  20                 	db	32
   211  00FC8E  4C                 	db	76	;'L'
   212  00FC8F  69                 	db	105	;'i'
   213  00FC90  73                 	db	115	;'s'
   214  00FC91  74                 	db	116	;'t'
   215  00FC92  20                 	db	32
   216  00FC93  6F                 	db	111	;'o'
   217  00FC94  66                 	db	102	;'f'
   218  00FC95  20                 	db	32
   219  00FC96  73                 	db	115	;'s'
   220  00FC97  75                 	db	117	;'u'
   221  00FC98  70                 	db	112	;'p'
   222  00FC99  70                 	db	112	;'p'
   223  00FC9A  6F                 	db	111	;'o'
   224  00FC9B  72                 	db	114	;'r'
   225  00FC9C  74                 	db	116	;'t'
   226  00FC9D  65                 	db	101	;'e'
   227  00FC9E  64                 	db	100	;'d'
   228  00FC9F  20                 	db	32
   229  00FCA0  63                 	db	99	;'c'
   230  00FCA1  6F                 	db	111	;'o'
   231  00FCA2  6D                 	db	109	;'m'
   232  00FCA3  6D                 	db	109	;'m'
   233  00FCA4  61                 	db	97	;'a'
   234  00FCA5  6E                 	db	110	;'n'
   235  00FCA6  64                 	db	100	;'d'
   236  00FCA7  73                 	db	115	;'s'
   237  00FCA8  20                 	db	32
   238  00FCA9  73                 	db	115	;'s'
   239  00FCAA  6F                 	db	111	;'o'
   240  00FCAB  20                 	db	32
   241  00FCAC  66                 	db	102	;'f'
   242  00FCAD  61                 	db	97	;'a'
   243  00FCAE  72                 	db	114	;'r'
   244  00FCAF  3A                 	db	58	;':'
   245  00FCB0  0A                 	db	10
   246  00FCB1  0D                 	db	13
   247  00FCB2  20                 	db	32
   248  00FCB3  20                 	db	32
   249  00FCB4  20                 	db	32
   250  00FCB5  4C                 	db	76	;'L'
   251  00FCB6  45                 	db	69	;'E'
   252  00FCB7  44                 	db	68	;'D'
   253  00FCB8  20                 	db	32
   254  00FCB9  4F                 	db	79	;'O'
   255  00FCBA  6E                 	db	110	;'n'
   256  00FCBB  3A                 	db	58	;':'
   257  00FCBC  20                 	db	32
   258  00FCBD  54                 	db	84	;'T'
   259  00FCBE  75                 	db	117	;'u'
   260  00FCBF  72                 	db	114	;'r'
   261  00FCC0  6E                 	db	110	;'n'
   262  00FCC1  73                 	db	115	;'s'
   263  00FCC2  20                 	db	32
   264  00FCC3  4C                 	db	76	;'L'
   265  00FCC4  45                 	db	69	;'E'
   266  00FCC5  44                 	db	68	;'D'
   267  00FCC6  20                 	db	32
   268  00FCC7  4F                 	db	79	;'O'
   269  00FCC8  6E                 	db	110	;'n'
   270  00FCC9  0A                 	db	10
   271  00FCCA  0D                 	db	13
   272  00FCCB  20                 	db	32
   273  00FCCC  20                 	db	32
   274  00FCCD  20                 	db	32
   275  00FCCE  4C                 	db	76	;'L'
   276  00FCCF  45                 	db	69	;'E'
   277  00FCD0  44                 	db	68	;'D'
   278  00FCD1  20                 	db	32
   279  00FCD2  4F                 	db	79	;'O'
   280  00FCD3  66                 	db	102	;'f'
   281  00FCD4  66                 	db	102	;'f'
   282  00FCD5  3A                 	db	58	;':'
   283  00FCD6  20                 	db	32
   284  00FCD7  54                 	db	84	;'T'
   285  00FCD8  75                 	db	117	;'u'
   286  00FCD9  72                 	db	114	;'r'
   287  00FCDA  6E                 	db	110	;'n'
   288  00FCDB  73                 	db	115	;'s'
   289  00FCDC  20                 	db	32
   290  00FCDD  4C                 	db	76	;'L'
   291  00FCDE  45                 	db	69	;'E'
   292  00FCDF  44                 	db	68	;'D'
   293  00FCE0  20                 	db	32
   294  00FCE1  4F                 	db	79	;'O'
   295  00FCE2  66                 	db	102	;'f'
   296  00FCE3  66                 	db	102	;'f'
   297  00FCE4  0A                 	db	10
   298  00FCE5  0D                 	db	13
   299  00FCE6  20                 	db	32
   300  00FCE7  20                 	db	32
   301  00FCE8  20                 	db	32
   302  00FCE9  54                 	db	84	;'T'
   303  00FCEA  61                 	db	97	;'a'
   304  00FCEB  6C                 	db	108	;'l'
   305  00FCEC  6B                 	db	107	;'k'
   306  00FCED  20                 	db	32
   307  00FCEE  74                 	db	116	;'t'
   308  00FCEF  6F                 	db	111	;'o'
   309  00FCF0  20                 	db	32
   310  00FCF1  6D                 	db	109	;'m'
   311  00FCF2  65                 	db	101	;'e'
   312  00FCF3  3A                 	db	58	;':'
   313  00FCF4  20                 	db	32
   314  00FCF5  53                 	db	83	;'S'
   315  00FCF6  70                 	db	112	;'p'
   316  00FCF7  65                 	db	101	;'e'
   317  00FCF8  77                 	db	119	;'w'
   318  00FCF9  73                 	db	115	;'s'
   319  00FCFA  20                 	db	32
   320  00FCFB  61                 	db	97	;'a'
   321  00FCFC  20                 	db	32
   322  00FCFD  62                 	db	98	;'b'
   323  00FCFE  75                 	db	117	;'u'
   324  00FCFF  6E                 	db	110	;'n'
   325  00FD00  63                 	db	99	;'c'
   326  00FD01  68                 	db	104	;'h'
   327  00FD02  20                 	db	32
   328  00FD03  6F                 	db	111	;'o'
   329  00FD04  75                 	db	117	;'u'
   330  00FD05  74                 	db	116	;'t'
   331  00FD06  0A                 	db	10
   332  00FD07  0D                 	db	13
   333  00FD08  20                 	db	32
   334  00FD09  20                 	db	32
   335  00FD0A  20                 	db	32
   336  00FD0B  41                 	db	65	;'A'
   337  00FD0C  64                 	db	100	;'d'
   338  00FD0D  64                 	db	100	;'d'
   339  00FD0E  3A                 	db	58	;':'
   340  00FD0F  20                 	db	32
   341  00FD10  41                 	db	65	;'A'
   342  00FD11  64                 	db	100	;'d'
   343  00FD12  64                 	db	100	;'d'
   344  00FD13  73                 	db	115	;'s'
   345  00FD14  20                 	db	32
   346  00FD15  61                 	db	97	;'a'
   347  00FD16  6C                 	db	108	;'l'
   348  00FD17  6C                 	db	108	;'l'
   349  00FD18  20                 	db	32
   350  00FD19  61                 	db	97	;'a'
   351  00FD1A  72                 	db	114	;'r'
   352  00FD1B  67                 	db	103	;'g'
   353  00FD1C  75                 	db	117	;'u'
   354  00FD1D  6D                 	db	109	;'m'
   355  00FD1E  65                 	db	101	;'e'
   356  00FD1F  6E                 	db	110	;'n'
   357  00FD20  74                 	db	116	;'t'
   358  00FD21  73                 	db	115	;'s'
   359  00FD22  20                 	db	32
   360  00FD23  66                 	db	102	;'f'
   361  00FD24  6F                 	db	111	;'o'
   362  00FD25  6C                 	db	108	;'l'
   363  00FD26  6C                 	db	108	;'l'
   364  00FD27  6F                 	db	111	;'o'
   365  00FD28  77                 	db	119	;'w'
   366  00FD29  69                 	db	105	;'i'
   367  00FD2A  6E                 	db	110	;'n'
   368  00FD2B  67                 	db	103	;'g'
   369  00FD2C  20                 	db	32
   370  00FD2D  63                 	db	99	;'c'
   371  00FD2E  6F                 	db	111	;'o'
   372  00FD2F  6D                 	db	109	;'m'
   373  00FD30  6D                 	db	109	;'m'
   374  00FD31  61                 	db	97	;'a'
   375  00FD32  6E                 	db	110	;'n'
   376  00FD33  64                 	db	100	;'d'
   377  00FD34  0A                 	db	10
   378  00FD35  0D                 	db	13
   379  00FD36  20                 	db	32
   380  00FD37  20                 	db	32
   381  00FD38  20                 	db	32
   382  00FD39  4D                 	db	77	;'M'
   383  00FD3A  75                 	db	117	;'u'
   384  00FD3B  6C                 	db	108	;'l'
   385  00FD3C  74                 	db	116	;'t'
   386  00FD3D  69                 	db	105	;'i'
   387  00FD3E  70                 	db	112	;'p'
   388  00FD3F  6C                 	db	108	;'l'
   389  00FD40  79                 	db	121	;'y'
   390  00FD41  3A                 	db	58	;':'
   391  00FD42  20                 	db	32
   392  00FD43  4D                 	db	77	;'M'
   393  00FD44  75                 	db	117	;'u'
   394  00FD45  6C                 	db	108	;'l'
   395  00FD46  74                 	db	116	;'t'
   396  00FD47  69                 	db	105	;'i'
   397  00FD48  70                 	db	112	;'p'
   398  00FD49  6C                 	db	108	;'l'
   399  00FD4A  69                 	db	105	;'i'
   400  00FD4B  65                 	db	101	;'e'
   401  00FD4C  73                 	db	115	;'s'
   402  00FD4D  20                 	db	32
   403  00FD4E  61                 	db	97	;'a'
   404  00FD4F  6C                 	db	108	;'l'
   405  00FD50  6C                 	db	108	;'l'
   406  00FD51  20                 	db	32
   407  00FD52  61                 	db	97	;'a'
   408  00FD53  72                 	db	114	;'r'
   409  00FD54  67                 	db	103	;'g'
   410  00FD55  75                 	db	117	;'u'
   411  00FD56  6D                 	db	109	;'m'
   412  00FD57  65                 	db	101	;'e'
   413  00FD58  6E                 	db	110	;'n'
   414  00FD59  74                 	db	116	;'t'
   415  00FD5A  73                 	db	115	;'s'
   416  00FD5B  0A                 	db	10
   417  00FD5C  0D                 	db	13
   418  00FD5D  20                 	db	32
   419  00FD5E  20                 	db	32
   420  00FD5F  20                 	db	32
   421  00FD60  52                 	db	82	;'R'
   422  00FD61  65                 	db	101	;'e'
   423  00FD62  73                 	db	115	;'s'
   424  00FD63  65                 	db	101	;'e'
   425  00FD64  74                 	db	116	;'t'
   426  00FD65  3A                 	db	58	;':'
   427  00FD66  20                 	db	32
   428  00FD67  43                 	db	67	;'C'
   429  00FD68  6C                 	db	108	;'l'
   430  00FD69  65                 	db	101	;'e'
   431  00FD6A  61                 	db	97	;'a'
   432  00FD6B  72                 	db	114	;'r'
   433  00FD6C  73                 	db	115	;'s'
   434  00FD6D  20                 	db	32
   435  00FD6E  74                 	db	116	;'t'
   436  00FD6F  68                 	db	104	;'h'
   437  00FD70  65                 	db	101	;'e'
   438  00FD71  20                 	db	32
   439  00FD72  73                 	db	115	;'s'
   440  00FD73  63                 	db	99	;'c'
   441  00FD74  72                 	db	114	;'r'
   442  00FD75  65                 	db	101	;'e'
   443  00FD76  65                 	db	101	;'e'
   444  00FD77  6E                 	db	110	;'n'
   445  00FD78  20                 	db	32
   446  00FD79  61                 	db	97	;'a'
   447  00FD7A  6E                 	db	110	;'n'
   448  00FD7B  64                 	db	100	;'d'
   449  00FD7C  20                 	db	32
   450  00FD7D  72                 	db	114	;'r'
   451  00FD7E  65                 	db	101	;'e'
   452  00FD7F  73                 	db	115	;'s'
   453  00FD80  65                 	db	101	;'e'
   454  00FD81  74                 	db	116	;'t'
   455  00FD82  73                 	db	115	;'s'
   456  00FD83  20                 	db	32
   457  00FD84  74                 	db	116	;'t'
   458  00FD85  68                 	db	104	;'h'
   459  00FD86  65                 	db	101	;'e'
   460  00FD87  20                 	db	32
   461  00FD88  6D                 	db	109	;'m'
   462  00FD89  69                 	db	105	;'i'
   463  00FD8A  63                 	db	99	;'c'
   464  00FD8B  72                 	db	114	;'r'
   465  00FD8C  6F                 	db	111	;'o'
   466  00FD8D  0A                 	db	10
   467  00FD8E  0D                 	db	13
   468  00FD8F  20                 	db	32
   469  00FD90  20                 	db	32
   470  00FD91  20                 	db	32
   471  00FD92  48                 	db	72	;'H'
   472  00FD93  65                 	db	101	;'e'
   473  00FD94  6C                 	db	108	;'l'
   474  00FD95  70                 	db	112	;'p'
   475  00FD96  3A                 	db	58	;':'
   476  00FD97  20                 	db	32
   477  00FD98  54                 	db	84	;'T'
   478  00FD99  68                 	db	104	;'h'
   479  00FD9A  69                 	db	105	;'i'
   480  00FD9B  73                 	db	115	;'s'
   481  00FD9C  20                 	db	32
   482  00FD9D  6D                 	db	109	;'m'
   483  00FD9E  65                 	db	101	;'e'
   484  00FD9F  73                 	db	115	;'s'
   485  00FDA0  73                 	db	115	;'s'
   486  00FDA1  61                 	db	97	;'a'
   487  00FDA2  67                 	db	103	;'g'
   488  00FDA3  65                 	db	101	;'e'
   489  00FDA4  2C                 	db	44
   490  00FDA5  20                 	db	32
   491  00FDA6  6C                 	db	108	;'l'
   492  00FDA7  69                 	db	105	;'i'
   493  00FDA8  73                 	db	115	;'s'
   494  00FDA9  74                 	db	116	;'t'
   495  00FDAA  73                 	db	115	;'s'
   496  00FDAB  20                 	db	32
   497  00FDAC  63                 	db	99	;'c'
   498  00FDAD  6F                 	db	111	;'o'
   499  00FDAE  6D                 	db	109	;'m'
   500  00FDAF  6D                 	db	109	;'m'
   501  00FDB0  61                 	db	97	;'a'
   502  00FDB1  6E                 	db	110	;'n'
   503  00FDB2  64                 	db	100	;'d'
   504  00FDB3  73                 	db	115	;'s'
   505  00FDB4  0A                 	db	10
   506  00FDB5  0D                 	db	13
   507  00FDB6  00                 	db	0
   508  00FDB7                     STR_4:
   509  00FDB7  50                 	db	80	;'P'
   510  00FDB8  49                 	db	73	;'I'
   511  00FDB9  43                 	db	67	;'C'
   512  00FDBA  31                 	db	49	;'1'
   513  00FDBB  38                 	db	56	;'8'
   514  00FDBC  46                 	db	70	;'F'
   515  00FDBD  36                 	db	54	;'6'
   516  00FDBE  37                 	db	55	;'7'
   517  00FDBF  4B                 	db	75	;'K'
   518  00FDC0  34                 	db	52	;'4'
   519  00FDC1  30                 	db	48	;'0'
   520  00FDC2  20                 	db	32
   521  00FDC3  6D                 	db	109	;'m'
   522  00FDC4  54                 	db	84	;'T'
   523  00FDC5  6F                 	db	111	;'o'
   524  00FDC6  75                 	db	117	;'u'
   525  00FDC7  63                 	db	99	;'c'
   526  00FDC8  68                 	db	104	;'h'
   527  00FDC9  20                 	db	32
   528  00FDCA  44                 	db	68	;'D'
   529  00FDCB  65                 	db	101	;'e'
   530  00FDCC  6D                 	db	109	;'m'
   531  00FDCD  6F                 	db	111	;'o'
   532  00FDCE  0A                 	db	10
   533  00FDCF  0D                 	db	13
   534  00FDD0  42                 	db	66	;'B'
   535  00FDD1  61                 	db	97	;'a'
   536  00FDD2  75                 	db	117	;'u'
   537  00FDD3  64                 	db	100	;'d'
   538  00FDD4  20                 	db	32
   539  00FDD5  72                 	db	114	;'r'
   540  00FDD6  61                 	db	97	;'a'
   541  00FDD7  74                 	db	116	;'t'
   542  00FDD8  65                 	db	101	;'e'
   543  00FDD9  3A                 	db	58	;':'
   544  00FDDA  20                 	db	32
   545  00FDDB  31                 	db	49	;'1'
   546  00FDDC  31                 	db	49	;'1'
   547  00FDDD  35                 	db	53	;'5'
   548  00FDDE  32                 	db	50	;'2'
   549  00FDDF  30                 	db	48	;'0'
   550  00FDE0  30                 	db	48	;'0'
   551  00FDE1  20                 	db	32
   552  00FDE2  6B                 	db	107	;'k'
   553  00FDE3  62                 	db	98	;'b'
   554  00FDE4  70                 	db	112	;'p'
   555  00FDE5  73                 	db	115	;'s'
   556  00FDE6  0A                 	db	10
   557  00FDE7  0D                 	db	13
   558  00FDE8  4E                 	db	78	;'N'
   559  00FDE9  6F                 	db	111	;'o'
   560  00FDEA  20                 	db	32
   561  00FDEB  70                 	db	112	;'p'
   562  00FDEC  61                 	db	97	;'a'
   563  00FDED  72                 	db	114	;'r'
   564  00FDEE  69                 	db	105	;'i'
   565  00FDEF  74                 	db	116	;'t'
   566  00FDF0  79                 	db	121	;'y'
   567  00FDF1  2C                 	db	44
   568  00FDF2  20                 	db	32
   569  00FDF3  38                 	db	56	;'8'
   570  00FDF4  20                 	db	32
   571  00FDF5  62                 	db	98	;'b'
   572  00FDF6  69                 	db	105	;'i'
   573  00FDF7  74                 	db	116	;'t'
   574  00FDF8  73                 	db	115	;'s'
   575  00FDF9  2C                 	db	44
   576  00FDFA  20                 	db	32
   577  00FDFB  6E                 	db	110	;'n'
   578  00FDFC  6F                 	db	111	;'o'
   579  00FDFD  20                 	db	32
   580  00FDFE  66                 	db	102	;'f'
   581  00FDFF  6C                 	db	108	;'l'
   582  00FE00  6F                 	db	111	;'o'
   583  00FE01  77                 	db	119	;'w'
   584  00FE02  20                 	db	32
   585  00FE03  63                 	db	99	;'c'
   586  00FE04  6F                 	db	111	;'o'
   587  00FE05  6E                 	db	110	;'n'
   588  00FE06  74                 	db	116	;'t'
   589  00FE07  72                 	db	114	;'r'
   590  00FE08  6F                 	db	111	;'o'
   591  00FE09  6C                 	db	108	;'l'
   592  00FE0A  2C                 	db	44
   593  00FE0B  20                 	db	32
   594  00FE0C  31                 	db	49	;'1'
   595  00FE0D  20                 	db	32
   596  00FE0E  73                 	db	115	;'s'
   597  00FE0F  74                 	db	116	;'t'
   598  00FE10  6F                 	db	111	;'o'
   599  00FE11  70                 	db	112	;'p'
   600  00FE12  20                 	db	32
   601  00FE13  62                 	db	98	;'b'
   602  00FE14  69                 	db	105	;'i'
   603  00FE15  74                 	db	116	;'t'
   604  00FE16  0A                 	db	10
   605  00FE17  0D                 	db	13
   606  00FE18  43                 	db	67	;'C'
   607  00FE19  6F                 	db	111	;'o'
   608  00FE1A  6D                 	db	109	;'m'
   609  00FE1B  6D                 	db	109	;'m'
   610  00FE1C  61                 	db	97	;'a'
   611  00FE1D  6E                 	db	110	;'n'
   612  00FE1E  64                 	db	100	;'d'
   613  00FE1F  73                 	db	115	;'s'
   614  00FE20  20                 	db	32
   615  00FE21  61                 	db	97	;'a'
   616  00FE22  72                 	db	114	;'r'
   617  00FE23  65                 	db	101	;'e'
   618  00FE24  20                 	db	32
   619  00FE25  63                 	db	99	;'c'
   620  00FE26  61                 	db	97	;'a'
   621  00FE27  73                 	db	115	;'s'
   622  00FE28  65                 	db	101	;'e'
   623  00FE29  20                 	db	32
   624  00FE2A  73                 	db	115	;'s'
   625  00FE2B  65                 	db	101	;'e'
   626  00FE2C  6E                 	db	110	;'n'
   627  00FE2D  73                 	db	115	;'s'
   628  00FE2E  69                 	db	105	;'i'
   629  00FE2F  74                 	db	116	;'t'
   630  00FE30  69                 	db	105	;'i'
   631  00FE31  76                 	db	118	;'v'
   632  00FE32  65                 	db	101	;'e'
   633  00FE33  0A                 	db	10
   634  00FE34  0D                 	db	13
   635  00FE35  45                 	db	69	;'E'
   636  00FE36  6E                 	db	110	;'n'
   637  00FE37  74                 	db	116	;'t'
   638  00FE38  65                 	db	101	;'e'
   639  00FE39  72                 	db	114	;'r'
   640  00FE3A  20                 	db	32
   641  00FE3B  61                 	db	97	;'a'
   642  00FE3C  20                 	db	32
   643  00FE3D  63                 	db	99	;'c'
   644  00FE3E  6F                 	db	111	;'o'
   645  00FE3F  6D                 	db	109	;'m'
   646  00FE40  6D                 	db	109	;'m'
   647  00FE41  61                 	db	97	;'a'
   648  00FE42  6E                 	db	110	;'n'
   649  00FE43  64                 	db	100	;'d'
   650  00FE44  2C                 	db	44
   651  00FE45  20                 	db	32
   652  00FE46  6F                 	db	111	;'o'
   653  00FE47  72                 	db	114	;'r'
   654  00FE48  20                 	db	32
   655  00FE49  48                 	db	72	;'H'
   656  00FE4A  65                 	db	101	;'e'
   657  00FE4B  6C                 	db	108	;'l'
   658  00FE4C  70                 	db	112	;'p'
   659  00FE4D  20                 	db	32
   660  00FE4E  66                 	db	102	;'f'
   661  00FE4F  6F                 	db	111	;'o'
   662  00FE50  72                 	db	114	;'r'
   663  00FE51  20                 	db	32
   664  00FE52  6C                 	db	108	;'l'
   665  00FE53  69                 	db	105	;'i'
   666  00FE54  73                 	db	115	;'s'
   667  00FE55  74                 	db	116	;'t'
   668  00FE56  20                 	db	32
   669  00FE57  6F                 	db	111	;'o'
   670  00FE58  66                 	db	102	;'f'
   671  00FE59  20                 	db	32
   672  00FE5A  63                 	db	99	;'c'
   673  00FE5B  6F                 	db	111	;'o'
   674  00FE5C  6D                 	db	109	;'m'
   675  00FE5D  6D                 	db	109	;'m'
   676  00FE5E  61                 	db	97	;'a'
   677  00FE5F  6E                 	db	110	;'n'
   678  00FE60  64                 	db	100	;'d'
   679  00FE61  73                 	db	115	;'s'
   680  00FE62  0A                 	db	10
   681  00FE63  0D                 	db	13
   682  00FE64  00                 	db	0
   683  00FE65                     STR_17:
   684  00FE65  20                 	db	32
   685  00FE66  20                 	db	32
   686  00FE67  20                 	db	32
   687  00FE68  20                 	db	32
   688  00FE69  46                 	db	70	;'F'
   689  00FE6A  69                 	db	105	;'i'
   690  00FE6B  72                 	db	114	;'r'
   691  00FE6C  73                 	db	115	;'s'
   692  00FE6D  74                 	db	116	;'t'
   693  00FE6E  20                 	db	32
   694  00FE6F  74                 	db	116	;'t'
   695  00FE70  68                 	db	104	;'h'
   696  00FE71  69                 	db	105	;'i'
   697  00FE72  6E                 	db	110	;'n'
   698  00FE73  67                 	db	103	;'g'
   699  00FE74  27                 	db	39
   700  00FE75  73                 	db	115	;'s'
   701  00FE76  20                 	db	32
   702  00FE77  66                 	db	102	;'f'
   703  00FE78  69                 	db	105	;'i'
   704  00FE79  72                 	db	114	;'r'
   705  00FE7A  73                 	db	115	;'s'
   706  00FE7B  74                 	db	116	;'t'
   707  00FE7C  2C                 	db	44
   708  00FE7D  20                 	db	32
   709  00FE7E  49                 	db	73	;'I'
   710  00FE7F  27                 	db	39
   711  00FE80  6D                 	db	109	;'m'
   712  00FE81  20                 	db	32
   713  00FE82  74                 	db	116	;'t'
   714  00FE83  61                 	db	97	;'a'
   715  00FE84  6C                 	db	108	;'l'
   716  00FE85  6B                 	db	107	;'k'
   717  00FE86  69                 	db	105	;'i'
   718  00FE87  6E                 	db	110	;'n'
   719  00FE88  67                 	db	103	;'g'
   720  00FE89  20                 	db	32
   721  00FE8A  74                 	db	116	;'t'
   722  00FE8B  6F                 	db	111	;'o'
   723  00FE8C  20                 	db	32
   724  00FE8D  79                 	db	121	;'y'
   725  00FE8E  6F                 	db	111	;'o'
   726  00FE8F  75                 	db	117	;'u'
   727  00FE90  20                 	db	32
   728  00FE91  74                 	db	116	;'t'
   729  00FE92  68                 	db	104	;'h'
   730  00FE93  72                 	db	114	;'r'
   731  00FE94  6F                 	db	111	;'o'
   732  00FE95  75                 	db	117	;'u'
   733  00FE96  67                 	db	103	;'g'
   734  00FE97  68                 	db	104	;'h'
   735  00FE98  20                 	db	32
   736  00FE99  61                 	db	97	;'a'
   737  00FE9A  20                 	db	32
   738  00FE9B  55                 	db	85	;'U'
   739  00FE9C  41                 	db	65	;'A'
   740  00FE9D  52                 	db	82	;'R'
   741  00FE9E  54                 	db	84	;'T'
   742  00FE9F  20                 	db	32
   743  00FEA0  74                 	db	116	;'t'
   744  00FEA1  6F                 	db	111	;'o'
   745  00FEA2  20                 	db	32
   746  00FEA3  55                 	db	85	;'U'
   747  00FEA4  53                 	db	83	;'S'
   748  00FEA5  42                 	db	66	;'B'
   749  00FEA6  20                 	db	32
   750  00FEA7  62                 	db	98	;'b'
   751  00FEA8  72                 	db	114	;'r'
   752  00FEA9  69                 	db	105	;'i'
   753  00FEAA  64                 	db	100	;'d'
   754  00FEAB  67                 	db	103	;'g'
   755  00FEAC  65                 	db	101	;'e'
   756  00FEAD  2C                 	db	44
   757  00FEAE  20                 	db	32
   758  00FEAF  70                 	db	112	;'p'
   759  00FEB0  72                 	db	114	;'r'
   760  00FEB1  6F                 	db	111	;'o'
   761  00FEB2  64                 	db	100	;'d'
   762  00FEB3  75                 	db	117	;'u'
   763  00FEB4  63                 	db	99	;'c'
   764  00FEB5  65                 	db	101	;'e'
   765  00FEB6  64                 	db	100	;'d'
   766  00FEB7  20                 	db	32
   767  00FEB8  62                 	db	98	;'b'
   768  00FEB9  79                 	db	121	;'y'
   769  00FEBA  20                 	db	32
   770  00FEBB  46                 	db	70	;'F'
   771  00FEBC  54                 	db	84	;'T'
   772  00FEBD  44                 	db	68	;'D'
   773  00FEBE  49                 	db	73	;'I'
   774  00FEBF  0A                 	db	10
   775  00FEC0  0D                 	db	13
   776  00FEC1  00                 	db	0
   777  00FEC2                     STR_19:
   778  00FEC2  20                 	db	32
   779  00FEC3  20                 	db	32
   780  00FEC4  20                 	db	32
   781  00FEC5  20                 	db	32
   782  00FEC6  49                 	db	73	;'I'
   783  00FEC7  27                 	db	39
   784  00FEC8  6D                 	db	109	;'m'
   785  00FEC9  20                 	db	32
   786  00FECA  61                 	db	97	;'a'
   787  00FECB  20                 	db	32
   788  00FECC  50                 	db	80	;'P'
   789  00FECD  49                 	db	73	;'I'
   790  00FECE  43                 	db	67	;'C'
   791  00FECF  31                 	db	49	;'1'
   792  00FED0  38                 	db	56	;'8'
   793  00FED1  46                 	db	70	;'F'
   794  00FED2  36                 	db	54	;'6'
   795  00FED3  37                 	db	55	;'7'
   796  00FED4  4B                 	db	75	;'K'
   797  00FED5  34                 	db	52	;'4'
   798  00FED6  30                 	db	48	;'0'
   799  00FED7  2C                 	db	44
   800  00FED8  20                 	db	32
   801  00FED9  61                 	db	97	;'a'
   802  00FEDA  6E                 	db	110	;'n'
   803  00FEDB  64                 	db	100	;'d'
   804  00FEDC  20                 	db	32
   805  00FEDD  49                 	db	73	;'I'
   806  00FEDE  20                 	db	32
   807  00FEDF  64                 	db	100	;'d'
   808  00FEE0  6F                 	db	111	;'o'
   809  00FEE1  6E                 	db	110	;'n'
   810  00FEE2  27                 	db	39
   811  00FEE3  74                 	db	116	;'t'
   812  00FEE4  20                 	db	32
   813  00FEE5  6B                 	db	107	;'k'
   814  00FEE6  6E                 	db	110	;'n'
   815  00FEE7  6F                 	db	111	;'o'
   816  00FEE8  77                 	db	119	;'w'
   817  00FEE9  20                 	db	32
   818  00FEEA  6D                 	db	109	;'m'
   819  00FEEB  79                 	db	121	;'y'
   820  00FEEC  20                 	db	32
   821  00FEED  72                 	db	114	;'r'
   822  00FEEE  65                 	db	101	;'e'
   823  00FEEF  76                 	db	118	;'v'
   824  00FEF0  69                 	db	105	;'i'
   825  00FEF1  73                 	db	115	;'s'
   826  00FEF2  69                 	db	105	;'i'
   827  00FEF3  6F                 	db	111	;'o'
   828  00FEF4  6E                 	db	110	;'n'
   829  00FEF5  20                 	db	32
   830  00FEF6  6E                 	db	110	;'n'
   831  00FEF7  75                 	db	117	;'u'
   832  00FEF8  6D                 	db	109	;'m'
   833  00FEF9  62                 	db	98	;'b'
   834  00FEFA  65                 	db	101	;'e'
   835  00FEFB  72                 	db	114	;'r'
   836  00FEFC  20                 	db	32
   837  00FEFD  79                 	db	121	;'y'
   838  00FEFE  65                 	db	101	;'e'
   839  00FEFF  74                 	db	116	;'t'
   840  00FF00  0D                 	db	13
   841  00FF01  0A                 	db	10
   842  00FF02  00                 	db	0
   843  00FF03                     STR_25:
   844  00FF03  20                 	db	32
   845  00FF04  20                 	db	32
   846  00FF05  20                 	db	32
   847  00FF06  20                 	db	32
   848  00FF07  54                 	db	84	;'T'
   849  00FF08  68                 	db	104	;'h'
   850  00FF09  65                 	db	101	;'e'
   851  00FF0A  20                 	db	32
   852  00FF0B  70                 	db	112	;'p'
   853  00FF0C  72                 	db	114	;'r'
   854  00FF0D  6F                 	db	111	;'o'
   855  00FF0E  64                 	db	100	;'d'
   856  00FF0F  75                 	db	117	;'u'
   857  00FF10  63                 	db	99	;'c'
   858  00FF11  74                 	db	116	;'t'
   859  00FF12  20                 	db	32
   860  00FF13  6F                 	db	111	;'o'
   861  00FF14  66                 	db	102	;'f'
   862  00FF15  20                 	db	32
   863  00FF16  61                 	db	97	;'a'
   864  00FF17  6C                 	db	108	;'l'
   865  00FF18  6C                 	db	108	;'l'
   866  00FF19  20                 	db	32
   867  00FF1A  61                 	db	97	;'a'
   868  00FF1B  72                 	db	114	;'r'
   869  00FF1C  67                 	db	103	;'g'
   870  00FF1D  75                 	db	117	;'u'
   871  00FF1E  6D                 	db	109	;'m'
   872  00FF1F  65                 	db	101	;'e'
   873  00FF20  6E                 	db	110	;'n'
   874  00FF21  74                 	db	116	;'t'
   875  00FF22  73                 	db	115	;'s'
   876  00FF23  20                 	db	32
   877  00FF24  65                 	db	101	;'e'
   878  00FF25  6E                 	db	110	;'n'
   879  00FF26  74                 	db	116	;'t'
   880  00FF27  65                 	db	101	;'e'
   881  00FF28  72                 	db	114	;'r'
   882  00FF29  65                 	db	101	;'e'
   883  00FF2A  64                 	db	100	;'d'
   884  00FF2B  20                 	db	32
   885  00FF2C  69                 	db	105	;'i'
   886  00FF2D  73                 	db	115	;'s'
   887  00FF2E  20                 	db	32
   888  00FF2F  25                 	db	37
   889  00FF30  64                 	db	100	;'d'
   890  00FF31  0A                 	db	10
   891  00FF32  0D                 	db	13
   892  00FF33  00                 	db	0
   893  00FF34                     STR_22:
   894  00FF34  20                 	db	32
   895  00FF35  20                 	db	32
   896  00FF36  20                 	db	32
   897  00FF37  20                 	db	32
   898  00FF38  54                 	db	84	;'T'
   899  00FF39  68                 	db	104	;'h'
   900  00FF3A  65                 	db	101	;'e'
   901  00FF3B  20                 	db	32
   902  00FF3C  73                 	db	115	;'s'
   903  00FF3D  75                 	db	117	;'u'
   904  00FF3E  6D                 	db	109	;'m'
   905  00FF3F  20                 	db	32
   906  00FF40  6F                 	db	111	;'o'
   907  00FF41  66                 	db	102	;'f'
   908  00FF42  20                 	db	32
   909  00FF43  61                 	db	97	;'a'
   910  00FF44  6C                 	db	108	;'l'
   911  00FF45  6C                 	db	108	;'l'
   912  00FF46  20                 	db	32
   913  00FF47  61                 	db	97	;'a'
   914  00FF48  72                 	db	114	;'r'
   915  00FF49  67                 	db	103	;'g'
   916  00FF4A  75                 	db	117	;'u'
   917  00FF4B  6D                 	db	109	;'m'
   918  00FF4C  65                 	db	101	;'e'
   919  00FF4D  6E                 	db	110	;'n'
   920  00FF4E  74                 	db	116	;'t'
   921  00FF4F  73                 	db	115	;'s'
   922  00FF50  20                 	db	32
   923  00FF51  65                 	db	101	;'e'
   924  00FF52  6E                 	db	110	;'n'
   925  00FF53  74                 	db	116	;'t'
   926  00FF54  65                 	db	101	;'e'
   927  00FF55  72                 	db	114	;'r'
   928  00FF56  65                 	db	101	;'e'
   929  00FF57  64                 	db	100	;'d'
   930  00FF58  20                 	db	32
   931  00FF59  69                 	db	105	;'i'
   932  00FF5A  73                 	db	115	;'s'
   933  00FF5B  20                 	db	32
   934  00FF5C  25                 	db	37
   935  00FF5D  66                 	db	102	;'f'
   936  00FF5E  0A                 	db	10
   937  00FF5F  0D                 	db	13
   938  00FF60  00                 	db	0
   939  00FF61                     STR_16:
   940  00FF61  20                 	db	32
   941  00FF62  20                 	db	32
   942  00FF63  20                 	db	32
   943  00FF64  20                 	db	32
   944  00FF65  57                 	db	87	;'W'
   945  00FF66  65                 	db	101	;'e'
   946  00FF67  6C                 	db	108	;'l'
   947  00FF68  6C                 	db	108	;'l'
   948  00FF69  2C                 	db	44
   949  00FF6A  20                 	db	32
   950  00FF6B  49                 	db	73	;'I'
   951  00FF6C  27                 	db	39
   952  00FF6D  76                 	db	118	;'v'
   953  00FF6E  65                 	db	101	;'e'
   954  00FF6F  20                 	db	32
   955  00FF70  67                 	db	103	;'g'
   956  00FF71  6F                 	db	111	;'o'
   957  00FF72  74                 	db	116	;'t'
   958  00FF73  20                 	db	32
   959  00FF74  61                 	db	97	;'a'
   960  00FF75  20                 	db	32
   961  00FF76  6C                 	db	108	;'l'
   962  00FF77  6F                 	db	111	;'o'
   963  00FF78  74                 	db	116	;'t'
   964  00FF79  20                 	db	32
   965  00FF7A  74                 	db	116	;'t'
   966  00FF7B  6F                 	db	111	;'o'
   967  00FF7C  20                 	db	32
   968  00FF7D  74                 	db	116	;'t'
   969  00FF7E  61                 	db	97	;'a'
   970  00FF7F  6C                 	db	108	;'l'
   971  00FF80  6B                 	db	107	;'k'
   972  00FF81  20                 	db	32
   973  00FF82  61                 	db	97	;'a'
   974  00FF83  62                 	db	98	;'b'
   975  00FF84  6F                 	db	111	;'o'
   976  00FF85  75                 	db	117	;'u'
   977  00FF86  74                 	db	116	;'t'
   978  00FF87  2E                 	db	46
   979  00FF88  2E                 	db	46
   980  00FF89  2E                 	db	46
   981  00FF8A  0A                 	db	10
   982  00FF8B  0D                 	db	13
   983  00FF8C  00                 	db	0
   984  00FF8D                     STR_18:
   985  00FF8D  20                 	db	32
   986  00FF8E  20                 	db	32
   987  00FF8F  20                 	db	32
   988  00FF90  20                 	db	32
   989  00FF91  54                 	db	84	;'T'
   990  00FF92  68                 	db	104	;'h'
   991  00FF93  65                 	db	101	;'e'
   992  00FF94  20                 	db	32
   993  00FF95  70                 	db	112	;'p'
   994  00FF96  61                 	db	97	;'a'
   995  00FF97  72                 	db	114	;'r'
   996  00FF98  74                 	db	116	;'t'
   997  00FF99  20                 	db	32
   998  00FF9A  6E                 	db	110	;'n'
   999  00FF9B  75                 	db	117	;'u'
  1000  00FF9C  6D                 	db	109	;'m'
  1001  00FF9D  62                 	db	98	;'b'
  1002  00FF9E  65                 	db	101	;'e'
  1003  00FF9F  72                 	db	114	;'r'
  1004  00FFA0  20                 	db	32
  1005  00FFA1  69                 	db	105	;'i'
  1006  00FFA2  73                 	db	115	;'s'
  1007  00FFA3  20                 	db	32
  1008  00FFA4  46                 	db	70	;'F'
  1009  00FFA5  54                 	db	84	;'T'
  1010  00FFA6  32                 	db	50	;'2'
  1011  00FFA7  33                 	db	51	;'3'
  1012  00FFA8  32                 	db	50	;'2'
  1013  00FFA9  0A                 	db	10
  1014  00FFAA  0D                 	db	13
  1015  00FFAB  00                 	db	0
  1016  00FFAC                     STR_12:
  1017  00FFAC  20                 	db	32
  1018  00FFAD  20                 	db	32
  1019  00FFAE  20                 	db	32
  1020  00FFAF  20                 	db	32
  1021  00FFB0  52                 	db	82	;'R'
  1022  00FFB1  43                 	db	67	;'C'
  1023  00FFB2  37                 	db	55	;'7'
  1024  00FFB3  20                 	db	32
  1025  00FFB4  43                 	db	67	;'C'
  1026  00FFB5  6C                 	db	108	;'l'
  1027  00FFB6  65                 	db	101	;'e'
  1028  00FFB7  61                 	db	97	;'a'
  1029  00FFB8  72                 	db	114	;'r'
  1030  00FFB9  65                 	db	101	;'e'
  1031  00FFBA  64                 	db	100	;'d'
  1032  00FFBB  0A                 	db	10
  1033  00FFBC  0D                 	db	13
  1034  00FFBD  00                 	db	0
  1035  00FFBE                     STR_8:
  1036  00FFBE  20                 	db	32
  1037  00FFBF  20                 	db	32
  1038  00FFC0  20                 	db	32
  1039  00FFC1  20                 	db	32
  1040  00FFC2  52                 	db	82	;'R'
  1041  00FFC3  43                 	db	67	;'C'
  1042  00FFC4  37                 	db	55	;'7'
  1043  00FFC5  20                 	db	32
  1044  00FFC6  53                 	db	83	;'S'
  1045  00FFC7  65                 	db	101	;'e'
  1046  00FFC8  74                 	db	116	;'t'
  1047  00FFC9  0A                 	db	10
  1048  00FFCA  0D                 	db	13
  1049  00FFCB  00                 	db	0
  1050  00FFCC                     STR_14:
  1051  00FFCC  54                 	db	84	;'T'
  1052  00FFCD  61                 	db	97	;'a'
  1053  00FFCE  6C                 	db	108	;'l'
  1054  00FFCF  6B                 	db	107	;'k'
  1055  00FFD0  20                 	db	32
  1056  00FFD1  74                 	db	116	;'t'
  1057  00FFD2  6F                 	db	111	;'o'
  1058  00FFD3  20                 	db	32
  1059  00FFD4  6D                 	db	109	;'m'
  1060  00FFD5  65                 	db	101	;'e'
  1061  00FFD6  00                 	db	0
  1062  00FFD7                     STR_10:
  1063  00FFD7  4C                 	db	76	;'L'
  1064  00FFD8  45                 	db	69	;'E'
  1065  00FFD9  44                 	db	68	;'D'
  1066  00FFDA  20                 	db	32
  1067  00FFDB  4F                 	db	79	;'O'
  1068  00FFDC  66                 	db	102	;'f'
  1069  00FFDD  66                 	db	102	;'f'
  1070  00FFDE  00                 	db	0
  1071  00FFDF                     STR_6:
  1072  00FFDF  4C                 	db	76	;'L'
  1073  00FFE0  45                 	db	69	;'E'
  1074  00FFE1  44                 	db	68	;'D'
  1075  00FFE2  20                 	db	32
  1076  00FFE3  4F                 	db	79	;'O'
  1077  00FFE4  6E                 	db	110	;'n'
  1078  00FFE5  00                 	db	0
  1079  00FFE6                     STR_27:
  1080  00FFE6  52                 	db	82	;'R'
  1081  00FFE7  65                 	db	101	;'e'
  1082  00FFE8  73                 	db	115	;'s'
  1083  00FFE9  65                 	db	101	;'e'
  1084  00FFEA  74                 	db	116	;'t'
  1085  00FFEB  00                 	db	0
  1086  00FFEC                     STR_30:
  1087  00FFEC  48                 	db	72	;'H'
  1088  00FFED  65                 	db	101	;'e'
  1089  00FFEE  6C                 	db	108	;'l'
  1090  00FFEF  70                 	db	112	;'p'
  1091  00FFF0  00                 	db	0
  1092  00FFF1                     STR_2:
  1093  00FFF1  1B                 	db	27
  1094  00FFF2  5B                 	db	91	;'['
  1095  00FFF3  32                 	db	50	;'2'
  1096  00FFF4  4A                 	db	74	;'J'
  1097  00FFF5  00                 	db	0
  1098  00FFF6                     STR_3:
  1099  00FFF6  1B                 	db	27
  1100  00FFF7  5B                 	db	91	;'['
  1101  00FFF8  48                 	db	72	;'H'
  1102  00FFF9  00                 	db	0
  1103  00FFFA                     STR_1:
  1104  00FFFA  1B                 	db	27
  1105  00FFFB  5B                 	db	91	;'['
  1106  00FFFC  4B                 	db	75	;'K'
  1107  00FFFD  00                 	db	0
  1108  0000                     
  1109                           ; #config settings
  1110  00FFFE  00                 	db	0	; dummy byte at the end
  1111  0000                     
  1112                           	psect	nvCOMRAM
  1113  000055                     __pnvCOMRAM:
  1114                           	opt stack 0
  1115  000055                     _EUSART2_RxDefaultInterruptHandler:
  1116                           	opt stack 0
  1117  000055                     	ds	3
  1118  000058                     _EUSART2_TxDefaultInterruptHandler:
  1119                           	opt stack 0
  1120  000058                     	ds	3
  1121                           
  1122                           	psect	nvBANK0
  1123  0000D4                     __pnvBANK0:
  1124                           	opt stack 0
  1125  0000D4                     _eusart2TxBufferRemaining:
  1126                           	opt stack 0
  1127  0000D4                     	ds	1
  1128  0000                     _PMD5	set	3665
  1129  0000                     _PMD4	set	3664
  1130  0000                     _PMD3	set	3663
  1131  0000                     _PMD2	set	3662
  1132  0000                     _PMD1	set	3661
  1133  0000                     _PMD0	set	3660
  1134  0000                     _OSCTUNE	set	3656
  1135  0000                     _OSCFRQ	set	3657
  1136  0000                     _OSCEN	set	3655
  1137  0000                     _OSCCON3	set	3653
  1138  0000                     _OSCCON1	set	3651
  1139  0000                     _RC2REG	set	3825
  1140  0000                     _RC2STAbits	set	3829
  1141  0000                     _TX2REG	set	3826
  1142  0000                     _TX2STAbits	set	3830
  1143  0000                     _SP2BRGH	set	3828
  1144  0000                     _SP2BRGL	set	3827
  1145  0000                     _TX2STA	set	3830
  1146  0000                     _RC2STA	set	3829
  1147  0000                     _BAUD2CON	set	3831
  1148  0000                     _PIR3bits	set	3638
  1149  0000                     _PIE3bits	set	3628
  1150  0000                     _IPR3bits	set	3618
  1151  0000                     _RX2PPSbits	set	3601
  1152  0000                     _RG7PPS	set	3721
  1153  0000                     _ODCOND	set	3749
  1154  0000                     _ODCONC	set	3744
  1155  0000                     _ODCONH	set	3775
  1156  0000                     _ODCONB	set	3736
  1157  0000                     _ODCONG	set	3770
  1158  0000                     _ODCONA	set	3728
  1159  0000                     _ODCONF	set	3762
  1160  0000                     _ODCONE	set	3757
  1161  0000                     _WPUH	set	3776
  1162  0000                     _WPUC	set	3745
  1163  0000                     _WPUA	set	3729
  1164  0000                     _WPUG	set	3771
  1165  0000                     _WPUB	set	3737
  1166  0000                     _WPUE	set	3758
  1167  0000                     _WPUF	set	3763
  1168  0000                     _WPUD	set	3750
  1169  0000                     _ANSELA	set	3730
  1170  0000                     _ANSELF	set	3764
  1171  0000                     _ANSELG	set	3772
  1172  0000                     _ANSELE	set	3759
  1173  0000                     _ANSELB	set	3738
  1174  0000                     _ANSELD	set	3751
  1175  0000                     _LATCbits	set	3963
  1176  0000                     _INTCONbits	set	4082
  1177  0000                     _TRISD	set	3972
  1178  0000                     _TRISC	set	3971
  1179  0000                     _TRISH	set	3976
  1180  0000                     _TRISB	set	3970
  1181  0000                     _TRISG	set	3975
  1182  0000                     _TRISA	set	3969
  1183  0000                     _TRISF	set	3974
  1184  0000                     _TRISE	set	3973
  1185  0000                     _LATH	set	3968
  1186  0000                     _LATC	set	3963
  1187  0000                     _LATG	set	3967
  1188  0000                     _LATB	set	3962
  1189  0000                     _LATF	set	3966
  1190  0000                     _LATA	set	3961
  1191  0000                     _LATD	set	3964
  1192  0000                     _LATE	set	3965
  1193                           
  1194                           	psect	cinit
  1195  014E8A                     __pcinit:
  1196                           	opt stack 0
  1197  014E8A                     start_initialization:
  1198                           	opt stack 0
  1199  014E8A                     __initialization:
  1200                           	opt stack 0
  1201                           
  1202                           ; Clear objects allocated to BANK2 (192 bytes)
  1203  014E8A  EE02  F000         	lfsr	0,__pbssBANK2
  1204  014E8E  0EC0               	movlw	192
  1205  014E90                     clear_0:
  1206  014E90  6AEE               	clrf	postinc0,c
  1207  014E92  06E8               	decf	wreg,f,c
  1208  014E94  E1FD               	bnz	clear_0
  1209                           
  1210                           ; Clear objects allocated to BANK1 (1 bytes)
  1211  014E96  0101               	movlb	1
  1212  014E98  6BD9               	clrf	__pbssBANK1& (0+255),b
  1213                           
  1214                           ; Clear objects allocated to BANK0 (4 bytes)
  1215  014E9A  0100               	movlb	0
  1216  014E9C  6BD3               	clrf	(__pbssBANK0+3)& (0+255),b
  1217  014E9E  6BD2               	clrf	(__pbssBANK0+2)& (0+255),b
  1218  014EA0  6BD1               	clrf	(__pbssBANK0+1)& (0+255),b
  1219  014EA2  6BD0               	clrf	__pbssBANK0& (0+255),b
  1220                           
  1221                           ; Clear objects allocated to COMRAM (1 bytes)
  1222  014EA4  6A5B               	clrf	__pbssCOMRAM& (0+255),c
  1223  014EA6                     end_of_initialization:
  1224                           	opt stack 0
  1225  014EA6                     __end_of__initialization:
  1226                           	opt stack 0
  1227  014EA6  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1228  014EA8  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1229  014EAA  0100               	movlb	0
  1230  014EAC  EF7C  F0A7         	goto	_main	;jump to C main() function
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           
  1234                           	psect	bssCOMRAM
  1235  00005B                     __pbssCOMRAM:
  1236                           	opt stack 0
  1237  00005B                     _eusart2RxHead:
  1238                           	opt stack 0
  1239  00005B                     	ds	1
  1240                           postinc0	equ	0xFEE
  1241                           wreg	equ	0xFE8
  1242                           
  1243                           	psect	bssBANK0
  1244  0000D0                     __pbssBANK0:
  1245                           	opt stack 0
  1246  0000D0                     _eusart2RxCount:
  1247                           	opt stack 0
  1248  0000D0                     	ds	1
  1249  0000D1                     _eusart2RxTail:
  1250                           	opt stack 0
  1251  0000D1                     	ds	1
  1252  0000D2                     _eusart2TxTail:
  1253                           	opt stack 0
  1254  0000D2                     	ds	1
  1255  0000D3                     _eusart2TxHead:
  1256                           	opt stack 0
  1257  0000D3                     	ds	1
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           
  1261                           	psect	bssBANK1
  1262  0001D9                     __pbssBANK1:
  1263                           	opt stack 0
  1264  0001D9                     _eusart2RxStringReady:
  1265                           	opt stack 0
  1266  0001D9                     	ds	1
  1267                           postinc0	equ	0xFEE
  1268                           wreg	equ	0xFE8
  1269                           
  1270                           	psect	bssBANK2
  1271  000200                     __pbssBANK2:
  1272                           	opt stack 0
  1273  000200                     _eusart2RxBuffer:
  1274                           	opt stack 0
  1275  000200                     	ds	64
  1276  000240                     _eusart2TxBuffer:
  1277                           	opt stack 0
  1278  000240                     	ds	64
  1279  000280                     _line:
  1280                           	opt stack 0
  1281  000280                     	ds	64
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           
  1285                           	psect	cstackBANK1
  1286  000100                     __pcstackBANK1:
  1287                           	opt stack 0
  1288  000100                     ??___fladd:
  1289                           
  1290                           ; 1 bytes @ 0x0
  1291  000100                     	ds	8
  1292  000108                     ?___flsub:
  1293                           	opt stack 0
  1294  000108                     ___flsub@b:
  1295                           	opt stack 0
  1296                           
  1297                           ; 4 bytes @ 0x8
  1298  000108                     	ds	4
  1299  00010C                     ___flsub@a:
  1300                           	opt stack 0
  1301                           
  1302                           ; 4 bytes @ 0xC
  1303  00010C                     	ds	4
  1304  000110                     ?_printf:
  1305                           	opt stack 0
  1306  000110                     printf@f:
  1307                           	opt stack 0
  1308                           
  1309                           ; 2 bytes @ 0x10
  1310  000110                     	ds	6
  1311  000116                     _printf$1379:
  1312                           	opt stack 0
  1313                           
  1314                           ; 4 bytes @ 0x16
  1315  000116                     	ds	4
  1316  00011A                     printf@ap:
  1317                           	opt stack 0
  1318                           
  1319                           ; 2 bytes @ 0x1A
  1320  00011A                     	ds	2
  1321  00011C                     printf@flag:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x1C
  1325  00011C                     	ds	2
  1326  00011E                     printf@prec:
  1327                           	opt stack 0
  1328                           
  1329                           ; 2 bytes @ 0x1E
  1330  00011E                     	ds	2
  1331  000120                     printf@val:
  1332                           	opt stack 0
  1333                           
  1334                           ; 4 bytes @ 0x20
  1335  000120                     	ds	4
  1336  000124                     printf@exp:
  1337                           	opt stack 0
  1338                           
  1339                           ; 2 bytes @ 0x24
  1340  000124                     	ds	2
  1341  000126                     printf@tmpval:
  1342                           	opt stack 0
  1343                           
  1344                           ; 4 bytes @ 0x26
  1345  000126                     	ds	4
  1346  00012A                     printf@fval:
  1347                           	opt stack 0
  1348                           
  1349                           ; 4 bytes @ 0x2A
  1350  00012A                     	ds	4
  1351  00012E                     printf@c:
  1352                           	opt stack 0
  1353                           
  1354                           ; 1 bytes @ 0x2E
  1355  00012E                     	ds	1
  1356  00012F                     ringBufferLUT@line:
  1357                           	opt stack 0
  1358                           
  1359                           ; 2 bytes @ 0x2F
  1360  00012F                     	ds	2
  1361  000131                     ??_ringBufferLUT:
  1362                           
  1363                           ; 1 bytes @ 0x31
  1364  000131                     	ds	2
  1365  000133                     ringBufferLUT@arg_str_685:
  1366                           	opt stack 0
  1367                           
  1368                           ; 64 bytes @ 0x33
  1369  000133                     	ds	64
  1370  000173                     ringBufferLUT@arg_str:
  1371                           	opt stack 0
  1372                           
  1373                           ; 64 bytes @ 0x73
  1374  000173                     	ds	64
  1375  0001B3                     ringBufferLUT@num_arguments:
  1376                           	opt stack 0
  1377                           
  1378                           ; 2 bytes @ 0xB3
  1379  0001B3                     	ds	2
  1380  0001B5                     ringBufferLUT@arg_index:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0xB5
  1384  0001B5                     	ds	2
  1385  0001B7                     ringBufferLUT@num_arguments_681:
  1386                           	opt stack 0
  1387                           
  1388                           ; 2 bytes @ 0xB7
  1389  0001B7                     	ds	2
  1390  0001B9                     ringBufferLUT@arg_index_687:
  1391                           	opt stack 0
  1392                           
  1393                           ; 2 bytes @ 0xB9
  1394  0001B9                     	ds	2
  1395  0001BB                     ringBufferLUT@float_flag:
  1396                           	opt stack 0
  1397                           
  1398                           ; 1 bytes @ 0xBB
  1399  0001BB                     	ds	1
  1400  0001BC                     ringBufferLUT@prod:
  1401                           	opt stack 0
  1402                           
  1403                           ; 4 bytes @ 0xBC
  1404  0001BC                     	ds	4
  1405  0001C0                     ringBufferLUT@index:
  1406                           	opt stack 0
  1407                           
  1408                           ; 2 bytes @ 0xC0
  1409  0001C0                     	ds	2
  1410  0001C2                     ringBufferLUT@last_arg_start:
  1411                           	opt stack 0
  1412                           
  1413                           ; 2 bytes @ 0xC2
  1414  0001C2                     	ds	2
  1415  0001C4                     ringBufferLUT@index_683:
  1416                           	opt stack 0
  1417                           
  1418                           ; 2 bytes @ 0xC4
  1419  0001C4                     	ds	2
  1420  0001C6                     ringBufferLUT@last_arg_start_686:
  1421                           	opt stack 0
  1422                           
  1423                           ; 2 bytes @ 0xC6
  1424  0001C6                     	ds	2
  1425  0001C8                     ringBufferLUT@sum:
  1426                           	opt stack 0
  1427                           
  1428                           ; 4 bytes @ 0xC8
  1429  0001C8                     	ds	4
  1430  0001CC                     ringBufferLUT@line_index_684:
  1431                           	opt stack 0
  1432                           
  1433                           ; 2 bytes @ 0xCC
  1434  0001CC                     	ds	2
  1435  0001CE                     ringBufferLUT@line_index:
  1436                           	opt stack 0
  1437                           
  1438                           ; 2 bytes @ 0xCE
  1439  0001CE                     	ds	2
  1440  0001D0                     ??_ringBufferPull:
  1441                           
  1442                           ; 1 bytes @ 0xD0
  1443  0001D0                     	ds	3
  1444  0001D3                     ringBufferPull@charNumber:
  1445                           	opt stack 0
  1446                           
  1447                           ; 2 bytes @ 0xD3
  1448  0001D3                     	ds	2
  1449  0001D5                     ringBufferPull@index_572:
  1450                           	opt stack 0
  1451                           
  1452                           ; 2 bytes @ 0xD5
  1453  0001D5                     	ds	2
  1454  0001D7                     ringBufferPull@index:
  1455                           	opt stack 0
  1456                           
  1457                           ; 2 bytes @ 0xD7
  1458  0001D7                     	ds	2
  1459                           postinc0	equ	0xFEE
  1460                           wreg	equ	0xFE8
  1461                           
  1462                           	psect	cstackBANK0
  1463  000060                     __pcstackBANK0:
  1464                           	opt stack 0
  1465  000060                     i2_printf$1541:
  1466                           	opt stack 0
  1467                           
  1468                           ; 4 bytes @ 0x0
  1469  000060                     	ds	4
  1470  000064                     i2printf@ap:
  1471                           	opt stack 0
  1472                           
  1473                           ; 2 bytes @ 0x4
  1474  000064                     	ds	2
  1475  000066                     i2printf@flag:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x6
  1479  000066                     	ds	2
  1480  000068                     i2printf@prec:
  1481                           	opt stack 0
  1482                           
  1483                           ; 2 bytes @ 0x8
  1484  000068                     	ds	2
  1485  00006A                     i2printf@val:
  1486                           	opt stack 0
  1487                           
  1488                           ; 4 bytes @ 0xA
  1489  00006A                     	ds	4
  1490  00006E                     i2printf@exp:
  1491                           	opt stack 0
  1492                           
  1493                           ; 2 bytes @ 0xE
  1494  00006E                     	ds	2
  1495  000070                     i2printf@tmpval:
  1496                           	opt stack 0
  1497                           
  1498                           ; 4 bytes @ 0x10
  1499  000070                     	ds	4
  1500  000074                     i2printf@fval:
  1501                           	opt stack 0
  1502                           
  1503                           ; 4 bytes @ 0x14
  1504  000074                     	ds	4
  1505  000078                     i2printf@c:
  1506                           	opt stack 0
  1507                           
  1508                           ; 1 bytes @ 0x18
  1509  000078                     	ds	1
  1510  000079                     ??_INTERRUPT_InterruptManagerHigh:
  1511                           
  1512                           ; 1 bytes @ 0x19
  1513  000079                     	ds	18
  1514  00008B                     ??_isdigit:
  1515  00008B                     ??_isspace:
  1516  00008B                     ?_strlen:
  1517                           	opt stack 0
  1518  00008B                     ?_strcmp:
  1519                           	opt stack 0
  1520  00008B                     ?___wmul:
  1521                           	opt stack 0
  1522  00008B                     ?___awmod:
  1523                           	opt stack 0
  1524  00008B                     ?__tdiv_to_l_:
  1525                           	opt stack 0
  1526  00008B                     ?__div_to_l_:
  1527                           	opt stack 0
  1528  00008B                     ?___fldiv:
  1529                           	opt stack 0
  1530  00008B                     ?___flneg:
  1531                           	opt stack 0
  1532  00008B                     ?___lldiv:
  1533                           	opt stack 0
  1534  00008B                     EUSART2_Read@readValue:
  1535                           	opt stack 0
  1536  00008B                     EUSART2_Write@txData:
  1537                           	opt stack 0
  1538  00008B                     ___wmul@multiplier:
  1539                           	opt stack 0
  1540  00008B                     ___awmod@dividend:
  1541                           	opt stack 0
  1542  00008B                     strcmp@s1:
  1543                           	opt stack 0
  1544  00008B                     strlen@s:
  1545                           	opt stack 0
  1546  00008B                     EUSART2_SetTxInterruptHandler@interruptHandler:
  1547                           	opt stack 0
  1548  00008B                     EUSART2_SetRxInterruptHandler@interruptHandler:
  1549                           	opt stack 0
  1550  00008B                     __div_to_l_@f1:
  1551                           	opt stack 0
  1552  00008B                     ___flge@ff1:
  1553                           	opt stack 0
  1554  00008B                     ___flneg@f1:
  1555                           	opt stack 0
  1556  00008B                     __tdiv_to_l_@f1:
  1557                           	opt stack 0
  1558  00008B                     ___lldiv@dividend:
  1559                           	opt stack 0
  1560  00008B                     ___fldiv@b:
  1561                           	opt stack 0
  1562                           
  1563                           ; 4 bytes @ 0x2B
  1564  00008B                     	ds	1
  1565  00008C                     putch@txData:
  1566                           	opt stack 0
  1567  00008C                     _isdigit$1001:
  1568                           	opt stack 0
  1569  00008C                     _isspace$1004:
  1570                           	opt stack 0
  1571                           
  1572                           ; 1 bytes @ 0x2C
  1573  00008C                     	ds	1
  1574  00008D                     ??_strlen:
  1575  00008D                     isdigit@c:
  1576                           	opt stack 0
  1577  00008D                     isspace@c:
  1578                           	opt stack 0
  1579  00008D                     ___wmul@multiplicand:
  1580                           	opt stack 0
  1581  00008D                     ___awmod@divisor:
  1582                           	opt stack 0
  1583  00008D                     strcmp@s2:
  1584                           	opt stack 0
  1585                           
  1586                           ; 2 bytes @ 0x2D
  1587  00008D                     	ds	1
  1588  00008E                     
  1589                           ; 1 bytes @ 0x2E
  1590  00008E                     	ds	1
  1591  00008F                     ??_strcmp:
  1592  00008F                     ___awmod@counter:
  1593                           	opt stack 0
  1594  00008F                     ___wmul@product:
  1595                           	opt stack 0
  1596  00008F                     strlen@cp:
  1597                           	opt stack 0
  1598  00008F                     __div_to_l_@f2:
  1599                           	opt stack 0
  1600  00008F                     ___flge@ff2:
  1601                           	opt stack 0
  1602  00008F                     __tdiv_to_l_@f2:
  1603                           	opt stack 0
  1604  00008F                     ___lldiv@divisor:
  1605                           	opt stack 0
  1606  00008F                     ___fldiv@a:
  1607                           	opt stack 0
  1608                           
  1609                           ; 4 bytes @ 0x2F
  1610  00008F                     	ds	1
  1611  000090                     ___awmod@sign:
  1612                           	opt stack 0
  1613  000090                     strcmp@r:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0x30
  1617  000090                     	ds	1
  1618  000091                     ?_atoi:
  1619                           	opt stack 0
  1620  000091                     ?___awdiv:
  1621                           	opt stack 0
  1622  000091                     atoi@s:
  1623                           	opt stack 0
  1624  000091                     ___awdiv@dividend:
  1625                           	opt stack 0
  1626                           
  1627                           ; 2 bytes @ 0x31
  1628  000091                     	ds	2
  1629  000093                     ??_atoi:
  1630  000093                     ??__tdiv_to_l_:
  1631  000093                     ??___fldiv:
  1632  000093                     ??___flge:
  1633  000093                     ___awdiv@divisor:
  1634                           	opt stack 0
  1635  000093                     __div_to_l_@quot:
  1636                           	opt stack 0
  1637  000093                     ___lldiv@quotient:
  1638                           	opt stack 0
  1639                           
  1640                           ; 4 bytes @ 0x33
  1641  000093                     	ds	2
  1642  000095                     atoi@sign:
  1643                           	opt stack 0
  1644  000095                     ___awdiv@counter:
  1645                           	opt stack 0
  1646                           
  1647                           ; 1 bytes @ 0x35
  1648  000095                     	ds	1
  1649  000096                     ___awdiv@sign:
  1650                           	opt stack 0
  1651  000096                     atoi@a:
  1652                           	opt stack 0
  1653  000096                     __tdiv_to_l_@quot:
  1654                           	opt stack 0
  1655                           
  1656                           ; 4 bytes @ 0x36
  1657  000096                     	ds	1
  1658  000097                     __div_to_l_@cntr:
  1659                           	opt stack 0
  1660  000097                     ___lldiv@counter:
  1661                           	opt stack 0
  1662  000097                     ___fldiv@sign:
  1663                           	opt stack 0
  1664  000097                     ___awdiv@quotient:
  1665                           	opt stack 0
  1666                           
  1667                           ; 2 bytes @ 0x37
  1668  000097                     	ds	1
  1669  000098                     ?___lmul:
  1670                           	opt stack 0
  1671  000098                     ?___llmod:
  1672                           	opt stack 0
  1673  000098                     ?___xxtofl:
  1674                           	opt stack 0
  1675  000098                     __div_to_l_@exp1:
  1676                           	opt stack 0
  1677  000098                     ___lmul@multiplier:
  1678                           	opt stack 0
  1679  000098                     ___llmod@dividend:
  1680                           	opt stack 0
  1681  000098                     ___fldiv@rem:
  1682                           	opt stack 0
  1683  000098                     ___xxtofl@val:
  1684                           	opt stack 0
  1685                           
  1686                           ; 4 bytes @ 0x38
  1687  000098                     	ds	1
  1688  000099                     ?___flmul:
  1689                           	opt stack 0
  1690  000099                     ___flmul@b:
  1691                           	opt stack 0
  1692                           
  1693                           ; 4 bytes @ 0x39
  1694  000099                     	ds	1
  1695  00009A                     __tdiv_to_l_@cntr:
  1696                           	opt stack 0
  1697                           
  1698                           ; 1 bytes @ 0x3A
  1699  00009A                     	ds	1
  1700  00009B                     __tdiv_to_l_@exp1:
  1701                           	opt stack 0
  1702                           
  1703                           ; 1 bytes @ 0x3B
  1704  00009B                     	ds	1
  1705  00009C                     ??___xxtofl:
  1706  00009C                     ___fldiv@new_exp:
  1707                           	opt stack 0
  1708  00009C                     ___lmul@multiplicand:
  1709                           	opt stack 0
  1710  00009C                     ___llmod@divisor:
  1711                           	opt stack 0
  1712                           
  1713                           ; 4 bytes @ 0x3C
  1714  00009C                     	ds	1
  1715  00009D                     ___flmul@a:
  1716                           	opt stack 0
  1717                           
  1718                           ; 4 bytes @ 0x3D
  1719  00009D                     	ds	1
  1720  00009E                     ___fldiv@grs:
  1721                           	opt stack 0
  1722                           
  1723                           ; 4 bytes @ 0x3E
  1724  00009E                     	ds	2
  1725  0000A0                     ___llmod@counter:
  1726                           	opt stack 0
  1727  0000A0                     ___xxtofl@sign:
  1728                           	opt stack 0
  1729  0000A0                     ___lmul@product:
  1730                           	opt stack 0
  1731                           
  1732                           ; 4 bytes @ 0x40
  1733  0000A0                     	ds	1
  1734  0000A1                     ??___flmul:
  1735  0000A1                     ___xxtofl@exp:
  1736                           	opt stack 0
  1737                           
  1738                           ; 1 bytes @ 0x41
  1739  0000A1                     	ds	1
  1740  0000A2                     ___fldiv@bexp:
  1741                           	opt stack 0
  1742  0000A2                     ___xxtofl@arg:
  1743                           	opt stack 0
  1744                           
  1745                           ; 4 bytes @ 0x42
  1746  0000A2                     	ds	1
  1747  0000A3                     ___fldiv@aexp:
  1748                           	opt stack 0
  1749                           
  1750                           ; 1 bytes @ 0x43
  1751  0000A3                     	ds	2
  1752  0000A5                     ___flmul@sign:
  1753                           	opt stack 0
  1754                           
  1755                           ; 1 bytes @ 0x45
  1756  0000A5                     	ds	1
  1757  0000A6                     ___flmul@grs:
  1758                           	opt stack 0
  1759                           
  1760                           ; 4 bytes @ 0x46
  1761  0000A6                     	ds	4
  1762  0000AA                     ___flmul@aexp:
  1763                           	opt stack 0
  1764                           
  1765                           ; 1 bytes @ 0x4A
  1766  0000AA                     	ds	1
  1767  0000AB                     ___flmul@bexp:
  1768                           	opt stack 0
  1769                           
  1770                           ; 1 bytes @ 0x4B
  1771  0000AB                     	ds	1
  1772  0000AC                     ___flmul@prod:
  1773                           	opt stack 0
  1774                           
  1775                           ; 4 bytes @ 0x4C
  1776  0000AC                     	ds	4
  1777  0000B0                     ___flmul@temp:
  1778                           	opt stack 0
  1779                           
  1780                           ; 2 bytes @ 0x50
  1781  0000B0                     	ds	2
  1782  0000B2                     ?_fround:
  1783                           	opt stack 0
  1784  0000B2                     ?_scale:
  1785                           	opt stack 0
  1786  0000B2                     ?_strtod:
  1787                           	opt stack 0
  1788  0000B2                     strtod@s:
  1789                           	opt stack 0
  1790                           
  1791                           ; 2 bytes @ 0x52
  1792  0000B2                     	ds	2
  1793  0000B4                     strtod@res:
  1794                           	opt stack 0
  1795                           
  1796                           ; 2 bytes @ 0x54
  1797  0000B4                     	ds	2
  1798  0000B6                     ??_strtod:
  1799  0000B6                     _fround$1377:
  1800                           	opt stack 0
  1801  0000B6                     _scale$1378:
  1802                           	opt stack 0
  1803                           
  1804                           ; 4 bytes @ 0x56
  1805  0000B6                     	ds	1
  1806  0000B7                     strtod@eexp:
  1807                           	opt stack 0
  1808                           
  1809                           ; 1 bytes @ 0x57
  1810  0000B7                     	ds	1
  1811  0000B8                     strtod@flags:
  1812                           	opt stack 0
  1813                           
  1814                           ; 1 bytes @ 0x58
  1815  0000B8                     	ds	1
  1816  0000B9                     strtod@expon:
  1817                           	opt stack 0
  1818                           
  1819                           ; 1 bytes @ 0x59
  1820  0000B9                     	ds	1
  1821  0000BA                     scale@scl:
  1822                           	opt stack 0
  1823  0000BA                     strtod@_u:
  1824                           	opt stack 0
  1825  0000BA                     _fround$1376:
  1826                           	opt stack 0
  1827                           
  1828                           ; 4 bytes @ 0x5A
  1829  0000BA                     	ds	1
  1830  0000BB                     ?___fltol:
  1831                           	opt stack 0
  1832  0000BB                     ___fltol@f1:
  1833                           	opt stack 0
  1834                           
  1835                           ; 4 bytes @ 0x5B
  1836  0000BB                     	ds	3
  1837  0000BE                     ?_atof:
  1838                           	opt stack 0
  1839  0000BE                     fround@prec:
  1840                           	opt stack 0
  1841  0000BE                     atof@s:
  1842                           	opt stack 0
  1843                           
  1844                           ; 2 bytes @ 0x5E
  1845  0000BE                     	ds	1
  1846  0000BF                     ??___fltol:
  1847                           
  1848                           ; 1 bytes @ 0x5F
  1849  0000BF                     	ds	3
  1850  0000C2                     ?___fladd:
  1851                           	opt stack 0
  1852  0000C2                     ___fladd@b:
  1853                           	opt stack 0
  1854                           
  1855                           ; 4 bytes @ 0x62
  1856  0000C2                     	ds	1
  1857  0000C3                     ___fltol@sign1:
  1858                           	opt stack 0
  1859                           
  1860                           ; 1 bytes @ 0x63
  1861  0000C3                     	ds	1
  1862  0000C4                     ___fltol@exp1:
  1863                           	opt stack 0
  1864                           
  1865                           ; 1 bytes @ 0x64
  1866  0000C4                     	ds	2
  1867  0000C6                     ___fladd@a:
  1868                           	opt stack 0
  1869                           
  1870                           ; 4 bytes @ 0x66
  1871  0000C6                     	ds	4
  1872  0000CA                     ___fladd@signs:
  1873                           	opt stack 0
  1874                           
  1875                           ; 1 bytes @ 0x6A
  1876  0000CA                     	ds	1
  1877  0000CB                     ___fladd@aexp:
  1878                           	opt stack 0
  1879                           
  1880                           ; 1 bytes @ 0x6B
  1881  0000CB                     	ds	1
  1882  0000CC                     ___fladd@bexp:
  1883                           	opt stack 0
  1884                           
  1885                           ; 1 bytes @ 0x6C
  1886  0000CC                     	ds	1
  1887  0000CD                     ___fladd@grs:
  1888                           	opt stack 0
  1889                           
  1890                           ; 1 bytes @ 0x6D
  1891  0000CD                     	ds	1
  1892  0000CE                     ??_printf:
  1893  0000CE                     
  1894                           ; 1 bytes @ 0x6E
  1895  0000CE                     	ds	2
  1896  0000D0                     postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           
  1899                           ; 1 bytes @ 0x70
  1900                           
  1901                           	psect	cstackCOMRAM
  1902  000001                     __pcstackCOMRAM:
  1903                           	opt stack 0
  1904  000001                     ?i2___wmul:
  1905                           	opt stack 0
  1906  000001                     ?i2___awmod:
  1907                           	opt stack 0
  1908  000001                     ?i2__div_to_l_:
  1909                           	opt stack 0
  1910  000001                     ?i2___flneg:
  1911                           	opt stack 0
  1912  000001                     ?i2__tdiv_to_l_:
  1913                           	opt stack 0
  1914  000001                     ?i2___lldiv:
  1915                           	opt stack 0
  1916  000001                     ?i2___xxtofl:
  1917                           	opt stack 0
  1918  000001                     i2EUSART2_Write@txData:
  1919                           	opt stack 0
  1920  000001                     i2___wmul@multiplier:
  1921                           	opt stack 0
  1922  000001                     i2___awmod@dividend:
  1923                           	opt stack 0
  1924  000001                     i2__div_to_l_@f1:
  1925                           	opt stack 0
  1926  000001                     i2___flge@ff1:
  1927                           	opt stack 0
  1928  000001                     i2___flneg@f1:
  1929                           	opt stack 0
  1930  000001                     i2__tdiv_to_l_@f1:
  1931                           	opt stack 0
  1932  000001                     i2___lldiv@dividend:
  1933                           	opt stack 0
  1934  000001                     i2___xxtofl@val:
  1935                           	opt stack 0
  1936                           
  1937                           ; 4 bytes @ 0x0
  1938  000001                     	ds	1
  1939  000002                     i2putch@txData:
  1940                           	opt stack 0
  1941                           
  1942                           ; 1 bytes @ 0x1
  1943  000002                     	ds	1
  1944  000003                     i2___wmul@multiplicand:
  1945                           	opt stack 0
  1946  000003                     i2___awmod@divisor:
  1947                           	opt stack 0
  1948                           
  1949                           ; 2 bytes @ 0x2
  1950  000003                     	ds	2
  1951  000005                     ??i2___xxtofl:
  1952  000005                     i2___awmod@counter:
  1953                           	opt stack 0
  1954  000005                     i2___wmul@product:
  1955                           	opt stack 0
  1956  000005                     i2__div_to_l_@f2:
  1957                           	opt stack 0
  1958  000005                     i2___flge@ff2:
  1959                           	opt stack 0
  1960  000005                     i2__tdiv_to_l_@f2:
  1961                           	opt stack 0
  1962  000005                     i2___lldiv@divisor:
  1963                           	opt stack 0
  1964                           
  1965                           ; 4 bytes @ 0x4
  1966  000005                     	ds	1
  1967  000006                     i2___awmod@sign:
  1968                           	opt stack 0
  1969                           
  1970                           ; 1 bytes @ 0x5
  1971  000006                     	ds	1
  1972  000007                     ?i2___awdiv:
  1973                           	opt stack 0
  1974  000007                     i2___awdiv@dividend:
  1975                           	opt stack 0
  1976                           
  1977                           ; 2 bytes @ 0x6
  1978  000007                     	ds	2
  1979  000009                     ??i2___flge:
  1980  000009                     ??i2__tdiv_to_l_:
  1981  000009                     i2___xxtofl@sign:
  1982                           	opt stack 0
  1983  000009                     i2___awdiv@divisor:
  1984                           	opt stack 0
  1985  000009                     i2__div_to_l_@quot:
  1986                           	opt stack 0
  1987  000009                     i2___lldiv@quotient:
  1988                           	opt stack 0
  1989                           
  1990                           ; 4 bytes @ 0x8
  1991  000009                     	ds	1
  1992  00000A                     i2___xxtofl@exp:
  1993                           	opt stack 0
  1994                           
  1995                           ; 1 bytes @ 0x9
  1996  00000A                     	ds	1
  1997  00000B                     i2___awdiv@counter:
  1998                           	opt stack 0
  1999  00000B                     i2___xxtofl@arg:
  2000                           	opt stack 0
  2001                           
  2002                           ; 4 bytes @ 0xA
  2003  00000B                     	ds	1
  2004  00000C                     i2___awdiv@sign:
  2005                           	opt stack 0
  2006  00000C                     i2__tdiv_to_l_@quot:
  2007                           	opt stack 0
  2008                           
  2009                           ; 4 bytes @ 0xB
  2010  00000C                     	ds	1
  2011  00000D                     i2__div_to_l_@cntr:
  2012                           	opt stack 0
  2013  00000D                     i2___lldiv@counter:
  2014                           	opt stack 0
  2015  00000D                     i2___awdiv@quotient:
  2016                           	opt stack 0
  2017                           
  2018                           ; 2 bytes @ 0xC
  2019  00000D                     	ds	1
  2020  00000E                     ?i2___llmod:
  2021                           	opt stack 0
  2022  00000E                     i2__div_to_l_@exp1:
  2023                           	opt stack 0
  2024  00000E                     i2___llmod@dividend:
  2025                           	opt stack 0
  2026                           
  2027                           ; 4 bytes @ 0xD
  2028  00000E                     	ds	1
  2029  00000F                     ?i2___flmul:
  2030                           	opt stack 0
  2031  00000F                     i2___flmul@b:
  2032                           	opt stack 0
  2033                           
  2034                           ; 4 bytes @ 0xE
  2035  00000F                     	ds	1
  2036  000010                     i2__tdiv_to_l_@cntr:
  2037                           	opt stack 0
  2038                           
  2039                           ; 1 bytes @ 0xF
  2040  000010                     	ds	1
  2041  000011                     i2__tdiv_to_l_@exp1:
  2042                           	opt stack 0
  2043                           
  2044                           ; 1 bytes @ 0x10
  2045  000011                     	ds	1
  2046  000012                     i2___llmod@divisor:
  2047                           	opt stack 0
  2048                           
  2049                           ; 4 bytes @ 0x11
  2050  000012                     	ds	1
  2051  000013                     i2___flmul@a:
  2052                           	opt stack 0
  2053                           
  2054                           ; 4 bytes @ 0x12
  2055  000013                     	ds	3
  2056  000016                     i2___llmod@counter:
  2057                           	opt stack 0
  2058                           
  2059                           ; 1 bytes @ 0x15
  2060  000016                     	ds	1
  2061  000017                     ??i2___flmul:
  2062                           
  2063                           ; 1 bytes @ 0x16
  2064  000017                     	ds	4
  2065  00001B                     i2___flmul@sign:
  2066                           	opt stack 0
  2067                           
  2068                           ; 1 bytes @ 0x1A
  2069  00001B                     	ds	1
  2070  00001C                     i2___flmul@grs:
  2071                           	opt stack 0
  2072                           
  2073                           ; 4 bytes @ 0x1B
  2074  00001C                     	ds	4
  2075  000020                     i2___flmul@aexp:
  2076                           	opt stack 0
  2077                           
  2078                           ; 1 bytes @ 0x1F
  2079  000020                     	ds	1
  2080  000021                     i2___flmul@bexp:
  2081                           	opt stack 0
  2082                           
  2083                           ; 1 bytes @ 0x20
  2084  000021                     	ds	1
  2085  000022                     i2___flmul@prod:
  2086                           	opt stack 0
  2087                           
  2088                           ; 4 bytes @ 0x21
  2089  000022                     	ds	4
  2090  000026                     i2___flmul@temp:
  2091                           	opt stack 0
  2092                           
  2093                           ; 2 bytes @ 0x25
  2094  000026                     	ds	2
  2095  000028                     ?i2_fround:
  2096                           	opt stack 0
  2097  000028                     ?i2_scale:
  2098                           	opt stack 0
  2099  000028                     ?i2___fltol:
  2100                           	opt stack 0
  2101  000028                     i2___fltol@f1:
  2102                           	opt stack 0
  2103                           
  2104                           ; 4 bytes @ 0x27
  2105  000028                     	ds	4
  2106  00002C                     ??i2___fltol:
  2107  00002C                     i2_fround$1539:
  2108                           	opt stack 0
  2109  00002C                     i2_scale$1540:
  2110                           	opt stack 0
  2111                           
  2112                           ; 4 bytes @ 0x2B
  2113  00002C                     	ds	4
  2114  000030                     i2scale@scl:
  2115                           	opt stack 0
  2116  000030                     i2___fltol@sign1:
  2117                           	opt stack 0
  2118  000030                     i2_fround$1538:
  2119                           	opt stack 0
  2120                           
  2121                           ; 4 bytes @ 0x2F
  2122  000030                     	ds	1
  2123  000031                     i2___fltol@exp1:
  2124                           	opt stack 0
  2125                           
  2126                           ; 1 bytes @ 0x30
  2127  000031                     	ds	3
  2128  000034                     i2fround@prec:
  2129                           	opt stack 0
  2130                           
  2131                           ; 1 bytes @ 0x33
  2132  000034                     	ds	1
  2133  000035                     ?i2___fladd:
  2134                           	opt stack 0
  2135  000035                     i2___fladd@b:
  2136                           	opt stack 0
  2137                           
  2138                           ; 4 bytes @ 0x34
  2139  000035                     	ds	4
  2140  000039                     i2___fladd@a:
  2141                           	opt stack 0
  2142                           
  2143                           ; 4 bytes @ 0x38
  2144  000039                     	ds	4
  2145  00003D                     ??i2___fladd:
  2146                           
  2147                           ; 1 bytes @ 0x3C
  2148  00003D                     	ds	8
  2149  000045                     i2___fladd@signs:
  2150                           	opt stack 0
  2151                           
  2152                           ; 1 bytes @ 0x44
  2153  000045                     	ds	1
  2154  000046                     i2___fladd@aexp:
  2155                           	opt stack 0
  2156                           
  2157                           ; 1 bytes @ 0x45
  2158  000046                     	ds	1
  2159  000047                     i2___fladd@bexp:
  2160                           	opt stack 0
  2161                           
  2162                           ; 1 bytes @ 0x46
  2163  000047                     	ds	1
  2164  000048                     i2___fladd@grs:
  2165                           	opt stack 0
  2166                           
  2167                           ; 1 bytes @ 0x47
  2168  000048                     	ds	1
  2169  000049                     ?i2___flsub:
  2170                           	opt stack 0
  2171  000049                     i2___flsub@b:
  2172                           	opt stack 0
  2173                           
  2174                           ; 4 bytes @ 0x48
  2175  000049                     	ds	4
  2176  00004D                     i2___flsub@a:
  2177                           	opt stack 0
  2178                           
  2179                           ; 4 bytes @ 0x4C
  2180  00004D                     	ds	4
  2181  000051                     ?i2_printf:
  2182                           	opt stack 0
  2183  000051                     i2printf@f:
  2184                           	opt stack 0
  2185                           
  2186                           ; 2 bytes @ 0x50
  2187  000051                     	ds	2
  2188  000053                     ??i2_printf:
  2189                           
  2190                           ; 1 bytes @ 0x52
  2191  000053                     	ds	2
  2192  000055                     postinc0	equ	0xFEE
  2193                           wreg	equ	0xFE8
  2194                           
  2195                           ; 1 bytes @ 0x54
  2196 ;;
  2197 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2198 ;;
  2199 ;; *************** function _main *****************
  2200 ;; Defined at:
  2201 ;;		line 58 in file "main.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels required when called:   10
  2221 ;; This function calls:
  2222 ;;		_SYSTEM_Initialize
  2223 ;;		_printResetMessage
  2224 ;;		_ringBufferPull
  2225 ;; This function is called by:
  2226 ;;		Startup code after reset
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text0
  2231  014EF8                     __ptext0:
  2232                           	opt stack 0
  2233  014EF8                     _main:
  2234                           	opt stack 21
  2235                           
  2236                           ;main.c: 61: SYSTEM_Initialize();
  2237                           
  2238                           ;incstack = 0
  2239  014EF8  ECA4  F0A7         	call	_SYSTEM_Initialize	;wreg free
  2240                           
  2241                           ;main.c: 68: (INTCONbits.GIEH = 1);
  2242  014EFC  8EF2               	bsf	intcon,7,c	;volatile
  2243                           
  2244                           ;main.c: 71: (INTCONbits.GIEL = 1);
  2245  014EFE  8CF2               	bsf	intcon,6,c	;volatile
  2246                           
  2247                           ;main.c: 74: printResetMessage();
  2248  014F00  ECA1  F0A6         	call	_printResetMessage	;wreg free
  2249  014F04                     
  2250                           ;main.c: 77: {
  2251                           ;main.c: 79: __nop();
  2252  014F04  F000               	nop	
  2253                           
  2254                           ;main.c: 82: if (eusart2RxStringReady) {
  2255  014F06  0101               	movlb	1	; () banked
  2256  014F08  51D9               	movf	_eusart2RxStringReady& (0+255),w,b	;volatile
  2257  014F0A  B4D8               	btfsc	status,2,c
  2258  014F0C  D7FB               	goto	l287
  2259                           
  2260                           ; BSR set to: 1
  2261                           ;main.c: 84: ringBufferPull();
  2262  014F0E  EC72  F09D         	call	_ringBufferPull	;wreg free
  2263  014F12  D7F8               	goto	l287
  2264  014F14                     __end_of_main:
  2265                           	opt stack 0
  2266                           intcon	equ	0xFF2
  2267                           postinc0	equ	0xFEE
  2268                           wreg	equ	0xFE8
  2269                           status	equ	0xFD8
  2270                           
  2271 ;; *************** function _ringBufferPull *****************
  2272 ;; Defined at:
  2273 ;;		line 8 in file "ring_buffer_interface.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  index           2  213[BANK1 ] int 
  2278 ;;  index           2  215[BANK1 ] int 
  2279 ;;  charNumber      2  211[BANK1 ] int 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;Total ram usage:        9 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    9
  2296 ;; This function calls:
  2297 ;;		_EUSART2_Read
  2298 ;;		_ringBufferLUT
  2299 ;;		_strlen
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text1
  2306  013AE4                     __ptext1:
  2307                           	opt stack 0
  2308  013AE4                     _ringBufferPull:
  2309                           	opt stack 21
  2310                           
  2311                           ;ring_buffer_interface.c: 10: int charNumber = eusart2RxCount;
  2312                           
  2313                           ;incstack = 0
  2314  013AE4  C0D0  F1D3         	movff	_eusart2RxCount,ringBufferPull@charNumber	;volatile
  2315  013AE8  0101               	movlb	1	; () banked
  2316  013AEA  6BD4               	clrf	(ringBufferPull@charNumber+1)& (0+255),b
  2317                           
  2318                           ; BSR set to: 1
  2319                           ;ring_buffer_interface.c: 13: for (int index = 0; index < 64; index++) {
  2320  013AEC  0E00               	movlw	0
  2321  013AEE  6FD8               	movwf	(ringBufferPull@index+1)& (0+255),b
  2322  013AF0  0E00               	movlw	0
  2323  013AF2  6FD7               	movwf	ringBufferPull@index& (0+255),b
  2324  013AF4                     l7082:
  2325                           
  2326                           ; BSR set to: 1
  2327  013AF4  BFD8               	btfsc	(ringBufferPull@index+1)& (0+255),7,b
  2328  013AF6  D006               	goto	l316
  2329  013AF8  51D8               	movf	(ringBufferPull@index+1)& (0+255),w,b
  2330  013AFA  E10F               	bnz	l7092
  2331  013AFC  0E40               	movlw	64
  2332  013AFE  5DD7               	subwf	ringBufferPull@index& (0+255),w,b
  2333  013B00  B0D8               	btfsc	status,0,c
  2334  013B02  D00B               	goto	u9540
  2335  013B04                     l316:
  2336                           
  2337                           ; BSR set to: 1
  2338                           ;ring_buffer_interface.c: 15: line[index] = '\0';
  2339                           
  2340                           ; BSR set to: 1
  2341  013B04  0E80               	movlw	low _line
  2342  013B06  25D7               	addwf	ringBufferPull@index& (0+255),w,b
  2343  013B08  6ED9               	movwf	fsr2l,c
  2344  013B0A  0E02               	movlw	high _line
  2345  013B0C  21D8               	addwfc	(ringBufferPull@index+1)& (0+255),w,b
  2346  013B0E  6EDA               	movwf	fsr2h,c
  2347  013B10  0E00               	movlw	0
  2348  013B12  6EDF               	movwf	indf2,c
  2349                           
  2350                           ; BSR set to: 1
  2351  013B14  4BD7               	infsnz	ringBufferPull@index& (0+255),f,b
  2352  013B16  2BD8               	incf	(ringBufferPull@index+1)& (0+255),f,b
  2353  013B18  D7ED               	goto	l7082
  2354  013B1A                     u9540:
  2355  013B1A                     l7092:
  2356                           
  2357                           ; BSR set to: 1
  2358                           ;ring_buffer_interface.c: 17: }
  2359                           ;ring_buffer_interface.c: 20: for(int index = 0; index < charNumber; index++){
  2360  013B1A  0E00               	movlw	0
  2361  013B1C  6FD6               	movwf	(ringBufferPull@index_572+1)& (0+255),b
  2362  013B1E  0E00               	movlw	0
  2363  013B20  6FD5               	movwf	ringBufferPull@index_572& (0+255),b
  2364  013B22  D00E               	goto	l318
  2365  013B24                     
  2366                           ; BSR set to: 1
  2367                           ;ring_buffer_interface.c: 22: line[index] = EUSART2_Read();
  2368                           
  2369                           ; BSR set to: 1
  2370  013B24  EC82  F0A6         	call	_EUSART2_Read	;wreg free
  2371  013B28  0101               	movlb	1	; () banked
  2372  013B2A  6FD0               	movwf	??_ringBufferPull& (0+255),b
  2373  013B2C  0E80               	movlw	low _line
  2374  013B2E  25D5               	addwf	ringBufferPull@index_572& (0+255),w,b
  2375  013B30  6ED9               	movwf	fsr2l,c
  2376  013B32  0E02               	movlw	high _line
  2377  013B34  21D6               	addwfc	(ringBufferPull@index_572+1)& (0+255),w,b
  2378  013B36  6EDA               	movwf	fsr2h,c
  2379  013B38  C1D0  FFDF         	movff	??_ringBufferPull,indf2
  2380                           
  2381                           ; BSR set to: 1
  2382  013B3C  4BD5               	infsnz	ringBufferPull@index_572& (0+255),f,b
  2383  013B3E  2BD6               	incf	(ringBufferPull@index_572+1)& (0+255),f,b
  2384  013B40                     l318:
  2385                           
  2386                           ; BSR set to: 1
  2387                           
  2388                           ; BSR set to: 1
  2389  013B40  51D3               	movf	ringBufferPull@charNumber& (0+255),w,b
  2390  013B42  5DD5               	subwf	ringBufferPull@index_572& (0+255),w,b
  2391  013B44  51D6               	movf	(ringBufferPull@index_572+1)& (0+255),w,b
  2392  013B46  0A80               	xorlw	128
  2393  013B48  6FD0               	movwf	??_ringBufferPull& (0+255),b
  2394  013B4A  51D4               	movf	(ringBufferPull@charNumber+1)& (0+255),w,b
  2395  013B4C  0A80               	xorlw	128
  2396  013B4E  59D0               	subwfb	??_ringBufferPull& (0+255),w,b
  2397  013B50  A0D8               	btfss	status,0,c
  2398  013B52  D7E8               	goto	l319
  2399                           
  2400                           ; BSR set to: 1
  2401                           ;ring_buffer_interface.c: 24: }
  2402                           ;ring_buffer_interface.c: 27: eusart2RxTail = eusart2RxHead;
  2403  013B54  C05B  F0D1         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  2404                           
  2405                           ;ring_buffer_interface.c: 30: while((line[strlen(line) - 1] == (int) '\n') ||
  2406                           ;ring_buffer_interface.c: 31: (line[strlen(line) - 1] == (int) '\r')) {
  2407  013B58  D01C               	goto	l321
  2408  013B5A                     
  2409                           ;ring_buffer_interface.c: 34: line[strlen(line) - 1] = '\0';
  2410                           
  2411                           ; BSR set to: 1
  2412  013B5A  0EFF               	movlw	255
  2413  013B5C  0101               	movlb	1	; () banked
  2414  013B5E  6FD0               	movwf	??_ringBufferPull& (0+255),b
  2415  013B60  0EFF               	movlw	255
  2416  013B62  6FD1               	movwf	(??_ringBufferPull+1)& (0+255),b
  2417  013B64  0E80               	movlw	low _line
  2418  013B66  0100               	movlb	0	; () banked
  2419  013B68  6F8B               	movwf	strlen@s& (0+255),b
  2420  013B6A  0E02               	movlw	high _line
  2421  013B6C  6F8C               	movwf	(strlen@s+1)& (0+255),b
  2422  013B6E  EC63  F0A6         	call	_strlen	;wreg free
  2423  013B72  0101               	movlb	1	; () banked
  2424  013B74  51D0               	movf	??_ringBufferPull& (0+255),w,b
  2425  013B76  0100               	movlb	0	; () banked
  2426  013B78  278B               	addwf	?_strlen& (0+255),f,b
  2427  013B7A  0101               	movlb	1	; () banked
  2428  013B7C  51D1               	movf	(??_ringBufferPull+1)& (0+255),w,b
  2429  013B7E  0100               	movlb	0	; () banked
  2430  013B80  238C               	addwfc	(?_strlen+1)& (0+255),f,b
  2431  013B82  0E80               	movlw	low _line
  2432  013B84  258B               	addwf	?_strlen& (0+255),w,b
  2433  013B86  6ED9               	movwf	fsr2l,c
  2434  013B88  0E02               	movlw	high _line
  2435  013B8A  218C               	addwfc	(?_strlen+1)& (0+255),w,b
  2436  013B8C  6EDA               	movwf	fsr2h,c
  2437  013B8E  0E00               	movlw	0
  2438  013B90  6EDF               	movwf	indf2,c
  2439  013B92                     l321:
  2440  013B92  0EFF               	movlw	255
  2441  013B94  0101               	movlb	1	; () banked
  2442  013B96  6FD0               	movwf	??_ringBufferPull& (0+255),b
  2443  013B98  0EFF               	movlw	255
  2444  013B9A  6FD1               	movwf	(??_ringBufferPull+1)& (0+255),b
  2445  013B9C  0E80               	movlw	low _line
  2446  013B9E  0100               	movlb	0	; () banked
  2447  013BA0  6F8B               	movwf	strlen@s& (0+255),b
  2448  013BA2  0E02               	movlw	high _line
  2449  013BA4  6F8C               	movwf	(strlen@s+1)& (0+255),b
  2450  013BA6  EC63  F0A6         	call	_strlen	;wreg free
  2451  013BAA  0101               	movlb	1	; () banked
  2452  013BAC  51D0               	movf	??_ringBufferPull& (0+255),w,b
  2453  013BAE  0100               	movlb	0	; () banked
  2454  013BB0  278B               	addwf	?_strlen& (0+255),f,b
  2455  013BB2  0101               	movlb	1	; () banked
  2456  013BB4  51D1               	movf	(??_ringBufferPull+1)& (0+255),w,b
  2457  013BB6  0100               	movlb	0	; () banked
  2458  013BB8  238C               	addwfc	(?_strlen+1)& (0+255),f,b
  2459  013BBA  0E80               	movlw	low _line
  2460  013BBC  258B               	addwf	?_strlen& (0+255),w,b
  2461  013BBE  6ED9               	movwf	fsr2l,c
  2462  013BC0  0E02               	movlw	high _line
  2463  013BC2  218C               	addwfc	(?_strlen+1)& (0+255),w,b
  2464  013BC4  6EDA               	movwf	fsr2h,c
  2465  013BC6  0E0A               	movlw	10
  2466  013BC8  18DE               	xorwf	postinc2,w,c
  2467  013BCA  B4D8               	btfsc	status,2,c
  2468  013BCC  D7C6               	goto	l322
  2469                           
  2470                           ; BSR set to: 0
  2471  013BCE  0EFF               	movlw	255
  2472  013BD0  0101               	movlb	1	; () banked
  2473  013BD2  6FD0               	movwf	??_ringBufferPull& (0+255),b
  2474  013BD4  0EFF               	movlw	255
  2475  013BD6  6FD1               	movwf	(??_ringBufferPull+1)& (0+255),b
  2476  013BD8  0E80               	movlw	low _line
  2477  013BDA  0100               	movlb	0	; () banked
  2478  013BDC  6F8B               	movwf	strlen@s& (0+255),b
  2479  013BDE  0E02               	movlw	high _line
  2480  013BE0  6F8C               	movwf	(strlen@s+1)& (0+255),b
  2481  013BE2  EC63  F0A6         	call	_strlen	;wreg free
  2482  013BE6  0101               	movlb	1	; () banked
  2483  013BE8  51D0               	movf	??_ringBufferPull& (0+255),w,b
  2484  013BEA  0100               	movlb	0	; () banked
  2485  013BEC  278B               	addwf	?_strlen& (0+255),f,b
  2486  013BEE  0101               	movlb	1	; () banked
  2487  013BF0  51D1               	movf	(??_ringBufferPull+1)& (0+255),w,b
  2488  013BF2  0100               	movlb	0	; () banked
  2489  013BF4  238C               	addwfc	(?_strlen+1)& (0+255),f,b
  2490  013BF6  0E80               	movlw	low _line
  2491  013BF8  258B               	addwf	?_strlen& (0+255),w,b
  2492  013BFA  6ED9               	movwf	fsr2l,c
  2493  013BFC  0E02               	movlw	high _line
  2494  013BFE  218C               	addwfc	(?_strlen+1)& (0+255),w,b
  2495  013C00  6EDA               	movwf	fsr2h,c
  2496  013C02  0E0D               	movlw	13
  2497  013C04  18DE               	xorwf	postinc2,w,c
  2498  013C06  B4D8               	btfsc	status,2,c
  2499  013C08  D7A8               	goto	l322
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;ring_buffer_interface.c: 36: }
  2503                           ;ring_buffer_interface.c: 40: eusart2RxStringReady = 0;
  2504                           
  2505                           ; BSR set to: 0
  2506  013C0A  0E00               	movlw	0
  2507  013C0C  0101               	movlb	1	; () banked
  2508  013C0E  6FD9               	movwf	_eusart2RxStringReady& (0+255),b	;volatile
  2509                           
  2510                           ; BSR set to: 1
  2511                           ;ring_buffer_interface.c: 43: ringBufferLUT(line);
  2512  013C10  0E80               	movlw	low _line
  2513  013C12  6F2F               	movwf	ringBufferLUT@line& (0+255),b
  2514  013C14  0E02               	movlw	high _line
  2515  013C16  6F30               	movwf	(ringBufferLUT@line+1)& (0+255),b
  2516  013C18  ECA0  F087         	call	_ringBufferLUT	;wreg free
  2517  013C1C  0012               	return		;funcret
  2518  013C1E                     __end_of_ringBufferPull:
  2519                           	opt stack 0
  2520                           intcon	equ	0xFF2
  2521                           postinc0	equ	0xFEE
  2522                           wreg	equ	0xFE8
  2523                           indf2	equ	0xFDF
  2524                           postinc2	equ	0xFDE
  2525                           fsr2h	equ	0xFDA
  2526                           fsr2l	equ	0xFD9
  2527                           status	equ	0xFD8
  2528                           
  2529 ;; *************** function _ringBufferLUT *****************
  2530 ;; Defined at:
  2531 ;;		line 7 in file "ring_buffer_LUT.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  line            2   47[BANK1 ] PTR unsigned char 
  2534 ;;		 -> line(64), 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  arg_index       2  185[BANK1 ] int 
  2537 ;;  index           2  196[BANK1 ] int 
  2538 ;;  arg_index       2  181[BANK1 ] int 
  2539 ;;  index           2  192[BANK1 ] int 
  2540 ;;  arg_str        64   51[BANK1 ] unsigned char [64]
  2541 ;;  prod            4  188[BANK1 ] long 
  2542 ;;  line_index      2  204[BANK1 ] int 
  2543 ;;  last_arg_sta    2  198[BANK1 ] int 
  2544 ;;  num_argument    2  183[BANK1 ] int 
  2545 ;;  arg_str        64  115[BANK1 ] unsigned char [64]
  2546 ;;  sum             4  200[BANK1 ] float 
  2547 ;;  line_index      2  206[BANK1 ] int 
  2548 ;;  last_arg_sta    2  194[BANK1 ] int 
  2549 ;;  num_argument    2  179[BANK1 ] int 
  2550 ;;  float_flag      1  187[BANK1 ] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2560 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;      Locals:         0       0     157       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;      Totals:         0       0     161       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;Total ram usage:      161 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    8
  2567 ;; This function calls:
  2568 ;;		___fladd
  2569 ;;		___lmul
  2570 ;;		___xxtofl
  2571 ;;		_atof
  2572 ;;		_atoi
  2573 ;;		_isdigit
  2574 ;;		_printf
  2575 ;;		_strcmp
  2576 ;;		_strlen
  2577 ;; This function is called by:
  2578 ;;		_ringBufferPull
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text2
  2583  010F40                     __ptext2:
  2584                           	opt stack 0
  2585  010F40                     _ringBufferLUT:
  2586                           	opt stack 21
  2587                           
  2588                           ;ring_buffer_LUT.c: 13: if((0 == strcmp(line, "LED On"))) {
  2589                           
  2590                           ;incstack = 0
  2591  010F40  C12F  F08B         	movff	ringBufferLUT@line,strcmp@s1
  2592  010F44  C130  F08C         	movff	ringBufferLUT@line+1,strcmp@s1+1
  2593  010F48  0EDF               	movlw	low STR_6
  2594  010F4A  0100               	movlb	0	; () banked
  2595  010F4C  6F8D               	movwf	strcmp@s2& (0+255),b
  2596  010F4E  0EFF               	movlw	high STR_6
  2597  010F50  6F8E               	movwf	(strcmp@s2+1)& (0+255),b
  2598  010F52  ECB1  F0A5         	call	_strcmp	;wreg free
  2599  010F56  0100               	movlb	0	; () banked
  2600  010F58  518B               	movf	?_strcmp& (0+255),w,b
  2601  010F5A  118C               	iorwf	(?_strcmp+1)& (0+255),w,b
  2602  010F5C  A4D8               	btfss	status,2,c
  2603  010F5E  D017               	goto	l348
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;ring_buffer_LUT.c: 16: LATCbits.LATC7 = 1;
  2607  010F60  8E7B               	bsf	3963,7,c	;volatile
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;ring_buffer_LUT.c: 19: printf("\n\r");
  2611  010F62  0E8A               	movlw	low (STR_16+41)
  2612  010F64  0101               	movlb	1	; () banked
  2613  010F66  6F10               	movwf	printf@f& (0+255),b
  2614  010F68  0EFF               	movlw	high (STR_16+41)
  2615  010F6A  6F11               	movwf	(printf@f+1)& (0+255),b
  2616  010F6C  EC00  F080         	call	_printf	;wreg free
  2617                           
  2618                           ;ring_buffer_LUT.c: 21: printf("    RC7 Set\n\r");
  2619  010F70  0EBE               	movlw	low STR_8
  2620  010F72  0101               	movlb	1	; () banked
  2621  010F74  6F10               	movwf	printf@f& (0+255),b
  2622  010F76  0EFF               	movlw	high STR_8
  2623  010F78  6F11               	movwf	(printf@f+1)& (0+255),b
  2624  010F7A  EC00  F080         	call	_printf	;wreg free
  2625                           
  2626                           ;ring_buffer_LUT.c: 24: printf("\n\r");
  2627  010F7E  0E8A               	movlw	low (STR_16+41)
  2628  010F80  0101               	movlb	1	; () banked
  2629  010F82  6F10               	movwf	printf@f& (0+255),b
  2630  010F84  0EFF               	movlw	high (STR_16+41)
  2631  010F86  6F11               	movwf	(printf@f+1)& (0+255),b
  2632  010F88  EC00  F080         	call	_printf	;wreg free
  2633                           
  2634                           ;ring_buffer_LUT.c: 26: }
  2635  010F8C  0012               	return	
  2636  010F8E                     l348:
  2637                           
  2638                           ;ring_buffer_LUT.c: 30: else if((0 == strcmp(line, "LED Off"))) {
  2639  010F8E  C12F  F08B         	movff	ringBufferLUT@line,strcmp@s1
  2640  010F92  C130  F08C         	movff	ringBufferLUT@line+1,strcmp@s1+1
  2641  010F96  0ED7               	movlw	low STR_10
  2642  010F98  0100               	movlb	0	; () banked
  2643  010F9A  6F8D               	movwf	strcmp@s2& (0+255),b
  2644  010F9C  0EFF               	movlw	high STR_10
  2645  010F9E  6F8E               	movwf	(strcmp@s2+1)& (0+255),b
  2646  010FA0  ECB1  F0A5         	call	_strcmp	;wreg free
  2647  010FA4  0100               	movlb	0	; () banked
  2648  010FA6  518B               	movf	?_strcmp& (0+255),w,b
  2649  010FA8  118C               	iorwf	(?_strcmp+1)& (0+255),w,b
  2650  010FAA  A4D8               	btfss	status,2,c
  2651  010FAC  D017               	goto	l350
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;ring_buffer_LUT.c: 33: LATCbits.LATC7 = 0;
  2655  010FAE  9E7B               	bcf	3963,7,c	;volatile
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;ring_buffer_LUT.c: 36: printf("\n\r");
  2659  010FB0  0E8A               	movlw	low (STR_16+41)
  2660  010FB2  0101               	movlb	1	; () banked
  2661  010FB4  6F10               	movwf	printf@f& (0+255),b
  2662  010FB6  0EFF               	movlw	high (STR_16+41)
  2663  010FB8  6F11               	movwf	(printf@f+1)& (0+255),b
  2664  010FBA  EC00  F080         	call	_printf	;wreg free
  2665                           
  2666                           ;ring_buffer_LUT.c: 38: printf("    RC7 Cleared\n\r");
  2667  010FBE  0EAC               	movlw	low STR_12
  2668  010FC0  0101               	movlb	1	; () banked
  2669  010FC2  6F10               	movwf	printf@f& (0+255),b
  2670  010FC4  0EFF               	movlw	high STR_12
  2671  010FC6  6F11               	movwf	(printf@f+1)& (0+255),b
  2672  010FC8  EC00  F080         	call	_printf	;wreg free
  2673                           
  2674                           ;ring_buffer_LUT.c: 41: printf("\n\r");
  2675  010FCC  0E8A               	movlw	low (STR_16+41)
  2676  010FCE  0101               	movlb	1	; () banked
  2677  010FD0  6F10               	movwf	printf@f& (0+255),b
  2678  010FD2  0EFF               	movlw	high (STR_16+41)
  2679  010FD4  6F11               	movwf	(printf@f+1)& (0+255),b
  2680  010FD6  EC00  F080         	call	_printf	;wreg free
  2681                           
  2682                           ;ring_buffer_LUT.c: 43: }
  2683  010FDA  0012               	return	
  2684  010FDC                     l350:
  2685                           
  2686                           ;ring_buffer_LUT.c: 46: else if ((0 == strcmp(line, "Talk to me"))) {
  2687  010FDC  C12F  F08B         	movff	ringBufferLUT@line,strcmp@s1
  2688  010FE0  C130  F08C         	movff	ringBufferLUT@line+1,strcmp@s1+1
  2689  010FE4  0ECC               	movlw	low STR_14
  2690  010FE6  0100               	movlb	0	; () banked
  2691  010FE8  6F8D               	movwf	strcmp@s2& (0+255),b
  2692  010FEA  0EFF               	movlw	high STR_14
  2693  010FEC  6F8E               	movwf	(strcmp@s2+1)& (0+255),b
  2694  010FEE  ECB1  F0A5         	call	_strcmp	;wreg free
  2695  010FF2  0100               	movlb	0	; () banked
  2696  010FF4  518B               	movf	?_strcmp& (0+255),w,b
  2697  010FF6  118C               	iorwf	(?_strcmp+1)& (0+255),w,b
  2698  010FF8  A4D8               	btfss	status,2,c
  2699  010FFA  D02B               	goto	l352
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;ring_buffer_LUT.c: 49: printf("\n\r");
  2703  010FFC  0E8A               	movlw	low (STR_16+41)
  2704  010FFE  0101               	movlb	1	; () banked
  2705  011000  6F10               	movwf	printf@f& (0+255),b
  2706  011002  0EFF               	movlw	high (STR_16+41)
  2707  011004  6F11               	movwf	(printf@f+1)& (0+255),b
  2708  011006  EC00  F080         	call	_printf	;wreg free
  2709                           
  2710                           ;ring_buffer_LUT.c: 51: printf("    Well, I've got a lot to talk about...\n\r");
  2711  01100A  0E61               	movlw	low STR_16
  2712  01100C  0101               	movlb	1	; () banked
  2713  01100E  6F10               	movwf	printf@f& (0+255),b
  2714  011010  0EFF               	movlw	high STR_16
  2715  011012  6F11               	movwf	(printf@f+1)& (0+255),b
  2716  011014  EC00  F080         	call	_printf	;wreg free
  2717                           
  2718                           ;ring_buffer_LUT.c: 52: printf("    First thing's first, I'm talking to you through a "
  2719                           ;ring_buffer_LUT.c: 53: "UART to USB bridge, produced by FTDI\n\r");
  2720  011018  0E65               	movlw	low STR_17
  2721  01101A  0101               	movlb	1	; () banked
  2722  01101C  6F10               	movwf	printf@f& (0+255),b
  2723  01101E  0EFE               	movlw	high STR_17
  2724  011020  6F11               	movwf	(printf@f+1)& (0+255),b
  2725  011022  EC00  F080         	call	_printf	;wreg free
  2726                           
  2727                           ;ring_buffer_LUT.c: 54: printf("    The part number is FT232\n\r");
  2728  011026  0E8D               	movlw	low STR_18
  2729  011028  0101               	movlb	1	; () banked
  2730  01102A  6F10               	movwf	printf@f& (0+255),b
  2731  01102C  0EFF               	movlw	high STR_18
  2732  01102E  6F11               	movwf	(printf@f+1)& (0+255),b
  2733  011030  EC00  F080         	call	_printf	;wreg free
  2734                           
  2735                           ;ring_buffer_LUT.c: 55: printf("    I'm a PIC18F67K40, and I don't know my revision numb
      +                          er yet\r\n");
  2736  011034  0EC2               	movlw	low STR_19
  2737  011036  0101               	movlb	1	; () banked
  2738  011038  6F10               	movwf	printf@f& (0+255),b
  2739  01103A  0EFE               	movlw	high STR_19
  2740  01103C  6F11               	movwf	(printf@f+1)& (0+255),b
  2741  01103E  EC00  F080         	call	_printf	;wreg free
  2742                           
  2743                           ;ring_buffer_LUT.c: 58: printf("\n\r");
  2744  011042  0E8A               	movlw	low (STR_16+41)
  2745  011044  0101               	movlb	1	; () banked
  2746  011046  6F10               	movwf	printf@f& (0+255),b
  2747  011048  0EFF               	movlw	high (STR_16+41)
  2748  01104A  6F11               	movwf	(printf@f+1)& (0+255),b
  2749  01104C  EC00  F080         	call	_printf	;wreg free
  2750                           
  2751                           ;ring_buffer_LUT.c: 60: }
  2752  011050  0012               	return	
  2753  011052                     l352:
  2754                           
  2755                           ;ring_buffer_LUT.c: 64: else if ((line[0] == (int) 'A') &&
  2756                           ;ring_buffer_LUT.c: 65: (line[1] == (int) 'd') &&
  2757                           ;ring_buffer_LUT.c: 66: (line[2] == (int) 'd')) {
  2758  011052  C12F  FFD9         	movff	ringBufferLUT@line,fsr2l
  2759  011056  C130  FFDA         	movff	ringBufferLUT@line+1,fsr2h
  2760  01105A  0E41               	movlw	65
  2761  01105C  18DE               	xorwf	postinc2,w,c
  2762  01105E  A4D8               	btfss	status,2,c
  2763  011060  D12E               	goto	l354
  2764  011062  0101               	movlb	1	; () banked
  2765  011064  EE20 F001          	lfsr	2,1
  2766  011068  512F               	movf	ringBufferLUT@line& (0+255),w,b
  2767  01106A  26D9               	addwf	fsr2l,f,c
  2768  01106C  5130               	movf	(ringBufferLUT@line+1)& (0+255),w,b
  2769  01106E  22DA               	addwfc	fsr2h,f,c
  2770  011070  0E64               	movlw	100
  2771  011072  18DE               	xorwf	postinc2,w,c
  2772  011074  A4D8               	btfss	status,2,c
  2773  011076  D123               	goto	l354
  2774                           
  2775                           ; BSR set to: 1
  2776  011078  EE20 F002          	lfsr	2,2
  2777  01107C  512F               	movf	ringBufferLUT@line& (0+255),w,b
  2778  01107E  26D9               	addwf	fsr2l,f,c
  2779  011080  5130               	movf	(ringBufferLUT@line+1)& (0+255),w,b
  2780  011082  22DA               	addwfc	fsr2h,f,c
  2781  011084  0E64               	movlw	100
  2782  011086  18DE               	xorwf	postinc2,w,c
  2783  011088  A4D8               	btfss	status,2,c
  2784  01108A  D119               	goto	l354
  2785                           
  2786                           ; BSR set to: 1
  2787                           ;ring_buffer_LUT.c: 69: int num_arguments = 0;
  2788  01108C  0E00               	movlw	0
  2789  01108E  6FB4               	movwf	(ringBufferLUT@num_arguments+1)& (0+255),b
  2790  011090  0E00               	movlw	0
  2791  011092  6FB3               	movwf	ringBufferLUT@num_arguments& (0+255),b
  2792                           
  2793                           ;ring_buffer_LUT.c: 72: float sum = 0.0;
  2794  011094  0E00               	movlw	0
  2795  011096  6FC8               	movwf	ringBufferLUT@sum& (0+255),b
  2796  011098  0E00               	movlw	0
  2797  01109A  6FC9               	movwf	(ringBufferLUT@sum+1)& (0+255),b
  2798  01109C  0E00               	movlw	0
  2799  01109E  6FCA               	movwf	(ringBufferLUT@sum+2)& (0+255),b
  2800  0110A0  0E00               	movlw	0
  2801  0110A2  6FCB               	movwf	(ringBufferLUT@sum+3)& (0+255),b
  2802                           
  2803                           ;ring_buffer_LUT.c: 75: for (int index = 0; index < strlen(line); index++) {
  2804  0110A4  0E00               	movlw	0
  2805  0110A6  6FC1               	movwf	(ringBufferLUT@index+1)& (0+255),b
  2806  0110A8  0E00               	movlw	0
  2807  0110AA  6FC0               	movwf	ringBufferLUT@index& (0+255),b
  2808  0110AC  D00E               	goto	l355
  2809  0110AE                     
  2810                           ; BSR set to: 1
  2811                           ;ring_buffer_LUT.c: 78: if((int) line[index] == 32) {
  2812                           
  2813                           ; BSR set to: 1
  2814  0110AE  51C0               	movf	ringBufferLUT@index& (0+255),w,b
  2815  0110B0  252F               	addwf	ringBufferLUT@line& (0+255),w,b
  2816  0110B2  6ED9               	movwf	fsr2l,c
  2817  0110B4  51C1               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  2818  0110B6  2130               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  2819  0110B8  6EDA               	movwf	fsr2h,c
  2820  0110BA  0E20               	movlw	32
  2821  0110BC  18DE               	xorwf	postinc2,w,c
  2822  0110BE  A4D8               	btfss	status,2,c
  2823  0110C0  D002               	goto	l357
  2824                           
  2825                           ; BSR set to: 1
  2826                           ;ring_buffer_LUT.c: 80: num_arguments++;
  2827  0110C2  4BB3               	infsnz	ringBufferLUT@num_arguments& (0+255),f,b
  2828  0110C4  2BB4               	incf	(ringBufferLUT@num_arguments+1)& (0+255),f,b
  2829  0110C6                     l357:
  2830                           
  2831                           ; BSR set to: 1
  2832  0110C6  4BC0               	infsnz	ringBufferLUT@index& (0+255),f,b
  2833  0110C8  2BC1               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  2834  0110CA                     l355:
  2835                           
  2836                           ; BSR set to: 1
  2837                           
  2838                           ; BSR set to: 1
  2839  0110CA  C12F  F08B         	movff	ringBufferLUT@line,strlen@s
  2840  0110CE  C130  F08C         	movff	ringBufferLUT@line+1,strlen@s+1
  2841  0110D2  EC63  F0A6         	call	_strlen	;wreg free
  2842  0110D6  0100               	movlb	0	; () banked
  2843  0110D8  518B               	movf	?_strlen& (0+255),w,b
  2844  0110DA  0101               	movlb	1	; () banked
  2845  0110DC  5DC0               	subwf	ringBufferLUT@index& (0+255),w,b
  2846  0110DE  0100               	movlb	0	; () banked
  2847  0110E0  518C               	movf	(?_strlen+1)& (0+255),w,b
  2848  0110E2  0101               	movlb	1	; () banked
  2849  0110E4  59C1               	subwfb	(ringBufferLUT@index+1)& (0+255),w,b
  2850  0110E6  A0D8               	btfss	status,0,c
  2851  0110E8  D7E2               	goto	l356
  2852                           
  2853                           ; BSR set to: 1
  2854                           ;ring_buffer_LUT.c: 82: }
  2855                           ;ring_buffer_LUT.c: 84: }
  2856                           ;ring_buffer_LUT.c: 88: int line_index = 4;
  2857                           
  2858                           ; BSR set to: 1
  2859  0110EA  0E00               	movlw	0
  2860  0110EC  6FCF               	movwf	(ringBufferLUT@line_index+1)& (0+255),b
  2861  0110EE  0E04               	movlw	4
  2862  0110F0  6FCE               	movwf	ringBufferLUT@line_index& (0+255),b
  2863                           
  2864                           ;ring_buffer_LUT.c: 92: char arg_str[64];
  2865                           ;ring_buffer_LUT.c: 95: int last_arg_start;
  2866                           ;ring_buffer_LUT.c: 98: uint8_t float_flag = 0;
  2867  0110F2  0E00               	movlw	0
  2868  0110F4  6FBB               	movwf	ringBufferLUT@float_flag& (0+255),b
  2869                           
  2870                           ;ring_buffer_LUT.c: 101: for (int arg_index = 0; arg_index < num_arguments; arg_index++)
      +                           {
  2871  0110F6  0E00               	movlw	0
  2872  0110F8  6FB6               	movwf	(ringBufferLUT@arg_index+1)& (0+255),b
  2873  0110FA  0E00               	movlw	0
  2874  0110FC  6FB5               	movwf	ringBufferLUT@arg_index& (0+255),b
  2875  0110FE  D0B8               	goto	l359
  2876  011100                     l360:
  2877                           
  2878                           ; BSR set to: 1
  2879                           ;ring_buffer_LUT.c: 103: last_arg_start = line_index;
  2880  011100  C1CE  F1C2         	movff	ringBufferLUT@line_index,ringBufferLUT@last_arg_start
  2881  011104  C1CF  F1C3         	movff	ringBufferLUT@line_index+1,ringBufferLUT@last_arg_start+1
  2882                           
  2883                           ;ring_buffer_LUT.c: 106: while(isdigit(line[line_index]) ||
  2884                           ;ring_buffer_LUT.c: 107: line[line_index] == (int) '-' ||
  2885                           ;ring_buffer_LUT.c: 108: line[line_index] == (int)'.') {
  2886  011108  D029               	goto	l363
  2887  01110A                     
  2888                           ;ring_buffer_LUT.c: 111: arg_str[line_index - last_arg_start] = line[line_index];
  2889                           
  2890                           ; BSR set to: 1
  2891  01110A  0101               	movlb	1	; () banked
  2892  01110C  51CE               	movf	ringBufferLUT@line_index& (0+255),w,b
  2893  01110E  252F               	addwf	ringBufferLUT@line& (0+255),w,b
  2894  011110  6ED9               	movwf	fsr2l,c
  2895  011112  51CF               	movf	(ringBufferLUT@line_index+1)& (0+255),w,b
  2896  011114  2130               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  2897  011116  6EDA               	movwf	fsr2h,c
  2898  011118  C1C2  F131         	movff	ringBufferLUT@last_arg_start,??_ringBufferLUT
  2899  01111C  C1C3  F132         	movff	ringBufferLUT@last_arg_start+1,??_ringBufferLUT+1
  2900  011120  1F31               	comf	??_ringBufferLUT& (0+255),f,b
  2901  011122  1F32               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  2902  011124  4B31               	infsnz	??_ringBufferLUT& (0+255),f,b
  2903  011126  2B32               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  2904  011128  51CE               	movf	ringBufferLUT@line_index& (0+255),w,b
  2905  01112A  2731               	addwf	??_ringBufferLUT& (0+255),f,b
  2906  01112C  51CF               	movf	(ringBufferLUT@line_index+1)& (0+255),w,b
  2907  01112E  2332               	addwfc	(??_ringBufferLUT+1)& (0+255),f,b
  2908  011130  0E73               	movlw	low ringBufferLUT@arg_str
  2909  011132  2531               	addwf	??_ringBufferLUT& (0+255),w,b
  2910  011134  6EE1               	movwf	fsr1l,c
  2911  011136  0E01               	movlw	high ringBufferLUT@arg_str
  2912  011138  2132               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  2913  01113A  6EE2               	movwf	fsr1h,c
  2914  01113C  CFDF FFE7          	movff	indf2,indf1
  2915                           
  2916                           ; BSR set to: 1
  2917                           ;ring_buffer_LUT.c: 114: line_index++;
  2918  011140  4BCE               	infsnz	ringBufferLUT@line_index& (0+255),f,b
  2919  011142  2BCF               	incf	(ringBufferLUT@line_index+1)& (0+255),f,b
  2920                           
  2921                           ; BSR set to: 1
  2922                           ;ring_buffer_LUT.c: 117: if(line[line_index] == (int)'.') {
  2923  011144  51CE               	movf	ringBufferLUT@line_index& (0+255),w,b
  2924  011146  252F               	addwf	ringBufferLUT@line& (0+255),w,b
  2925  011148  6ED9               	movwf	fsr2l,c
  2926  01114A  51CF               	movf	(ringBufferLUT@line_index+1)& (0+255),w,b
  2927  01114C  2130               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  2928  01114E  6EDA               	movwf	fsr2h,c
  2929  011150  0E2E               	movlw	46
  2930  011152  18DE               	xorwf	postinc2,w,c
  2931  011154  A4D8               	btfss	status,2,c
  2932  011156  D002               	goto	l363
  2933                           
  2934                           ; BSR set to: 1
  2935                           ;ring_buffer_LUT.c: 119: float_flag = 1;
  2936  011158  0E01               	movlw	1
  2937  01115A  6FBB               	movwf	ringBufferLUT@float_flag& (0+255),b
  2938  01115C                     l363:
  2939                           
  2940                           ; BSR set to: 1
  2941                           
  2942                           ; BSR set to: 1
  2943                           
  2944                           ; BSR set to: 1
  2945  01115C  51CE               	movf	ringBufferLUT@line_index& (0+255),w,b
  2946  01115E  252F               	addwf	ringBufferLUT@line& (0+255),w,b
  2947  011160  6ED9               	movwf	fsr2l,c
  2948  011162  51CF               	movf	(ringBufferLUT@line_index+1)& (0+255),w,b
  2949  011164  2130               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  2950  011166  6EDA               	movwf	fsr2h,c
  2951  011168  50DF               	movf	indf2,w,c
  2952  01116A  EC6B  F0A7         	call	_isdigit
  2953  01116E  B0D8               	btfsc	status,0,c
  2954  011170  D7CC               	goto	l362
  2955  011172  0101               	movlb	1	; () banked
  2956  011174  51CE               	movf	ringBufferLUT@line_index& (0+255),w,b
  2957  011176  252F               	addwf	ringBufferLUT@line& (0+255),w,b
  2958  011178  6ED9               	movwf	fsr2l,c
  2959  01117A  51CF               	movf	(ringBufferLUT@line_index+1)& (0+255),w,b
  2960  01117C  2130               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  2961  01117E  6EDA               	movwf	fsr2h,c
  2962  011180  0E2D               	movlw	45
  2963  011182  18DE               	xorwf	postinc2,w,c
  2964  011184  B4D8               	btfsc	status,2,c
  2965  011186  D7C1               	goto	l362
  2966                           
  2967                           ; BSR set to: 1
  2968  011188  51CE               	movf	ringBufferLUT@line_index& (0+255),w,b
  2969  01118A  252F               	addwf	ringBufferLUT@line& (0+255),w,b
  2970  01118C  6ED9               	movwf	fsr2l,c
  2971  01118E  51CF               	movf	(ringBufferLUT@line_index+1)& (0+255),w,b
  2972  011190  2130               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  2973  011192  6EDA               	movwf	fsr2h,c
  2974  011194  0E2E               	movlw	46
  2975  011196  18DE               	xorwf	postinc2,w,c
  2976  011198  B4D8               	btfsc	status,2,c
  2977  01119A  D7B7               	goto	l362
  2978                           
  2979                           ; BSR set to: 1
  2980                           ;ring_buffer_LUT.c: 121: }
  2981                           ;ring_buffer_LUT.c: 123: }
  2982                           ;ring_buffer_LUT.c: 126: line_index++;
  2983                           
  2984                           ; BSR set to: 1
  2985  01119C  4BCE               	infsnz	ringBufferLUT@line_index& (0+255),f,b
  2986  01119E  2BCF               	incf	(ringBufferLUT@line_index+1)& (0+255),f,b
  2987                           
  2988                           ; BSR set to: 1
  2989                           ;ring_buffer_LUT.c: 129: arg_str[line_index - last_arg_start - 1] = '\0';
  2990  0111A0  0E01               	movlw	1
  2991  0111A2  25C2               	addwf	ringBufferLUT@last_arg_start& (0+255),w,b
  2992  0111A4  6F31               	movwf	??_ringBufferLUT& (0+255),b
  2993  0111A6  0E00               	movlw	0
  2994  0111A8  21C3               	addwfc	(ringBufferLUT@last_arg_start+1)& (0+255),w,b
  2995  0111AA  6F32               	movwf	(??_ringBufferLUT+1)& (0+255),b
  2996  0111AC  1F31               	comf	??_ringBufferLUT& (0+255),f,b
  2997  0111AE  1F32               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  2998  0111B0  4B31               	infsnz	??_ringBufferLUT& (0+255),f,b
  2999  0111B2  2B32               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  3000  0111B4  51CE               	movf	ringBufferLUT@line_index& (0+255),w,b
  3001  0111B6  2731               	addwf	??_ringBufferLUT& (0+255),f,b
  3002  0111B8  51CF               	movf	(ringBufferLUT@line_index+1)& (0+255),w,b
  3003  0111BA  2332               	addwfc	(??_ringBufferLUT+1)& (0+255),f,b
  3004  0111BC  0E73               	movlw	low ringBufferLUT@arg_str
  3005  0111BE  2531               	addwf	??_ringBufferLUT& (0+255),w,b
  3006  0111C0  6ED9               	movwf	fsr2l,c
  3007  0111C2  0E01               	movlw	high ringBufferLUT@arg_str
  3008  0111C4  2132               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  3009  0111C6  6EDA               	movwf	fsr2h,c
  3010  0111C8  0E00               	movlw	0
  3011  0111CA  6EDF               	movwf	indf2,c
  3012                           
  3013                           ; BSR set to: 1
  3014                           ;ring_buffer_LUT.c: 132: last_arg_start = line_index;
  3015  0111CC  C1CE  F1C2         	movff	ringBufferLUT@line_index,ringBufferLUT@last_arg_start
  3016  0111D0  C1CF  F1C3         	movff	ringBufferLUT@line_index+1,ringBufferLUT@last_arg_start+1
  3017                           
  3018                           ; BSR set to: 1
  3019                           ;ring_buffer_LUT.c: 135: if (float_flag == 0) {
  3020  0111D4  51BB               	movf	ringBufferLUT@float_flag& (0+255),w,b
  3021  0111D6  A4D8               	btfss	status,2,c
  3022  0111D8  D01A               	goto	l365
  3023                           
  3024                           ; BSR set to: 1
  3025                           ;ring_buffer_LUT.c: 138: sum += atof(arg_str);
  3026  0111DA  C1C8  F0C2         	movff	ringBufferLUT@sum,___fladd@b
  3027  0111DE  C1C9  F0C3         	movff	ringBufferLUT@sum+1,___fladd@b+1
  3028  0111E2  C1CA  F0C4         	movff	ringBufferLUT@sum+2,___fladd@b+2
  3029  0111E6  C1CB  F0C5         	movff	ringBufferLUT@sum+3,___fladd@b+3
  3030  0111EA  0E73               	movlw	low ringBufferLUT@arg_str
  3031  0111EC  0100               	movlb	0	; () banked
  3032  0111EE  6FBE               	movwf	atof@s& (0+255),b
  3033  0111F0  0E01               	movlw	high ringBufferLUT@arg_str
  3034  0111F2  6FBF               	movwf	(atof@s+1)& (0+255),b
  3035  0111F4  EC1D  F0A7         	call	_atof	;wreg free
  3036  0111F8  C0BE  F0C6         	movff	?_atof,___fladd@a
  3037  0111FC  C0BF  F0C7         	movff	?_atof+1,___fladd@a+1
  3038  011200  C0C0  F0C8         	movff	?_atof+2,___fladd@a+2
  3039  011204  C0C1  F0C9         	movff	?_atof+3,___fladd@a+3
  3040  011208  EC5E  F091         	call	___fladd	;wreg free
  3041  01120C  D026               	goto	L1
  3042  01120E                     l365:
  3043                           
  3044                           ;ring_buffer_LUT.c: 143: else {
  3045                           ;ring_buffer_LUT.c: 146: sum += atoi(arg_str);
  3046  01120E  C1C8  F0C2         	movff	ringBufferLUT@sum,___fladd@b
  3047  011212  C1C9  F0C3         	movff	ringBufferLUT@sum+1,___fladd@b+1
  3048  011216  C1CA  F0C4         	movff	ringBufferLUT@sum+2,___fladd@b+2
  3049  01121A  C1CB  F0C5         	movff	ringBufferLUT@sum+3,___fladd@b+3
  3050  01121E  0E73               	movlw	low ringBufferLUT@arg_str
  3051  011220  0100               	movlb	0	; () banked
  3052  011222  6F91               	movwf	atoi@s& (0+255),b
  3053  011224  0E01               	movlw	high ringBufferLUT@arg_str
  3054  011226  6F92               	movwf	(atoi@s+1)& (0+255),b
  3055  011228  EC69  F0A2         	call	_atoi	;wreg free
  3056  01122C  0100               	movlb	0	; () banked
  3057  01122E  C091  F098         	movff	?_atoi,___xxtofl@val
  3058  011232  C092  F099         	movff	?_atoi+1,___xxtofl@val+1
  3059  011236  0E00               	movlw	0
  3060  011238  BF99               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3061  01123A  0EFF               	movlw	-1
  3062  01123C  6F9A               	movwf	(___xxtofl@val+2)& (0+255),b
  3063  01123E  6F9B               	movwf	(___xxtofl@val+3)& (0+255),b
  3064  011240  0E01               	movlw	1
  3065  011242  EC20  F09C         	call	___xxtofl
  3066  011246  C098  F0C6         	movff	?___xxtofl,___fladd@a
  3067  01124A  C099  F0C7         	movff	?___xxtofl+1,___fladd@a+1
  3068  01124E  C09A  F0C8         	movff	?___xxtofl+2,___fladd@a+2
  3069  011252  C09B  F0C9         	movff	?___xxtofl+3,___fladd@a+3
  3070  011256  EC5E  F091         	call	___fladd	;wreg free
  3071  01125A                     L1:
  3072  01125A  C0C2  F1C8         	movff	?___fladd,ringBufferLUT@sum
  3073  01125E  C0C3  F1C9         	movff	?___fladd+1,ringBufferLUT@sum+1
  3074  011262  C0C4  F1CA         	movff	?___fladd+2,ringBufferLUT@sum+2
  3075  011266  C0C5  F1CB         	movff	?___fladd+3,ringBufferLUT@sum+3
  3076  01126A  0101               	movlb	1	; () banked
  3077  01126C  4BB5               	infsnz	ringBufferLUT@arg_index& (0+255),f,b
  3078  01126E  2BB6               	incf	(ringBufferLUT@arg_index+1)& (0+255),f,b
  3079  011270                     l359:
  3080                           
  3081                           ; BSR set to: 1
  3082                           
  3083                           ; BSR set to: 1
  3084  011270  51B3               	movf	ringBufferLUT@num_arguments& (0+255),w,b
  3085  011272  5DB5               	subwf	ringBufferLUT@arg_index& (0+255),w,b
  3086  011274  51B6               	movf	(ringBufferLUT@arg_index+1)& (0+255),w,b
  3087  011276  0A80               	xorlw	128
  3088  011278  6F31               	movwf	??_ringBufferLUT& (0+255),b
  3089  01127A  51B4               	movf	(ringBufferLUT@num_arguments+1)& (0+255),w,b
  3090  01127C  0A80               	xorlw	128
  3091  01127E  5931               	subwfb	??_ringBufferLUT& (0+255),w,b
  3092  011280  A0D8               	btfss	status,0,c
  3093  011282  D73E               	goto	l360
  3094                           
  3095                           ; BSR set to: 1
  3096                           ;ring_buffer_LUT.c: 148: }
  3097                           ;ring_buffer_LUT.c: 150: }
  3098                           ;ring_buffer_LUT.c: 153: printf("\n\r");
  3099                           
  3100                           ; BSR set to: 1
  3101  011284  0E8A               	movlw	low (STR_16+41)
  3102  011286  6F10               	movwf	printf@f& (0+255),b
  3103  011288  0EFF               	movlw	high (STR_16+41)
  3104  01128A  6F11               	movwf	(printf@f+1)& (0+255),b
  3105  01128C  EC00  F080         	call	_printf	;wreg free
  3106                           
  3107                           ;ring_buffer_LUT.c: 154: printf("    The sum of all arguments entered is %f\n\r", sum);
  3108  011290  0E34               	movlw	low STR_22
  3109  011292  0101               	movlb	1	; () banked
  3110  011294  6F10               	movwf	printf@f& (0+255),b
  3111  011296  0EFF               	movlw	high STR_22
  3112  011298  6F11               	movwf	(printf@f+1)& (0+255),b
  3113  01129A  C1C8  F112         	movff	ringBufferLUT@sum,?_printf+2
  3114  01129E  C1C9  F113         	movff	ringBufferLUT@sum+1,?_printf+3
  3115  0112A2  C1CA  F114         	movff	ringBufferLUT@sum+2,?_printf+4
  3116  0112A6  C1CB  F115         	movff	ringBufferLUT@sum+3,?_printf+5
  3117  0112AA  EC00  F080         	call	_printf	;wreg free
  3118                           
  3119                           ;ring_buffer_LUT.c: 155: printf("\n\r");
  3120  0112AE  0E8A               	movlw	low (STR_16+41)
  3121  0112B0  0101               	movlb	1	; () banked
  3122  0112B2  6F10               	movwf	printf@f& (0+255),b
  3123  0112B4  0EFF               	movlw	high (STR_16+41)
  3124  0112B6  6F11               	movwf	(printf@f+1)& (0+255),b
  3125  0112B8  EC00  F080         	call	_printf	;wreg free
  3126                           
  3127                           ;ring_buffer_LUT.c: 157: }
  3128  0112BC  0012               	return	
  3129  0112BE                     l354:
  3130                           
  3131                           ;ring_buffer_LUT.c: 160: else if ((line[0] == (int) 'M') &&
  3132                           ;ring_buffer_LUT.c: 161: (line[1] == (int) 'u') &&
  3133                           ;ring_buffer_LUT.c: 162: (line[2] == (int) 'l') &&
  3134                           ;ring_buffer_LUT.c: 163: (line[3] == (int) 't')) {
  3135  0112BE  C12F  FFD9         	movff	ringBufferLUT@line,fsr2l
  3136  0112C2  C130  FFDA         	movff	ringBufferLUT@line+1,fsr2h
  3137  0112C6  0E4D               	movlw	77
  3138  0112C8  18DE               	xorwf	postinc2,w,c
  3139  0112CA  A4D8               	btfss	status,2,c
  3140  0112CC  D0F8               	goto	l369
  3141  0112CE  0101               	movlb	1	; () banked
  3142  0112D0  EE20 F001          	lfsr	2,1
  3143  0112D4  512F               	movf	ringBufferLUT@line& (0+255),w,b
  3144  0112D6  26D9               	addwf	fsr2l,f,c
  3145  0112D8  5130               	movf	(ringBufferLUT@line+1)& (0+255),w,b
  3146  0112DA  22DA               	addwfc	fsr2h,f,c
  3147  0112DC  0E75               	movlw	117
  3148  0112DE  18DE               	xorwf	postinc2,w,c
  3149  0112E0  A4D8               	btfss	status,2,c
  3150  0112E2  D0ED               	goto	l369
  3151                           
  3152                           ; BSR set to: 1
  3153  0112E4  EE20 F002          	lfsr	2,2
  3154  0112E8  512F               	movf	ringBufferLUT@line& (0+255),w,b
  3155  0112EA  26D9               	addwf	fsr2l,f,c
  3156  0112EC  5130               	movf	(ringBufferLUT@line+1)& (0+255),w,b
  3157  0112EE  22DA               	addwfc	fsr2h,f,c
  3158  0112F0  0E6C               	movlw	108
  3159  0112F2  18DE               	xorwf	postinc2,w,c
  3160  0112F4  A4D8               	btfss	status,2,c
  3161  0112F6  D0E3               	goto	l369
  3162                           
  3163                           ; BSR set to: 1
  3164  0112F8  EE20 F003          	lfsr	2,3
  3165  0112FC  512F               	movf	ringBufferLUT@line& (0+255),w,b
  3166  0112FE  26D9               	addwf	fsr2l,f,c
  3167  011300  5130               	movf	(ringBufferLUT@line+1)& (0+255),w,b
  3168  011302  22DA               	addwfc	fsr2h,f,c
  3169  011304  0E74               	movlw	116
  3170  011306  18DE               	xorwf	postinc2,w,c
  3171  011308  A4D8               	btfss	status,2,c
  3172  01130A  D0D9               	goto	l369
  3173                           
  3174                           ; BSR set to: 1
  3175                           ;ring_buffer_LUT.c: 166: int num_arguments = 0;
  3176  01130C  0E00               	movlw	0
  3177  01130E  6FB8               	movwf	(ringBufferLUT@num_arguments_681+1)& (0+255),b
  3178  011310  0E00               	movlw	0
  3179  011312  6FB7               	movwf	ringBufferLUT@num_arguments_681& (0+255),b
  3180                           
  3181                           ;ring_buffer_LUT.c: 169: long long prod = 1;
  3182  011314  0E01               	movlw	1
  3183  011316  6FBC               	movwf	ringBufferLUT@prod& (0+255),b
  3184  011318  0E00               	movlw	0
  3185  01131A  6FBD               	movwf	(ringBufferLUT@prod+1)& (0+255),b
  3186  01131C  0E00               	movlw	0
  3187  01131E  6FBE               	movwf	(ringBufferLUT@prod+2)& (0+255),b
  3188  011320  0E00               	movlw	0
  3189  011322  6FBF               	movwf	(ringBufferLUT@prod+3)& (0+255),b
  3190                           
  3191                           ;ring_buffer_LUT.c: 172: for (int index = 0; index < strlen(line); index++) {
  3192  011324  0E00               	movlw	0
  3193  011326  6FC5               	movwf	(ringBufferLUT@index_683+1)& (0+255),b
  3194  011328  0E00               	movlw	0
  3195  01132A  6FC4               	movwf	ringBufferLUT@index_683& (0+255),b
  3196  01132C  D00E               	goto	l370
  3197  01132E                     
  3198                           ; BSR set to: 1
  3199                           ;ring_buffer_LUT.c: 175: if((int) line[index] == 32) {
  3200                           
  3201                           ; BSR set to: 1
  3202  01132E  51C4               	movf	ringBufferLUT@index_683& (0+255),w,b
  3203  011330  252F               	addwf	ringBufferLUT@line& (0+255),w,b
  3204  011332  6ED9               	movwf	fsr2l,c
  3205  011334  51C5               	movf	(ringBufferLUT@index_683+1)& (0+255),w,b
  3206  011336  2130               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  3207  011338  6EDA               	movwf	fsr2h,c
  3208  01133A  0E20               	movlw	32
  3209  01133C  18DE               	xorwf	postinc2,w,c
  3210  01133E  A4D8               	btfss	status,2,c
  3211  011340  D002               	goto	l372
  3212                           
  3213                           ; BSR set to: 1
  3214                           ;ring_buffer_LUT.c: 177: num_arguments++;
  3215  011342  4BB7               	infsnz	ringBufferLUT@num_arguments_681& (0+255),f,b
  3216  011344  2BB8               	incf	(ringBufferLUT@num_arguments_681+1)& (0+255),f,b
  3217  011346                     l372:
  3218                           
  3219                           ; BSR set to: 1
  3220  011346  4BC4               	infsnz	ringBufferLUT@index_683& (0+255),f,b
  3221  011348  2BC5               	incf	(ringBufferLUT@index_683+1)& (0+255),f,b
  3222  01134A                     l370:
  3223                           
  3224                           ; BSR set to: 1
  3225                           
  3226                           ; BSR set to: 1
  3227  01134A  C12F  F08B         	movff	ringBufferLUT@line,strlen@s
  3228  01134E  C130  F08C         	movff	ringBufferLUT@line+1,strlen@s+1
  3229  011352  EC63  F0A6         	call	_strlen	;wreg free
  3230  011356  0100               	movlb	0	; () banked
  3231  011358  518B               	movf	?_strlen& (0+255),w,b
  3232  01135A  0101               	movlb	1	; () banked
  3233  01135C  5DC4               	subwf	ringBufferLUT@index_683& (0+255),w,b
  3234  01135E  0100               	movlb	0	; () banked
  3235  011360  518C               	movf	(?_strlen+1)& (0+255),w,b
  3236  011362  0101               	movlb	1	; () banked
  3237  011364  59C5               	subwfb	(ringBufferLUT@index_683+1)& (0+255),w,b
  3238  011366  A0D8               	btfss	status,0,c
  3239  011368  D7E2               	goto	l371
  3240                           
  3241                           ; BSR set to: 1
  3242                           ;ring_buffer_LUT.c: 179: }
  3243                           ;ring_buffer_LUT.c: 181: }
  3244                           ;ring_buffer_LUT.c: 185: int line_index = 5;
  3245                           
  3246                           ; BSR set to: 1
  3247  01136A  0E00               	movlw	0
  3248  01136C  6FCD               	movwf	(ringBufferLUT@line_index_684+1)& (0+255),b
  3249  01136E  0E05               	movlw	5
  3250  011370  6FCC               	movwf	ringBufferLUT@line_index_684& (0+255),b
  3251                           
  3252                           ;ring_buffer_LUT.c: 189: char arg_str[64];
  3253                           ;ring_buffer_LUT.c: 192: int last_arg_start;
  3254                           ;ring_buffer_LUT.c: 195: for (int arg_index = 0; arg_index < num_arguments; arg_index++)
      +                           {
  3255  011372  0E00               	movlw	0
  3256  011374  6FBA               	movwf	(ringBufferLUT@arg_index_687+1)& (0+255),b
  3257  011376  0E00               	movlw	0
  3258  011378  6FB9               	movwf	ringBufferLUT@arg_index_687& (0+255),b
  3259  01137A  D07A               	goto	l374
  3260  01137C                     l375:
  3261                           
  3262                           ; BSR set to: 1
  3263                           ;ring_buffer_LUT.c: 197: last_arg_start = line_index;
  3264  01137C  C1CC  F1C6         	movff	ringBufferLUT@line_index_684,ringBufferLUT@last_arg_start_686
  3265  011380  C1CD  F1C7         	movff	ringBufferLUT@line_index_684+1,ringBufferLUT@last_arg_start_686+1
  3266                           
  3267                           ;ring_buffer_LUT.c: 200: while(isdigit(line[line_index]) || line[line_index] == (int) '-
      +                          ') {
  3268  011384  D01D               	goto	l376
  3269  011386                     
  3270                           ;ring_buffer_LUT.c: 203: arg_str[line_index - last_arg_start] = line[line_index];
  3271                           
  3272                           ; BSR set to: 1
  3273  011386  0101               	movlb	1	; () banked
  3274  011388  51CC               	movf	ringBufferLUT@line_index_684& (0+255),w,b
  3275  01138A  252F               	addwf	ringBufferLUT@line& (0+255),w,b
  3276  01138C  6ED9               	movwf	fsr2l,c
  3277  01138E  51CD               	movf	(ringBufferLUT@line_index_684+1)& (0+255),w,b
  3278  011390  2130               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  3279  011392  6EDA               	movwf	fsr2h,c
  3280  011394  C1C6  F131         	movff	ringBufferLUT@last_arg_start_686,??_ringBufferLUT
  3281  011398  C1C7  F132         	movff	ringBufferLUT@last_arg_start_686+1,??_ringBufferLUT+1
  3282  01139C  1F31               	comf	??_ringBufferLUT& (0+255),f,b
  3283  01139E  1F32               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  3284  0113A0  4B31               	infsnz	??_ringBufferLUT& (0+255),f,b
  3285  0113A2  2B32               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  3286  0113A4  51CC               	movf	ringBufferLUT@line_index_684& (0+255),w,b
  3287  0113A6  2731               	addwf	??_ringBufferLUT& (0+255),f,b
  3288  0113A8  51CD               	movf	(ringBufferLUT@line_index_684+1)& (0+255),w,b
  3289  0113AA  2332               	addwfc	(??_ringBufferLUT+1)& (0+255),f,b
  3290  0113AC  0E33               	movlw	low ringBufferLUT@arg_str_685
  3291  0113AE  2531               	addwf	??_ringBufferLUT& (0+255),w,b
  3292  0113B0  6EE1               	movwf	fsr1l,c
  3293  0113B2  0E01               	movlw	high ringBufferLUT@arg_str_685
  3294  0113B4  2132               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  3295  0113B6  6EE2               	movwf	fsr1h,c
  3296  0113B8  CFDF FFE7          	movff	indf2,indf1
  3297                           
  3298                           ; BSR set to: 1
  3299                           ;ring_buffer_LUT.c: 206: line_index++;
  3300  0113BC  4BCC               	infsnz	ringBufferLUT@line_index_684& (0+255),f,b
  3301  0113BE  2BCD               	incf	(ringBufferLUT@line_index_684+1)& (0+255),f,b
  3302  0113C0                     l376:
  3303                           
  3304                           ; BSR set to: 1
  3305                           
  3306                           ; BSR set to: 1
  3307  0113C0  51CC               	movf	ringBufferLUT@line_index_684& (0+255),w,b
  3308  0113C2  252F               	addwf	ringBufferLUT@line& (0+255),w,b
  3309  0113C4  6ED9               	movwf	fsr2l,c
  3310  0113C6  51CD               	movf	(ringBufferLUT@line_index_684+1)& (0+255),w,b
  3311  0113C8  2130               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  3312  0113CA  6EDA               	movwf	fsr2h,c
  3313  0113CC  50DF               	movf	indf2,w,c
  3314  0113CE  EC6B  F0A7         	call	_isdigit
  3315  0113D2  B0D8               	btfsc	status,0,c
  3316  0113D4  D7D8               	goto	l377
  3317  0113D6  0101               	movlb	1	; () banked
  3318  0113D8  51CC               	movf	ringBufferLUT@line_index_684& (0+255),w,b
  3319  0113DA  252F               	addwf	ringBufferLUT@line& (0+255),w,b
  3320  0113DC  6ED9               	movwf	fsr2l,c
  3321  0113DE  51CD               	movf	(ringBufferLUT@line_index_684+1)& (0+255),w,b
  3322  0113E0  2130               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  3323  0113E2  6EDA               	movwf	fsr2h,c
  3324  0113E4  0E2D               	movlw	45
  3325  0113E6  18DE               	xorwf	postinc2,w,c
  3326  0113E8  B4D8               	btfsc	status,2,c
  3327  0113EA  D7CD               	goto	l377
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;ring_buffer_LUT.c: 208: }
  3331                           ;ring_buffer_LUT.c: 211: line_index++;
  3332                           
  3333                           ; BSR set to: 1
  3334  0113EC  4BCC               	infsnz	ringBufferLUT@line_index_684& (0+255),f,b
  3335  0113EE  2BCD               	incf	(ringBufferLUT@line_index_684+1)& (0+255),f,b
  3336                           
  3337                           ; BSR set to: 1
  3338                           ;ring_buffer_LUT.c: 214: arg_str[line_index - last_arg_start - 1] = '\0';
  3339  0113F0  0E01               	movlw	1
  3340  0113F2  25C6               	addwf	ringBufferLUT@last_arg_start_686& (0+255),w,b
  3341  0113F4  6F31               	movwf	??_ringBufferLUT& (0+255),b
  3342  0113F6  0E00               	movlw	0
  3343  0113F8  21C7               	addwfc	(ringBufferLUT@last_arg_start_686+1)& (0+255),w,b
  3344  0113FA  6F32               	movwf	(??_ringBufferLUT+1)& (0+255),b
  3345  0113FC  1F31               	comf	??_ringBufferLUT& (0+255),f,b
  3346  0113FE  1F32               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  3347  011400  4B31               	infsnz	??_ringBufferLUT& (0+255),f,b
  3348  011402  2B32               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  3349  011404  51CC               	movf	ringBufferLUT@line_index_684& (0+255),w,b
  3350  011406  2731               	addwf	??_ringBufferLUT& (0+255),f,b
  3351  011408  51CD               	movf	(ringBufferLUT@line_index_684+1)& (0+255),w,b
  3352  01140A  2332               	addwfc	(??_ringBufferLUT+1)& (0+255),f,b
  3353  01140C  0E33               	movlw	low ringBufferLUT@arg_str_685
  3354  01140E  2531               	addwf	??_ringBufferLUT& (0+255),w,b
  3355  011410  6ED9               	movwf	fsr2l,c
  3356  011412  0E01               	movlw	high ringBufferLUT@arg_str_685
  3357  011414  2132               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  3358  011416  6EDA               	movwf	fsr2h,c
  3359  011418  0E00               	movlw	0
  3360  01141A  6EDF               	movwf	indf2,c
  3361                           
  3362                           ; BSR set to: 1
  3363                           ;ring_buffer_LUT.c: 217: last_arg_start = line_index;
  3364  01141C  C1CC  F1C6         	movff	ringBufferLUT@line_index_684,ringBufferLUT@last_arg_start_686
  3365  011420  C1CD  F1C7         	movff	ringBufferLUT@line_index_684+1,ringBufferLUT@last_arg_start_686+1
  3366                           
  3367                           ; BSR set to: 1
  3368                           ;ring_buffer_LUT.c: 220: prod *= atoi(arg_str);
  3369  011424  C1BC  F098         	movff	ringBufferLUT@prod,___lmul@multiplier
  3370  011428  C1BD  F099         	movff	ringBufferLUT@prod+1,___lmul@multiplier+1
  3371  01142C  C1BE  F09A         	movff	ringBufferLUT@prod+2,___lmul@multiplier+2
  3372  011430  C1BF  F09B         	movff	ringBufferLUT@prod+3,___lmul@multiplier+3
  3373  011434  0E33               	movlw	low ringBufferLUT@arg_str_685
  3374  011436  0100               	movlb	0	; () banked
  3375  011438  6F91               	movwf	atoi@s& (0+255),b
  3376  01143A  0E01               	movlw	high ringBufferLUT@arg_str_685
  3377  01143C  6F92               	movwf	(atoi@s+1)& (0+255),b
  3378  01143E  EC69  F0A2         	call	_atoi	;wreg free
  3379  011442  0100               	movlb	0	; () banked
  3380  011444  C091  F09C         	movff	?_atoi,___lmul@multiplicand
  3381  011448  C092  F09D         	movff	?_atoi+1,___lmul@multiplicand+1
  3382  01144C  0E00               	movlw	0
  3383  01144E  BF9D               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
  3384  011450  0EFF               	movlw	-1
  3385  011452  6F9E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3386  011454  6F9F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3387  011456  EC85  F0A5         	call	___lmul	;wreg free
  3388  01145A  C098  F1BC         	movff	?___lmul,ringBufferLUT@prod
  3389  01145E  C099  F1BD         	movff	?___lmul+1,ringBufferLUT@prod+1
  3390  011462  C09A  F1BE         	movff	?___lmul+2,ringBufferLUT@prod+2
  3391  011466  C09B  F1BF         	movff	?___lmul+3,ringBufferLUT@prod+3
  3392  01146A  0101               	movlb	1	; () banked
  3393  01146C  4BB9               	infsnz	ringBufferLUT@arg_index_687& (0+255),f,b
  3394  01146E  2BBA               	incf	(ringBufferLUT@arg_index_687+1)& (0+255),f,b
  3395  011470                     l374:
  3396                           
  3397                           ; BSR set to: 1
  3398                           
  3399                           ; BSR set to: 1
  3400  011470  51B7               	movf	ringBufferLUT@num_arguments_681& (0+255),w,b
  3401  011472  5DB9               	subwf	ringBufferLUT@arg_index_687& (0+255),w,b
  3402  011474  51BA               	movf	(ringBufferLUT@arg_index_687+1)& (0+255),w,b
  3403  011476  0A80               	xorlw	128
  3404  011478  6F31               	movwf	??_ringBufferLUT& (0+255),b
  3405  01147A  51B8               	movf	(ringBufferLUT@num_arguments_681+1)& (0+255),w,b
  3406  01147C  0A80               	xorlw	128
  3407  01147E  5931               	subwfb	??_ringBufferLUT& (0+255),w,b
  3408  011480  A0D8               	btfss	status,0,c
  3409  011482  D77C               	goto	l375
  3410                           
  3411                           ; BSR set to: 1
  3412                           ;ring_buffer_LUT.c: 222: }
  3413                           ;ring_buffer_LUT.c: 225: printf("\n\r");
  3414                           
  3415                           ; BSR set to: 1
  3416  011484  0E8A               	movlw	low (STR_16+41)
  3417  011486  6F10               	movwf	printf@f& (0+255),b
  3418  011488  0EFF               	movlw	high (STR_16+41)
  3419  01148A  6F11               	movwf	(printf@f+1)& (0+255),b
  3420  01148C  EC00  F080         	call	_printf	;wreg free
  3421                           
  3422                           ;ring_buffer_LUT.c: 226: printf("    The product of all arguments entered is %d\n\r", pr
      +                          od);
  3423  011490  0E03               	movlw	low STR_25
  3424  011492  0101               	movlb	1	; () banked
  3425  011494  6F10               	movwf	printf@f& (0+255),b
  3426  011496  0EFF               	movlw	high STR_25
  3427  011498  6F11               	movwf	(printf@f+1)& (0+255),b
  3428  01149A  C1BC  F112         	movff	ringBufferLUT@prod,?_printf+2
  3429  01149E  C1BD  F113         	movff	ringBufferLUT@prod+1,?_printf+3
  3430  0114A2  C1BE  F114         	movff	ringBufferLUT@prod+2,?_printf+4
  3431  0114A6  C1BF  F115         	movff	ringBufferLUT@prod+3,?_printf+5
  3432  0114AA  EC00  F080         	call	_printf	;wreg free
  3433                           
  3434                           ;ring_buffer_LUT.c: 227: printf("\n\r");
  3435  0114AE  0E8A               	movlw	low (STR_16+41)
  3436  0114B0  0101               	movlb	1	; () banked
  3437  0114B2  6F10               	movwf	printf@f& (0+255),b
  3438  0114B4  0EFF               	movlw	high (STR_16+41)
  3439  0114B6  6F11               	movwf	(printf@f+1)& (0+255),b
  3440  0114B8  EC00  F080         	call	_printf	;wreg free
  3441                           
  3442                           ;ring_buffer_LUT.c: 229: }
  3443  0114BC  0012               	return	
  3444  0114BE                     l369:
  3445                           
  3446                           ;ring_buffer_LUT.c: 234: else if((0 == strcmp(line, "Reset"))) {
  3447  0114BE  C12F  F08B         	movff	ringBufferLUT@line,strcmp@s1
  3448  0114C2  C130  F08C         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3449  0114C6  0EE6               	movlw	low STR_27
  3450  0114C8  0100               	movlb	0	; () banked
  3451  0114CA  6F8D               	movwf	strcmp@s2& (0+255),b
  3452  0114CC  0EFF               	movlw	high STR_27
  3453  0114CE  6F8E               	movwf	(strcmp@s2+1)& (0+255),b
  3454  0114D0  ECB1  F0A5         	call	_strcmp	;wreg free
  3455  0114D4  0100               	movlb	0	; () banked
  3456  0114D6  518B               	movf	?_strcmp& (0+255),w,b
  3457  0114D8  118C               	iorwf	(?_strcmp+1)& (0+255),w,b
  3458  0114DA  A4D8               	btfss	status,2,c
  3459  0114DC  D010               	goto	l381
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;ring_buffer_LUT.c: 237: printf("\033[2J");
  3463  0114DE  0EF1               	movlw	low STR_2
  3464  0114E0  0101               	movlb	1	; () banked
  3465  0114E2  6F10               	movwf	printf@f& (0+255),b
  3466  0114E4  0EFF               	movlw	high STR_2
  3467  0114E6  6F11               	movwf	(printf@f+1)& (0+255),b
  3468  0114E8  EC00  F080         	call	_printf	;wreg free
  3469                           
  3470                           ;ring_buffer_LUT.c: 240: printf("\033[H");
  3471  0114EC  0EF6               	movlw	low STR_3
  3472  0114EE  0101               	movlb	1	; () banked
  3473  0114F0  6F10               	movwf	printf@f& (0+255),b
  3474  0114F2  0EFF               	movlw	high STR_3
  3475  0114F4  6F11               	movwf	(printf@f+1)& (0+255),b
  3476  0114F6  EC00  F080         	call	_printf	;wreg free
  3477  0114FA  00FF               	reset		;# 
  3478                           
  3479                           ;ring_buffer_LUT.c: 245: }
  3480  0114FC  0012               	return	
  3481  0114FE                     l381:
  3482                           
  3483                           ;ring_buffer_LUT.c: 248: else if((0 == strcmp(line, "Help"))) {
  3484  0114FE  C12F  F08B         	movff	ringBufferLUT@line,strcmp@s1
  3485  011502  C130  F08C         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3486  011506  0EEC               	movlw	low STR_30
  3487  011508  0100               	movlb	0	; () banked
  3488  01150A  6F8D               	movwf	strcmp@s2& (0+255),b
  3489  01150C  0EFF               	movlw	high STR_30
  3490  01150E  6F8E               	movwf	(strcmp@s2+1)& (0+255),b
  3491  011510  ECB1  F0A5         	call	_strcmp	;wreg free
  3492  011514  0100               	movlb	0	; () banked
  3493  011516  518B               	movf	?_strcmp& (0+255),w,b
  3494  011518  118C               	iorwf	(?_strcmp+1)& (0+255),w,b
  3495  01151A  A4D8               	btfss	status,2,c
  3496  01151C  0012               	return	
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;ring_buffer_LUT.c: 251: printf("\n\r");
  3500  01151E  0E8A               	movlw	low (STR_16+41)
  3501  011520  0101               	movlb	1	; () banked
  3502  011522  6F10               	movwf	printf@f& (0+255),b
  3503  011524  0EFF               	movlw	high (STR_16+41)
  3504  011526  6F11               	movwf	(printf@f+1)& (0+255),b
  3505  011528  EC00  F080         	call	_printf	;wreg free
  3506                           
  3507                           ;ring_buffer_LUT.c: 253: printf("   List of supported commands so far:\n\r"
  3508                           ;ring_buffer_LUT.c: 254: "   LED On: Turns LED On\n\r"
  3509                           ;ring_buffer_LUT.c: 255: "   LED Off: Turns LED Off\n\r"
  3510                           ;ring_buffer_LUT.c: 256: "   Talk to me: Spews a bunch out\n\r"
  3511                           ;ring_buffer_LUT.c: 257: "   Add: Adds all arguments following command\n\r"
  3512                           ;ring_buffer_LUT.c: 258: "   Multiply: Multiplies all arguments\n\r"
  3513                           ;ring_buffer_LUT.c: 260: "   Reset: Clears the screen and resets the micro\n\r"
  3514                           ;ring_buffer_LUT.c: 262: "   Help: This message, lists commands\n\r");
  3515  01152C  0E8B               	movlw	low STR_32
  3516  01152E  0101               	movlb	1	; () banked
  3517  011530  6F10               	movwf	printf@f& (0+255),b
  3518  011532  0EFC               	movlw	high STR_32
  3519  011534  6F11               	movwf	(printf@f+1)& (0+255),b
  3520  011536  EC00  F080         	call	_printf	;wreg free
  3521                           
  3522                           ;ring_buffer_LUT.c: 265: printf("\n\r");
  3523  01153A  0E8A               	movlw	low (STR_16+41)
  3524  01153C  0101               	movlb	1	; () banked
  3525  01153E  6F10               	movwf	printf@f& (0+255),b
  3526  011540  0EFF               	movlw	high (STR_16+41)
  3527  011542  6F11               	movwf	(printf@f+1)& (0+255),b
  3528  011544  EC00  F080         	call	_printf	;wreg free
  3529  011548  0012               	return	
  3530  01154A                     __end_of_ringBufferLUT:
  3531                           	opt stack 0
  3532                           intcon	equ	0xFF2
  3533                           postinc0	equ	0xFEE
  3534                           wreg	equ	0xFE8
  3535                           indf1	equ	0xFE7
  3536                           fsr1h	equ	0xFE2
  3537                           fsr1l	equ	0xFE1
  3538                           indf2	equ	0xFDF
  3539                           postinc2	equ	0xFDE
  3540                           fsr2h	equ	0xFDA
  3541                           fsr2l	equ	0xFD9
  3542                           status	equ	0xFD8
  3543                           
  3544 ;; *************** function _strlen *****************
  3545 ;; Defined at:
  3546 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  s               2   43[BANK0 ] PTR const unsigned char 
  3549 ;;		 -> line(64), 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  cp              2   47[BANK0 ] PTR const unsigned char 
  3552 ;;		 -> line(64), 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  2   43[BANK0 ] unsigned int 
  3555 ;; Registers used:
  3556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3562 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3563 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3564 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3565 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3566 ;;Total ram usage:        6 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    5
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_ringBufferPull
  3573 ;;		_ringBufferLUT
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text3
  3578  014CC6                     __ptext3:
  3579                           	opt stack 0
  3580  014CC6                     _strlen:
  3581                           	opt stack 24
  3582                           
  3583                           ;incstack = 0
  3584  014CC6  C08B  F08F         	movff	strlen@s,strlen@cp
  3585  014CCA  C08C  F090         	movff	strlen@s+1,strlen@cp+1
  3586  014CCE  D003               	goto	l1156
  3587  014CD0  0100               	movlb	0	; () banked
  3588  014CD2  4B8F               	infsnz	strlen@cp& (0+255),f,b
  3589  014CD4  2B90               	incf	(strlen@cp+1)& (0+255),f,b
  3590  014CD6                     l1156:
  3591                           
  3592                           ; BSR set to: 0
  3593  014CD6  C08F  FFD9         	movff	strlen@cp,fsr2l
  3594  014CDA  C090  FFDA         	movff	strlen@cp+1,fsr2h
  3595  014CDE  50DF               	movf	indf2,w,c
  3596  014CE0  A4D8               	btfss	status,2,c
  3597  014CE2  D7F6               	goto	l1157
  3598  014CE4  C08B  F08D         	movff	strlen@s,??_strlen
  3599  014CE8  C08C  F08E         	movff	strlen@s+1,??_strlen+1
  3600  014CEC  0100               	movlb	0	; () banked
  3601  014CEE  1F8D               	comf	??_strlen& (0+255),f,b
  3602  014CF0  1F8E               	comf	(??_strlen+1)& (0+255),f,b
  3603  014CF2  4B8D               	infsnz	??_strlen& (0+255),f,b
  3604  014CF4  2B8E               	incf	(??_strlen+1)& (0+255),f,b
  3605  014CF6  518F               	movf	strlen@cp& (0+255),w,b
  3606  014CF8  258D               	addwf	??_strlen& (0+255),w,b
  3607  014CFA  6F8B               	movwf	?_strlen& (0+255),b
  3608  014CFC  5190               	movf	(strlen@cp+1)& (0+255),w,b
  3609  014CFE  218E               	addwfc	(??_strlen+1)& (0+255),w,b
  3610  014D00  6F8C               	movwf	(?_strlen+1)& (0+255),b
  3611  014D02  0012               	return	
  3612  014D04                     __end_of_strlen:
  3613                           	opt stack 0
  3614                           intcon	equ	0xFF2
  3615                           postinc0	equ	0xFEE
  3616                           wreg	equ	0xFE8
  3617                           indf1	equ	0xFE7
  3618                           fsr1h	equ	0xFE2
  3619                           fsr1l	equ	0xFE1
  3620                           indf2	equ	0xFDF
  3621                           postinc2	equ	0xFDE
  3622                           fsr2h	equ	0xFDA
  3623                           fsr2l	equ	0xFD9
  3624                           status	equ	0xFD8
  3625                           
  3626 ;; *************** function _strcmp *****************
  3627 ;; Defined at:
  3628 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  s1              2   43[BANK0 ] PTR const unsigned char 
  3631 ;;		 -> line(64), 
  3632 ;;  s2              2   45[BANK0 ] PTR const unsigned char 
  3633 ;;		 -> STR_30(5), STR_27(6), STR_14(11), STR_10(8), 
  3634 ;;		 -> STR_6(7), 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  r               1   48[BANK0 ] char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  2   43[BANK0 ] int 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3647 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3648 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3649 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3650 ;;Total ram usage:        6 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    5
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_ringBufferLUT
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text4
  3661  014B62                     __ptext4:
  3662                           	opt stack 0
  3663  014B62                     _strcmp:
  3664                           	opt stack 23
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;incstack = 0
  3668  014B62  D005               	goto	l1148
  3669  014B64  0100               	movlb	0	; () banked
  3670  014B66  4B8B               	infsnz	strcmp@s1& (0+255),f,b
  3671  014B68  2B8C               	incf	(strcmp@s1+1)& (0+255),f,b
  3672  014B6A  4B8D               	infsnz	strcmp@s2& (0+255),f,b
  3673  014B6C  2B8E               	incf	(strcmp@s2+1)& (0+255),f,b
  3674  014B6E                     l1148:
  3675                           
  3676                           ; BSR set to: 0
  3677  014B6E  C08B  FFD9         	movff	strcmp@s1,fsr2l
  3678  014B72  C08C  FFDA         	movff	strcmp@s1+1,fsr2h
  3679  014B76  50DF               	movf	indf2,w,c
  3680  014B78  0100               	movlb	0	; () banked
  3681  014B7A  6F8F               	movwf	??_strcmp& (0+255),b
  3682  014B7C  C08D  FFF6         	movff	strcmp@s2,tblptrl
  3683  014B80  C08E  FFF7         	movff	strcmp@s2+1,tblptrh
  3684  014B84                     	if	0	;tblptru may be non-zero
  3685  014B84                     	endif
  3686  014B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3687  014B84  0E00               	movlw	low (__mediumconst shr (0+16))
  3688  014B86  6EF8               	movwf	tblptru,c
  3689  014B88                     	endif
  3690  014B88  0008               	tblrd		*
  3691  014B8A  50F5               	movf	tablat,w,c
  3692  014B8C  0800               	sublw	0
  3693  014B8E  258F               	addwf	??_strcmp& (0+255),w,b
  3694  014B90  6F90               	movwf	strcmp@r& (0+255),b
  3695  014B92  5190               	movf	strcmp@r& (0+255),w,b
  3696  014B94  A4D8               	btfss	status,2,c
  3697  014B96  D007               	goto	u7230
  3698                           
  3699                           ; BSR set to: 0
  3700  014B98  C08B  FFD9         	movff	strcmp@s1,fsr2l
  3701  014B9C  C08C  FFDA         	movff	strcmp@s1+1,fsr2h
  3702  014BA0  50DF               	movf	indf2,w,c
  3703  014BA2  A4D8               	btfss	status,2,c
  3704  014BA4  D7DF               	goto	l1149
  3705  014BA6                     u7230:
  3706                           
  3707                           ; BSR set to: 0
  3708                           
  3709                           ; BSR set to: 0
  3710                           
  3711                           ; BSR set to: 0
  3712  014BA6  5190               	movf	strcmp@r& (0+255),w,b
  3713  014BA8  6F8B               	movwf	?_strcmp& (0+255),b
  3714  014BAA  6B8C               	clrf	(?_strcmp+1)& (0+255),b
  3715  014BAC  BF8B               	btfsc	?_strcmp& (0+255),7,b
  3716  014BAE  078C               	decf	(?_strcmp+1)& (0+255),f,b
  3717  014BB0  0012               	return	
  3718  014BB2                     __end_of_strcmp:
  3719                           	opt stack 0
  3720                           tblptru	equ	0xFF8
  3721                           tblptrh	equ	0xFF7
  3722                           tblptrl	equ	0xFF6
  3723                           tablat	equ	0xFF5
  3724                           intcon	equ	0xFF2
  3725                           postinc0	equ	0xFEE
  3726                           wreg	equ	0xFE8
  3727                           indf1	equ	0xFE7
  3728                           fsr1h	equ	0xFE2
  3729                           fsr1l	equ	0xFE1
  3730                           indf2	equ	0xFDF
  3731                           postinc2	equ	0xFDE
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function _atoi *****************
  3737 ;; Defined at:
  3738 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  s               2   49[BANK0 ] PTR const unsigned char 
  3741 ;;		 -> ringBufferLUT@arg_str_685(64), ringBufferLUT@arg_str(64), 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  a               2   54[BANK0 ] int 
  3744 ;;  sign            1   53[BANK0 ] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  2   49[BANK0 ] int 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3755 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3756 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;Total ram usage:        7 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    6
  3761 ;; This function calls:
  3762 ;;		___wmul
  3763 ;;		_isdigit
  3764 ;; This function is called by:
  3765 ;;		_ringBufferLUT
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text5
  3770  0144D2                     __ptext5:
  3771                           	opt stack 0
  3772  0144D2                     _atoi:
  3773                           	opt stack 22
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;incstack = 0
  3777  0144D2  D003               	goto	l701
  3778  0144D4  0100               	movlb	0	; () banked
  3779  0144D6  4B91               	infsnz	atoi@s& (0+255),f,b
  3780  0144D8  2B92               	incf	(atoi@s+1)& (0+255),f,b
  3781  0144DA                     l701:
  3782                           
  3783                           ; BSR set to: 0
  3784  0144DA  C091  FFD9         	movff	atoi@s,fsr2l
  3785  0144DE  C092  FFDA         	movff	atoi@s+1,fsr2h
  3786  0144E2  0E20               	movlw	32
  3787  0144E4  18DE               	xorwf	postinc2,w,c
  3788  0144E6  B4D8               	btfsc	status,2,c
  3789  0144E8  D7F5               	goto	l702
  3790  0144EA  C091  FFD9         	movff	atoi@s,fsr2l
  3791  0144EE  C092  FFDA         	movff	atoi@s+1,fsr2h
  3792  0144F2  0E09               	movlw	9
  3793  0144F4  18DE               	xorwf	postinc2,w,c
  3794  0144F6  B4D8               	btfsc	status,2,c
  3795  0144F8  D7ED               	goto	l702
  3796  0144FA  0E00               	movlw	0
  3797  0144FC  0100               	movlb	0	; () banked
  3798  0144FE  6F97               	movwf	(atoi@a+1)& (0+255),b
  3799  014500  0E00               	movlw	0
  3800  014502  6F96               	movwf	atoi@a& (0+255),b
  3801  014504  0E00               	movlw	0
  3802  014506  6F95               	movwf	atoi@sign& (0+255),b
  3803                           
  3804                           ; BSR set to: 0
  3805  014508  C091  FFD9         	movff	atoi@s,fsr2l
  3806  01450C  C092  FFDA         	movff	atoi@s+1,fsr2h
  3807  014510  0E2D               	movlw	45
  3808  014512  18DE               	xorwf	postinc2,w,c
  3809  014514  A4D8               	btfss	status,2,c
  3810  014516  D002               	goto	l704
  3811                           
  3812                           ; BSR set to: 0
  3813  014518  2B95               	incf	atoi@sign& (0+255),f,b
  3814  01451A  D026               	goto	l5716
  3815  01451C                     l704:
  3816                           
  3817                           ; BSR set to: 0
  3818                           
  3819                           ; BSR set to: 0
  3820  01451C  C091  FFD9         	movff	atoi@s,fsr2l
  3821  014520  C092  FFDA         	movff	atoi@s+1,fsr2h
  3822  014524  0E2B               	movlw	43
  3823  014526  18DE               	xorwf	postinc2,w,c
  3824  014528  A4D8               	btfss	status,2,c
  3825  01452A  D020               	goto	l707
  3826  01452C  D01D               	goto	l5716
  3827  01452E                     
  3828                           ; BSR set to: 0
  3829  01452E  C096  F08B         	movff	atoi@a,___wmul@multiplier
  3830  014532  C097  F08C         	movff	atoi@a+1,___wmul@multiplier+1
  3831  014536  0E00               	movlw	0
  3832  014538  0100               	movlb	0	; () banked
  3833  01453A  6F8E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3834  01453C  0E0A               	movlw	10
  3835  01453E  6F8D               	movwf	___wmul@multiplicand& (0+255),b
  3836  014540  EC31  F0A7         	call	___wmul	;wreg free
  3837  014544  C091  FFD9         	movff	atoi@s,fsr2l
  3838  014548  C092  FFDA         	movff	atoi@s+1,fsr2h
  3839  01454C  50DF               	movf	indf2,w,c
  3840  01454E  0100               	movlb	0	; () banked
  3841  014550  6F93               	movwf	??_atoi& (0+255),b
  3842  014552  6B94               	clrf	(??_atoi+1)& (0+255),b
  3843  014554  518B               	movf	?___wmul& (0+255),w,b
  3844  014556  2793               	addwf	??_atoi& (0+255),f,b
  3845  014558  518C               	movf	(?___wmul+1)& (0+255),w,b
  3846  01455A  2394               	addwfc	(??_atoi+1)& (0+255),f,b
  3847  01455C  0ED0               	movlw	208
  3848  01455E  2593               	addwf	??_atoi& (0+255),w,b
  3849  014560  6F96               	movwf	atoi@a& (0+255),b
  3850  014562  0EFF               	movlw	255
  3851  014564  2194               	addwfc	(??_atoi+1)& (0+255),w,b
  3852  014566  6F97               	movwf	(atoi@a+1)& (0+255),b
  3853  014568                     l5716:
  3854                           
  3855                           ; BSR set to: 0
  3856  014568  4B91               	infsnz	atoi@s& (0+255),f,b
  3857  01456A  2B92               	incf	(atoi@s+1)& (0+255),f,b
  3858  01456C                     l707:
  3859                           
  3860                           ; BSR set to: 0
  3861                           
  3862                           ; BSR set to: 0
  3863  01456C  C091  FFD9         	movff	atoi@s,fsr2l
  3864  014570  C092  FFDA         	movff	atoi@s+1,fsr2h
  3865  014574  50DF               	movf	indf2,w,c
  3866  014576  EC6B  F0A7         	call	_isdigit
  3867  01457A  B0D8               	btfsc	status,0,c
  3868  01457C  D7D8               	goto	l708
  3869  01457E  0100               	movlb	0	; () banked
  3870  014580  5195               	movf	atoi@sign& (0+255),w,b
  3871  014582  B4D8               	btfsc	status,2,c
  3872  014584  D00D               	goto	l710
  3873                           
  3874                           ; BSR set to: 0
  3875  014586  C096  F093         	movff	atoi@a,??_atoi
  3876  01458A  C097  F094         	movff	atoi@a+1,??_atoi+1
  3877  01458E  1F93               	comf	??_atoi& (0+255),f,b
  3878  014590  1F94               	comf	(??_atoi+1)& (0+255),f,b
  3879  014592  4B93               	infsnz	??_atoi& (0+255),f,b
  3880  014594  2B94               	incf	(??_atoi+1)& (0+255),f,b
  3881  014596  C093  F091         	movff	??_atoi,?_atoi
  3882  01459A  C094  F092         	movff	??_atoi+1,?_atoi+1
  3883  01459E  0012               	return	
  3884  0145A0                     l710:
  3885                           
  3886                           ; BSR set to: 0
  3887  0145A0  C096  F091         	movff	atoi@a,?_atoi
  3888  0145A4  C097  F092         	movff	atoi@a+1,?_atoi+1
  3889                           
  3890                           ; BSR set to: 0
  3891  0145A8  0012               	return		;funcret
  3892  0145AA                     __end_of_atoi:
  3893                           	opt stack 0
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           intcon	equ	0xFF2
  3899                           postinc0	equ	0xFEE
  3900                           wreg	equ	0xFE8
  3901                           indf1	equ	0xFE7
  3902                           fsr1h	equ	0xFE2
  3903                           fsr1l	equ	0xFE1
  3904                           indf2	equ	0xFDF
  3905                           postinc2	equ	0xFDE
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function _atof *****************
  3911 ;; Defined at:
  3912 ;;		line 200 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atof.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  s               2   94[BANK0 ] PTR const unsigned char 
  3915 ;;		 -> ringBufferLUT@arg_str(64), 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  4   94[BANK0 ] PTR const unsigned char 
  3920 ;; Registers used:
  3921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;Total ram usage:        4 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    7
  3934 ;; This function calls:
  3935 ;;		_strtod
  3936 ;; This function is called by:
  3937 ;;		_ringBufferLUT
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text6
  3942  014E3A                     __ptext6:
  3943                           	opt stack 0
  3944  014E3A                     _atof:
  3945                           	opt stack 21
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;incstack = 0
  3949  014E3A  C0BE  F0B2         	movff	atof@s,strtod@s
  3950  014E3E  C0BF  F0B3         	movff	atof@s+1,strtod@s+1
  3951  014E42  0E00               	movlw	0
  3952  014E44  0100               	movlb	0	; () banked
  3953  014E46  6FB4               	movwf	strtod@res& (0+255),b
  3954  014E48  0E00               	movlw	0
  3955  014E4A  6FB5               	movwf	(strtod@res+1)& (0+255),b
  3956  014E4C  EC37  F08F         	call	_strtod	;wreg free
  3957  014E50  C0B2  F0BE         	movff	?_strtod,?_atof
  3958  014E54  C0B3  F0BF         	movff	?_strtod+1,?_atof+1
  3959  014E58  C0B4  F0C0         	movff	?_strtod+2,?_atof+2
  3960  014E5C  C0B5  F0C1         	movff	?_strtod+3,?_atof+3
  3961  014E60  0012               	return	
  3962  014E62                     __end_of_atof:
  3963                           	opt stack 0
  3964                           tblptru	equ	0xFF8
  3965                           tblptrh	equ	0xFF7
  3966                           tblptrl	equ	0xFF6
  3967                           tablat	equ	0xFF5
  3968                           intcon	equ	0xFF2
  3969                           postinc0	equ	0xFEE
  3970                           wreg	equ	0xFE8
  3971                           indf1	equ	0xFE7
  3972                           fsr1h	equ	0xFE2
  3973                           fsr1l	equ	0xFE1
  3974                           indf2	equ	0xFDF
  3975                           postinc2	equ	0xFDE
  3976                           fsr2h	equ	0xFDA
  3977                           fsr2l	equ	0xFD9
  3978                           status	equ	0xFD8
  3979                           
  3980 ;; *************** function _strtod *****************
  3981 ;; Defined at:
  3982 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atof.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  s               2   82[BANK0 ] PTR const unsigned char 
  3985 ;;		 -> ringBufferLUT@arg_str(64), 
  3986 ;;  res             2   84[BANK0 ] PTR PTR const unsigned c
  3987 ;;		 -> NULL(0), 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  _u              4   90[BANK0 ] struct .
  3990 ;;  expon           1   89[BANK0 ] char 
  3991 ;;  flags           1   88[BANK0 ] unsigned char 
  3992 ;;  eexp            1   87[BANK0 ] char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  4   82[BANK0 ] char 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4002 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4004 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4005 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4006 ;;Total ram usage:       12 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    6
  4009 ;; This function calls:
  4010 ;;		___fldiv
  4011 ;;		___flge
  4012 ;;		___flmul
  4013 ;;		___flneg
  4014 ;;		___lmul
  4015 ;;		___xxtofl
  4016 ;;		_isdigit
  4017 ;;		_isspace
  4018 ;; This function is called by:
  4019 ;;		_atof
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text7
  4024  011E6E                     __ptext7:
  4025                           	opt stack 0
  4026  011E6E                     _strtod:
  4027                           	opt stack 21
  4028                           
  4029                           ;incstack = 0
  4030  011E6E  0100               	movlb	0	; () banked
  4031  011E70  51B4               	movf	strtod@res& (0+255),w,b
  4032  011E72  11B5               	iorwf	(strtod@res+1)& (0+255),w,b
  4033  011E74  B4D8               	btfsc	status,2,c
  4034  011E76  D00C               	goto	l643
  4035                           
  4036                           ; BSR set to: 0
  4037  011E78  C0B4  FFD9         	movff	strtod@res,fsr2l
  4038  011E7C  C0B5  FFDA         	movff	strtod@res+1,fsr2h
  4039  011E80  C0B2  FFDE         	movff	strtod@s,postinc2
  4040  011E84  C0B3  FFDD         	movff	strtod@s+1,postdec2
  4041                           
  4042                           ; BSR set to: 0
  4043  011E88  D003               	goto	l643
  4044  011E8A                     
  4045                           ; BSR set to: 0
  4046  011E8A  0100               	movlb	0	; () banked
  4047  011E8C  4BB2               	infsnz	strtod@s& (0+255),f,b
  4048  011E8E  2BB3               	incf	(strtod@s+1)& (0+255),f,b
  4049  011E90                     l643:
  4050                           
  4051                           ; BSR set to: 0
  4052                           
  4053                           ; BSR set to: 0
  4054  011E90  C0B2  FFD9         	movff	strtod@s,fsr2l
  4055  011E94  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4056  011E98  50DF               	movf	indf2,w,c
  4057  011E9A  6FB7               	movwf	strtod@eexp& (0+255),b
  4058  011E9C  51B7               	movf	strtod@eexp& (0+255),w,b
  4059  011E9E  EC08  F0A7         	call	_isspace
  4060  011EA2  B0D8               	btfsc	status,0,c
  4061  011EA4  D7F2               	goto	l644
  4062  011EA6  0E00               	movlw	0
  4063  011EA8  0100               	movlb	0	; () banked
  4064  011EAA  6FB8               	movwf	strtod@flags& (0+255),b
  4065                           
  4066                           ; BSR set to: 0
  4067  011EAC  0E2D               	movlw	45
  4068  011EAE  19B7               	xorwf	strtod@eexp& (0+255),w,b
  4069  011EB0  A4D8               	btfss	status,2,c
  4070  011EB2  D003               	goto	l646
  4071                           
  4072                           ; BSR set to: 0
  4073  011EB4  0E01               	movlw	1
  4074  011EB6  6FB8               	movwf	strtod@flags& (0+255),b
  4075  011EB8  D004               	goto	u5750
  4076  011EBA                     l646:
  4077                           
  4078                           ; BSR set to: 0
  4079                           
  4080                           ; BSR set to: 0
  4081  011EBA  0E2B               	movlw	43
  4082  011EBC  19B7               	xorwf	strtod@eexp& (0+255),w,b
  4083  011EBE  A4D8               	btfss	status,2,c
  4084  011EC0  D002               	goto	l648
  4085  011EC2                     u5750:
  4086                           
  4087                           ; BSR set to: 0
  4088  011EC2  4BB2               	infsnz	strtod@s& (0+255),f,b
  4089  011EC4  2BB3               	incf	(strtod@s+1)& (0+255),f,b
  4090  011EC6                     l648:
  4091                           
  4092                           ; BSR set to: 0
  4093                           
  4094                           ; BSR set to: 0
  4095                           
  4096                           ; BSR set to: 0
  4097  011EC6  0E00               	movlw	0
  4098  011EC8  6FB7               	movwf	strtod@eexp& (0+255),b
  4099                           
  4100                           ; BSR set to: 0
  4101  011ECA  0E00               	movlw	0
  4102  011ECC  6FBA               	movwf	strtod@_u& (0+255),b
  4103  011ECE  0E00               	movlw	0
  4104  011ED0  6FBB               	movwf	(strtod@_u+1)& (0+255),b
  4105  011ED2  0E00               	movlw	0
  4106  011ED4  6FBC               	movwf	(strtod@_u+2)& (0+255),b
  4107  011ED6  0E00               	movlw	0
  4108  011ED8  6FBD               	movwf	(strtod@_u+3)& (0+255),b
  4109                           
  4110                           ; BSR set to: 0
  4111  011EDA  0E00               	movlw	0
  4112  011EDC  6FB9               	movwf	strtod@expon& (0+255),b
  4113  011EDE                     
  4114                           ; BSR set to: 0
  4115                           
  4116                           ; BSR set to: 0
  4117  011EDE  B9B8               	btfsc	strtod@flags& (0+255),4,b
  4118  011EE0  D00A               	goto	l650
  4119                           
  4120                           ; BSR set to: 0
  4121  011EE2  C0B2  FFD9         	movff	strtod@s,fsr2l
  4122  011EE6  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4123  011EEA  0E2E               	movlw	46
  4124  011EEC  18DE               	xorwf	postinc2,w,c
  4125  011EEE  A4D8               	btfss	status,2,c
  4126  011EF0  D002               	goto	l650
  4127                           
  4128                           ; BSR set to: 0
  4129  011EF2  89B8               	bsf	strtod@flags& (0+255),4,b
  4130  011EF4  D03E               	goto	l657
  4131  011EF6                     l650:
  4132                           
  4133                           ; BSR set to: 0
  4134                           
  4135                           ; BSR set to: 0
  4136  011EF6  C0B2  FFD9         	movff	strtod@s,fsr2l
  4137  011EFA  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4138  011EFE  50DF               	movf	indf2,w,c
  4139  011F00  EC6B  F0A7         	call	_isdigit
  4140  011F04  A0D8               	btfss	status,0,c
  4141  011F06  D038               	goto	l653
  4142  011F08  0100               	movlb	0	; () banked
  4143  011F0A  83B8               	bsf	strtod@flags& (0+255),1,b
  4144                           
  4145                           ; BSR set to: 0
  4146  011F0C  0E09               	movlw	9
  4147  011F0E  19B7               	xorwf	strtod@eexp& (0+255),w,b
  4148  011F10  B4D8               	btfsc	status,2,c
  4149  011F12  D02D               	goto	l654
  4150                           
  4151                           ; BSR set to: 0
  4152  011F14  B9B8               	btfsc	strtod@flags& (0+255),4,b
  4153                           
  4154                           ; BSR set to: 0
  4155  011F16  07B9               	decf	strtod@expon& (0+255),f,b
  4156                           
  4157                           ; BSR set to: 0
  4158  011F18  2BB7               	incf	strtod@eexp& (0+255),f,b
  4159                           
  4160                           ; BSR set to: 0
  4161  011F1A  C0BA  F098         	movff	strtod@_u,___lmul@multiplier
  4162  011F1E  C0BB  F099         	movff	strtod@_u+1,___lmul@multiplier+1
  4163  011F22  C0BC  F09A         	movff	strtod@_u+2,___lmul@multiplier+2
  4164  011F26  C0BD  F09B         	movff	strtod@_u+3,___lmul@multiplier+3
  4165  011F2A  0E0A               	movlw	10
  4166  011F2C  6F9C               	movwf	___lmul@multiplicand& (0+255),b
  4167  011F2E  0E00               	movlw	0
  4168  011F30  6F9D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4169  011F32  0E00               	movlw	0
  4170  011F34  6F9E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4171  011F36  0E00               	movlw	0
  4172  011F38  6F9F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4173  011F3A  EC85  F0A5         	call	___lmul	;wreg free
  4174  011F3E  C098  F0BA         	movff	?___lmul,strtod@_u
  4175  011F42  C099  F0BB         	movff	?___lmul+1,strtod@_u+1
  4176  011F46  C09A  F0BC         	movff	?___lmul+2,strtod@_u+2
  4177  011F4A  C09B  F0BD         	movff	?___lmul+3,strtod@_u+3
  4178  011F4E  C0B2  FFD9         	movff	strtod@s,fsr2l
  4179  011F52  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4180  011F56  50DF               	movf	indf2,w,c
  4181  011F58  0100               	movlb	0	; () banked
  4182  011F5A  6FB6               	movwf	??_strtod& (0+255),b
  4183  011F5C  0ED0               	movlw	208
  4184  011F5E  27B6               	addwf	??_strtod& (0+255),f,b
  4185  011F60  51B6               	movf	??_strtod& (0+255),w,b
  4186  011F62  27BA               	addwf	strtod@_u& (0+255),f,b
  4187  011F64  0E00               	movlw	0
  4188  011F66  23BB               	addwfc	(strtod@_u+1)& (0+255),f,b
  4189  011F68  23BC               	addwfc	(strtod@_u+2)& (0+255),f,b
  4190  011F6A  23BD               	addwfc	(strtod@_u+3)& (0+255),f,b
  4191  011F6C  D002               	goto	l657
  4192  011F6E                     l654:
  4193                           
  4194                           ; BSR set to: 0
  4195  011F6E  A9B8               	btfss	strtod@flags& (0+255),4,b
  4196                           
  4197                           ; BSR set to: 0
  4198  011F70  2BB9               	incf	strtod@expon& (0+255),f,b
  4199  011F72                     l657:
  4200                           
  4201                           ; BSR set to: 0
  4202                           
  4203                           ; BSR set to: 0
  4204  011F72  4BB2               	infsnz	strtod@s& (0+255),f,b
  4205  011F74  2BB3               	incf	(strtod@s+1)& (0+255),f,b
  4206                           
  4207                           ; BSR set to: 0
  4208  011F76  D7B3               	goto	l649
  4209  011F78                     l653:
  4210                           
  4211                           ; BSR set to: 0
  4212  011F78  0E00               	movlw	0
  4213  011F7A  0100               	movlb	0	; () banked
  4214  011F7C  6FB7               	movwf	strtod@eexp& (0+255),b
  4215                           
  4216                           ; BSR set to: 0
  4217  011F7E  C0B2  FFD9         	movff	strtod@s,fsr2l
  4218  011F82  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4219  011F86  0E65               	movlw	101
  4220  011F88  18DE               	xorwf	postinc2,w,c
  4221  011F8A  B4D8               	btfsc	status,2,c
  4222  011F8C  D008               	goto	u5830
  4223                           
  4224                           ; BSR set to: 0
  4225  011F8E  C0B2  FFD9         	movff	strtod@s,fsr2l
  4226  011F92  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4227  011F96  0E45               	movlw	69
  4228  011F98  18DE               	xorwf	postinc2,w,c
  4229  011F9A  A4D8               	btfss	status,2,c
  4230  011F9C  D062               	goto	l670
  4231  011F9E                     u5830:
  4232                           
  4233                           ; BSR set to: 0
  4234                           
  4235                           ; BSR set to: 0
  4236  011F9E  4BB2               	infsnz	strtod@s& (0+255),f,b
  4237  011FA0  2BB3               	incf	(strtod@s+1)& (0+255),f,b
  4238  011FA2  C0B2  FFD9         	movff	strtod@s,fsr2l
  4239  011FA6  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4240  011FAA  0E2D               	movlw	45
  4241  011FAC  18DE               	xorwf	postinc2,w,c
  4242  011FAE  A4D8               	btfss	status,2,c
  4243  011FB0  D002               	goto	l661
  4244                           
  4245                           ; BSR set to: 0
  4246  011FB2  87B8               	bsf	strtod@flags& (0+255),3,b
  4247  011FB4  D008               	goto	u5850
  4248  011FB6                     l661:
  4249                           
  4250                           ; BSR set to: 0
  4251                           
  4252                           ; BSR set to: 0
  4253  011FB6  C0B2  FFD9         	movff	strtod@s,fsr2l
  4254  011FBA  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4255  011FBE  0E2B               	movlw	43
  4256  011FC0  18DE               	xorwf	postinc2,w,c
  4257  011FC2  A4D8               	btfss	status,2,c
  4258  011FC4  D002               	goto	l664
  4259  011FC6                     u5850:
  4260                           
  4261                           ; BSR set to: 0
  4262                           
  4263                           ; BSR set to: 0
  4264                           
  4265                           ; BSR set to: 0
  4266                           
  4267                           ; BSR set to: 0
  4268                           
  4269                           ; BSR set to: 0
  4270  011FC6  4BB2               	infsnz	strtod@s& (0+255),f,b
  4271  011FC8  2BB3               	incf	(strtod@s+1)& (0+255),f,b
  4272  011FCA                     l664:
  4273                           
  4274                           ; BSR set to: 0
  4275                           
  4276                           ; BSR set to: 0
  4277  011FCA  C0B2  FFD9         	movff	strtod@s,fsr2l
  4278  011FCE  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4279  011FD2  0E30               	movlw	48
  4280  011FD4  18DE               	xorwf	postinc2,w,c
  4281  011FD6  B4D8               	btfsc	status,2,c
  4282  011FD8  D7F6               	goto	u5850
  4283                           
  4284                           ; BSR set to: 0
  4285                           
  4286                           ; BSR set to: 0
  4287  011FDA  C0B2  FFD9         	movff	strtod@s,fsr2l
  4288  011FDE  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4289  011FE2  50DF               	movf	indf2,w,c
  4290  011FE4  EC6B  F0A7         	call	_isdigit
  4291  011FE8  A0D8               	btfss	status,0,c
  4292  011FEA  D038               	goto	l669
  4293  011FEC  C0B2  FFD9         	movff	strtod@s,fsr2l
  4294  011FF0  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4295  011FF4  50DF               	movf	indf2,w,c
  4296  011FF6  0FD0               	addlw	208
  4297  011FF8  0100               	movlb	0	; () banked
  4298  011FFA  6FB7               	movwf	strtod@eexp& (0+255),b
  4299                           
  4300                           ; BSR set to: 0
  4301  011FFC  4BB2               	infsnz	strtod@s& (0+255),f,b
  4302  011FFE  2BB3               	incf	(strtod@s+1)& (0+255),f,b
  4303                           
  4304                           ; BSR set to: 0
  4305  012000  C0B2  FFD9         	movff	strtod@s,fsr2l
  4306  012004  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4307  012008  50DF               	movf	indf2,w,c
  4308  01200A  EC6B  F0A7         	call	_isdigit
  4309  01200E  A0D8               	btfss	status,0,c
  4310  012010  D025               	goto	l669
  4311  012012  C0B2  FFD9         	movff	strtod@s,fsr2l
  4312  012016  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4313  01201A  50DF               	movf	indf2,w,c
  4314  01201C  0100               	movlb	0	; () banked
  4315  01201E  6FB6               	movwf	??_strtod& (0+255),b
  4316  012020  51B7               	movf	strtod@eexp& (0+255),w,b
  4317  012022  0D0A               	mullw	10
  4318  012024  50F3               	movf	prodl,w,c
  4319  012026  25B6               	addwf	??_strtod& (0+255),w,b
  4320  012028  0FD0               	addlw	208
  4321  01202A  6FB7               	movwf	strtod@eexp& (0+255),b
  4322                           
  4323                           ; BSR set to: 0
  4324  01202C  4BB2               	infsnz	strtod@s& (0+255),f,b
  4325  01202E  2BB3               	incf	(strtod@s+1)& (0+255),f,b
  4326                           
  4327                           ; BSR set to: 0
  4328  012030  C0B2  FFD9         	movff	strtod@s,fsr2l
  4329  012034  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4330  012038  50DF               	movf	indf2,w,c
  4331  01203A  EC6B  F0A7         	call	_isdigit
  4332  01203E  A0D8               	btfss	status,0,c
  4333  012040  D00D               	goto	l669
  4334  012042  C0B2  FFD9         	movff	strtod@s,fsr2l
  4335  012046  C0B3  FFDA         	movff	strtod@s+1,fsr2h
  4336  01204A  50DF               	movf	indf2,w,c
  4337  01204C  0100               	movlb	0	; () banked
  4338  01204E  6FB6               	movwf	??_strtod& (0+255),b
  4339  012050  51B7               	movf	strtod@eexp& (0+255),w,b
  4340  012052  0D0A               	mullw	10
  4341  012054  50F3               	movf	prodl,w,c
  4342  012056  25B6               	addwf	??_strtod& (0+255),w,b
  4343  012058  0FD0               	addlw	208
  4344  01205A  6FB7               	movwf	strtod@eexp& (0+255),b
  4345  01205C                     l669:
  4346                           
  4347                           ; BSR set to: 0
  4348                           
  4349                           ; BSR set to: 0
  4350                           
  4351                           ; BSR set to: 0
  4352  01205C  0100               	movlb	0	; () banked
  4353  01205E  B7B8               	btfsc	strtod@flags& (0+255),3,b
  4354                           
  4355                           ; BSR set to: 0
  4356  012060  6DB7               	negf	strtod@eexp& (0+255),b
  4357  012062                     l670:
  4358                           
  4359                           ; BSR set to: 0
  4360                           
  4361                           ; BSR set to: 0
  4362                           
  4363                           ; BSR set to: 0
  4364  012062  51B7               	movf	strtod@eexp& (0+255),w,b
  4365  012064  27B9               	addwf	strtod@expon& (0+255),f,b
  4366                           
  4367                           ; BSR set to: 0
  4368  012066  51B4               	movf	strtod@res& (0+255),w,b
  4369  012068  11B5               	iorwf	(strtod@res+1)& (0+255),w,b
  4370  01206A  A4D8               	btfss	status,2,c
  4371                           
  4372                           ; BSR set to: 0
  4373  01206C  A3B8               	btfss	strtod@flags& (0+255),1,b
  4374  01206E  D008               	goto	l671
  4375                           
  4376                           ; BSR set to: 0
  4377  012070  C0B4  FFD9         	movff	strtod@res,fsr2l
  4378  012074  C0B5  FFDA         	movff	strtod@res+1,fsr2h
  4379  012078  C0B2  FFDE         	movff	strtod@s,postinc2
  4380  01207C  C0B3  FFDD         	movff	strtod@s+1,postdec2
  4381  012080                     l671:
  4382                           
  4383                           ; BSR set to: 0
  4384                           
  4385                           ; BSR set to: 0
  4386  012080  C0BA  F098         	movff	strtod@_u,___xxtofl@val
  4387  012084  C0BB  F099         	movff	strtod@_u+1,___xxtofl@val+1
  4388  012088  C0BC  F09A         	movff	strtod@_u+2,___xxtofl@val+2
  4389  01208C  C0BD  F09B         	movff	strtod@_u+3,___xxtofl@val+3
  4390  012090  0E01               	movlw	1
  4391  012092  EC20  F09C         	call	___xxtofl
  4392  012096  C098  F0BA         	movff	?___xxtofl,strtod@_u
  4393  01209A  C099  F0BB         	movff	?___xxtofl+1,strtod@_u+1
  4394  01209E  C09A  F0BC         	movff	?___xxtofl+2,strtod@_u+2
  4395  0120A2  C09B  F0BD         	movff	?___xxtofl+3,strtod@_u+3
  4396  0120A6  0100               	movlb	0	; () banked
  4397  0120A8  51BA               	movf	strtod@_u& (0+255),w,b
  4398  0120AA  11BB               	iorwf	(strtod@_u+1)& (0+255),w,b
  4399  0120AC  11BC               	iorwf	(strtod@_u+2)& (0+255),w,b
  4400  0120AE  11BD               	iorwf	(strtod@_u+3)& (0+255),w,b
  4401  0120B0  A4D8               	btfss	status,2,c
  4402  0120B2  D009               	goto	l672
  4403                           
  4404                           ; BSR set to: 0
  4405  0120B4  0E00               	movlw	0
  4406  0120B6  6FB2               	movwf	?_strtod& (0+255),b
  4407  0120B8  0E00               	movlw	0
  4408  0120BA  6FB3               	movwf	(?_strtod+1)& (0+255),b
  4409  0120BC  0E00               	movlw	0
  4410  0120BE  6FB4               	movwf	(?_strtod+2)& (0+255),b
  4411  0120C0  0E00               	movlw	0
  4412  0120C2  6FB5               	movwf	(?_strtod+3)& (0+255),b
  4413                           
  4414                           ; BSR set to: 0
  4415  0120C4  0012               	return	
  4416  0120C6                     l672:
  4417                           
  4418                           ; BSR set to: 0
  4419                           
  4420                           ; BSR set to: 0
  4421  0120C6  AFB9               	btfss	strtod@expon& (0+255),7,b
  4422  0120C8  D06D               	goto	l674
  4423                           
  4424                           ; BSR set to: 0
  4425  0120CA  6DB9               	negf	strtod@expon& (0+255),b
  4426  0120CC  D01D               	goto	l675
  4427  0120CE                     
  4428                           ; BSR set to: 0
  4429                           
  4430                           ; BSR set to: 0
  4431  0120CE  C0BA  F08B         	movff	strtod@_u,___fldiv@b
  4432  0120D2  C0BB  F08C         	movff	strtod@_u+1,___fldiv@b+1
  4433  0120D6  C0BC  F08D         	movff	strtod@_u+2,___fldiv@b+2
  4434  0120DA  C0BD  F08E         	movff	strtod@_u+3,___fldiv@b+3
  4435  0120DE  0EF9               	movlw	249
  4436  0120E0  6F8F               	movwf	___fldiv@a& (0+255),b
  4437  0120E2  0E02               	movlw	2
  4438  0120E4  6F90               	movwf	(___fldiv@a+1)& (0+255),b
  4439  0120E6  0E15               	movlw	21
  4440  0120E8  6F91               	movwf	(___fldiv@a+2)& (0+255),b
  4441  0120EA  0E50               	movlw	80
  4442  0120EC  6F92               	movwf	(___fldiv@a+3)& (0+255),b
  4443  0120EE  EC6E  F099         	call	___fldiv	;wreg free
  4444  0120F2  C08B  F0BA         	movff	?___fldiv,strtod@_u
  4445  0120F6  C08C  F0BB         	movff	?___fldiv+1,strtod@_u+1
  4446  0120FA  C08D  F0BC         	movff	?___fldiv+2,strtod@_u+2
  4447  0120FE  C08E  F0BD         	movff	?___fldiv+3,strtod@_u+3
  4448  012102  0EF6               	movlw	246
  4449  012104  0100               	movlb	0	; () banked
  4450  012106  27B9               	addwf	strtod@expon& (0+255),f,b
  4451  012108                     l675:
  4452                           
  4453                           ; BSR set to: 0
  4454                           
  4455                           ; BSR set to: 0
  4456  012108  51B9               	movf	strtod@expon& (0+255),w,b
  4457  01210A  0A80               	xorlw	128
  4458  01210C  0F76               	addlw	-138
  4459  01210E  A0D8               	btfss	status,0,c
  4460  012110  D01D               	goto	l678
  4461  012112  D7DD               	goto	l676
  4462  012114                     
  4463                           ; BSR set to: 0
  4464                           
  4465                           ; BSR set to: 0
  4466  012114  C0BA  F08B         	movff	strtod@_u,___fldiv@b
  4467  012118  C0BB  F08C         	movff	strtod@_u+1,___fldiv@b+1
  4468  01211C  C0BC  F08D         	movff	strtod@_u+2,___fldiv@b+2
  4469  012120  C0BD  F08E         	movff	strtod@_u+3,___fldiv@b+3
  4470  012124  0E00               	movlw	0
  4471  012126  6F8F               	movwf	___fldiv@a& (0+255),b
  4472  012128  0E00               	movlw	0
  4473  01212A  6F90               	movwf	(___fldiv@a+1)& (0+255),b
  4474  01212C  0E20               	movlw	32
  4475  01212E  6F91               	movwf	(___fldiv@a+2)& (0+255),b
  4476  012130  0E41               	movlw	65
  4477  012132  6F92               	movwf	(___fldiv@a+3)& (0+255),b
  4478  012134  EC6E  F099         	call	___fldiv	;wreg free
  4479  012138  C08B  F0BA         	movff	?___fldiv,strtod@_u
  4480  01213C  C08C  F0BB         	movff	?___fldiv+1,strtod@_u+1
  4481  012140  C08D  F0BC         	movff	?___fldiv+2,strtod@_u+2
  4482  012144  C08E  F0BD         	movff	?___fldiv+3,strtod@_u+3
  4483  012148  0100               	movlb	0	; () banked
  4484  01214A  07B9               	decf	strtod@expon& (0+255),f,b
  4485  01214C                     l678:
  4486                           
  4487                           ; BSR set to: 0
  4488                           
  4489                           ; BSR set to: 0
  4490  01214C  51B9               	movf	strtod@expon& (0+255),w,b
  4491  01214E  A4D8               	btfss	status,2,c
  4492  012150  D7E1               	goto	l679
  4493                           
  4494                           ; BSR set to: 0
  4495                           
  4496                           ; BSR set to: 0
  4497  012152  C0BA  F08B         	movff	strtod@_u,___flge@ff1
  4498  012156  C0BB  F08C         	movff	strtod@_u+1,___flge@ff1+1
  4499  01215A  C0BC  F08D         	movff	strtod@_u+2,___flge@ff1+2
  4500  01215E  C0BD  F08E         	movff	strtod@_u+3,___flge@ff1+3
  4501  012162  0E00               	movlw	0
  4502  012164  6F8F               	movwf	___flge@ff2& (0+255),b
  4503  012166  0E00               	movlw	0
  4504  012168  6F90               	movwf	(___flge@ff2+1)& (0+255),b
  4505  01216A  0E80               	movlw	128
  4506  01216C  6F91               	movwf	(___flge@ff2+2)& (0+255),b
  4507  01216E  0E00               	movlw	0
  4508  012170  6F92               	movwf	(___flge@ff2+3)& (0+255),b
  4509  012172  EC6B  F0A0         	call	___flge	;wreg free
  4510  012176  0100               	movlb	0	; () banked
  4511  012178  B0D8               	btfsc	status,0,c
  4512  01217A  D083               	goto	l691
  4513                           
  4514                           ; BSR set to: 0
  4515  01217C  A1B8               	btfss	strtod@flags& (0+255),0,b
  4516  01217E  D009               	goto	l682
  4517                           
  4518                           ; BSR set to: 0
  4519  012180  0E00               	movlw	0
  4520  012182  6FB2               	movwf	?_strtod& (0+255),b
  4521  012184  0E00               	movlw	0
  4522  012186  6FB3               	movwf	(?_strtod+1)& (0+255),b
  4523  012188  0E80               	movlw	128
  4524  01218A  6FB4               	movwf	(?_strtod+2)& (0+255),b
  4525  01218C  0E80               	movlw	128
  4526  01218E  6FB5               	movwf	(?_strtod+3)& (0+255),b
  4527                           
  4528                           ; BSR set to: 0
  4529  012190  0012               	return	
  4530  012192                     l682:
  4531                           
  4532                           ; BSR set to: 0
  4533                           
  4534                           ; BSR set to: 0
  4535  012192  0E00               	movlw	0
  4536  012194  6FB2               	movwf	?_strtod& (0+255),b
  4537  012196  0E00               	movlw	0
  4538  012198  6FB3               	movwf	(?_strtod+1)& (0+255),b
  4539  01219A  0E80               	movlw	128
  4540  01219C  6FB4               	movwf	(?_strtod+2)& (0+255),b
  4541  01219E  0E00               	movlw	0
  4542  0121A0  6FB5               	movwf	(?_strtod+3)& (0+255),b
  4543                           
  4544                           ; BSR set to: 0
  4545  0121A2  0012               	return	
  4546  0121A4                     l674:
  4547                           
  4548                           ; BSR set to: 0
  4549                           
  4550                           ; BSR set to: 0
  4551  0121A4  51B9               	movf	strtod@expon& (0+255),w,b
  4552  0121A6  0A80               	xorlw	128
  4553  0121A8  0F7F               	addlw	-129
  4554  0121AA  B0D8               	btfsc	status,0,c
  4555  0121AC  D01E               	goto	l685
  4556  0121AE  D069               	goto	l691
  4557  0121B0                     
  4558                           ; BSR set to: 0
  4559                           
  4560                           ; BSR set to: 0
  4561  0121B0  C0BA  F099         	movff	strtod@_u,___flmul@b
  4562  0121B4  C0BB  F09A         	movff	strtod@_u+1,___flmul@b+1
  4563  0121B8  C0BC  F09B         	movff	strtod@_u+2,___flmul@b+2
  4564  0121BC  C0BD  F09C         	movff	strtod@_u+3,___flmul@b+3
  4565  0121C0  0EF9               	movlw	249
  4566  0121C2  6F9D               	movwf	___flmul@a& (0+255),b
  4567  0121C4  0E02               	movlw	2
  4568  0121C6  6F9E               	movwf	(___flmul@a+1)& (0+255),b
  4569  0121C8  0E15               	movlw	21
  4570  0121CA  6F9F               	movwf	(___flmul@a+2)& (0+255),b
  4571  0121CC  0E50               	movlw	80
  4572  0121CE  6FA0               	movwf	(___flmul@a+3)& (0+255),b
  4573  0121D0  EC1C  F093         	call	___flmul	;wreg free
  4574  0121D4  C099  F0BA         	movff	?___flmul,strtod@_u
  4575  0121D8  C09A  F0BB         	movff	?___flmul+1,strtod@_u+1
  4576  0121DC  C09B  F0BC         	movff	?___flmul+2,strtod@_u+2
  4577  0121E0  C09C  F0BD         	movff	?___flmul+3,strtod@_u+3
  4578  0121E4  0EF6               	movlw	246
  4579  0121E6  0100               	movlb	0	; () banked
  4580  0121E8  27B9               	addwf	strtod@expon& (0+255),f,b
  4581  0121EA                     l685:
  4582                           
  4583                           ; BSR set to: 0
  4584                           
  4585                           ; BSR set to: 0
  4586  0121EA  0E0A               	movlw	10
  4587  0121EC  61B9               	cpfslt	strtod@expon& (0+255),b
  4588  0121EE  D7E0               	goto	l686
  4589  0121F0  D01C               	goto	l688
  4590  0121F2                     
  4591                           ; BSR set to: 0
  4592                           
  4593                           ; BSR set to: 0
  4594  0121F2  C0BA  F099         	movff	strtod@_u,___flmul@b
  4595  0121F6  C0BB  F09A         	movff	strtod@_u+1,___flmul@b+1
  4596  0121FA  C0BC  F09B         	movff	strtod@_u+2,___flmul@b+2
  4597  0121FE  C0BD  F09C         	movff	strtod@_u+3,___flmul@b+3
  4598  012202  0E00               	movlw	0
  4599  012204  6F9D               	movwf	___flmul@a& (0+255),b
  4600  012206  0E00               	movlw	0
  4601  012208  6F9E               	movwf	(___flmul@a+1)& (0+255),b
  4602  01220A  0E20               	movlw	32
  4603  01220C  6F9F               	movwf	(___flmul@a+2)& (0+255),b
  4604  01220E  0E41               	movlw	65
  4605  012210  6FA0               	movwf	(___flmul@a+3)& (0+255),b
  4606  012212  EC1C  F093         	call	___flmul	;wreg free
  4607  012216  C099  F0BA         	movff	?___flmul,strtod@_u
  4608  01221A  C09A  F0BB         	movff	?___flmul+1,strtod@_u+1
  4609  01221E  C09B  F0BC         	movff	?___flmul+2,strtod@_u+2
  4610  012222  C09C  F0BD         	movff	?___flmul+3,strtod@_u+3
  4611  012226  0100               	movlb	0	; () banked
  4612  012228  07B9               	decf	strtod@expon& (0+255),f,b
  4613  01222A                     l688:
  4614                           
  4615                           ; BSR set to: 0
  4616                           
  4617                           ; BSR set to: 0
  4618  01222A  51B9               	movf	strtod@expon& (0+255),w,b
  4619  01222C  A4D8               	btfss	status,2,c
  4620  01222E  D7E1               	goto	l689
  4621                           
  4622                           ; BSR set to: 0
  4623                           
  4624                           ; BSR set to: 0
  4625  012230  0EFF               	movlw	255
  4626  012232  6F8B               	movwf	___flge@ff1& (0+255),b
  4627  012234  0EFF               	movlw	255
  4628  012236  6F8C               	movwf	(___flge@ff1+1)& (0+255),b
  4629  012238  0E7F               	movlw	127
  4630  01223A  6F8D               	movwf	(___flge@ff1+2)& (0+255),b
  4631  01223C  0E7F               	movlw	127
  4632  01223E  6F8E               	movwf	(___flge@ff1+3)& (0+255),b
  4633  012240  C0BA  F08F         	movff	strtod@_u,___flge@ff2
  4634  012244  C0BB  F090         	movff	strtod@_u+1,___flge@ff2+1
  4635  012248  C0BC  F091         	movff	strtod@_u+2,___flge@ff2+2
  4636  01224C  C0BD  F092         	movff	strtod@_u+3,___flge@ff2+3
  4637  012250  EC6B  F0A0         	call	___flge	;wreg free
  4638  012254  0100               	movlb	0	; () banked
  4639  012256  B0D8               	btfsc	status,0,c
  4640  012258  D014               	goto	l691
  4641                           
  4642                           ; BSR set to: 0
  4643  01225A  A1B8               	btfss	strtod@flags& (0+255),0,b
  4644  01225C  D009               	goto	l692
  4645                           
  4646                           ; BSR set to: 0
  4647  01225E  0E00               	movlw	0
  4648  012260  6FB2               	movwf	?_strtod& (0+255),b
  4649  012262  0E00               	movlw	0
  4650  012264  6FB3               	movwf	(?_strtod+1)& (0+255),b
  4651  012266  0E80               	movlw	128
  4652  012268  6FB4               	movwf	(?_strtod+2)& (0+255),b
  4653  01226A  0E80               	movlw	128
  4654  01226C  6FB5               	movwf	(?_strtod+3)& (0+255),b
  4655                           
  4656                           ; BSR set to: 0
  4657  01226E  0012               	return	
  4658  012270                     l692:
  4659                           
  4660                           ; BSR set to: 0
  4661                           
  4662                           ; BSR set to: 0
  4663  012270  0E00               	movlw	0
  4664  012272  6FB2               	movwf	?_strtod& (0+255),b
  4665  012274  0E00               	movlw	0
  4666  012276  6FB3               	movwf	(?_strtod+1)& (0+255),b
  4667  012278  0E80               	movlw	128
  4668  01227A  6FB4               	movwf	(?_strtod+2)& (0+255),b
  4669  01227C  0E00               	movlw	0
  4670  01227E  6FB5               	movwf	(?_strtod+3)& (0+255),b
  4671                           
  4672                           ; BSR set to: 0
  4673  012280  0012               	return	
  4674  012282                     l691:
  4675                           
  4676                           ; BSR set to: 0
  4677                           
  4678                           ; BSR set to: 0
  4679                           
  4680                           ; BSR set to: 0
  4681  012282  A1B8               	btfss	strtod@flags& (0+255),0,b
  4682  012284  D012               	goto	l693
  4683                           
  4684                           ; BSR set to: 0
  4685  012286  C0BA  F08B         	movff	strtod@_u,___flneg@f1
  4686  01228A  C0BB  F08C         	movff	strtod@_u+1,___flneg@f1+1
  4687  01228E  C0BC  F08D         	movff	strtod@_u+2,___flneg@f1+2
  4688  012292  C0BD  F08E         	movff	strtod@_u+3,___flneg@f1+3
  4689  012296  ECD9  F0A6         	call	___flneg	;wreg free
  4690  01229A  C08B  F0BA         	movff	?___flneg,strtod@_u
  4691  01229E  C08C  F0BB         	movff	?___flneg+1,strtod@_u+1
  4692  0122A2  C08D  F0BC         	movff	?___flneg+2,strtod@_u+2
  4693  0122A6  C08E  F0BD         	movff	?___flneg+3,strtod@_u+3
  4694  0122AA                     l693:
  4695  0122AA  C0BA  F0B2         	movff	strtod@_u,?_strtod
  4696  0122AE  C0BB  F0B3         	movff	strtod@_u+1,?_strtod+1
  4697  0122B2  C0BC  F0B4         	movff	strtod@_u+2,?_strtod+2
  4698  0122B6  C0BD  F0B5         	movff	strtod@_u+3,?_strtod+3
  4699  0122BA  0012               	return	
  4700  0122BC                     __end_of_strtod:
  4701                           	opt stack 0
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           prodl	equ	0xFF3
  4707                           intcon	equ	0xFF2
  4708                           postinc0	equ	0xFEE
  4709                           wreg	equ	0xFE8
  4710                           indf1	equ	0xFE7
  4711                           fsr1h	equ	0xFE2
  4712                           fsr1l	equ	0xFE1
  4713                           indf2	equ	0xFDF
  4714                           postinc2	equ	0xFDE
  4715                           postdec2	equ	0xFDD
  4716                           fsr2h	equ	0xFDA
  4717                           fsr2l	equ	0xFD9
  4718                           status	equ	0xFD8
  4719                           
  4720 ;; *************** function _isspace *****************
  4721 ;; Defined at:
  4722 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isspace.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  c               1    wreg     unsigned char 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  c               1   45[BANK0 ] unsigned char 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;		None               void
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;Total ram usage:        3 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    5
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_strtod
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text8
  4751  014E10                     __ptext8:
  4752                           	opt stack 0
  4753  014E10                     _isspace:
  4754                           	opt stack 21
  4755                           
  4756                           ;incstack = 0
  4757                           ;isspace@c stored from wreg
  4758  014E10  0100               	movlb	0	; () banked
  4759  014E12  6F8D               	movwf	isspace@c& (0+255),b
  4760  014E14  0E01               	movlw	1
  4761  014E16  0100               	movlb	0	; () banked
  4762  014E18  6F8C               	movwf	_isspace$1004& (0+255),b
  4763                           
  4764                           ; BSR set to: 0
  4765  014E1A  0E20               	movlw	32
  4766  014E1C  198D               	xorwf	isspace@c& (0+255),w,b
  4767  014E1E  B4D8               	btfsc	status,2,c
  4768  014E20  D008               	goto	l921
  4769                           
  4770                           ; BSR set to: 0
  4771  014E22  0E0E               	movlw	14
  4772  014E24  618D               	cpfslt	isspace@c& (0+255),b
  4773  014E26  D003               	goto	u5200
  4774                           
  4775                           ; BSR set to: 0
  4776  014E28  0E09               	movlw	9
  4777  014E2A  618D               	cpfslt	isspace@c& (0+255),b
  4778  014E2C  D002               	goto	l921
  4779  014E2E                     u5200:
  4780                           
  4781                           ; BSR set to: 0
  4782                           
  4783                           ; BSR set to: 0
  4784  014E2E  0E00               	movlw	0
  4785  014E30  6F8C               	movwf	_isspace$1004& (0+255),b
  4786  014E32                     l921:
  4787                           
  4788                           ; BSR set to: 0
  4789                           
  4790                           ; BSR set to: 0
  4791  014E32  C08C  F08B         	movff	_isspace$1004,??_isspace
  4792  014E36  318B               	rrcf	??_isspace& (0+255),w,b
  4793  014E38  0012               	return	
  4794  014E3A                     __end_of_isspace:
  4795                           	opt stack 0
  4796                           tblptru	equ	0xFF8
  4797                           tblptrh	equ	0xFF7
  4798                           tblptrl	equ	0xFF6
  4799                           tablat	equ	0xFF5
  4800                           prodl	equ	0xFF3
  4801                           intcon	equ	0xFF2
  4802                           postinc0	equ	0xFEE
  4803                           wreg	equ	0xFE8
  4804                           indf1	equ	0xFE7
  4805                           fsr1h	equ	0xFE2
  4806                           fsr1l	equ	0xFE1
  4807                           indf2	equ	0xFDF
  4808                           postinc2	equ	0xFDE
  4809                           postdec2	equ	0xFDD
  4810                           fsr2h	equ	0xFDA
  4811                           fsr2l	equ	0xFD9
  4812                           status	equ	0xFD8
  4813                           
  4814 ;; *************** function _isdigit *****************
  4815 ;; Defined at:
  4816 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  c               1    wreg     unsigned char 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  c               1   45[BANK0 ] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;		None               void
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;Total ram usage:        3 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:    5
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_ringBufferLUT
  4841 ;;		_strtod
  4842 ;;		_atoi
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text9
  4847  014ED6                     __ptext9:
  4848                           	opt stack 0
  4849  014ED6                     _isdigit:
  4850                           	opt stack 23
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;incstack = 0
  4854                           ;isdigit@c stored from wreg
  4855  014ED6  0100               	movlb	0	; () banked
  4856  014ED8  6F8D               	movwf	isdigit@c& (0+255),b
  4857  014EDA  0E00               	movlw	0
  4858  014EDC  0100               	movlb	0	; () banked
  4859  014EDE  6F8C               	movwf	_isdigit$1001& (0+255),b
  4860                           
  4861                           ; BSR set to: 0
  4862  014EE0  0E3A               	movlw	58
  4863  014EE2  618D               	cpfslt	isdigit@c& (0+255),b
  4864  014EE4  D005               	goto	l916
  4865                           
  4866                           ; BSR set to: 0
  4867  014EE6  0E2F               	movlw	47
  4868  014EE8  658D               	cpfsgt	isdigit@c& (0+255),b
  4869  014EEA  D002               	goto	l916
  4870                           
  4871                           ; BSR set to: 0
  4872  014EEC  0E01               	movlw	1
  4873  014EEE  6F8C               	movwf	_isdigit$1001& (0+255),b
  4874  014EF0                     l916:
  4875                           
  4876                           ; BSR set to: 0
  4877                           
  4878                           ; BSR set to: 0
  4879  014EF0  C08C  F08B         	movff	_isdigit$1001,??_isdigit
  4880  014EF4  318B               	rrcf	??_isdigit& (0+255),w,b
  4881  014EF6  0012               	return	
  4882  014EF8                     __end_of_isdigit:
  4883                           	opt stack 0
  4884                           tblptru	equ	0xFF8
  4885                           tblptrh	equ	0xFF7
  4886                           tblptrl	equ	0xFF6
  4887                           tablat	equ	0xFF5
  4888                           prodl	equ	0xFF3
  4889                           intcon	equ	0xFF2
  4890                           postinc0	equ	0xFEE
  4891                           wreg	equ	0xFE8
  4892                           indf1	equ	0xFE7
  4893                           fsr1h	equ	0xFE2
  4894                           fsr1l	equ	0xFE1
  4895                           indf2	equ	0xFDF
  4896                           postinc2	equ	0xFDE
  4897                           postdec2	equ	0xFDD
  4898                           fsr2h	equ	0xFDA
  4899                           fsr2l	equ	0xFD9
  4900                           status	equ	0xFD8
  4901                           
  4902 ;; *************** function ___lmul *****************
  4903 ;; Defined at:
  4904 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  multiplier      4   56[BANK0 ] unsigned long 
  4907 ;;  multiplicand    4   60[BANK0 ] unsigned long 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  product         4   64[BANK0 ] unsigned long 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  4   56[BANK0 ] unsigned long 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4919 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4920 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4922 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;Total ram usage:       12 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    5
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_ringBufferLUT
  4930 ;;		_strtod
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text10
  4935  014B0A                     __ptext10:
  4936                           	opt stack 0
  4937  014B0A                     ___lmul:
  4938                           	opt stack 21
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;incstack = 0
  4942  014B0A  0E00               	movlw	0
  4943  014B0C  0100               	movlb	0	; () banked
  4944  014B0E  6FA0               	movwf	___lmul@product& (0+255),b
  4945  014B10  0E00               	movlw	0
  4946  014B12  6FA1               	movwf	(___lmul@product+1)& (0+255),b
  4947  014B14  0E00               	movlw	0
  4948  014B16  6FA2               	movwf	(___lmul@product+2)& (0+255),b
  4949  014B18  0E00               	movlw	0
  4950  014B1A  6FA3               	movwf	(___lmul@product+3)& (0+255),b
  4951  014B1C                     
  4952                           ; BSR set to: 0
  4953                           
  4954                           ; BSR set to: 0
  4955  014B1C  A198               	btfss	___lmul@multiplier& (0+255),0,b
  4956  014B1E  D008               	goto	l489
  4957                           
  4958                           ; BSR set to: 0
  4959  014B20  519C               	movf	___lmul@multiplicand& (0+255),w,b
  4960  014B22  27A0               	addwf	___lmul@product& (0+255),f,b
  4961  014B24  519D               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  4962  014B26  23A1               	addwfc	(___lmul@product+1)& (0+255),f,b
  4963  014B28  519E               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  4964  014B2A  23A2               	addwfc	(___lmul@product+2)& (0+255),f,b
  4965  014B2C  519F               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  4966  014B2E  23A3               	addwfc	(___lmul@product+3)& (0+255),f,b
  4967  014B30                     l489:
  4968                           
  4969                           ; BSR set to: 0
  4970                           
  4971                           ; BSR set to: 0
  4972  014B30  90D8               	bcf	status,0,c
  4973  014B32  379C               	rlcf	___lmul@multiplicand& (0+255),f,b
  4974  014B34  379D               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  4975  014B36  379E               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  4976  014B38  379F               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  4977                           
  4978                           ; BSR set to: 0
  4979  014B3A  90D8               	bcf	status,0,c
  4980  014B3C  339B               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  4981  014B3E  339A               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  4982  014B40  3399               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  4983  014B42  3398               	rrcf	___lmul@multiplier& (0+255),f,b
  4984  014B44  5198               	movf	___lmul@multiplier& (0+255),w,b
  4985  014B46  1199               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  4986  014B48  119A               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  4987  014B4A  119B               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  4988  014B4C  A4D8               	btfss	status,2,c
  4989  014B4E  D7E6               	goto	l488
  4990                           
  4991                           ; BSR set to: 0
  4992  014B50  C0A0  F098         	movff	___lmul@product,?___lmul
  4993  014B54  C0A1  F099         	movff	___lmul@product+1,?___lmul+1
  4994  014B58  C0A2  F09A         	movff	___lmul@product+2,?___lmul+2
  4995  014B5C  C0A3  F09B         	movff	___lmul@product+3,?___lmul+3
  4996                           
  4997                           ; BSR set to: 0
  4998  014B60  0012               	return		;funcret
  4999  014B62                     __end_of___lmul:
  5000                           	opt stack 0
  5001                           tblptru	equ	0xFF8
  5002                           tblptrh	equ	0xFF7
  5003                           tblptrl	equ	0xFF6
  5004                           tablat	equ	0xFF5
  5005                           prodl	equ	0xFF3
  5006                           intcon	equ	0xFF2
  5007                           postinc0	equ	0xFEE
  5008                           wreg	equ	0xFE8
  5009                           indf1	equ	0xFE7
  5010                           fsr1h	equ	0xFE2
  5011                           fsr1l	equ	0xFE1
  5012                           indf2	equ	0xFDF
  5013                           postinc2	equ	0xFDE
  5014                           postdec2	equ	0xFDD
  5015                           fsr2h	equ	0xFDA
  5016                           fsr2l	equ	0xFD9
  5017                           status	equ	0xFD8
  5018                           
  5019 ;; *************** function ___fldiv *****************
  5020 ;; Defined at:
  5021 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  b               4   43[BANK0 ] unsigned long 
  5024 ;;  a               4   47[BANK0 ] unsigned long 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  grs             4   62[BANK0 ] unsigned long 
  5027 ;;  rem             4   56[BANK0 ] unsigned long 
  5028 ;;  new_exp         2   60[BANK0 ] int 
  5029 ;;  aexp            1   67[BANK0 ] unsigned char 
  5030 ;;  bexp            1   66[BANK0 ] unsigned char 
  5031 ;;  sign            1   55[BANK0 ] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  4   43[BANK0 ] unsigned char 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5041 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;Total ram usage:       25 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    5
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_strtod
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text11
  5056  0132DC                     __ptext11:
  5057                           	opt stack 0
  5058  0132DC                     ___fldiv:
  5059                           	opt stack 21
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;incstack = 0
  5063  0132DC  0100               	movlb	0	; () banked
  5064  0132DE  518E               	movf	(___fldiv@b+3)& (0+255),w,b
  5065  0132E0  0B80               	andlw	128
  5066  0132E2  6F97               	movwf	___fldiv@sign& (0+255),b
  5067  0132E4  518E               	movf	(___fldiv@b+3)& (0+255),w,b
  5068  0132E6  258E               	addwf	(___fldiv@b+3)& (0+255),w,b
  5069  0132E8  6FA2               	movwf	___fldiv@bexp& (0+255),b
  5070                           
  5071                           ; BSR set to: 0
  5072  0132EA  BF8D               	btfsc	(___fldiv@b+2)& (0+255),7,b
  5073                           
  5074                           ; BSR set to: 0
  5075  0132EC  81A2               	bsf	___fldiv@bexp& (0+255),0,b
  5076                           
  5077                           ; BSR set to: 0
  5078                           
  5079                           ; BSR set to: 0
  5080  0132EE  51A2               	movf	___fldiv@bexp& (0+255),w,b
  5081  0132F0  B4D8               	btfsc	status,2,c
  5082  0132F2  D00D               	goto	l1086
  5083                           
  5084                           ; BSR set to: 0
  5085  0132F4  29A2               	incf	___fldiv@bexp& (0+255),w,b
  5086  0132F6  A4D8               	btfss	status,2,c
  5087  0132F8  D008               	goto	l1087
  5088                           
  5089                           ; BSR set to: 0
  5090  0132FA  0E00               	movlw	0
  5091  0132FC  6F8B               	movwf	___fldiv@b& (0+255),b
  5092  0132FE  0E00               	movlw	0
  5093  013300  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
  5094  013302  0E00               	movlw	0
  5095  013304  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
  5096  013306  0E00               	movlw	0
  5097  013308  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
  5098  01330A                     l1087:
  5099                           
  5100                           ; BSR set to: 0
  5101                           
  5102                           ; BSR set to: 0
  5103  01330A  8F8D               	bsf	(___fldiv@b+2)& (0+255),7,b
  5104  01330C  D006               	goto	L2
  5105  01330E                     l1086:
  5106                           
  5107                           ; BSR set to: 0
  5108                           
  5109                           ; BSR set to: 0
  5110  01330E  0E00               	movlw	0
  5111  013310  6F8B               	movwf	___fldiv@b& (0+255),b
  5112  013312  0E00               	movlw	0
  5113  013314  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
  5114  013316  0E00               	movlw	0
  5115  013318  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
  5116  01331A                     L2:
  5117  01331A  0E00               	movlw	0
  5118  01331C  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
  5119                           
  5120                           ; BSR set to: 0
  5121                           
  5122                           ; BSR set to: 0
  5123  01331E  5192               	movf	(___fldiv@a+3)& (0+255),w,b
  5124  013320  0B80               	andlw	128
  5125  013322  1B97               	xorwf	___fldiv@sign& (0+255),f,b
  5126                           
  5127                           ; BSR set to: 0
  5128  013324  5192               	movf	(___fldiv@a+3)& (0+255),w,b
  5129  013326  2592               	addwf	(___fldiv@a+3)& (0+255),w,b
  5130  013328  6FA3               	movwf	___fldiv@aexp& (0+255),b
  5131                           
  5132                           ; BSR set to: 0
  5133  01332A  BF91               	btfsc	(___fldiv@a+2)& (0+255),7,b
  5134                           
  5135                           ; BSR set to: 0
  5136  01332C  81A3               	bsf	___fldiv@aexp& (0+255),0,b
  5137                           
  5138                           ; BSR set to: 0
  5139                           
  5140                           ; BSR set to: 0
  5141  01332E  51A3               	movf	___fldiv@aexp& (0+255),w,b
  5142  013330  B4D8               	btfsc	status,2,c
  5143  013332  D00D               	goto	l1090
  5144                           
  5145                           ; BSR set to: 0
  5146  013334  29A3               	incf	___fldiv@aexp& (0+255),w,b
  5147  013336  A4D8               	btfss	status,2,c
  5148  013338  D008               	goto	l1091
  5149                           
  5150                           ; BSR set to: 0
  5151  01333A  0E00               	movlw	0
  5152  01333C  6F8F               	movwf	___fldiv@a& (0+255),b
  5153  01333E  0E00               	movlw	0
  5154  013340  6F90               	movwf	(___fldiv@a+1)& (0+255),b
  5155  013342  0E00               	movlw	0
  5156  013344  6F91               	movwf	(___fldiv@a+2)& (0+255),b
  5157  013346  0E00               	movlw	0
  5158  013348  6F92               	movwf	(___fldiv@a+3)& (0+255),b
  5159  01334A                     l1091:
  5160                           
  5161                           ; BSR set to: 0
  5162                           
  5163                           ; BSR set to: 0
  5164  01334A  8F91               	bsf	(___fldiv@a+2)& (0+255),7,b
  5165  01334C  D006               	goto	L3
  5166  01334E                     l1090:
  5167                           
  5168                           ; BSR set to: 0
  5169                           
  5170                           ; BSR set to: 0
  5171  01334E  0E00               	movlw	0
  5172  013350  6F8F               	movwf	___fldiv@a& (0+255),b
  5173  013352  0E00               	movlw	0
  5174  013354  6F90               	movwf	(___fldiv@a+1)& (0+255),b
  5175  013356  0E00               	movlw	0
  5176  013358  6F91               	movwf	(___fldiv@a+2)& (0+255),b
  5177  01335A                     L3:
  5178  01335A  0E00               	movlw	0
  5179  01335C  6F92               	movwf	(___fldiv@a+3)& (0+255),b
  5180                           
  5181                           ; BSR set to: 0
  5182                           
  5183                           ; BSR set to: 0
  5184  01335E  518F               	movf	___fldiv@a& (0+255),w,b
  5185  013360  1190               	iorwf	(___fldiv@a+1)& (0+255),w,b
  5186  013362  1191               	iorwf	(___fldiv@a+2)& (0+255),w,b
  5187  013364  1192               	iorwf	(___fldiv@a+3)& (0+255),w,b
  5188  013366  A4D8               	btfss	status,2,c
  5189  013368  D015               	goto	l1093
  5190                           
  5191                           ; BSR set to: 0
  5192  01336A  0E00               	movlw	0
  5193  01336C  6F8B               	movwf	___fldiv@b& (0+255),b
  5194  01336E  0E00               	movlw	0
  5195  013370  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
  5196  013372  0E00               	movlw	0
  5197  013374  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
  5198  013376  0E00               	movlw	0
  5199  013378  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
  5200                           
  5201                           ; BSR set to: 0
  5202  01337A  0E80               	movlw	128
  5203  01337C  138D               	iorwf	(___fldiv@b+2)& (0+255),f,b
  5204  01337E  0E7F               	movlw	127
  5205  013380  138E               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5206                           
  5207                           ; BSR set to: 0
  5208  013382  C08B  F08B         	movff	___fldiv@b,?___fldiv
  5209  013386  C08C  F08C         	movff	___fldiv@b+1,?___fldiv+1
  5210  01338A  C08D  F08D         	movff	___fldiv@b+2,?___fldiv+2
  5211  01338E  C08E  F08E         	movff	___fldiv@b+3,?___fldiv+3
  5212                           
  5213                           ; BSR set to: 0
  5214  013392  0012               	return	
  5215  013394                     l1093:
  5216                           
  5217                           ; BSR set to: 0
  5218                           
  5219                           ; BSR set to: 0
  5220  013394  51A2               	movf	___fldiv@bexp& (0+255),w,b
  5221  013396  A4D8               	btfss	status,2,c
  5222  013398  D011               	goto	l1095
  5223                           
  5224                           ; BSR set to: 0
  5225  01339A  0E00               	movlw	0
  5226  01339C  6F8B               	movwf	___fldiv@b& (0+255),b
  5227  01339E  0E00               	movlw	0
  5228  0133A0  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
  5229  0133A2  0E00               	movlw	0
  5230  0133A4  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
  5231  0133A6  0E00               	movlw	0
  5232  0133A8  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
  5233                           
  5234                           ; BSR set to: 0
  5235  0133AA  C08B  F08B         	movff	___fldiv@b,?___fldiv
  5236  0133AE  C08C  F08C         	movff	___fldiv@b+1,?___fldiv+1
  5237  0133B2  C08D  F08D         	movff	___fldiv@b+2,?___fldiv+2
  5238  0133B6  C08E  F08E         	movff	___fldiv@b+3,?___fldiv+3
  5239                           
  5240                           ; BSR set to: 0
  5241  0133BA  0012               	return	
  5242  0133BC                     l1095:
  5243                           
  5244                           ; BSR set to: 0
  5245                           
  5246                           ; BSR set to: 0
  5247  0133BC  51A3               	movf	___fldiv@aexp& (0+255),w,b
  5248  0133BE  6F93               	movwf	??___fldiv& (0+255),b
  5249  0133C0  6B94               	clrf	(??___fldiv+1)& (0+255),b
  5250  0133C2  1F93               	comf	??___fldiv& (0+255),f,b
  5251  0133C4  1F94               	comf	(??___fldiv+1)& (0+255),f,b
  5252  0133C6  4B93               	infsnz	??___fldiv& (0+255),f,b
  5253  0133C8  2B94               	incf	(??___fldiv+1)& (0+255),f,b
  5254  0133CA  51A2               	movf	___fldiv@bexp& (0+255),w,b
  5255  0133CC  6F95               	movwf	(??___fldiv+2)& (0+255),b
  5256  0133CE  6B96               	clrf	(??___fldiv+3)& (0+255),b
  5257  0133D0  5193               	movf	??___fldiv& (0+255),w,b
  5258  0133D2  2795               	addwf	(??___fldiv+2)& (0+255),f,b
  5259  0133D4  5194               	movf	(??___fldiv+1)& (0+255),w,b
  5260  0133D6  2396               	addwfc	(??___fldiv+3)& (0+255),f,b
  5261  0133D8  0E7F               	movlw	127
  5262  0133DA  2595               	addwf	(??___fldiv+2)& (0+255),w,b
  5263  0133DC  6F9C               	movwf	___fldiv@new_exp& (0+255),b
  5264  0133DE  0E00               	movlw	0
  5265  0133E0  2196               	addwfc	(??___fldiv+3)& (0+255),w,b
  5266  0133E2  6F9D               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5267                           
  5268                           ; BSR set to: 0
  5269  0133E4  C08B  F098         	movff	___fldiv@b,___fldiv@rem
  5270  0133E8  C08C  F099         	movff	___fldiv@b+1,___fldiv@rem+1
  5271  0133EC  C08D  F09A         	movff	___fldiv@b+2,___fldiv@rem+2
  5272  0133F0  C08E  F09B         	movff	___fldiv@b+3,___fldiv@rem+3
  5273                           
  5274                           ; BSR set to: 0
  5275  0133F4  0E00               	movlw	0
  5276  0133F6  6F8B               	movwf	___fldiv@b& (0+255),b
  5277  0133F8  0E00               	movlw	0
  5278  0133FA  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
  5279  0133FC  0E00               	movlw	0
  5280  0133FE  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
  5281  013400  0E00               	movlw	0
  5282  013402  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
  5283                           
  5284                           ; BSR set to: 0
  5285  013404  0E00               	movlw	0
  5286  013406  6F9E               	movwf	___fldiv@grs& (0+255),b
  5287  013408  0E00               	movlw	0
  5288  01340A  6F9F               	movwf	(___fldiv@grs+1)& (0+255),b
  5289  01340C  0E00               	movlw	0
  5290  01340E  6FA0               	movwf	(___fldiv@grs+2)& (0+255),b
  5291  013410  0E00               	movlw	0
  5292  013412  6FA1               	movwf	(___fldiv@grs+3)& (0+255),b
  5293                           
  5294                           ; BSR set to: 0
  5295  013414  0E00               	movlw	0
  5296  013416  6FA3               	movwf	___fldiv@aexp& (0+255),b
  5297  013418  D028               	goto	l1096
  5298  01341A                     
  5299                           ; BSR set to: 0
  5300                           
  5301                           ; BSR set to: 0
  5302  01341A  51A3               	movf	___fldiv@aexp& (0+255),w,b
  5303  01341C  B4D8               	btfsc	status,2,c
  5304  01341E  D011               	goto	l1098
  5305                           
  5306                           ; BSR set to: 0
  5307  013420  90D8               	bcf	status,0,c
  5308  013422  3798               	rlcf	___fldiv@rem& (0+255),f,b
  5309  013424  3799               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  5310  013426  379A               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  5311  013428  379B               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  5312  01342A  90D8               	bcf	status,0,c
  5313  01342C  378B               	rlcf	___fldiv@b& (0+255),f,b
  5314  01342E  378C               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5315  013430  378D               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5316  013432  378E               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5317                           
  5318                           ; BSR set to: 0
  5319  013434  BFA1               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  5320                           
  5321                           ; BSR set to: 0
  5322  013436  818B               	bsf	___fldiv@b& (0+255),0,b
  5323                           
  5324                           ; BSR set to: 0
  5325  013438  90D8               	bcf	status,0,c
  5326  01343A  379E               	rlcf	___fldiv@grs& (0+255),f,b
  5327  01343C  379F               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5328  01343E  37A0               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5329  013440  37A1               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5330  013442                     l1098:
  5331                           
  5332                           ; BSR set to: 0
  5333                           
  5334                           ; BSR set to: 0
  5335  013442  518F               	movf	___fldiv@a& (0+255),w,b
  5336  013444  5D98               	subwf	___fldiv@rem& (0+255),w,b
  5337  013446  5190               	movf	(___fldiv@a+1)& (0+255),w,b
  5338  013448  5999               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  5339  01344A  5191               	movf	(___fldiv@a+2)& (0+255),w,b
  5340  01344C  599A               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  5341  01344E  5192               	movf	(___fldiv@a+3)& (0+255),w,b
  5342  013450  599B               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  5343  013452  A0D8               	btfss	status,0,c
  5344  013454  D009               	goto	l1100
  5345                           
  5346                           ; BSR set to: 0
  5347  013456  8DA1               	bsf	(___fldiv@grs+3)& (0+255),6,b
  5348                           
  5349                           ; BSR set to: 0
  5350  013458  518F               	movf	___fldiv@a& (0+255),w,b
  5351  01345A  5F98               	subwf	___fldiv@rem& (0+255),f,b
  5352  01345C  5190               	movf	(___fldiv@a+1)& (0+255),w,b
  5353  01345E  5B99               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  5354  013460  5191               	movf	(___fldiv@a+2)& (0+255),w,b
  5355  013462  5B9A               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  5356  013464  5192               	movf	(___fldiv@a+3)& (0+255),w,b
  5357  013466  5B9B               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  5358  013468                     l1100:
  5359                           
  5360                           ; BSR set to: 0
  5361                           
  5362                           ; BSR set to: 0
  5363  013468  2BA3               	incf	___fldiv@aexp& (0+255),f,b
  5364  01346A                     l1096:
  5365                           
  5366                           ; BSR set to: 0
  5367  01346A  0E19               	movlw	25
  5368  01346C  65A3               	cpfsgt	___fldiv@aexp& (0+255),b
  5369  01346E  D7D5               	goto	l1097
  5370                           
  5371                           ; BSR set to: 0
  5372                           
  5373                           ; BSR set to: 0
  5374  013470  5198               	movf	___fldiv@rem& (0+255),w,b
  5375  013472  1199               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  5376  013474  119A               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  5377  013476  119B               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  5378  013478  B4D8               	btfsc	status,2,c
  5379  01347A  D011               	goto	l1103
  5380                           
  5381                           ; BSR set to: 0
  5382  01347C  819E               	bsf	___fldiv@grs& (0+255),0,b
  5383                           
  5384                           ; BSR set to: 0
  5385  01347E  D00F               	goto	l1103
  5386  013480                     
  5387                           ; BSR set to: 0
  5388                           
  5389                           ; BSR set to: 0
  5390  013480  90D8               	bcf	status,0,c
  5391  013482  378B               	rlcf	___fldiv@b& (0+255),f,b
  5392  013484  378C               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5393  013486  378D               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5394  013488  378E               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5395                           
  5396                           ; BSR set to: 0
  5397  01348A  BFA1               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  5398                           
  5399                           ; BSR set to: 0
  5400  01348C  818B               	bsf	___fldiv@b& (0+255),0,b
  5401                           
  5402                           ; BSR set to: 0
  5403  01348E  90D8               	bcf	status,0,c
  5404  013490  379E               	rlcf	___fldiv@grs& (0+255),f,b
  5405  013492  379F               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5406  013494  37A0               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5407  013496  37A1               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5408  013498  079C               	decf	___fldiv@new_exp& (0+255),f,b
  5409  01349A  A0D8               	btfss	status,0,c
  5410  01349C  079D               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  5411  01349E                     l1103:
  5412                           
  5413                           ; BSR set to: 0
  5414                           
  5415                           ; BSR set to: 0
  5416  01349E  AF8D               	btfss	(___fldiv@b+2)& (0+255),7,b
  5417  0134A0  D7EF               	goto	l1104
  5418                           
  5419                           ; BSR set to: 0
  5420                           
  5421                           ; BSR set to: 0
  5422  0134A2  0E00               	movlw	0
  5423  0134A4  6FA3               	movwf	___fldiv@aexp& (0+255),b
  5424                           
  5425                           ; BSR set to: 0
  5426  0134A6  AFA1               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5427  0134A8  D016               	goto	l1110
  5428                           
  5429                           ; BSR set to: 0
  5430  0134AA  0EFF               	movlw	255
  5431  0134AC  159E               	andwf	___fldiv@grs& (0+255),w,b
  5432  0134AE  6F93               	movwf	??___fldiv& (0+255),b
  5433  0134B0  0EFF               	movlw	255
  5434  0134B2  159F               	andwf	(___fldiv@grs+1)& (0+255),w,b
  5435  0134B4  6F94               	movwf	(??___fldiv+1)& (0+255),b
  5436  0134B6  0EFF               	movlw	255
  5437  0134B8  15A0               	andwf	(___fldiv@grs+2)& (0+255),w,b
  5438  0134BA  6F95               	movwf	(??___fldiv+2)& (0+255),b
  5439  0134BC  0E7F               	movlw	127
  5440  0134BE  15A1               	andwf	(___fldiv@grs+3)& (0+255),w,b
  5441  0134C0  6F96               	movwf	(??___fldiv+3)& (0+255),b
  5442  0134C2  5193               	movf	??___fldiv& (0+255),w,b
  5443  0134C4  1194               	iorwf	(??___fldiv+1)& (0+255),w,b
  5444  0134C6  1195               	iorwf	(??___fldiv+2)& (0+255),w,b
  5445  0134C8  1196               	iorwf	(??___fldiv+3)& (0+255),w,b
  5446  0134CA  A4D8               	btfss	status,2,c
  5447  0134CC  D002               	goto	u4930
  5448                           
  5449                           ; BSR set to: 0
  5450                           
  5451                           ; BSR set to: 0
  5452  0134CE  A18B               	btfss	___fldiv@b& (0+255),0,b
  5453  0134D0  D002               	goto	l1110
  5454  0134D2                     u4930:
  5455                           
  5456                           ; BSR set to: 0
  5457  0134D2  0E01               	movlw	1
  5458  0134D4  6FA3               	movwf	___fldiv@aexp& (0+255),b
  5459  0134D6                     l1110:
  5460                           
  5461                           ; BSR set to: 0
  5462                           
  5463                           ; BSR set to: 0
  5464                           
  5465                           ; BSR set to: 0
  5466  0134D6  51A3               	movf	___fldiv@aexp& (0+255),w,b
  5467  0134D8  B4D8               	btfsc	status,2,c
  5468  0134DA  D01F               	goto	l1112
  5469                           
  5470                           ; BSR set to: 0
  5471  0134DC  0E01               	movlw	1
  5472  0134DE  278B               	addwf	___fldiv@b& (0+255),f,b
  5473  0134E0  0E00               	movlw	0
  5474  0134E2  238C               	addwfc	(___fldiv@b+1)& (0+255),f,b
  5475  0134E4  238D               	addwfc	(___fldiv@b+2)& (0+255),f,b
  5476  0134E6  238E               	addwfc	(___fldiv@b+3)& (0+255),f,b
  5477                           
  5478                           ; BSR set to: 0
  5479  0134E8  A18E               	btfss	(___fldiv@b+3)& (0+255),0,b
  5480  0134EA  D017               	goto	l1112
  5481                           
  5482                           ; BSR set to: 0
  5483  0134EC  C08B  F093         	movff	___fldiv@b,??___fldiv
  5484  0134F0  C08C  F094         	movff	___fldiv@b+1,??___fldiv+1
  5485  0134F4  C08D  F095         	movff	___fldiv@b+2,??___fldiv+2
  5486  0134F8  C08E  F096         	movff	___fldiv@b+3,??___fldiv+3
  5487  0134FC  3596               	rlcf	(??___fldiv+3)& (0+255),w,b
  5488  0134FE  3396               	rrcf	(??___fldiv+3)& (0+255),f,b
  5489  013500  3395               	rrcf	(??___fldiv+2)& (0+255),f,b
  5490  013502  3394               	rrcf	(??___fldiv+1)& (0+255),f,b
  5491  013504  3393               	rrcf	??___fldiv& (0+255),f,b
  5492  013506  C093  F08B         	movff	??___fldiv,___fldiv@b
  5493  01350A  C094  F08C         	movff	??___fldiv+1,___fldiv@b+1
  5494  01350E  C095  F08D         	movff	??___fldiv+2,___fldiv@b+2
  5495  013512  C096  F08E         	movff	??___fldiv+3,___fldiv@b+3
  5496                           
  5497                           ; BSR set to: 0
  5498  013516  4B9C               	infsnz	___fldiv@new_exp& (0+255),f,b
  5499  013518  2B9D               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  5500  01351A                     l1112:
  5501                           
  5502                           ; BSR set to: 0
  5503                           
  5504                           ; BSR set to: 0
  5505                           
  5506                           ; BSR set to: 0
  5507  01351A  BF9D               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5508  01351C  D010               	goto	l1113
  5509  01351E  519D               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5510  013520  E103               	bnz	u4960
  5511  013522  299C               	incf	___fldiv@new_exp& (0+255),w,b
  5512  013524  A0D8               	btfss	status,0,c
  5513  013526  D00B               	goto	l1113
  5514  013528                     u4960:
  5515                           
  5516                           ; BSR set to: 0
  5517  013528  0E00               	movlw	0
  5518  01352A  6F9D               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5519  01352C  699C               	setf	___fldiv@new_exp& (0+255),b
  5520  01352E  0E00               	movlw	0
  5521  013530  6F8B               	movwf	___fldiv@b& (0+255),b
  5522  013532  0E00               	movlw	0
  5523  013534  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
  5524  013536  0E00               	movlw	0
  5525  013538  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
  5526  01353A  0E00               	movlw	0
  5527  01353C  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
  5528  01353E                     l1113:
  5529                           
  5530                           ; BSR set to: 0
  5531                           
  5532                           ; BSR set to: 0
  5533  01353E  BF9D               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5534  013540  D005               	goto	u4970
  5535  013542  519D               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5536  013544  E111               	bnz	l4300
  5537  013546  059C               	decf	___fldiv@new_exp& (0+255),w,b
  5538  013548  B0D8               	btfsc	status,0,c
  5539  01354A  D00E               	goto	l1114
  5540  01354C                     u4970:
  5541                           
  5542                           ; BSR set to: 0
  5543  01354C  0E00               	movlw	0
  5544  01354E  6F9D               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5545  013550  0E00               	movlw	0
  5546  013552  6F9C               	movwf	___fldiv@new_exp& (0+255),b
  5547  013554  0E00               	movlw	0
  5548  013556  6F8B               	movwf	___fldiv@b& (0+255),b
  5549  013558  0E00               	movlw	0
  5550  01355A  6F8C               	movwf	(___fldiv@b+1)& (0+255),b
  5551  01355C  0E00               	movlw	0
  5552  01355E  6F8D               	movwf	(___fldiv@b+2)& (0+255),b
  5553  013560  0E00               	movlw	0
  5554  013562  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
  5555  013564  0E00               	movlw	0
  5556  013566  6F97               	movwf	___fldiv@sign& (0+255),b
  5557  013568                     l1114:
  5558  013568                     l4300:
  5559                           
  5560                           ; BSR set to: 0
  5561  013568  C09C  F0A2         	movff	___fldiv@new_exp,___fldiv@bexp
  5562                           
  5563                           ; BSR set to: 0
  5564  01356C  A1A2               	btfss	___fldiv@bexp& (0+255),0,b
  5565  01356E  D002               	goto	l1115
  5566                           
  5567                           ; BSR set to: 0
  5568  013570  8F8D               	bsf	(___fldiv@b+2)& (0+255),7,b
  5569  013572  D001               	goto	l1116
  5570  013574                     l1115:
  5571                           
  5572                           ; BSR set to: 0
  5573                           
  5574                           ; BSR set to: 0
  5575  013574  9F8D               	bcf	(___fldiv@b+2)& (0+255),7,b
  5576  013576                     l1116:
  5577                           
  5578                           ; BSR set to: 0
  5579                           
  5580                           ; BSR set to: 0
  5581  013576  90D8               	bcf	status,0,c
  5582  013578  31A2               	rrcf	___fldiv@bexp& (0+255),w,b
  5583  01357A  6F8E               	movwf	(___fldiv@b+3)& (0+255),b
  5584                           
  5585                           ; BSR set to: 0
  5586  01357C  5197               	movf	___fldiv@sign& (0+255),w,b
  5587  01357E  138E               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5588                           
  5589                           ; BSR set to: 0
  5590  013580  C08B  F08B         	movff	___fldiv@b,?___fldiv
  5591  013584  C08C  F08C         	movff	___fldiv@b+1,?___fldiv+1
  5592  013588  C08D  F08D         	movff	___fldiv@b+2,?___fldiv+2
  5593  01358C  C08E  F08E         	movff	___fldiv@b+3,?___fldiv+3
  5594  013590  0012               	return	
  5595  013592                     __end_of___fldiv:
  5596                           	opt stack 0
  5597                           tblptru	equ	0xFF8
  5598                           tblptrh	equ	0xFF7
  5599                           tblptrl	equ	0xFF6
  5600                           tablat	equ	0xFF5
  5601                           prodl	equ	0xFF3
  5602                           intcon	equ	0xFF2
  5603                           postinc0	equ	0xFEE
  5604                           wreg	equ	0xFE8
  5605                           indf1	equ	0xFE7
  5606                           fsr1h	equ	0xFE2
  5607                           fsr1l	equ	0xFE1
  5608                           indf2	equ	0xFDF
  5609                           postinc2	equ	0xFDE
  5610                           postdec2	equ	0xFDD
  5611                           fsr2h	equ	0xFDA
  5612                           fsr2l	equ	0xFD9
  5613                           status	equ	0xFD8
  5614                           
  5615 ;; *************** function _EUSART2_Read *****************
  5616 ;; Defined at:
  5617 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  readValue       1   43[BANK0 ] unsigned char 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      unsigned char 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;Total ram usage:        1 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    5
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_ringBufferPull
  5642 ;;		_getch
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text12
  5647  014D04                     __ptext12:
  5648                           	opt stack 0
  5649  014D04                     _EUSART2_Read:
  5650                           	opt stack 24
  5651                           
  5652                           ;eusart2.c: 132: uint8_t readValue = 0;
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;incstack = 0
  5656  014D04  0E00               	movlw	0
  5657  014D06  0100               	movlb	0	; () banked
  5658  014D08  6F8B               	movwf	EUSART2_Read@readValue& (0+255),b
  5659  014D0A                     
  5660                           ; BSR set to: 0
  5661                           
  5662                           ; BSR set to: 0
  5663                           
  5664                           ;eusart2.c: 135: {
  5665                           
  5666                           ; BSR set to: 0
  5667  014D0A  51D0               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  5668  014D0C  B4D8               	btfsc	status,2,c
  5669  014D0E  D7FD               	goto	l178
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;eusart2.c: 136: }
  5673                           ;eusart2.c: 138: readValue = eusart2RxBuffer[eusart2RxTail++];
  5674                           
  5675                           ; BSR set to: 0
  5676  014D10  51D1               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  5677  014D12  0D01               	mullw	1
  5678  014D14  0E00               	movlw	low _eusart2RxBuffer
  5679  014D16  24F3               	addwf	prodl,w,c
  5680  014D18  6ED9               	movwf	fsr2l,c
  5681  014D1A  0E02               	movlw	high _eusart2RxBuffer
  5682  014D1C  20F4               	addwfc	prodh,w,c
  5683  014D1E  6EDA               	movwf	fsr2h,c
  5684  014D20  50DF               	movf	indf2,w,c
  5685  014D22  6F8B               	movwf	EUSART2_Read@readValue& (0+255),b
  5686                           
  5687                           ; BSR set to: 0
  5688  014D24  2BD1               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;eusart2.c: 139: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  5692  014D26  0E3F               	movlw	63
  5693  014D28  65D1               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  5694  014D2A  D002               	goto	l180
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;eusart2.c: 140: {
  5698                           ;eusart2.c: 141: eusart2RxTail = 0;
  5699  014D2C  0E00               	movlw	0
  5700  014D2E  6FD1               	movwf	_eusart2RxTail& (0+255),b	;volatile
  5701  014D30                     l180:
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;eusart2.c: 142: }
  5705                           ;eusart2.c: 143: PIE3bits.RC2IE = 0;
  5706                           
  5707                           ; BSR set to: 0
  5708  014D30  010E               	movlb	14	; () banked
  5709  014D32  9F2C               	bcf	44,7,b	;volatile
  5710                           
  5711                           ; BSR set to: 14
  5712                           ;eusart2.c: 144: eusart2RxCount--;
  5713  014D34  0100               	movlb	0	; () banked
  5714  014D36  07D0               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  5715                           
  5716                           ; BSR set to: 0
  5717                           ;eusart2.c: 145: PIE3bits.RC2IE = 1;
  5718  014D38  010E               	movlb	14	; () banked
  5719  014D3A  8F2C               	bsf	44,7,b	;volatile
  5720                           
  5721                           ; BSR set to: 14
  5722                           ;eusart2.c: 147: return readValue;
  5723  014D3C  0100               	movlb	0	; () banked
  5724  014D3E  518B               	movf	EUSART2_Read@readValue& (0+255),w,b
  5725  014D40  0012               	return	
  5726  014D42                     __end_of_EUSART2_Read:
  5727                           	opt stack 0
  5728                           tblptru	equ	0xFF8
  5729                           tblptrh	equ	0xFF7
  5730                           tblptrl	equ	0xFF6
  5731                           tablat	equ	0xFF5
  5732                           prodh	equ	0xFF4
  5733                           prodl	equ	0xFF3
  5734                           intcon	equ	0xFF2
  5735                           postinc0	equ	0xFEE
  5736                           wreg	equ	0xFE8
  5737                           indf1	equ	0xFE7
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           postdec2	equ	0xFDD
  5743                           fsr2h	equ	0xFDA
  5744                           fsr2l	equ	0xFD9
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function _printResetMessage *****************
  5748 ;; Defined at:
  5749 ;;		line 50 in file "ring_buffer_interface.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;		None
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;		None
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;Total ram usage:        0 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    8
  5770 ;; This function calls:
  5771 ;;		_printf
  5772 ;; This function is called by:
  5773 ;;		_main
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text13
  5778  014D42                     __ptext13:
  5779                           	opt stack 0
  5780  014D42                     _printResetMessage:
  5781                           	opt stack 22
  5782                           
  5783                           ;ring_buffer_interface.c: 53: printf("\033[2J");
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;incstack = 0
  5787  014D42  0EF1               	movlw	low STR_2
  5788  014D44  0101               	movlb	1	; () banked
  5789  014D46  6F10               	movwf	printf@f& (0+255),b
  5790  014D48  0EFF               	movlw	high STR_2
  5791  014D4A  6F11               	movwf	(printf@f+1)& (0+255),b
  5792  014D4C  EC00  F080         	call	_printf	;wreg free
  5793                           
  5794                           ;ring_buffer_interface.c: 56: printf("\033[H");
  5795  014D50  0EF6               	movlw	low STR_3
  5796  014D52  0101               	movlb	1	; () banked
  5797  014D54  6F10               	movwf	printf@f& (0+255),b
  5798  014D56  0EFF               	movlw	high STR_3
  5799  014D58  6F11               	movwf	(printf@f+1)& (0+255),b
  5800  014D5A  EC00  F080         	call	_printf	;wreg free
  5801                           
  5802                           ;ring_buffer_interface.c: 59: printf("PIC18F67K40 mTouch Demo\n\r"
  5803                           ;ring_buffer_interface.c: 60: "Baud rate: 115200 kbps\n\r"
  5804                           ;ring_buffer_interface.c: 61: "No parity, 8 bits, no flow control, 1 stop bit\n\r"
  5805                           ;ring_buffer_interface.c: 62: "Commands are case sensitive\n\r"
  5806                           ;ring_buffer_interface.c: 63: "Enter a command, or Help for list of commands\n\r");
  5807  014D5E  0EB7               	movlw	low STR_4
  5808  014D60  0101               	movlb	1	; () banked
  5809  014D62  6F10               	movwf	printf@f& (0+255),b
  5810  014D64  0EFD               	movlw	high STR_4
  5811  014D66  6F11               	movwf	(printf@f+1)& (0+255),b
  5812  014D68  EC00  F080         	call	_printf	;wreg free
  5813                           
  5814                           ;ring_buffer_interface.c: 67: printf("\n\r");
  5815  014D6C  0E8A               	movlw	low (STR_16+41)
  5816  014D6E  0101               	movlb	1	; () banked
  5817  014D70  6F10               	movwf	printf@f& (0+255),b
  5818  014D72  0EFF               	movlw	high (STR_16+41)
  5819  014D74  6F11               	movwf	(printf@f+1)& (0+255),b
  5820  014D76  EC00  F080         	call	_printf	;wreg free
  5821  014D7A  0012               	return		;funcret
  5822  014D7C                     __end_of_printResetMessage:
  5823                           	opt stack 0
  5824                           tblptru	equ	0xFF8
  5825                           tblptrh	equ	0xFF7
  5826                           tblptrl	equ	0xFF6
  5827                           tablat	equ	0xFF5
  5828                           prodh	equ	0xFF4
  5829                           prodl	equ	0xFF3
  5830                           intcon	equ	0xFF2
  5831                           postinc0	equ	0xFEE
  5832                           wreg	equ	0xFE8
  5833                           indf1	equ	0xFE7
  5834                           fsr1h	equ	0xFE2
  5835                           fsr1l	equ	0xFE1
  5836                           indf2	equ	0xFDF
  5837                           postinc2	equ	0xFDE
  5838                           postdec2	equ	0xFDD
  5839                           fsr2h	equ	0xFDA
  5840                           fsr2l	equ	0xFD9
  5841                           status	equ	0xFD8
  5842                           
  5843 ;; *************** function _printf *****************
  5844 ;; Defined at:
  5845 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  f               2   16[BANK1 ] PTR const unsigned char 
  5848 ;;		 -> STR_33(3), STR_32(300), STR_31(3), STR_29(4), 
  5849 ;;		 -> STR_28(5), STR_26(3), STR_25(49), STR_24(3), 
  5850 ;;		 -> STR_23(3), STR_22(45), STR_21(3), STR_20(3), 
  5851 ;;		 -> STR_19(65), STR_18(31), STR_17(93), STR_16(44), 
  5852 ;;		 -> STR_15(3), STR_13(3), STR_12(18), STR_11(3), 
  5853 ;;		 -> STR_9(3), STR_8(14), STR_7(3), STR_5(3), 
  5854 ;;		 -> STR_4(174), STR_3(4), STR_2(5), STR_1(4), 
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;  fval            4   42[BANK1 ] PTR const unsigned char 
  5857 ;;  tmpval          4   38[BANK1 ] struct .
  5858 ;;  val             4   32[BANK1 ] unsigned long 
  5859 ;;  cp              3    0        PTR const unsigned char 
  5860 ;;  exp             2   36[BANK1 ] int 
  5861 ;;  prec            2   30[BANK1 ] int 
  5862 ;;  flag            2   28[BANK1 ] unsigned short 
  5863 ;;  ap              2   26[BANK1 ] PTR void [1]
  5864 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5865 ;;  len             2    0        unsigned int 
  5866 ;;  width           2    0        int 
  5867 ;;  c               1   46[BANK1 ] char 
  5868 ;;  d               1    0        unsigned char 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  2   16[BANK1 ] int 
  5871 ;; Registers used:
  5872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5878 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5879 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5881 ;;      Totals:         0       2      31       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5882 ;;Total ram usage:       33 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    7
  5885 ;; This function calls:
  5886 ;;		___awdiv
  5887 ;;		___fladd
  5888 ;;		___flge
  5889 ;;		___flmul
  5890 ;;		___flneg
  5891 ;;		___flsub
  5892 ;;		___fltol
  5893 ;;		___lldiv
  5894 ;;		___llmod
  5895 ;;		___wmul
  5896 ;;		___xxtofl
  5897 ;;		__div_to_l_
  5898 ;;		__tdiv_to_l_
  5899 ;;		_fround
  5900 ;;		_putch
  5901 ;;		_scale
  5902 ;; This function is called by:
  5903 ;;		_printResetMessage
  5904 ;;		_ringBufferLUT
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text14
  5909  010000                     __ptext14:
  5910                           	opt stack 0
  5911  010000                     _printf:
  5912                           	opt stack 21
  5913                           
  5914                           ;doprnt.c: 466: va_list ap;
  5915                           ;doprnt.c: 499: signed char c;
  5916                           ;doprnt.c: 501: int width;
  5917                           ;doprnt.c: 504: int prec;
  5918                           ;doprnt.c: 508: unsigned short flag;
  5919                           ;doprnt.c: 515: char d;
  5920                           ;doprnt.c: 516: double fval;
  5921                           ;doprnt.c: 517: int exp;
  5922                           ;doprnt.c: 523: union {
  5923                           ;doprnt.c: 524: unsigned long vd;
  5924                           ;doprnt.c: 525: double integ;
  5925                           ;doprnt.c: 526: } tmpval;
  5926                           ;doprnt.c: 528: unsigned long val;
  5927                           ;doprnt.c: 529: unsigned len;
  5928                           ;doprnt.c: 530: const char * cp;
  5929                           ;doprnt.c: 533: *ap = __va_start();
  5930                           
  5931                           ;incstack = 0
  5932  010000  0E12               	movlw	low (?_printf+2)
  5933  010002  0101               	movlb	1	; () banked
  5934  010004  6F1A               	movwf	printf@ap& (0+255),b
  5935  010006  0E01               	movlw	high (?_printf+2)
  5936  010008  6F1B               	movwf	(printf@ap+1)& (0+255),b
  5937                           
  5938                           ;doprnt.c: 536: while(c = *f++) {
  5939  01000A  D3C4               	goto	u9260
  5940  01000C                     
  5941                           ; BSR set to: 1
  5942                           ;doprnt.c: 538: if(c != '%')
  5943                           
  5944                           ; BSR set to: 1
  5945  01000C  0E25               	movlw	37
  5946  01000E  192E               	xorwf	printf@c& (0+255),w,b
  5947  010010  B4D8               	btfsc	status,2,c
  5948  010012  D004               	goto	l421
  5949                           
  5950                           ; BSR set to: 1
  5951                           ;doprnt.c: 540: {
  5952                           ;doprnt.c: 541: (putch(c) );
  5953  010014  512E               	movf	printf@c& (0+255),w,b
  5954  010016  ECAF  F0A7         	call	_putch
  5955                           
  5956                           ;doprnt.c: 542: continue;
  5957  01001A  D3BC               	goto	u9260
  5958  01001C                     l421:
  5959                           
  5960                           ;doprnt.c: 543: }
  5961                           ;doprnt.c: 548: flag = 0;
  5962  01001C  0E00               	movlw	0
  5963  01001E  0101               	movlb	1	; () banked
  5964  010020  6F1D               	movwf	(printf@flag+1)& (0+255),b
  5965  010022  0E00               	movlw	0
  5966  010024  6F1C               	movwf	printf@flag& (0+255),b
  5967                           
  5968                           ;doprnt.c: 635: switch(c = *f++) {
  5969  010026  D002               	goto	l422
  5970  010028                     
  5971                           ; BSR set to: 1
  5972                           ;doprnt.c: 663: flag |= 0x400;
  5973                           
  5974                           ; BSR set to: 1
  5975  010028  851D               	bsf	(printf@flag+1)& (0+255),2,b
  5976                           
  5977                           ; BSR set to: 1
  5978                           ;doprnt.c: 698: case 'i':
  5979                           ;doprnt.c: 699: break;
  5980                           
  5981                           ; BSR set to: 1
  5982                           
  5983                           ;doprnt.c: 697: case 'd':
  5984                           
  5985                           ;doprnt.c: 664: break;
  5986  01002A  D018               	goto	l426
  5987  01002C                     l422:
  5988                           
  5989                           ; BSR set to: 1
  5990                           
  5991                           ; BSR set to: 1
  5992  01002C  C110  FFF6         	movff	printf@f,tblptrl
  5993  010030  C111  FFF7         	movff	printf@f+1,tblptrh
  5994  010034  4B10               	infsnz	printf@f& (0+255),f,b
  5995  010036  2B11               	incf	(printf@f+1)& (0+255),f,b
  5996  010038                     	if	0	;tblptru may be non-zero
  5997  010038                     	endif
  5998  010038                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5999  010038  0E00               	movlw	low (__mediumconst shr (0+16))
  6000  01003A  6EF8               	movwf	tblptru,c
  6001  01003C                     	endif
  6002  01003C  0008               	tblrd		*
  6003  01003E  CFF5 F12E          	movff	tablat,printf@c
  6004  010042  512E               	movf	printf@c& (0+255),w,b
  6005                           
  6006                           ; Switch size 1, requested type "space"
  6007                           ; Number of cases is 4, Range of values is 0 to 105
  6008                           ; switch strategies available:
  6009                           ; Name         Instructions Cycles
  6010                           ; simple_byte           13     7 (average)
  6011                           ;	Chosen strategy is simple_byte
  6012  010044  0A00               	xorlw	0	; case 0
  6013  010046  B4D8               	btfsc	status,2,c
  6014  010048  0012               	return	
  6015  01004A  0A64               	xorlw	100	; case 100
  6016  01004C  B4D8               	btfsc	status,2,c
  6017  01004E  D006               	goto	l426
  6018  010050  0A02               	xorlw	2	; case 102
  6019  010052  B4D8               	btfsc	status,2,c
  6020  010054  D7E9               	goto	l425
  6021  010056  0A0F               	xorlw	15	; case 105
  6022  010058  A4D8               	btfss	status,2,c
  6023  01005A  D39C               	goto	u9260
  6024  01005C                     l426:
  6025                           
  6026                           ; BSR set to: 1
  6027                           ;doprnt.c: 825: if(flag & (0x700)) {
  6028                           
  6029                           ; BSR set to: 1
  6030  01005C  0E07               	movlw	7
  6031  01005E  151D               	andwf	(printf@flag+1)& (0+255),w,b
  6032  010060  B4D8               	btfsc	status,2,c
  6033  010062  D2F5               	goto	l430
  6034                           
  6035                           ; BSR set to: 1
  6036                           ;doprnt.c: 829: prec = 6;
  6037  010064  0E00               	movlw	0
  6038  010066  6F1F               	movwf	(printf@prec+1)& (0+255),b
  6039  010068  0E06               	movlw	6
  6040  01006A  6F1E               	movwf	printf@prec& (0+255),b
  6041                           
  6042                           ; BSR set to: 1
  6043                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6044  01006C  C11A  FFD9         	movff	printf@ap,fsr2l
  6045  010070  C11B  FFDA         	movff	printf@ap+1,fsr2h
  6046  010074  CFDE F12A          	movff	postinc2,printf@fval
  6047  010078  CFDE F12B          	movff	postinc2,printf@fval+1
  6048  01007C  CFDE F12C          	movff	postinc2,printf@fval+2
  6049  010080  CFDE F12D          	movff	postinc2,printf@fval+3
  6050                           
  6051                           ; BSR set to: 1
  6052  010084  0E04               	movlw	4
  6053  010086  271A               	addwf	printf@ap& (0+255),f,b
  6054  010088  0E00               	movlw	0
  6055  01008A  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  6056                           
  6057                           ; BSR set to: 1
  6058                           ;doprnt.c: 831: if(fval < 0.0) {
  6059  01008C  AF2D               	btfss	(printf@fval+3)& (0+255),7,b
  6060  01008E  D015               	goto	l431
  6061                           
  6062                           ; BSR set to: 1
  6063                           ;doprnt.c: 832: fval = -fval;
  6064  010090  C12A  F08B         	movff	printf@fval,___flneg@f1
  6065  010094  C12B  F08C         	movff	printf@fval+1,___flneg@f1+1
  6066  010098  C12C  F08D         	movff	printf@fval+2,___flneg@f1+2
  6067  01009C  C12D  F08E         	movff	printf@fval+3,___flneg@f1+3
  6068  0100A0  ECD9  F0A6         	call	___flneg	;wreg free
  6069  0100A4  C08B  F12A         	movff	?___flneg,printf@fval
  6070  0100A8  C08C  F12B         	movff	?___flneg+1,printf@fval+1
  6071  0100AC  C08D  F12C         	movff	?___flneg+2,printf@fval+2
  6072  0100B0  C08E  F12D         	movff	?___flneg+3,printf@fval+3
  6073                           
  6074                           ;doprnt.c: 833: flag |= 0x03;
  6075  0100B4  0E03               	movlw	3
  6076  0100B6  0101               	movlb	1	; () banked
  6077  0100B8  131C               	iorwf	printf@flag& (0+255),f,b
  6078  0100BA                     l431:
  6079                           
  6080                           ; BSR set to: 1
  6081                           ;doprnt.c: 834: }
  6082                           ;doprnt.c: 835: exp = 0;
  6083                           
  6084                           ; BSR set to: 1
  6085  0100BA  0E00               	movlw	0
  6086  0100BC  6F25               	movwf	(printf@exp+1)& (0+255),b
  6087  0100BE  0E00               	movlw	0
  6088  0100C0  6F24               	movwf	printf@exp& (0+255),b
  6089                           
  6090                           ; BSR set to: 1
  6091                           ;doprnt.c: 836: if( fval!=0) {
  6092  0100C2  512A               	movf	printf@fval& (0+255),w,b
  6093  0100C4  112B               	iorwf	(printf@fval+1)& (0+255),w,b
  6094  0100C6  112C               	iorwf	(printf@fval+2)& (0+255),w,b
  6095  0100C8  112D               	iorwf	(printf@fval+3)& (0+255),w,b
  6096  0100CA  B4D8               	btfsc	status,2,c
  6097  0100CC  D088               	goto	l436
  6098                           
  6099                           ; BSR set to: 1
  6100                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6101  0100CE  352C               	rlcf	(printf@fval+2)& (0+255),w,b
  6102  0100D0  352D               	rlcf	(printf@fval+3)& (0+255),w,b
  6103  0100D2  0F82               	addlw	130
  6104  0100D4  6F24               	movwf	printf@exp& (0+255),b
  6105  0100D6  6B25               	clrf	(printf@exp+1)& (0+255),b
  6106  0100D8  0EFF               	movlw	255
  6107  0100DA  2325               	addwfc	(printf@exp+1)& (0+255),f,b
  6108                           
  6109                           ; BSR set to: 1
  6110                           ;doprnt.c: 838: exp--;
  6111  0100DC  0724               	decf	printf@exp& (0+255),f,b
  6112  0100DE  A0D8               	btfss	status,0,c
  6113  0100E0  0725               	decf	(printf@exp+1)& (0+255),f,b
  6114                           
  6115                           ; BSR set to: 1
  6116                           ;doprnt.c: 839: exp *= 3;
  6117  0100E2  C124  F08B         	movff	printf@exp,___wmul@multiplier
  6118  0100E6  C125  F08C         	movff	printf@exp+1,___wmul@multiplier+1
  6119  0100EA  0E00               	movlw	0
  6120  0100EC  0100               	movlb	0	; () banked
  6121  0100EE  6F8E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6122  0100F0  0E03               	movlw	3
  6123  0100F2  6F8D               	movwf	___wmul@multiplicand& (0+255),b
  6124  0100F4  EC31  F0A7         	call	___wmul	;wreg free
  6125  0100F8  C08B  F124         	movff	?___wmul,printf@exp
  6126  0100FC  C08C  F125         	movff	?___wmul+1,printf@exp+1
  6127                           
  6128                           ;doprnt.c: 840: exp /= 10;
  6129  010100  C124  F091         	movff	printf@exp,___awdiv@dividend
  6130  010104  C125  F092         	movff	printf@exp+1,___awdiv@dividend+1
  6131  010108  0E00               	movlw	0
  6132  01010A  0100               	movlb	0	; () banked
  6133  01010C  6F94               	movwf	(___awdiv@divisor+1)& (0+255),b
  6134  01010E  0E0A               	movlw	10
  6135  010110  6F93               	movwf	___awdiv@divisor& (0+255),b
  6136  010112  EC74  F0A3         	call	___awdiv	;wreg free
  6137  010116  C091  F124         	movff	?___awdiv,printf@exp
  6138  01011A  C092  F125         	movff	?___awdiv+1,printf@exp+1
  6139                           
  6140                           ;doprnt.c: 841: if(exp < 0)
  6141  01011E  0101               	movlb	1	; () banked
  6142  010120  AF25               	btfss	(printf@exp+1)& (0+255),7,b
  6143  010122  D003               	goto	l433
  6144                           
  6145                           ; BSR set to: 1
  6146                           ;doprnt.c: 842: exp--;
  6147  010124  0724               	decf	printf@exp& (0+255),f,b
  6148  010126  A0D8               	btfss	status,0,c
  6149  010128  0725               	decf	(printf@exp+1)& (0+255),f,b
  6150  01012A                     l433:
  6151                           
  6152                           ; BSR set to: 1
  6153                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6154                           
  6155                           ; BSR set to: 1
  6156  01012A  5124               	movf	printf@exp& (0+255),w,b
  6157  01012C  0800               	sublw	0
  6158  01012E  ECA5  F08A         	call	_scale
  6159  010132  C0B2  F126         	movff	?_scale,printf@tmpval
  6160  010136  C0B3  F127         	movff	?_scale+1,printf@tmpval+1
  6161  01013A  C0B4  F128         	movff	?_scale+2,printf@tmpval+2
  6162  01013E  C0B5  F129         	movff	?_scale+3,printf@tmpval+3
  6163                           
  6164                           ;doprnt.c: 847: tmpval.integ *= fval;
  6165  010142  C126  F099         	movff	printf@tmpval,___flmul@b
  6166  010146  C127  F09A         	movff	printf@tmpval+1,___flmul@b+1
  6167  01014A  C128  F09B         	movff	printf@tmpval+2,___flmul@b+2
  6168  01014E  C129  F09C         	movff	printf@tmpval+3,___flmul@b+3
  6169  010152  C12A  F09D         	movff	printf@fval,___flmul@a
  6170  010156  C12B  F09E         	movff	printf@fval+1,___flmul@a+1
  6171  01015A  C12C  F09F         	movff	printf@fval+2,___flmul@a+2
  6172  01015E  C12D  F0A0         	movff	printf@fval+3,___flmul@a+3
  6173  010162  EC1C  F093         	call	___flmul	;wreg free
  6174  010166  C099  F126         	movff	?___flmul,printf@tmpval
  6175  01016A  C09A  F127         	movff	?___flmul+1,printf@tmpval+1
  6176  01016E  C09B  F128         	movff	?___flmul+2,printf@tmpval+2
  6177  010172  C09C  F129         	movff	?___flmul+3,printf@tmpval+3
  6178                           
  6179                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6180  010176  C126  F08B         	movff	printf@tmpval,___flge@ff1
  6181  01017A  C127  F08C         	movff	printf@tmpval+1,___flge@ff1+1
  6182  01017E  C128  F08D         	movff	printf@tmpval+2,___flge@ff1+2
  6183  010182  C129  F08E         	movff	printf@tmpval+3,___flge@ff1+3
  6184  010186  0E00               	movlw	0
  6185  010188  0100               	movlb	0	; () banked
  6186  01018A  6F8F               	movwf	___flge@ff2& (0+255),b
  6187  01018C  0E00               	movlw	0
  6188  01018E  6F90               	movwf	(___flge@ff2+1)& (0+255),b
  6189  010190  0E80               	movlw	128
  6190  010192  6F91               	movwf	(___flge@ff2+2)& (0+255),b
  6191  010194  0E3F               	movlw	63
  6192  010196  6F92               	movwf	(___flge@ff2+3)& (0+255),b
  6193  010198  EC6B  F0A0         	call	___flge	;wreg free
  6194  01019C  0100               	movlb	0	; () banked
  6195  01019E  B0D8               	btfsc	status,0,c
  6196  0101A0  D005               	goto	l434
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;doprnt.c: 849: exp--;
  6200  0101A2  0101               	movlb	1	; () banked
  6201  0101A4  0724               	decf	printf@exp& (0+255),f,b
  6202  0101A6  A0D8               	btfss	status,0,c
  6203  0101A8  0725               	decf	(printf@exp+1)& (0+255),f,b
  6204  0101AA  D019               	goto	l436
  6205  0101AC                     l434:
  6206                           
  6207                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6208                           
  6209                           ; BSR set to: 1
  6210  0101AC  C126  F08B         	movff	printf@tmpval,___flge@ff1
  6211  0101B0  C127  F08C         	movff	printf@tmpval+1,___flge@ff1+1
  6212  0101B4  C128  F08D         	movff	printf@tmpval+2,___flge@ff1+2
  6213  0101B8  C129  F08E         	movff	printf@tmpval+3,___flge@ff1+3
  6214  0101BC  0E00               	movlw	0
  6215  0101BE  0100               	movlb	0	; () banked
  6216  0101C0  6F8F               	movwf	___flge@ff2& (0+255),b
  6217  0101C2  0E00               	movlw	0
  6218  0101C4  6F90               	movwf	(___flge@ff2+1)& (0+255),b
  6219  0101C6  0E20               	movlw	32
  6220  0101C8  6F91               	movwf	(___flge@ff2+2)& (0+255),b
  6221  0101CA  0E41               	movlw	65
  6222  0101CC  6F92               	movwf	(___flge@ff2+3)& (0+255),b
  6223  0101CE  EC6B  F0A0         	call	___flge	;wreg free
  6224  0101D2  0100               	movlb	0	; () banked
  6225  0101D4  A0D8               	btfss	status,0,c
  6226  0101D6  D003               	goto	l436
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;doprnt.c: 851: exp++;
  6230  0101D8  0101               	movlb	1	; () banked
  6231  0101DA  4B24               	infsnz	printf@exp& (0+255),f,b
  6232  0101DC  2B25               	incf	(printf@exp+1)& (0+255),f,b
  6233  0101DE                     l436:
  6234                           
  6235                           ;doprnt.c: 852: }
  6236                           ;doprnt.c: 1112: if(prec <= 12)
  6237                           
  6238                           ; BSR set to: 1
  6239                           
  6240                           ; BSR set to: 1
  6241                           
  6242                           ; BSR set to: 1
  6243  0101DE  0101               	movlb	1	; () banked
  6244  0101E0  BF1F               	btfsc	(printf@prec+1)& (0+255),7,b
  6245  0101E2  D006               	goto	u9050
  6246  0101E4  511F               	movf	(printf@prec+1)& (0+255),w,b
  6247  0101E6  E121               	bnz	l6838
  6248  0101E8  0E0D               	movlw	13
  6249  0101EA  5D1E               	subwf	printf@prec& (0+255),w,b
  6250  0101EC  B0D8               	btfsc	status,0,c
  6251  0101EE  D01D               	goto	l437
  6252  0101F0                     u9050:
  6253                           
  6254                           ; BSR set to: 1
  6255                           ;doprnt.c: 1113: fval += fround(prec);
  6256  0101F0  C12A  F0C2         	movff	printf@fval,___fladd@b
  6257  0101F4  C12B  F0C3         	movff	printf@fval+1,___fladd@b+1
  6258  0101F8  C12C  F0C4         	movff	printf@fval+2,___fladd@b+2
  6259  0101FC  C12D  F0C5         	movff	printf@fval+3,___fladd@b+3
  6260  010200  511E               	movf	printf@prec& (0+255),w,b
  6261  010202  EC0B  F098         	call	_fround
  6262  010206  C0B2  F0C6         	movff	?_fround,___fladd@a
  6263  01020A  C0B3  F0C7         	movff	?_fround+1,___fladd@a+1
  6264  01020E  C0B4  F0C8         	movff	?_fround+2,___fladd@a+2
  6265  010212  C0B5  F0C9         	movff	?_fround+3,___fladd@a+3
  6266  010216  EC5E  F091         	call	___fladd	;wreg free
  6267  01021A  C0C2  F12A         	movff	?___fladd,printf@fval
  6268  01021E  C0C3  F12B         	movff	?___fladd+1,printf@fval+1
  6269  010222  C0C4  F12C         	movff	?___fladd+2,printf@fval+2
  6270  010226  C0C5  F12D         	movff	?___fladd+3,printf@fval+3
  6271  01022A                     l437:
  6272  01022A                     l6838:
  6273                           
  6274                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6275  01022A  0101               	movlb	1	; () banked
  6276  01022C  BF25               	btfsc	(printf@exp+1)& (0+255),7,b
  6277  01022E  D006               	goto	u9060
  6278  010230  5125               	movf	(printf@exp+1)& (0+255),w,b
  6279  010232  E124               	bnz	l6846
  6280  010234  0E0A               	movlw	10
  6281  010236  5D24               	subwf	printf@exp& (0+255),w,b
  6282  010238  B0D8               	btfsc	status,0,c
  6283  01023A  D020               	goto	u9090
  6284  01023C                     u9060:
  6285                           
  6286                           ; BSR set to: 1
  6287  01023C  512A               	movf	printf@fval& (0+255),w,b
  6288  01023E  112B               	iorwf	(printf@fval+1)& (0+255),w,b
  6289  010240  112C               	iorwf	(printf@fval+2)& (0+255),w,b
  6290  010242  112D               	iorwf	(printf@fval+3)& (0+255),w,b
  6291  010244  B4D8               	btfsc	status,2,c
  6292  010246  D067               	goto	l438
  6293                           
  6294                           ; BSR set to: 1
  6295  010248  C12A  F0BB         	movff	printf@fval,___fltol@f1
  6296  01024C  C12B  F0BC         	movff	printf@fval+1,___fltol@f1+1
  6297  010250  C12C  F0BD         	movff	printf@fval+2,___fltol@f1+2
  6298  010254  C12D  F0BE         	movff	printf@fval+3,___fltol@f1+3
  6299  010258  EC8C  F0A1         	call	___fltol	;wreg free
  6300  01025C  0100               	movlb	0	; () banked
  6301  01025E  51BB               	movf	?___fltol& (0+255),w,b
  6302  010260  11BC               	iorwf	(?___fltol+1)& (0+255),w,b
  6303  010262  11BD               	iorwf	(?___fltol+2)& (0+255),w,b
  6304  010264  11BE               	iorwf	(?___fltol+3)& (0+255),w,b
  6305  010266  A4D8               	btfss	status,2,c
  6306  010268  D056               	goto	l438
  6307                           
  6308                           ; BSR set to: 0
  6309  01026A  0101               	movlb	1	; () banked
  6310  01026C  BF25               	btfsc	(printf@exp+1)& (0+255),7,b
  6311  01026E  D053               	goto	l438
  6312  010270  5125               	movf	(printf@exp+1)& (0+255),w,b
  6313  010272  E104               	bnz	l6846
  6314  010274  0E02               	movlw	2
  6315  010276  5D24               	subwf	printf@exp& (0+255),w,b
  6316  010278  A0D8               	btfss	status,0,c
  6317  01027A  D04D               	goto	l438
  6318  01027C                     u9090:
  6319  01027C                     l6846:
  6320                           
  6321                           ; BSR set to: 1
  6322                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6323  01027C  C126  F08B         	movff	printf@tmpval,___flge@ff1
  6324  010280  C127  F08C         	movff	printf@tmpval+1,___flge@ff1+1
  6325  010284  C128  F08D         	movff	printf@tmpval+2,___flge@ff1+2
  6326  010288  C129  F08E         	movff	printf@tmpval+3,___flge@ff1+3
  6327  01028C  0E5F               	movlw	95
  6328  01028E  0100               	movlb	0	; () banked
  6329  010290  6F8F               	movwf	___flge@ff2& (0+255),b
  6330  010292  0E70               	movlw	112
  6331  010294  6F90               	movwf	(___flge@ff2+1)& (0+255),b
  6332  010296  0E89               	movlw	137
  6333  010298  6F91               	movwf	(___flge@ff2+2)& (0+255),b
  6334  01029A  0E40               	movlw	64
  6335  01029C  6F92               	movwf	(___flge@ff2+3)& (0+255),b
  6336  01029E  EC6B  F0A0         	call	___flge	;wreg free
  6337  0102A2  0100               	movlb	0	; () banked
  6338  0102A4  B0D8               	btfsc	status,0,c
  6339  0102A6  D003               	goto	l441
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6343  0102A8  0101               	movlb	1	; () banked
  6344  0102AA  0EF7               	movlw	247
  6345  0102AC  D002               	goto	L4
  6346  0102AE                     l441:
  6347                           
  6348                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6349                           
  6350                           ; BSR set to: 1
  6351  0102AE  0101               	movlb	1	; () banked
  6352  0102B0  0EF8               	movlw	248
  6353  0102B2                     L4:
  6354  0102B2  2724               	addwf	printf@exp& (0+255),f,b
  6355  0102B4  0EFF               	movlw	255
  6356  0102B6  2325               	addwfc	(printf@exp+1)& (0+255),f,b
  6357                           
  6358                           ; BSR set to: 1
  6359                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6360                           
  6361                           ; BSR set to: 1
  6362  0102B8  5124               	movf	printf@exp& (0+255),w,b
  6363  0102BA  ECA5  F08A         	call	_scale
  6364  0102BE  C0B2  F126         	movff	?_scale,printf@tmpval
  6365  0102C2  C0B3  F127         	movff	?_scale+1,printf@tmpval+1
  6366  0102C6  C0B4  F128         	movff	?_scale+2,printf@tmpval+2
  6367  0102CA  C0B5  F129         	movff	?_scale+3,printf@tmpval+3
  6368  0102CE  C12A  F08B         	movff	printf@fval,__div_to_l_@f1
  6369  0102D2  C12B  F08C         	movff	printf@fval+1,__div_to_l_@f1+1
  6370  0102D6  C12C  F08D         	movff	printf@fval+2,__div_to_l_@f1+2
  6371  0102DA  C12D  F08E         	movff	printf@fval+3,__div_to_l_@f1+3
  6372  0102DE  C126  F08F         	movff	printf@tmpval,__div_to_l_@f2
  6373  0102E2  C127  F090         	movff	printf@tmpval+1,__div_to_l_@f2+1
  6374  0102E6  C128  F091         	movff	printf@tmpval+2,__div_to_l_@f2+2
  6375  0102EA  C129  F092         	movff	printf@tmpval+3,__div_to_l_@f2+3
  6376  0102EE  EC42  F09F         	call	__div_to_l_	;wreg free
  6377  0102F2  C08B  F120         	movff	?__div_to_l_,printf@val
  6378  0102F6  C08C  F121         	movff	?__div_to_l_+1,printf@val+1
  6379  0102FA  C08D  F122         	movff	?__div_to_l_+2,printf@val+2
  6380  0102FE  C08E  F123         	movff	?__div_to_l_+3,printf@val+3
  6381                           
  6382                           ;doprnt.c: 1129: fval = 0.0;
  6383  010302  0E00               	movlw	0
  6384  010304  0101               	movlb	1	; () banked
  6385  010306  6F2A               	movwf	printf@fval& (0+255),b
  6386  010308  0E00               	movlw	0
  6387  01030A  6F2B               	movwf	(printf@fval+1)& (0+255),b
  6388  01030C  0E00               	movlw	0
  6389  01030E  6F2C               	movwf	(printf@fval+2)& (0+255),b
  6390  010310  0E00               	movlw	0
  6391  010312  6F2D               	movwf	(printf@fval+3)& (0+255),b
  6392                           
  6393                           ;doprnt.c: 1130: } else {
  6394  010314  D03C               	goto	l447
  6395  010316                     l438:
  6396                           
  6397                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6398                           
  6399                           ; BSR set to: 1
  6400  010316  C12A  F0BB         	movff	printf@fval,___fltol@f1
  6401  01031A  C12B  F0BC         	movff	printf@fval+1,___fltol@f1+1
  6402  01031E  C12C  F0BD         	movff	printf@fval+2,___fltol@f1+2
  6403  010322  C12D  F0BE         	movff	printf@fval+3,___fltol@f1+3
  6404  010326  EC8C  F0A1         	call	___fltol	;wreg free
  6405  01032A  C0BB  F120         	movff	?___fltol,printf@val
  6406  01032E  C0BC  F121         	movff	?___fltol+1,printf@val+1
  6407  010332  C0BD  F122         	movff	?___fltol+2,printf@val+2
  6408  010336  C0BE  F123         	movff	?___fltol+3,printf@val+3
  6409                           
  6410                           ;doprnt.c: 1132: fval -= (double)val;
  6411  01033A  C12A  F108         	movff	printf@fval,___flsub@b
  6412  01033E  C12B  F109         	movff	printf@fval+1,___flsub@b+1
  6413  010342  C12C  F10A         	movff	printf@fval+2,___flsub@b+2
  6414  010346  C12D  F10B         	movff	printf@fval+3,___flsub@b+3
  6415  01034A  C120  F098         	movff	printf@val,___xxtofl@val
  6416  01034E  C121  F099         	movff	printf@val+1,___xxtofl@val+1
  6417  010352  C122  F09A         	movff	printf@val+2,___xxtofl@val+2
  6418  010356  C123  F09B         	movff	printf@val+3,___xxtofl@val+3
  6419  01035A  0E00               	movlw	0
  6420  01035C  EC20  F09C         	call	___xxtofl
  6421  010360  C098  F10C         	movff	?___xxtofl,___flsub@a
  6422  010364  C099  F10D         	movff	?___xxtofl+1,___flsub@a+1
  6423  010368  C09A  F10E         	movff	?___xxtofl+2,___flsub@a+2
  6424  01036C  C09B  F10F         	movff	?___xxtofl+3,___flsub@a+3
  6425  010370  ECD9  F0A5         	call	___flsub	;wreg free
  6426  010374  C108  F12A         	movff	?___flsub,printf@fval
  6427  010378  C109  F12B         	movff	?___flsub+1,printf@fval+1
  6428  01037C  C10A  F12C         	movff	?___flsub+2,printf@fval+2
  6429  010380  C10B  F12D         	movff	?___flsub+3,printf@fval+3
  6430                           
  6431                           ;doprnt.c: 1133: exp = 0;
  6432  010384  0E00               	movlw	0
  6433  010386  0101               	movlb	1	; () banked
  6434  010388  6F25               	movwf	(printf@exp+1)& (0+255),b
  6435  01038A  0E00               	movlw	0
  6436  01038C  6F24               	movwf	printf@exp& (0+255),b
  6437  01038E                     l447:
  6438                           
  6439                           ; BSR set to: 1
  6440                           ;doprnt.c: 1134: }
  6441                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6442                           
  6443                           ; BSR set to: 1
  6444  01038E  0E01               	movlw	1
  6445  010390  6F2E               	movwf	printf@c& (0+255),b
  6446  010392                     l6866:
  6447                           
  6448                           ; BSR set to: 1
  6449  010392  0E0A               	movlw	10
  6450  010394  192E               	xorwf	printf@c& (0+255),w,b
  6451  010396  B4D8               	btfsc	status,2,c
  6452  010398  D01B               	goto	u9130
  6453                           
  6454                           ; BSR set to: 1
  6455                           ;doprnt.c: 1137: if(val < dpowers[c])
  6456                           
  6457                           ; BSR set to: 1
  6458                           
  6459                           ; BSR set to: 1
  6460  01039A  512E               	movf	printf@c& (0+255),w,b
  6461  01039C  0D04               	mullw	4
  6462  01039E  0E63               	movlw	low _dpowers
  6463  0103A0  24F3               	addwf	prodl,w,c
  6464  0103A2  6EF6               	movwf	tblptrl,c
  6465  0103A4  0EFC               	movlw	high _dpowers
  6466  0103A6  20F4               	addwfc	prodh,w,c
  6467  0103A8  6EF7               	movwf	tblptrh,c
  6468  0103AA                     	if	1	;There are 3 active tblptr bytes
  6469  0103AA  6AF8               	clrf	tblptru,c
  6470  0103AC  0E00               	movlw	low (__mediumconst shr (0+16))
  6471  0103AE  22F8               	addwfc	tblptru,f,c
  6472  0103B0                     	endif
  6473  0103B0  0009               	tblrd		*+
  6474  0103B2  50F5               	movf	tablat,w,c
  6475  0103B4  5D20               	subwf	printf@val& (0+255),w,b
  6476  0103B6  0009               	tblrd		*+
  6477  0103B8  50F5               	movf	tablat,w,c
  6478  0103BA  5921               	subwfb	(printf@val+1)& (0+255),w,b
  6479  0103BC  0009               	tblrd		*+
  6480  0103BE  50F5               	movf	tablat,w,c
  6481  0103C0  5922               	subwfb	(printf@val+2)& (0+255),w,b
  6482  0103C2  0009               	tblrd		*+
  6483  0103C4  50F5               	movf	tablat,w,c
  6484  0103C6  5923               	subwfb	(printf@val+3)& (0+255),w,b
  6485  0103C8  A0D8               	btfss	status,0,c
  6486  0103CA  D002               	goto	u9130
  6487                           
  6488                           ; BSR set to: 1
  6489                           
  6490                           ; BSR set to: 1
  6491                           
  6492                           ; BSR set to: 1
  6493                           ;doprnt.c: 1138: break;
  6494  0103CC  2B2E               	incf	printf@c& (0+255),f,b
  6495  0103CE  D7E1               	goto	l6866
  6496  0103D0                     u9130:
  6497                           
  6498                           ; BSR set to: 1
  6499                           ;doprnt.c: 1175: {
  6500                           ;doprnt.c: 1188: if(flag & 0x03)
  6501                           
  6502                           ; BSR set to: 1
  6503  0103D0  0E03               	movlw	3
  6504  0103D2  151C               	andwf	printf@flag& (0+255),w,b
  6505  0103D4  0100               	movlb	0	; () banked
  6506  0103D6  6FCE               	movwf	??_printf& (0+255),b
  6507  0103D8  0E00               	movlw	0
  6508  0103DA  0101               	movlb	1	; () banked
  6509  0103DC  151D               	andwf	(printf@flag+1)& (0+255),w,b
  6510  0103DE  0100               	movlb	0	; () banked
  6511  0103E0  6FCF               	movwf	(??_printf+1)& (0+255),b
  6512  0103E2  51CE               	movf	??_printf& (0+255),w,b
  6513  0103E4  11CF               	iorwf	(??_printf+1)& (0+255),w,b
  6514  0103E6  B4D8               	btfsc	status,2,c
  6515  0103E8  D04E               	goto	l452
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;doprnt.c: 1190: (putch('-') );
  6519  0103EA  0E2D               	movlw	45
  6520  0103EC  ECAF  F0A7         	call	_putch
  6521                           
  6522                           ;doprnt.c: 1195: }
  6523                           ;doprnt.c: 1196: while(c--) {
  6524  0103F0  D04A               	goto	l452
  6525  0103F2                     
  6526                           ;doprnt.c: 1200: {
  6527                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6528  0103F2  C120  F08B         	movff	printf@val,___lldiv@dividend
  6529  0103F6  C121  F08C         	movff	printf@val+1,___lldiv@dividend+1
  6530  0103FA  C122  F08D         	movff	printf@val+2,___lldiv@dividend+2
  6531  0103FE  C123  F08E         	movff	printf@val+3,___lldiv@dividend+3
  6532  010402  0101               	movlb	1	; () banked
  6533  010404  512E               	movf	printf@c& (0+255),w,b
  6534  010406  0D04               	mullw	4
  6535  010408  0E63               	movlw	low _dpowers
  6536  01040A  24F3               	addwf	prodl,w,c
  6537  01040C  6EF6               	movwf	tblptrl,c
  6538  01040E  0EFC               	movlw	high _dpowers
  6539  010410  20F4               	addwfc	prodh,w,c
  6540  010412  6EF7               	movwf	tblptrh,c
  6541  010414                     	if	1	;There are 3 active tblptr bytes
  6542  010414  6AF8               	clrf	tblptru,c
  6543  010416  0E00               	movlw	low (__mediumconst shr (0+16))
  6544  010418  22F8               	addwfc	tblptru,f,c
  6545  01041A                     	endif
  6546  01041A  0009               	tblrd		*+
  6547  01041C  CFF5 F08F          	movff	tablat,___lldiv@divisor
  6548  010420  0009               	tblrd		*+
  6549  010422  CFF5 F090          	movff	tablat,___lldiv@divisor+1
  6550  010426  0009               	tblrd		*+
  6551  010428  CFF5 F091          	movff	tablat,___lldiv@divisor+2
  6552  01042C  000A               	tblrd		*-
  6553  01042E  CFF5 F092          	movff	tablat,___lldiv@divisor+3
  6554  010432  ECB7  F0A3         	call	___lldiv	;wreg free
  6555  010436  C08B  F126         	movff	?___lldiv,printf@tmpval
  6556  01043A  C08C  F127         	movff	?___lldiv+1,printf@tmpval+1
  6557  01043E  C08D  F128         	movff	?___lldiv+2,printf@tmpval+2
  6558  010442  C08E  F129         	movff	?___lldiv+3,printf@tmpval+3
  6559                           
  6560                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6561  010446  C126  F098         	movff	printf@tmpval,___llmod@dividend
  6562  01044A  C127  F099         	movff	printf@tmpval+1,___llmod@dividend+1
  6563  01044E  C128  F09A         	movff	printf@tmpval+2,___llmod@dividend+2
  6564  010452  C129  F09B         	movff	printf@tmpval+3,___llmod@dividend+3
  6565  010456  0E0A               	movlw	10
  6566  010458  0100               	movlb	0	; () banked
  6567  01045A  6F9C               	movwf	___llmod@divisor& (0+255),b
  6568  01045C  0E00               	movlw	0
  6569  01045E  6F9D               	movwf	(___llmod@divisor+1)& (0+255),b
  6570  010460  0E00               	movlw	0
  6571  010462  6F9E               	movwf	(___llmod@divisor+2)& (0+255),b
  6572  010464  0E00               	movlw	0
  6573  010466  6F9F               	movwf	(___llmod@divisor+3)& (0+255),b
  6574  010468  ECED  F0A4         	call	___llmod	;wreg free
  6575  01046C  C098  F126         	movff	?___llmod,printf@tmpval
  6576  010470  C099  F127         	movff	?___llmod+1,printf@tmpval+1
  6577  010474  C09A  F128         	movff	?___llmod+2,printf@tmpval+2
  6578  010478  C09B  F129         	movff	?___llmod+3,printf@tmpval+3
  6579                           
  6580                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  6581  01047C  0101               	movlb	1	; () banked
  6582  01047E  5126               	movf	printf@tmpval& (0+255),w,b
  6583  010480  0F30               	addlw	48
  6584  010482  ECAF  F0A7         	call	_putch
  6585  010486                     l452:
  6586  010486  0101               	movlb	1	; () banked
  6587  010488  072E               	decf	printf@c& (0+255),f,b
  6588  01048A  292E               	incf	printf@c& (0+255),w,b
  6589  01048C  B4D8               	btfsc	status,2,c
  6590  01048E  D008               	goto	l455
  6591  010490  D7B0               	goto	l453
  6592  010492                     l6890:
  6593                           
  6594                           ; BSR set to: 1
  6595                           ;doprnt.c: 1208: (putch('0') );
  6596  010492  0E30               	movlw	48
  6597  010494  ECAF  F0A7         	call	_putch
  6598                           
  6599                           ;doprnt.c: 1209: exp--;
  6600  010498  0101               	movlb	1	; () banked
  6601  01049A  0724               	decf	printf@exp& (0+255),f,b
  6602  01049C  A0D8               	btfss	status,0,c
  6603  01049E  0725               	decf	(printf@exp+1)& (0+255),f,b
  6604  0104A0                     l455:
  6605                           
  6606                           ; BSR set to: 1
  6607                           
  6608                           ; BSR set to: 1
  6609  0104A0  BF25               	btfsc	(printf@exp+1)& (0+255),7,b
  6610  0104A2  D005               	goto	u9160
  6611  0104A4  5125               	movf	(printf@exp+1)& (0+255),w,b
  6612  0104A6  E1F5               	bnz	l6890
  6613  0104A8  0524               	decf	printf@exp& (0+255),w,b
  6614  0104AA  B0D8               	btfsc	status,0,c
  6615  0104AC  D7F2               	goto	l456
  6616  0104AE                     u9160:
  6617                           
  6618                           ; BSR set to: 1
  6619                           ;doprnt.c: 1210: }
  6620                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6621                           
  6622                           ; BSR set to: 1
  6623  0104AE  BF1F               	btfsc	(printf@prec+1)& (0+255),7,b
  6624  0104B0  D009               	goto	l458
  6625  0104B2  511F               	movf	(printf@prec+1)& (0+255),w,b
  6626  0104B4  E104               	bnz	u9170
  6627  0104B6  0E09               	movlw	9
  6628  0104B8  5D1E               	subwf	printf@prec& (0+255),w,b
  6629  0104BA  A0D8               	btfss	status,0,c
  6630  0104BC  D003               	goto	l458
  6631  0104BE                     u9170:
  6632                           
  6633                           ; BSR set to: 1
  6634                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6635  0104BE  0E08               	movlw	8
  6636  0104C0  6F2E               	movwf	printf@c& (0+255),b
  6637  0104C2  D002               	goto	l459
  6638  0104C4                     l458:
  6639                           
  6640                           ; BSR set to: 1
  6641                           ;doprnt.c: 1213: else
  6642                           ;doprnt.c: 1214: c = prec;
  6643  0104C4  C11E  F12E         	movff	printf@prec,printf@c
  6644  0104C8                     l459:
  6645                           
  6646                           ; BSR set to: 1
  6647                           ;doprnt.c: 1215: prec -= c;
  6648                           
  6649                           ; BSR set to: 1
  6650  0104C8  512E               	movf	printf@c& (0+255),w,b
  6651  0104CA  5F1E               	subwf	printf@prec& (0+255),f,b
  6652  0104CC  0E00               	movlw	0
  6653  0104CE  BF2E               	btfsc	printf@c& (0+255),7,b
  6654  0104D0  0EFF               	movlw	255
  6655  0104D2  5B1F               	subwfb	(printf@prec+1)& (0+255),f,b
  6656                           
  6657                           ; BSR set to: 1
  6658                           ;doprnt.c: 1219: if(c)
  6659  0104D4  512E               	movf	printf@c& (0+255),w,b
  6660  0104D6  B4D8               	btfsc	status,2,c
  6661  0104D8  D003               	goto	l460
  6662                           
  6663                           ; BSR set to: 1
  6664                           ;doprnt.c: 1221: (putch('.') );
  6665  0104DA  0E2E               	movlw	46
  6666  0104DC  ECAF  F0A7         	call	_putch
  6667  0104E0                     l460:
  6668                           
  6669                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6670  0104E0  0101               	movlb	1	; () banked
  6671  0104E2  512E               	movf	printf@c& (0+255),w,b
  6672  0104E4  ECA5  F08A         	call	_scale
  6673  0104E8  C0B2  F116         	movff	?_scale,_printf$1379
  6674  0104EC  C0B3  F117         	movff	?_scale+1,_printf$1379+1
  6675  0104F0  C0B4  F118         	movff	?_scale+2,_printf$1379+2
  6676  0104F4  C0B5  F119         	movff	?_scale+3,_printf$1379+3
  6677                           
  6678                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6679  0104F8  C12A  F09D         	movff	printf@fval,___flmul@a
  6680  0104FC  C12B  F09E         	movff	printf@fval+1,___flmul@a+1
  6681  010500  C12C  F09F         	movff	printf@fval+2,___flmul@a+2
  6682  010504  C12D  F0A0         	movff	printf@fval+3,___flmul@a+3
  6683  010508  C116  F099         	movff	_printf$1379,___flmul@b
  6684  01050C  C117  F09A         	movff	_printf$1379+1,___flmul@b+1
  6685  010510  C118  F09B         	movff	_printf$1379+2,___flmul@b+2
  6686  010514  C119  F09C         	movff	_printf$1379+3,___flmul@b+3
  6687  010518  EC1C  F093         	call	___flmul	;wreg free
  6688  01051C  C099  F0BB         	movff	?___flmul,___fltol@f1
  6689  010520  C09A  F0BC         	movff	?___flmul+1,___fltol@f1+1
  6690  010524  C09B  F0BD         	movff	?___flmul+2,___fltol@f1+2
  6691  010528  C09C  F0BE         	movff	?___flmul+3,___fltol@f1+3
  6692  01052C  EC8C  F0A1         	call	___fltol	;wreg free
  6693  010530  C0BB  F120         	movff	?___fltol,printf@val
  6694  010534  C0BC  F121         	movff	?___fltol+1,printf@val+1
  6695  010538  C0BD  F122         	movff	?___fltol+2,printf@val+2
  6696  01053C  C0BE  F123         	movff	?___fltol+3,printf@val+3
  6697                           
  6698                           ;doprnt.c: 1228: while(c--) {
  6699  010540  D074               	goto	l461
  6700  010542                     
  6701                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6702  010542  C120  F08B         	movff	printf@val,___lldiv@dividend
  6703  010546  C121  F08C         	movff	printf@val+1,___lldiv@dividend+1
  6704  01054A  C122  F08D         	movff	printf@val+2,___lldiv@dividend+2
  6705  01054E  C123  F08E         	movff	printf@val+3,___lldiv@dividend+3
  6706  010552  0101               	movlb	1	; () banked
  6707  010554  512E               	movf	printf@c& (0+255),w,b
  6708  010556  0D04               	mullw	4
  6709  010558  0E63               	movlw	low _dpowers
  6710  01055A  24F3               	addwf	prodl,w,c
  6711  01055C  6EF6               	movwf	tblptrl,c
  6712  01055E  0EFC               	movlw	high _dpowers
  6713  010560  20F4               	addwfc	prodh,w,c
  6714  010562  6EF7               	movwf	tblptrh,c
  6715  010564                     	if	1	;There are 3 active tblptr bytes
  6716  010564  6AF8               	clrf	tblptru,c
  6717  010566  0E00               	movlw	low (__mediumconst shr (0+16))
  6718  010568  22F8               	addwfc	tblptru,f,c
  6719  01056A                     	endif
  6720  01056A  0009               	tblrd		*+
  6721  01056C  CFF5 F08F          	movff	tablat,___lldiv@divisor
  6722  010570  0009               	tblrd		*+
  6723  010572  CFF5 F090          	movff	tablat,___lldiv@divisor+1
  6724  010576  0009               	tblrd		*+
  6725  010578  CFF5 F091          	movff	tablat,___lldiv@divisor+2
  6726  01057C  000A               	tblrd		*-
  6727  01057E  CFF5 F092          	movff	tablat,___lldiv@divisor+3
  6728  010582  ECB7  F0A3         	call	___lldiv	;wreg free
  6729  010586  C08B  F126         	movff	?___lldiv,printf@tmpval
  6730  01058A  C08C  F127         	movff	?___lldiv+1,printf@tmpval+1
  6731  01058E  C08D  F128         	movff	?___lldiv+2,printf@tmpval+2
  6732  010592  C08E  F129         	movff	?___lldiv+3,printf@tmpval+3
  6733                           
  6734                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6735  010596  C126  F098         	movff	printf@tmpval,___llmod@dividend
  6736  01059A  C127  F099         	movff	printf@tmpval+1,___llmod@dividend+1
  6737  01059E  C128  F09A         	movff	printf@tmpval+2,___llmod@dividend+2
  6738  0105A2  C129  F09B         	movff	printf@tmpval+3,___llmod@dividend+3
  6739  0105A6  0E0A               	movlw	10
  6740  0105A8  0100               	movlb	0	; () banked
  6741  0105AA  6F9C               	movwf	___llmod@divisor& (0+255),b
  6742  0105AC  0E00               	movlw	0
  6743  0105AE  6F9D               	movwf	(___llmod@divisor+1)& (0+255),b
  6744  0105B0  0E00               	movlw	0
  6745  0105B2  6F9E               	movwf	(___llmod@divisor+2)& (0+255),b
  6746  0105B4  0E00               	movlw	0
  6747  0105B6  6F9F               	movwf	(___llmod@divisor+3)& (0+255),b
  6748  0105B8  ECED  F0A4         	call	___llmod	;wreg free
  6749  0105BC  C098  F126         	movff	?___llmod,printf@tmpval
  6750  0105C0  C099  F127         	movff	?___llmod+1,printf@tmpval+1
  6751  0105C4  C09A  F128         	movff	?___llmod+2,printf@tmpval+2
  6752  0105C8  C09B  F129         	movff	?___llmod+3,printf@tmpval+3
  6753                           
  6754                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  6755  0105CC  0101               	movlb	1	; () banked
  6756  0105CE  5126               	movf	printf@tmpval& (0+255),w,b
  6757  0105D0  0F30               	addlw	48
  6758  0105D2  ECAF  F0A7         	call	_putch
  6759                           
  6760                           ;doprnt.c: 1232: val %= dpowers[c];
  6761  0105D6  C120  F098         	movff	printf@val,___llmod@dividend
  6762  0105DA  C121  F099         	movff	printf@val+1,___llmod@dividend+1
  6763  0105DE  C122  F09A         	movff	printf@val+2,___llmod@dividend+2
  6764  0105E2  C123  F09B         	movff	printf@val+3,___llmod@dividend+3
  6765  0105E6  0101               	movlb	1	; () banked
  6766  0105E8  512E               	movf	printf@c& (0+255),w,b
  6767  0105EA  0D04               	mullw	4
  6768  0105EC  0E63               	movlw	low _dpowers
  6769  0105EE  24F3               	addwf	prodl,w,c
  6770  0105F0  6EF6               	movwf	tblptrl,c
  6771  0105F2  0EFC               	movlw	high _dpowers
  6772  0105F4  20F4               	addwfc	prodh,w,c
  6773  0105F6  6EF7               	movwf	tblptrh,c
  6774  0105F8                     	if	1	;There are 3 active tblptr bytes
  6775  0105F8  6AF8               	clrf	tblptru,c
  6776  0105FA  0E00               	movlw	low (__mediumconst shr (0+16))
  6777  0105FC  22F8               	addwfc	tblptru,f,c
  6778  0105FE                     	endif
  6779  0105FE  0009               	tblrd		*+
  6780  010600  CFF5 F09C          	movff	tablat,___llmod@divisor
  6781  010604  0009               	tblrd		*+
  6782  010606  CFF5 F09D          	movff	tablat,___llmod@divisor+1
  6783  01060A  0009               	tblrd		*+
  6784  01060C  CFF5 F09E          	movff	tablat,___llmod@divisor+2
  6785  010610  000A               	tblrd		*-
  6786  010612  CFF5 F09F          	movff	tablat,___llmod@divisor+3
  6787  010616  ECED  F0A4         	call	___llmod	;wreg free
  6788  01061A  C098  F120         	movff	?___llmod,printf@val
  6789  01061E  C099  F121         	movff	?___llmod+1,printf@val+1
  6790  010622  C09A  F122         	movff	?___llmod+2,printf@val+2
  6791  010626  C09B  F123         	movff	?___llmod+3,printf@val+3
  6792  01062A                     l461:
  6793  01062A  0101               	movlb	1	; () banked
  6794  01062C  072E               	decf	printf@c& (0+255),f,b
  6795  01062E  292E               	incf	printf@c& (0+255),w,b
  6796  010630  B4D8               	btfsc	status,2,c
  6797  010632  D008               	goto	l464
  6798  010634  D786               	goto	l462
  6799  010636                     
  6800                           ; BSR set to: 1
  6801                           ;doprnt.c: 1236: (putch('0') );
  6802                           
  6803                           ; BSR set to: 1
  6804  010636  0E30               	movlw	48
  6805  010638  ECAF  F0A7         	call	_putch
  6806                           
  6807                           ;doprnt.c: 1237: prec--;
  6808  01063C  0101               	movlb	1	; () banked
  6809  01063E  071E               	decf	printf@prec& (0+255),f,b
  6810  010640  A0D8               	btfss	status,0,c
  6811  010642  071F               	decf	(printf@prec+1)& (0+255),f,b
  6812  010644                     l464:
  6813                           
  6814                           ; BSR set to: 1
  6815                           
  6816                           ; BSR set to: 1
  6817  010644  511E               	movf	printf@prec& (0+255),w,b
  6818  010646  111F               	iorwf	(printf@prec+1)& (0+255),w,b
  6819  010648  B4D8               	btfsc	status,2,c
  6820  01064A  D0A4               	goto	u9260
  6821  01064C  D7F4               	goto	l465
  6822  01064E                     l430:
  6823                           
  6824                           ; BSR set to: 1
  6825                           ;doprnt.c: 1246: }
  6826                           ;doprnt.c: 1253: {
  6827                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6828                           
  6829                           ; BSR set to: 1
  6830  01064E  C11A  FFD9         	movff	printf@ap,fsr2l
  6831  010652  C11B  FFDA         	movff	printf@ap+1,fsr2h
  6832  010656  CFDE F120          	movff	postinc2,printf@val
  6833  01065A  CFDD F121          	movff	postdec2,printf@val+1
  6834  01065E  0E00               	movlw	0
  6835  010660  BF21               	btfsc	(printf@val+1)& (0+255),7,b
  6836  010662  0EFF               	movlw	-1
  6837  010664  6F22               	movwf	(printf@val+2)& (0+255),b
  6838  010666  6F23               	movwf	(printf@val+3)& (0+255),b
  6839                           
  6840                           ; BSR set to: 1
  6841  010668  0E02               	movlw	2
  6842  01066A  271A               	addwf	printf@ap& (0+255),f,b
  6843  01066C  0E00               	movlw	0
  6844  01066E  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  6845                           
  6846                           ; BSR set to: 1
  6847                           ;doprnt.c: 1261: if((long)val < 0) {
  6848  010670  AF23               	btfss	(printf@val+3)& (0+255),7,b
  6849  010672  D00A               	goto	l467
  6850                           
  6851                           ; BSR set to: 1
  6852                           ;doprnt.c: 1262: flag |= 0x03;
  6853  010674  0E03               	movlw	3
  6854  010676  131C               	iorwf	printf@flag& (0+255),f,b
  6855                           
  6856                           ; BSR set to: 1
  6857                           ;doprnt.c: 1263: val = -val;
  6858  010678  1F23               	comf	(printf@val+3)& (0+255),f,b
  6859  01067A  1F22               	comf	(printf@val+2)& (0+255),f,b
  6860  01067C  1F21               	comf	(printf@val+1)& (0+255),f,b
  6861  01067E  6D20               	negf	printf@val& (0+255),b
  6862  010680  0E00               	movlw	0
  6863  010682  2321               	addwfc	(printf@val+1)& (0+255),f,b
  6864  010684  2322               	addwfc	(printf@val+2)& (0+255),f,b
  6865  010686  2323               	addwfc	(printf@val+3)& (0+255),f,b
  6866  010688                     l467:
  6867                           
  6868                           ; BSR set to: 1
  6869                           ;doprnt.c: 1264: }
  6870                           ;doprnt.c: 1266: }
  6871                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6872                           
  6873                           ; BSR set to: 1
  6874  010688  0E01               	movlw	1
  6875  01068A  6F2E               	movwf	printf@c& (0+255),b
  6876  01068C                     l6938:
  6877                           
  6878                           ; BSR set to: 1
  6879  01068C  0E0A               	movlw	10
  6880  01068E  192E               	xorwf	printf@c& (0+255),w,b
  6881  010690  B4D8               	btfsc	status,2,c
  6882  010692  D01B               	goto	u9240
  6883                           
  6884                           ; BSR set to: 1
  6885                           ;doprnt.c: 1306: if(val < dpowers[c])
  6886                           
  6887                           ; BSR set to: 1
  6888                           
  6889                           ; BSR set to: 1
  6890  010694  512E               	movf	printf@c& (0+255),w,b
  6891  010696  0D04               	mullw	4
  6892  010698  0E63               	movlw	low _dpowers
  6893  01069A  24F3               	addwf	prodl,w,c
  6894  01069C  6EF6               	movwf	tblptrl,c
  6895  01069E  0EFC               	movlw	high _dpowers
  6896  0106A0  20F4               	addwfc	prodh,w,c
  6897  0106A2  6EF7               	movwf	tblptrh,c
  6898  0106A4                     	if	1	;There are 3 active tblptr bytes
  6899  0106A4  6AF8               	clrf	tblptru,c
  6900  0106A6  0E00               	movlw	low (__mediumconst shr (0+16))
  6901  0106A8  22F8               	addwfc	tblptru,f,c
  6902  0106AA                     	endif
  6903  0106AA  0009               	tblrd		*+
  6904  0106AC  50F5               	movf	tablat,w,c
  6905  0106AE  5D20               	subwf	printf@val& (0+255),w,b
  6906  0106B0  0009               	tblrd		*+
  6907  0106B2  50F5               	movf	tablat,w,c
  6908  0106B4  5921               	subwfb	(printf@val+1)& (0+255),w,b
  6909  0106B6  0009               	tblrd		*+
  6910  0106B8  50F5               	movf	tablat,w,c
  6911  0106BA  5922               	subwfb	(printf@val+2)& (0+255),w,b
  6912  0106BC  0009               	tblrd		*+
  6913  0106BE  50F5               	movf	tablat,w,c
  6914  0106C0  5923               	subwfb	(printf@val+3)& (0+255),w,b
  6915  0106C2  A0D8               	btfss	status,0,c
  6916  0106C4  D002               	goto	u9240
  6917                           
  6918                           ; BSR set to: 1
  6919                           
  6920                           ; BSR set to: 1
  6921                           
  6922                           ; BSR set to: 1
  6923                           ;doprnt.c: 1307: break;
  6924  0106C6  2B2E               	incf	printf@c& (0+255),f,b
  6925  0106C8  D7E1               	goto	l6938
  6926  0106CA                     u9240:
  6927                           
  6928                           ; BSR set to: 1
  6929                           ;doprnt.c: 1422: {
  6930                           ;doprnt.c: 1438: if(flag & 0x03)
  6931                           
  6932                           ; BSR set to: 1
  6933  0106CA  0E03               	movlw	3
  6934  0106CC  151C               	andwf	printf@flag& (0+255),w,b
  6935  0106CE  0100               	movlb	0	; () banked
  6936  0106D0  6FCE               	movwf	??_printf& (0+255),b
  6937  0106D2  0E00               	movlw	0
  6938  0106D4  0101               	movlb	1	; () banked
  6939  0106D6  151D               	andwf	(printf@flag+1)& (0+255),w,b
  6940  0106D8  0100               	movlb	0	; () banked
  6941  0106DA  6FCF               	movwf	(??_printf+1)& (0+255),b
  6942  0106DC  51CE               	movf	??_printf& (0+255),w,b
  6943  0106DE  11CF               	iorwf	(??_printf+1)& (0+255),w,b
  6944  0106E0  B4D8               	btfsc	status,2,c
  6945  0106E2  D003               	goto	l471
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;doprnt.c: 1439: (putch('-') );
  6949  0106E4  0E2D               	movlw	45
  6950  0106E6  ECAF  F0A7         	call	_putch
  6951  0106EA                     l471:
  6952                           
  6953                           ;doprnt.c: 1469: }
  6954                           ;doprnt.c: 1472: prec = c;
  6955  0106EA  0101               	movlb	1	; () banked
  6956  0106EC  512E               	movf	printf@c& (0+255),w,b
  6957  0106EE  6F1E               	movwf	printf@prec& (0+255),b
  6958  0106F0  6B1F               	clrf	(printf@prec+1)& (0+255),b
  6959  0106F2  BF1E               	btfsc	printf@prec& (0+255),7,b
  6960  0106F4  071F               	decf	(printf@prec+1)& (0+255),f,b
  6961                           
  6962                           ;doprnt.c: 1474: while(prec--) {
  6963  0106F6  D045               	goto	l472
  6964  0106F8                     l6956:
  6965                           
  6966                           ; BSR set to: 1
  6967                           ;doprnt.c: 1478: {
  6968                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6969  0106F8  C11E  F0CE         	movff	printf@prec,??_printf
  6970  0106FC  C11F  F0CF         	movff	printf@prec+1,??_printf+1
  6971  010700  0100               	movlb	0	; () banked
  6972  010702  90D8               	bcf	status,0,c
  6973  010704  37CE               	rlcf	??_printf& (0+255),f,b
  6974  010706  37CF               	rlcf	(??_printf+1)& (0+255),f,b
  6975  010708  90D8               	bcf	status,0,c
  6976  01070A  37CE               	rlcf	??_printf& (0+255),f,b
  6977  01070C  37CF               	rlcf	(??_printf+1)& (0+255),f,b
  6978  01070E  0E63               	movlw	low _dpowers
  6979  010710  25CE               	addwf	??_printf& (0+255),w,b
  6980  010712  6EF6               	movwf	tblptrl,c
  6981  010714  0EFC               	movlw	high _dpowers
  6982  010716  21CF               	addwfc	(??_printf+1)& (0+255),w,b
  6983  010718  6EF7               	movwf	tblptrh,c
  6984  01071A                     	if	1	;There are 3 active tblptr bytes
  6985  01071A  6AF8               	clrf	tblptru,c
  6986  01071C  0E00               	movlw	low (__mediumconst shr (0+16))
  6987  01071E  22F8               	addwfc	tblptru,f,c
  6988  010720                     	endif
  6989  010720  0009               	tblrd		*+
  6990  010722  CFF5 F08F          	movff	tablat,___lldiv@divisor
  6991  010726  0009               	tblrd		*+
  6992  010728  CFF5 F090          	movff	tablat,___lldiv@divisor+1
  6993  01072C  0009               	tblrd		*+
  6994  01072E  CFF5 F091          	movff	tablat,___lldiv@divisor+2
  6995  010732  000A               	tblrd		*-
  6996  010734  CFF5 F092          	movff	tablat,___lldiv@divisor+3
  6997  010738  C120  F08B         	movff	printf@val,___lldiv@dividend
  6998  01073C  C121  F08C         	movff	printf@val+1,___lldiv@dividend+1
  6999  010740  C122  F08D         	movff	printf@val+2,___lldiv@dividend+2
  7000  010744  C123  F08E         	movff	printf@val+3,___lldiv@dividend+3
  7001  010748  ECB7  F0A3         	call	___lldiv	;wreg free
  7002  01074C  C08B  F098         	movff	?___lldiv,___llmod@dividend
  7003  010750  C08C  F099         	movff	?___lldiv+1,___llmod@dividend+1
  7004  010754  C08D  F09A         	movff	?___lldiv+2,___llmod@dividend+2
  7005  010758  C08E  F09B         	movff	?___lldiv+3,___llmod@dividend+3
  7006  01075C  0E0A               	movlw	10
  7007  01075E  0100               	movlb	0	; () banked
  7008  010760  6F9C               	movwf	___llmod@divisor& (0+255),b
  7009  010762  0E00               	movlw	0
  7010  010764  6F9D               	movwf	(___llmod@divisor+1)& (0+255),b
  7011  010766  0E00               	movlw	0
  7012  010768  6F9E               	movwf	(___llmod@divisor+2)& (0+255),b
  7013  01076A  0E00               	movlw	0
  7014  01076C  6F9F               	movwf	(___llmod@divisor+3)& (0+255),b
  7015  01076E  ECED  F0A4         	call	___llmod	;wreg free
  7016  010772  0100               	movlb	0	; () banked
  7017  010774  5198               	movf	?___llmod& (0+255),w,b
  7018  010776  0F30               	addlw	48
  7019  010778  0101               	movlb	1	; () banked
  7020  01077A  6F2E               	movwf	printf@c& (0+255),b
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;doprnt.c: 1523: }
  7024                           ;doprnt.c: 1524: (putch(c) );
  7025  01077C  512E               	movf	printf@c& (0+255),w,b
  7026  01077E  ECAF  F0A7         	call	_putch
  7027  010782                     l472:
  7028  010782  0101               	movlb	1	; () banked
  7029  010784  071E               	decf	printf@prec& (0+255),f,b
  7030  010786  A0D8               	btfss	status,0,c
  7031  010788  071F               	decf	(printf@prec+1)& (0+255),f,b
  7032  01078A  291E               	incf	printf@prec& (0+255),w,b
  7033  01078C  E1B5               	bnz	l6956
  7034  01078E  291F               	incf	(printf@prec+1)& (0+255),w,b
  7035  010790  A4D8               	btfss	status,2,c
  7036  010792  D7B2               	goto	l473
  7037  010794                     u9260:
  7038                           
  7039                           ; BSR set to: 1
  7040                           
  7041                           ; BSR set to: 1
  7042  010794  C110  FFF6         	movff	printf@f,tblptrl
  7043  010798  C111  FFF7         	movff	printf@f+1,tblptrh
  7044  01079C  0101               	movlb	1	; () banked
  7045  01079E  4B10               	infsnz	printf@f& (0+255),f,b
  7046  0107A0  2B11               	incf	(printf@f+1)& (0+255),f,b
  7047  0107A2                     	if	0	;tblptru may be non-zero
  7048  0107A2                     	endif
  7049  0107A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7050  0107A2  0E00               	movlw	low (__mediumconst shr (0+16))
  7051  0107A4  6EF8               	movwf	tblptru,c
  7052  0107A6                     	endif
  7053  0107A6  0008               	tblrd		*
  7054  0107A8  CFF5 F12E          	movff	tablat,printf@c
  7055  0107AC  512E               	movf	printf@c& (0+255),w,b
  7056  0107AE  B4D8               	btfsc	status,2,c
  7057  0107B0  0012               	return	
  7058  0107B2  D42C               	goto	l420
  7059  0107B4                     __end_of_printf:
  7060                           	opt stack 0
  7061                           tblptru	equ	0xFF8
  7062                           tblptrh	equ	0xFF7
  7063                           tblptrl	equ	0xFF6
  7064                           tablat	equ	0xFF5
  7065                           prodh	equ	0xFF4
  7066                           prodl	equ	0xFF3
  7067                           intcon	equ	0xFF2
  7068                           postinc0	equ	0xFEE
  7069                           wreg	equ	0xFE8
  7070                           indf1	equ	0xFE7
  7071                           fsr1h	equ	0xFE2
  7072                           fsr1l	equ	0xFE1
  7073                           indf2	equ	0xFDF
  7074                           postinc2	equ	0xFDE
  7075                           postdec2	equ	0xFDD
  7076                           fsr2h	equ	0xFDA
  7077                           fsr2l	equ	0xFD9
  7078                           status	equ	0xFD8
  7079                           
  7080 ;; *************** function _scale *****************
  7081 ;; Defined at:
  7082 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  scl             1    wreg     char 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  scl             1   90[BANK0 ] char 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  4   82[BANK0 ] char 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7096 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7097 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7099 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7100 ;;Total ram usage:        9 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    6
  7103 ;; This function calls:
  7104 ;;		___awdiv
  7105 ;;		___awmod
  7106 ;;		___flmul
  7107 ;; This function is called by:
  7108 ;;		_printf
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text15
  7113  01154A                     __ptext15:
  7114                           	opt stack 0
  7115  01154A                     _scale:
  7116                           	opt stack 21
  7117                           
  7118                           ; BSR set to: 1
  7119                           ;incstack = 0
  7120                           ;scale@scl stored from wreg
  7121  01154A  0100               	movlb	0	; () banked
  7122  01154C  6FBA               	movwf	scale@scl& (0+255),b
  7123                           
  7124                           ;doprnt.c: 428: if(scl < 0) {
  7125  01154E  0100               	movlb	0	; () banked
  7126  011550  AFBA               	btfss	scale@scl& (0+255),7,b
  7127  011552  D127               	goto	l409
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;doprnt.c: 429: scl = -scl;
  7131  011554  6DBA               	negf	scale@scl& (0+255),b
  7132                           
  7133                           ;doprnt.c: 430: if(scl>=110)
  7134  011556  51BA               	movf	scale@scl& (0+255),w,b
  7135  011558  0A80               	xorlw	128
  7136  01155A  0F12               	addlw	-238
  7137  01155C  A0D8               	btfss	status,0,c
  7138  01155E  D0A5               	goto	l410
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7142  011560  0E00               	movlw	0
  7143  011562  6F94               	movwf	(___awdiv@divisor+1)& (0+255),b
  7144  011564  0E0A               	movlw	10
  7145  011566  6F93               	movwf	___awdiv@divisor& (0+255),b
  7146  011568  0E00               	movlw	0
  7147  01156A  6F8E               	movwf	(___awmod@divisor+1)& (0+255),b
  7148  01156C  0E64               	movlw	100
  7149  01156E  6F8D               	movwf	___awmod@divisor& (0+255),b
  7150  011570  51BA               	movf	scale@scl& (0+255),w,b
  7151  011572  6F8B               	movwf	___awmod@dividend& (0+255),b
  7152  011574  6B8C               	clrf	(___awmod@dividend+1)& (0+255),b
  7153  011576  BF8B               	btfsc	___awmod@dividend& (0+255),7,b
  7154  011578  078C               	decf	(___awmod@dividend+1)& (0+255),f,b
  7155  01157A  EC7C  F0A4         	call	___awmod	;wreg free
  7156  01157E  C08B  F091         	movff	?___awmod,___awdiv@dividend
  7157  011582  C08C  F092         	movff	?___awmod+1,___awdiv@dividend+1
  7158  011586  EC74  F0A3         	call	___awdiv	;wreg free
  7159  01158A  0100               	movlb	0	; () banked
  7160  01158C  90D8               	bcf	status,0,c
  7161  01158E  3791               	rlcf	?___awdiv& (0+255),f,b
  7162  011590  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7163  011592  90D8               	bcf	status,0,c
  7164  011594  3791               	rlcf	?___awdiv& (0+255),f,b
  7165  011596  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7166  011598  0E24               	movlw	36
  7167  01159A  2791               	addwf	?___awdiv& (0+255),f,b
  7168  01159C  0E00               	movlw	0
  7169  01159E  2392               	addwfc	(?___awdiv+1)& (0+255),f,b
  7170  0115A0  0E2F               	movlw	low __npowers_
  7171  0115A2  2591               	addwf	?___awdiv& (0+255),w,b
  7172  0115A4  6EF6               	movwf	tblptrl,c
  7173  0115A6  0EFC               	movlw	high __npowers_
  7174  0115A8  2192               	addwfc	(?___awdiv+1)& (0+255),w,b
  7175  0115AA  6EF7               	movwf	tblptrh,c
  7176  0115AC                     	if	1	;There are 3 active tblptr bytes
  7177  0115AC  6AF8               	clrf	tblptru,c
  7178  0115AE  0E00               	movlw	low (__mediumconst shr (0+16))
  7179  0115B0  22F8               	addwfc	tblptru,f,c
  7180  0115B2                     	endif
  7181  0115B2  0009               	tblrd		*+
  7182  0115B4  CFF5 F09D          	movff	tablat,___flmul@a
  7183  0115B8  0009               	tblrd		*+
  7184  0115BA  CFF5 F09E          	movff	tablat,___flmul@a+1
  7185  0115BE  0009               	tblrd		*+
  7186  0115C0  CFF5 F09F          	movff	tablat,___flmul@a+2
  7187  0115C4  000A               	tblrd		*-
  7188  0115C6  CFF5 F0A0          	movff	tablat,___flmul@a+3
  7189  0115CA  0E00               	movlw	0
  7190  0115CC  6F94               	movwf	(___awdiv@divisor+1)& (0+255),b
  7191  0115CE  0E64               	movlw	100
  7192  0115D0  6F93               	movwf	___awdiv@divisor& (0+255),b
  7193  0115D2  51BA               	movf	scale@scl& (0+255),w,b
  7194  0115D4  6F91               	movwf	___awdiv@dividend& (0+255),b
  7195  0115D6  6B92               	clrf	(___awdiv@dividend+1)& (0+255),b
  7196  0115D8  BF91               	btfsc	___awdiv@dividend& (0+255),7,b
  7197  0115DA  0792               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7198  0115DC  EC74  F0A3         	call	___awdiv	;wreg free
  7199  0115E0  0100               	movlb	0	; () banked
  7200  0115E2  90D8               	bcf	status,0,c
  7201  0115E4  3791               	rlcf	?___awdiv& (0+255),f,b
  7202  0115E6  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7203  0115E8  90D8               	bcf	status,0,c
  7204  0115EA  3791               	rlcf	?___awdiv& (0+255),f,b
  7205  0115EC  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7206  0115EE  0E48               	movlw	72
  7207  0115F0  2791               	addwf	?___awdiv& (0+255),f,b
  7208  0115F2  0E00               	movlw	0
  7209  0115F4  2392               	addwfc	(?___awdiv+1)& (0+255),f,b
  7210  0115F6  0E2F               	movlw	low __npowers_
  7211  0115F8  2591               	addwf	?___awdiv& (0+255),w,b
  7212  0115FA  6EF6               	movwf	tblptrl,c
  7213  0115FC  0EFC               	movlw	high __npowers_
  7214  0115FE  2192               	addwfc	(?___awdiv+1)& (0+255),w,b
  7215  011600  6EF7               	movwf	tblptrh,c
  7216  011602                     	if	1	;There are 3 active tblptr bytes
  7217  011602  6AF8               	clrf	tblptru,c
  7218  011604  0E00               	movlw	low (__mediumconst shr (0+16))
  7219  011606  22F8               	addwfc	tblptru,f,c
  7220  011608                     	endif
  7221  011608  0009               	tblrd		*+
  7222  01160A  CFF5 F099          	movff	tablat,___flmul@b
  7223  01160E  0009               	tblrd		*+
  7224  011610  CFF5 F09A          	movff	tablat,___flmul@b+1
  7225  011614  0009               	tblrd		*+
  7226  011616  CFF5 F09B          	movff	tablat,___flmul@b+2
  7227  01161A  000A               	tblrd		*-
  7228  01161C  CFF5 F09C          	movff	tablat,___flmul@b+3
  7229  011620  EC1C  F093         	call	___flmul	;wreg free
  7230  011624  C099  F0B6         	movff	?___flmul,_scale$1378
  7231  011628  C09A  F0B7         	movff	?___flmul+1,_scale$1378+1
  7232  01162C  C09B  F0B8         	movff	?___flmul+2,_scale$1378+2
  7233  011630  C09C  F0B9         	movff	?___flmul+3,_scale$1378+3
  7234                           
  7235                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7236  011634  C0B6  F099         	movff	_scale$1378,___flmul@b
  7237  011638  C0B7  F09A         	movff	_scale$1378+1,___flmul@b+1
  7238  01163C  C0B8  F09B         	movff	_scale$1378+2,___flmul@b+2
  7239  011640  C0B9  F09C         	movff	_scale$1378+3,___flmul@b+3
  7240  011644  0E00               	movlw	0
  7241  011646  0100               	movlb	0	; () banked
  7242  011648  6F8E               	movwf	(___awmod@divisor+1)& (0+255),b
  7243  01164A  0E0A               	movlw	10
  7244  01164C  6F8D               	movwf	___awmod@divisor& (0+255),b
  7245  01164E  51BA               	movf	scale@scl& (0+255),w,b
  7246  011650  6F8B               	movwf	___awmod@dividend& (0+255),b
  7247  011652  6B8C               	clrf	(___awmod@dividend+1)& (0+255),b
  7248  011654  BF8B               	btfsc	___awmod@dividend& (0+255),7,b
  7249  011656  078C               	decf	(___awmod@dividend+1)& (0+255),f,b
  7250  011658  EC7C  F0A4         	call	___awmod	;wreg free
  7251  01165C  0100               	movlb	0	; () banked
  7252  01165E  90D8               	bcf	status,0,c
  7253  011660  378B               	rlcf	?___awmod& (0+255),f,b
  7254  011662  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  7255  011664  90D8               	bcf	status,0,c
  7256  011666  378B               	rlcf	?___awmod& (0+255),f,b
  7257  011668  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  7258  01166A  0E2F               	movlw	low __npowers_
  7259  01166C  258B               	addwf	?___awmod& (0+255),w,b
  7260  01166E  6EF6               	movwf	tblptrl,c
  7261  011670  0EFC               	movlw	high __npowers_
  7262  011672  218C               	addwfc	(?___awmod+1)& (0+255),w,b
  7263  011674  6EF7               	movwf	tblptrh,c
  7264  011676                     	if	1	;There are 3 active tblptr bytes
  7265  011676  6AF8               	clrf	tblptru,c
  7266  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7267  01167A  22F8               	addwfc	tblptru,f,c
  7268  01167C                     	endif
  7269  01167C  0009               	tblrd		*+
  7270  01167E  CFF5 F09D          	movff	tablat,___flmul@a
  7271  011682  0009               	tblrd		*+
  7272  011684  CFF5 F09E          	movff	tablat,___flmul@a+1
  7273  011688  0009               	tblrd		*+
  7274  01168A  CFF5 F09F          	movff	tablat,___flmul@a+2
  7275  01168E  000A               	tblrd		*-
  7276  011690  CFF5 F0A0          	movff	tablat,___flmul@a+3
  7277  011694  EC1C  F093         	call	___flmul	;wreg free
  7278  011698  C099  F0B2         	movff	?___flmul,?_scale
  7279  01169C  C09A  F0B3         	movff	?___flmul+1,?_scale+1
  7280  0116A0  C09B  F0B4         	movff	?___flmul+2,?_scale+2
  7281  0116A4  C09C  F0B5         	movff	?___flmul+3,?_scale+3
  7282  0116A8  0012               	return	
  7283  0116AA                     l410:
  7284                           
  7285                           ;doprnt.c: 432: else if(scl > 10)
  7286  0116AA  0100               	movlb	0	; () banked
  7287  0116AC  51BA               	movf	scale@scl& (0+255),w,b
  7288  0116AE  0A80               	xorlw	128
  7289  0116B0  0F75               	addlw	-139
  7290  0116B2  A0D8               	btfss	status,0,c
  7291  0116B4  D05D               	goto	l413
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7295  0116B6  0E00               	movlw	0
  7296  0116B8  6F94               	movwf	(___awdiv@divisor+1)& (0+255),b
  7297  0116BA  0E0A               	movlw	10
  7298  0116BC  6F93               	movwf	___awdiv@divisor& (0+255),b
  7299  0116BE  51BA               	movf	scale@scl& (0+255),w,b
  7300  0116C0  6F91               	movwf	___awdiv@dividend& (0+255),b
  7301  0116C2  6B92               	clrf	(___awdiv@dividend+1)& (0+255),b
  7302  0116C4  BF91               	btfsc	___awdiv@dividend& (0+255),7,b
  7303  0116C6  0792               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7304  0116C8  EC74  F0A3         	call	___awdiv	;wreg free
  7305  0116CC  0100               	movlb	0	; () banked
  7306  0116CE  90D8               	bcf	status,0,c
  7307  0116D0  3791               	rlcf	?___awdiv& (0+255),f,b
  7308  0116D2  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7309  0116D4  90D8               	bcf	status,0,c
  7310  0116D6  3791               	rlcf	?___awdiv& (0+255),f,b
  7311  0116D8  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7312  0116DA  0E24               	movlw	36
  7313  0116DC  2791               	addwf	?___awdiv& (0+255),f,b
  7314  0116DE  0E00               	movlw	0
  7315  0116E0  2392               	addwfc	(?___awdiv+1)& (0+255),f,b
  7316  0116E2  0E2F               	movlw	low __npowers_
  7317  0116E4  2591               	addwf	?___awdiv& (0+255),w,b
  7318  0116E6  6EF6               	movwf	tblptrl,c
  7319  0116E8  0EFC               	movlw	high __npowers_
  7320  0116EA  2192               	addwfc	(?___awdiv+1)& (0+255),w,b
  7321  0116EC  6EF7               	movwf	tblptrh,c
  7322  0116EE                     	if	1	;There are 3 active tblptr bytes
  7323  0116EE  6AF8               	clrf	tblptru,c
  7324  0116F0  0E00               	movlw	low (__mediumconst shr (0+16))
  7325  0116F2  22F8               	addwfc	tblptru,f,c
  7326  0116F4                     	endif
  7327  0116F4  0009               	tblrd		*+
  7328  0116F6  CFF5 F099          	movff	tablat,___flmul@b
  7329  0116FA  0009               	tblrd		*+
  7330  0116FC  CFF5 F09A          	movff	tablat,___flmul@b+1
  7331  011700  0009               	tblrd		*+
  7332  011702  CFF5 F09B          	movff	tablat,___flmul@b+2
  7333  011706  000A               	tblrd		*-
  7334  011708  CFF5 F09C          	movff	tablat,___flmul@b+3
  7335  01170C  0E00               	movlw	0
  7336  01170E  6F8E               	movwf	(___awmod@divisor+1)& (0+255),b
  7337  011710  0E0A               	movlw	10
  7338  011712  6F8D               	movwf	___awmod@divisor& (0+255),b
  7339  011714  51BA               	movf	scale@scl& (0+255),w,b
  7340  011716  6F8B               	movwf	___awmod@dividend& (0+255),b
  7341  011718  6B8C               	clrf	(___awmod@dividend+1)& (0+255),b
  7342  01171A  BF8B               	btfsc	___awmod@dividend& (0+255),7,b
  7343  01171C  078C               	decf	(___awmod@dividend+1)& (0+255),f,b
  7344  01171E  EC7C  F0A4         	call	___awmod	;wreg free
  7345  011722  0100               	movlb	0	; () banked
  7346  011724  90D8               	bcf	status,0,c
  7347  011726  378B               	rlcf	?___awmod& (0+255),f,b
  7348  011728  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  7349  01172A  90D8               	bcf	status,0,c
  7350  01172C  378B               	rlcf	?___awmod& (0+255),f,b
  7351  01172E  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  7352  011730  0E2F               	movlw	low __npowers_
  7353  011732  258B               	addwf	?___awmod& (0+255),w,b
  7354  011734  6EF6               	movwf	tblptrl,c
  7355  011736  0EFC               	movlw	high __npowers_
  7356  011738  218C               	addwfc	(?___awmod+1)& (0+255),w,b
  7357  01173A  6EF7               	movwf	tblptrh,c
  7358  01173C                     	if	1	;There are 3 active tblptr bytes
  7359  01173C  6AF8               	clrf	tblptru,c
  7360  01173E  0E00               	movlw	low (__mediumconst shr (0+16))
  7361  011740  22F8               	addwfc	tblptru,f,c
  7362  011742                     	endif
  7363  011742  0009               	tblrd		*+
  7364  011744  CFF5 F09D          	movff	tablat,___flmul@a
  7365  011748  0009               	tblrd		*+
  7366  01174A  CFF5 F09E          	movff	tablat,___flmul@a+1
  7367  01174E  0009               	tblrd		*+
  7368  011750  CFF5 F09F          	movff	tablat,___flmul@a+2
  7369  011754  000A               	tblrd		*-
  7370  011756  CFF5 F0A0          	movff	tablat,___flmul@a+3
  7371  01175A  EC1C  F093         	call	___flmul	;wreg free
  7372  01175E  C099  F0B2         	movff	?___flmul,?_scale
  7373  011762  C09A  F0B3         	movff	?___flmul+1,?_scale+1
  7374  011766  C09B  F0B4         	movff	?___flmul+2,?_scale+2
  7375  01176A  C09C  F0B5         	movff	?___flmul+3,?_scale+3
  7376  01176E  0012               	return	
  7377  011770                     l413:
  7378                           
  7379                           ;doprnt.c: 434: return _npowers_[scl];
  7380  011770  0100               	movlb	0	; () banked
  7381  011772  51BA               	movf	scale@scl& (0+255),w,b
  7382  011774  0D04               	mullw	4
  7383  011776  0E2F               	movlw	low __npowers_
  7384  011778  24F3               	addwf	prodl,w,c
  7385  01177A  6EF6               	movwf	tblptrl,c
  7386  01177C  0EFC               	movlw	high __npowers_
  7387  01177E  20F4               	addwfc	prodh,w,c
  7388  011780  6EF7               	movwf	tblptrh,c
  7389  011782                     	if	1	;There are 3 active tblptr bytes
  7390  011782  6AF8               	clrf	tblptru,c
  7391  011784  0E00               	movlw	low (__mediumconst shr (0+16))
  7392  011786  22F8               	addwfc	tblptru,f,c
  7393  011788                     	endif
  7394  011788  0009               	tblrd		*+
  7395  01178A  CFF5 F0B2          	movff	tablat,?_scale
  7396  01178E  0009               	tblrd		*+
  7397  011790  CFF5 F0B3          	movff	tablat,?_scale+1
  7398  011794  0009               	tblrd		*+
  7399  011796  CFF5 F0B4          	movff	tablat,?_scale+2
  7400  01179A  000A               	tblrd		*-
  7401  01179C  CFF5 F0B5          	movff	tablat,?_scale+3
  7402                           
  7403                           ; BSR set to: 0
  7404  0117A0  0012               	return	
  7405  0117A2                     l409:
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;doprnt.c: 435: }
  7409                           ;doprnt.c: 436: if(scl>=110)
  7410                           
  7411                           ; BSR set to: 0
  7412  0117A2  51BA               	movf	scale@scl& (0+255),w,b
  7413  0117A4  0A80               	xorlw	128
  7414  0117A6  0F12               	addlw	-238
  7415  0117A8  A0D8               	btfss	status,0,c
  7416  0117AA  D0A5               	goto	l414
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7420  0117AC  0E00               	movlw	0
  7421  0117AE  6F94               	movwf	(___awdiv@divisor+1)& (0+255),b
  7422  0117B0  0E0A               	movlw	10
  7423  0117B2  6F93               	movwf	___awdiv@divisor& (0+255),b
  7424  0117B4  0E00               	movlw	0
  7425  0117B6  6F8E               	movwf	(___awmod@divisor+1)& (0+255),b
  7426  0117B8  0E64               	movlw	100
  7427  0117BA  6F8D               	movwf	___awmod@divisor& (0+255),b
  7428  0117BC  51BA               	movf	scale@scl& (0+255),w,b
  7429  0117BE  6F8B               	movwf	___awmod@dividend& (0+255),b
  7430  0117C0  6B8C               	clrf	(___awmod@dividend+1)& (0+255),b
  7431  0117C2  BF8B               	btfsc	___awmod@dividend& (0+255),7,b
  7432  0117C4  078C               	decf	(___awmod@dividend+1)& (0+255),f,b
  7433  0117C6  EC7C  F0A4         	call	___awmod	;wreg free
  7434  0117CA  C08B  F091         	movff	?___awmod,___awdiv@dividend
  7435  0117CE  C08C  F092         	movff	?___awmod+1,___awdiv@dividend+1
  7436  0117D2  EC74  F0A3         	call	___awdiv	;wreg free
  7437  0117D6  0100               	movlb	0	; () banked
  7438  0117D8  90D8               	bcf	status,0,c
  7439  0117DA  3791               	rlcf	?___awdiv& (0+255),f,b
  7440  0117DC  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7441  0117DE  90D8               	bcf	status,0,c
  7442  0117E0  3791               	rlcf	?___awdiv& (0+255),f,b
  7443  0117E2  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7444  0117E4  0E24               	movlw	36
  7445  0117E6  2791               	addwf	?___awdiv& (0+255),f,b
  7446  0117E8  0E00               	movlw	0
  7447  0117EA  2392               	addwfc	(?___awdiv+1)& (0+255),f,b
  7448  0117EC  0EFB               	movlw	low __powers_
  7449  0117EE  2591               	addwf	?___awdiv& (0+255),w,b
  7450  0117F0  6EF6               	movwf	tblptrl,c
  7451  0117F2  0EFB               	movlw	high __powers_
  7452  0117F4  2192               	addwfc	(?___awdiv+1)& (0+255),w,b
  7453  0117F6  6EF7               	movwf	tblptrh,c
  7454  0117F8                     	if	1	;There are 3 active tblptr bytes
  7455  0117F8  6AF8               	clrf	tblptru,c
  7456  0117FA  0E00               	movlw	low (__mediumconst shr (0+16))
  7457  0117FC  22F8               	addwfc	tblptru,f,c
  7458  0117FE                     	endif
  7459  0117FE  0009               	tblrd		*+
  7460  011800  CFF5 F09D          	movff	tablat,___flmul@a
  7461  011804  0009               	tblrd		*+
  7462  011806  CFF5 F09E          	movff	tablat,___flmul@a+1
  7463  01180A  0009               	tblrd		*+
  7464  01180C  CFF5 F09F          	movff	tablat,___flmul@a+2
  7465  011810  000A               	tblrd		*-
  7466  011812  CFF5 F0A0          	movff	tablat,___flmul@a+3
  7467  011816  0E00               	movlw	0
  7468  011818  6F94               	movwf	(___awdiv@divisor+1)& (0+255),b
  7469  01181A  0E64               	movlw	100
  7470  01181C  6F93               	movwf	___awdiv@divisor& (0+255),b
  7471  01181E  51BA               	movf	scale@scl& (0+255),w,b
  7472  011820  6F91               	movwf	___awdiv@dividend& (0+255),b
  7473  011822  6B92               	clrf	(___awdiv@dividend+1)& (0+255),b
  7474  011824  BF91               	btfsc	___awdiv@dividend& (0+255),7,b
  7475  011826  0792               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7476  011828  EC74  F0A3         	call	___awdiv	;wreg free
  7477  01182C  0100               	movlb	0	; () banked
  7478  01182E  90D8               	bcf	status,0,c
  7479  011830  3791               	rlcf	?___awdiv& (0+255),f,b
  7480  011832  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7481  011834  90D8               	bcf	status,0,c
  7482  011836  3791               	rlcf	?___awdiv& (0+255),f,b
  7483  011838  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7484  01183A  0E48               	movlw	72
  7485  01183C  2791               	addwf	?___awdiv& (0+255),f,b
  7486  01183E  0E00               	movlw	0
  7487  011840  2392               	addwfc	(?___awdiv+1)& (0+255),f,b
  7488  011842  0EFB               	movlw	low __powers_
  7489  011844  2591               	addwf	?___awdiv& (0+255),w,b
  7490  011846  6EF6               	movwf	tblptrl,c
  7491  011848  0EFB               	movlw	high __powers_
  7492  01184A  2192               	addwfc	(?___awdiv+1)& (0+255),w,b
  7493  01184C  6EF7               	movwf	tblptrh,c
  7494  01184E                     	if	1	;There are 3 active tblptr bytes
  7495  01184E  6AF8               	clrf	tblptru,c
  7496  011850  0E00               	movlw	low (__mediumconst shr (0+16))
  7497  011852  22F8               	addwfc	tblptru,f,c
  7498  011854                     	endif
  7499  011854  0009               	tblrd		*+
  7500  011856  CFF5 F099          	movff	tablat,___flmul@b
  7501  01185A  0009               	tblrd		*+
  7502  01185C  CFF5 F09A          	movff	tablat,___flmul@b+1
  7503  011860  0009               	tblrd		*+
  7504  011862  CFF5 F09B          	movff	tablat,___flmul@b+2
  7505  011866  000A               	tblrd		*-
  7506  011868  CFF5 F09C          	movff	tablat,___flmul@b+3
  7507  01186C  EC1C  F093         	call	___flmul	;wreg free
  7508  011870  C099  F0B6         	movff	?___flmul,_scale$1378
  7509  011874  C09A  F0B7         	movff	?___flmul+1,_scale$1378+1
  7510  011878  C09B  F0B8         	movff	?___flmul+2,_scale$1378+2
  7511  01187C  C09C  F0B9         	movff	?___flmul+3,_scale$1378+3
  7512                           
  7513                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7514  011880  C0B6  F099         	movff	_scale$1378,___flmul@b
  7515  011884  C0B7  F09A         	movff	_scale$1378+1,___flmul@b+1
  7516  011888  C0B8  F09B         	movff	_scale$1378+2,___flmul@b+2
  7517  01188C  C0B9  F09C         	movff	_scale$1378+3,___flmul@b+3
  7518  011890  0E00               	movlw	0
  7519  011892  0100               	movlb	0	; () banked
  7520  011894  6F8E               	movwf	(___awmod@divisor+1)& (0+255),b
  7521  011896  0E0A               	movlw	10
  7522  011898  6F8D               	movwf	___awmod@divisor& (0+255),b
  7523  01189A  51BA               	movf	scale@scl& (0+255),w,b
  7524  01189C  6F8B               	movwf	___awmod@dividend& (0+255),b
  7525  01189E  6B8C               	clrf	(___awmod@dividend+1)& (0+255),b
  7526  0118A0  BF8B               	btfsc	___awmod@dividend& (0+255),7,b
  7527  0118A2  078C               	decf	(___awmod@dividend+1)& (0+255),f,b
  7528  0118A4  EC7C  F0A4         	call	___awmod	;wreg free
  7529  0118A8  0100               	movlb	0	; () banked
  7530  0118AA  90D8               	bcf	status,0,c
  7531  0118AC  378B               	rlcf	?___awmod& (0+255),f,b
  7532  0118AE  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  7533  0118B0  90D8               	bcf	status,0,c
  7534  0118B2  378B               	rlcf	?___awmod& (0+255),f,b
  7535  0118B4  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  7536  0118B6  0EFB               	movlw	low __powers_
  7537  0118B8  258B               	addwf	?___awmod& (0+255),w,b
  7538  0118BA  6EF6               	movwf	tblptrl,c
  7539  0118BC  0EFB               	movlw	high __powers_
  7540  0118BE  218C               	addwfc	(?___awmod+1)& (0+255),w,b
  7541  0118C0  6EF7               	movwf	tblptrh,c
  7542  0118C2                     	if	1	;There are 3 active tblptr bytes
  7543  0118C2  6AF8               	clrf	tblptru,c
  7544  0118C4  0E00               	movlw	low (__mediumconst shr (0+16))
  7545  0118C6  22F8               	addwfc	tblptru,f,c
  7546  0118C8                     	endif
  7547  0118C8  0009               	tblrd		*+
  7548  0118CA  CFF5 F09D          	movff	tablat,___flmul@a
  7549  0118CE  0009               	tblrd		*+
  7550  0118D0  CFF5 F09E          	movff	tablat,___flmul@a+1
  7551  0118D4  0009               	tblrd		*+
  7552  0118D6  CFF5 F09F          	movff	tablat,___flmul@a+2
  7553  0118DA  000A               	tblrd		*-
  7554  0118DC  CFF5 F0A0          	movff	tablat,___flmul@a+3
  7555  0118E0  EC1C  F093         	call	___flmul	;wreg free
  7556  0118E4  C099  F0B2         	movff	?___flmul,?_scale
  7557  0118E8  C09A  F0B3         	movff	?___flmul+1,?_scale+1
  7558  0118EC  C09B  F0B4         	movff	?___flmul+2,?_scale+2
  7559  0118F0  C09C  F0B5         	movff	?___flmul+3,?_scale+3
  7560  0118F4  0012               	return	
  7561  0118F6                     l414:
  7562                           
  7563                           ;doprnt.c: 438: else if(scl > 10)
  7564  0118F6  0100               	movlb	0	; () banked
  7565  0118F8  51BA               	movf	scale@scl& (0+255),w,b
  7566  0118FA  0A80               	xorlw	128
  7567  0118FC  0F75               	addlw	-139
  7568  0118FE  A0D8               	btfss	status,0,c
  7569  011900  D05D               	goto	l416
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7573  011902  0E00               	movlw	0
  7574  011904  6F94               	movwf	(___awdiv@divisor+1)& (0+255),b
  7575  011906  0E0A               	movlw	10
  7576  011908  6F93               	movwf	___awdiv@divisor& (0+255),b
  7577  01190A  51BA               	movf	scale@scl& (0+255),w,b
  7578  01190C  6F91               	movwf	___awdiv@dividend& (0+255),b
  7579  01190E  6B92               	clrf	(___awdiv@dividend+1)& (0+255),b
  7580  011910  BF91               	btfsc	___awdiv@dividend& (0+255),7,b
  7581  011912  0792               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7582  011914  EC74  F0A3         	call	___awdiv	;wreg free
  7583  011918  0100               	movlb	0	; () banked
  7584  01191A  90D8               	bcf	status,0,c
  7585  01191C  3791               	rlcf	?___awdiv& (0+255),f,b
  7586  01191E  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7587  011920  90D8               	bcf	status,0,c
  7588  011922  3791               	rlcf	?___awdiv& (0+255),f,b
  7589  011924  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7590  011926  0E24               	movlw	36
  7591  011928  2791               	addwf	?___awdiv& (0+255),f,b
  7592  01192A  0E00               	movlw	0
  7593  01192C  2392               	addwfc	(?___awdiv+1)& (0+255),f,b
  7594  01192E  0EFB               	movlw	low __powers_
  7595  011930  2591               	addwf	?___awdiv& (0+255),w,b
  7596  011932  6EF6               	movwf	tblptrl,c
  7597  011934  0EFB               	movlw	high __powers_
  7598  011936  2192               	addwfc	(?___awdiv+1)& (0+255),w,b
  7599  011938  6EF7               	movwf	tblptrh,c
  7600  01193A                     	if	1	;There are 3 active tblptr bytes
  7601  01193A  6AF8               	clrf	tblptru,c
  7602  01193C  0E00               	movlw	low (__mediumconst shr (0+16))
  7603  01193E  22F8               	addwfc	tblptru,f,c
  7604  011940                     	endif
  7605  011940  0009               	tblrd		*+
  7606  011942  CFF5 F099          	movff	tablat,___flmul@b
  7607  011946  0009               	tblrd		*+
  7608  011948  CFF5 F09A          	movff	tablat,___flmul@b+1
  7609  01194C  0009               	tblrd		*+
  7610  01194E  CFF5 F09B          	movff	tablat,___flmul@b+2
  7611  011952  000A               	tblrd		*-
  7612  011954  CFF5 F09C          	movff	tablat,___flmul@b+3
  7613  011958  0E00               	movlw	0
  7614  01195A  6F8E               	movwf	(___awmod@divisor+1)& (0+255),b
  7615  01195C  0E0A               	movlw	10
  7616  01195E  6F8D               	movwf	___awmod@divisor& (0+255),b
  7617  011960  51BA               	movf	scale@scl& (0+255),w,b
  7618  011962  6F8B               	movwf	___awmod@dividend& (0+255),b
  7619  011964  6B8C               	clrf	(___awmod@dividend+1)& (0+255),b
  7620  011966  BF8B               	btfsc	___awmod@dividend& (0+255),7,b
  7621  011968  078C               	decf	(___awmod@dividend+1)& (0+255),f,b
  7622  01196A  EC7C  F0A4         	call	___awmod	;wreg free
  7623  01196E  0100               	movlb	0	; () banked
  7624  011970  90D8               	bcf	status,0,c
  7625  011972  378B               	rlcf	?___awmod& (0+255),f,b
  7626  011974  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  7627  011976  90D8               	bcf	status,0,c
  7628  011978  378B               	rlcf	?___awmod& (0+255),f,b
  7629  01197A  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  7630  01197C  0EFB               	movlw	low __powers_
  7631  01197E  258B               	addwf	?___awmod& (0+255),w,b
  7632  011980  6EF6               	movwf	tblptrl,c
  7633  011982  0EFB               	movlw	high __powers_
  7634  011984  218C               	addwfc	(?___awmod+1)& (0+255),w,b
  7635  011986  6EF7               	movwf	tblptrh,c
  7636  011988                     	if	1	;There are 3 active tblptr bytes
  7637  011988  6AF8               	clrf	tblptru,c
  7638  01198A  0E00               	movlw	low (__mediumconst shr (0+16))
  7639  01198C  22F8               	addwfc	tblptru,f,c
  7640  01198E                     	endif
  7641  01198E  0009               	tblrd		*+
  7642  011990  CFF5 F09D          	movff	tablat,___flmul@a
  7643  011994  0009               	tblrd		*+
  7644  011996  CFF5 F09E          	movff	tablat,___flmul@a+1
  7645  01199A  0009               	tblrd		*+
  7646  01199C  CFF5 F09F          	movff	tablat,___flmul@a+2
  7647  0119A0  000A               	tblrd		*-
  7648  0119A2  CFF5 F0A0          	movff	tablat,___flmul@a+3
  7649  0119A6  EC1C  F093         	call	___flmul	;wreg free
  7650  0119AA  C099  F0B2         	movff	?___flmul,?_scale
  7651  0119AE  C09A  F0B3         	movff	?___flmul+1,?_scale+1
  7652  0119B2  C09B  F0B4         	movff	?___flmul+2,?_scale+2
  7653  0119B6  C09C  F0B5         	movff	?___flmul+3,?_scale+3
  7654  0119BA  0012               	return	
  7655  0119BC                     l416:
  7656                           
  7657                           ;doprnt.c: 440: return _powers_[scl];
  7658  0119BC  0100               	movlb	0	; () banked
  7659  0119BE  51BA               	movf	scale@scl& (0+255),w,b
  7660  0119C0  0D04               	mullw	4
  7661  0119C2  0EFB               	movlw	low __powers_
  7662  0119C4  24F3               	addwf	prodl,w,c
  7663  0119C6  6EF6               	movwf	tblptrl,c
  7664  0119C8  0EFB               	movlw	high __powers_
  7665  0119CA  20F4               	addwfc	prodh,w,c
  7666  0119CC  6EF7               	movwf	tblptrh,c
  7667  0119CE                     	if	1	;There are 3 active tblptr bytes
  7668  0119CE  6AF8               	clrf	tblptru,c
  7669  0119D0  0E00               	movlw	low (__mediumconst shr (0+16))
  7670  0119D2  22F8               	addwfc	tblptru,f,c
  7671  0119D4                     	endif
  7672  0119D4  0009               	tblrd		*+
  7673  0119D6  CFF5 F0B2          	movff	tablat,?_scale
  7674  0119DA  0009               	tblrd		*+
  7675  0119DC  CFF5 F0B3          	movff	tablat,?_scale+1
  7676  0119E0  0009               	tblrd		*+
  7677  0119E2  CFF5 F0B4          	movff	tablat,?_scale+2
  7678  0119E6  000A               	tblrd		*-
  7679  0119E8  CFF5 F0B5          	movff	tablat,?_scale+3
  7680  0119EC  0012               	return	
  7681  0119EE                     __end_of_scale:
  7682                           	opt stack 0
  7683                           tblptru	equ	0xFF8
  7684                           tblptrh	equ	0xFF7
  7685                           tblptrl	equ	0xFF6
  7686                           tablat	equ	0xFF5
  7687                           prodh	equ	0xFF4
  7688                           prodl	equ	0xFF3
  7689                           intcon	equ	0xFF2
  7690                           postinc0	equ	0xFEE
  7691                           wreg	equ	0xFE8
  7692                           indf1	equ	0xFE7
  7693                           fsr1h	equ	0xFE2
  7694                           fsr1l	equ	0xFE1
  7695                           indf2	equ	0xFDF
  7696                           postinc2	equ	0xFDE
  7697                           postdec2	equ	0xFDD
  7698                           fsr2h	equ	0xFDA
  7699                           fsr2l	equ	0xFD9
  7700                           status	equ	0xFD8
  7701                           
  7702 ;; *************** function _putch *****************
  7703 ;; Defined at:
  7704 ;;		line 178 in file "mcc_generated_files/eusart2.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;  txData          1    wreg     unsigned char 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  txData          1   44[BANK0 ] unsigned char 
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1    wreg      void 
  7711 ;; Registers used:
  7712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7719 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7721 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7722 ;;Total ram usage:        1 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; Hardware stack levels required when called:    6
  7725 ;; This function calls:
  7726 ;;		_EUSART2_Write
  7727 ;; This function is called by:
  7728 ;;		_printf
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           	psect	text16
  7733  014F5E                     __ptext16:
  7734                           	opt stack 0
  7735  014F5E                     _putch:
  7736                           	opt stack 21
  7737                           
  7738                           ;incstack = 0
  7739                           ;putch@txData stored from wreg
  7740  014F5E  0100               	movlb	0	; () banked
  7741  014F60  6F8C               	movwf	putch@txData& (0+255),b
  7742                           
  7743                           ;eusart2.c: 180: EUSART2_Write(txData);
  7744  014F62  0100               	movlb	0	; () banked
  7745  014F64  518C               	movf	putch@txData& (0+255),w,b
  7746  014F66  EC20  F0A6         	call	_EUSART2_Write
  7747  014F6A  0012               	return		;funcret
  7748  014F6C                     __end_of_putch:
  7749                           	opt stack 0
  7750                           tblptru	equ	0xFF8
  7751                           tblptrh	equ	0xFF7
  7752                           tblptrl	equ	0xFF6
  7753                           tablat	equ	0xFF5
  7754                           prodh	equ	0xFF4
  7755                           prodl	equ	0xFF3
  7756                           intcon	equ	0xFF2
  7757                           postinc0	equ	0xFEE
  7758                           wreg	equ	0xFE8
  7759                           indf1	equ	0xFE7
  7760                           fsr1h	equ	0xFE2
  7761                           fsr1l	equ	0xFE1
  7762                           indf2	equ	0xFDF
  7763                           postinc2	equ	0xFDE
  7764                           postdec2	equ	0xFDD
  7765                           fsr2h	equ	0xFDA
  7766                           fsr2l	equ	0xFD9
  7767                           status	equ	0xFD8
  7768                           
  7769 ;; *************** function _EUSART2_Write *****************
  7770 ;; Defined at:
  7771 ;;		line 150 in file "mcc_generated_files/eusart2.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  txData          1    wreg     unsigned char 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  txData          1   43[BANK0 ] unsigned char 
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;Total ram usage:        1 bytes
  7790 ;; Hardware stack levels used:    1
  7791 ;; Hardware stack levels required when called:    5
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_putch
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text17
  7800  014C40                     __ptext17:
  7801                           	opt stack 0
  7802  014C40                     _EUSART2_Write:
  7803                           	opt stack 21
  7804                           
  7805                           ;incstack = 0
  7806                           ;EUSART2_Write@txData stored from wreg
  7807  014C40  0100               	movlb	0	; () banked
  7808  014C42  6F8B               	movwf	EUSART2_Write@txData& (0+255),b
  7809  014C44                     
  7810                           ;eusart2.c: 153: {
  7811                           
  7812                           ;eusart2.c: 152: while(0 == eusart2TxBufferRemaining)
  7813  014C44  0100               	movlb	0	; () banked
  7814  014C46  51D4               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  7815  014C48  B4D8               	btfsc	status,2,c
  7816  014C4A  D7FC               	goto	l3938
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;eusart2.c: 154: }
  7820                           ;eusart2.c: 156: if(0 == PIE3bits.TX2IE)
  7821  014C4C  010E               	movlb	14	; () banked
  7822  014C4E  BD2C               	btfsc	44,6,b	;volatile
  7823  014C50  D003               	goto	l187
  7824                           
  7825                           ; BSR set to: 14
  7826                           ;eusart2.c: 157: {
  7827                           ;eusart2.c: 158: TX2REG = txData;
  7828  014C52  C08B  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
  7829                           
  7830                           ;eusart2.c: 159: }
  7831  014C56  D013               	goto	l188
  7832  014C58                     l187:
  7833                           
  7834                           ; BSR set to: 14
  7835                           ;eusart2.c: 160: else
  7836                           ;eusart2.c: 161: {
  7837                           ;eusart2.c: 162: PIE3bits.TX2IE = 0;
  7838  014C58  9D2C               	bcf	44,6,b	;volatile
  7839                           
  7840                           ; BSR set to: 14
  7841                           ;eusart2.c: 163: eusart2TxBuffer[eusart2TxHead++] = txData;
  7842  014C5A  0100               	movlb	0	; () banked
  7843  014C5C  51D3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
  7844  014C5E  0D01               	mullw	1
  7845  014C60  0E40               	movlw	low _eusart2TxBuffer
  7846  014C62  24F3               	addwf	prodl,w,c
  7847  014C64  6ED9               	movwf	fsr2l,c
  7848  014C66  0E02               	movlw	high _eusart2TxBuffer
  7849  014C68  20F4               	addwfc	prodh,w,c
  7850  014C6A  6EDA               	movwf	fsr2h,c
  7851  014C6C  C08B  FFDF         	movff	EUSART2_Write@txData,indf2
  7852                           
  7853                           ; BSR set to: 0
  7854  014C70  2BD3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;eusart2.c: 164: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  7858  014C72  0E3F               	movlw	63
  7859  014C74  65D3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  7860  014C76  D002               	goto	l189
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;eusart2.c: 165: {
  7864                           ;eusart2.c: 166: eusart2TxHead = 0;
  7865  014C78  0E00               	movlw	0
  7866  014C7A  6FD3               	movwf	_eusart2TxHead& (0+255),b	;volatile
  7867  014C7C                     l189:
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;eusart2.c: 167: }
  7871                           ;eusart2.c: 168: eusart2TxBufferRemaining--;
  7872                           
  7873                           ; BSR set to: 0
  7874  014C7C  07D4               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  7875  014C7E                     l188:
  7876                           
  7877                           ;eusart2.c: 169: }
  7878                           ;eusart2.c: 170: PIE3bits.TX2IE = 1;
  7879                           
  7880                           ; BSR set to: 0
  7881  014C7E  010E               	movlb	14	; () banked
  7882  014C80  8D2C               	bsf	44,6,b	;volatile
  7883                           
  7884                           ; BSR set to: 14
  7885  014C82  0012               	return		;funcret
  7886  014C84                     __end_of_EUSART2_Write:
  7887                           	opt stack 0
  7888                           tblptru	equ	0xFF8
  7889                           tblptrh	equ	0xFF7
  7890                           tblptrl	equ	0xFF6
  7891                           tablat	equ	0xFF5
  7892                           prodh	equ	0xFF4
  7893                           prodl	equ	0xFF3
  7894                           intcon	equ	0xFF2
  7895                           postinc0	equ	0xFEE
  7896                           wreg	equ	0xFE8
  7897                           indf1	equ	0xFE7
  7898                           fsr1h	equ	0xFE2
  7899                           fsr1l	equ	0xFE1
  7900                           indf2	equ	0xFDF
  7901                           postinc2	equ	0xFDE
  7902                           postdec2	equ	0xFDD
  7903                           fsr2h	equ	0xFDA
  7904                           fsr2l	equ	0xFD9
  7905                           status	equ	0xFD8
  7906                           
  7907 ;; *************** function _fround *****************
  7908 ;; Defined at:
  7909 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;  prec            1    wreg     unsigned char 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  prec            1   94[BANK0 ] unsigned char 
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  4   82[BANK0 ] unsigned char 
  7916 ;; Registers used:
  7917 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7923 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7924 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7926 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7927 ;;Total ram usage:       13 bytes
  7928 ;; Hardware stack levels used:    1
  7929 ;; Hardware stack levels required when called:    6
  7930 ;; This function calls:
  7931 ;;		___awdiv
  7932 ;;		___awmod
  7933 ;;		___flmul
  7934 ;; This function is called by:
  7935 ;;		_printf
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text18
  7940  013016                     __ptext18:
  7941                           	opt stack 0
  7942  013016                     _fround:
  7943                           	opt stack 21
  7944                           
  7945                           ; BSR set to: 14
  7946                           ;incstack = 0
  7947                           ;fround@prec stored from wreg
  7948  013016  0100               	movlb	0	; () banked
  7949  013018  6FBE               	movwf	fround@prec& (0+255),b
  7950                           
  7951                           ;doprnt.c: 413: if(prec>=110)
  7952  01301A  0E6D               	movlw	109
  7953  01301C  0100               	movlb	0	; () banked
  7954  01301E  65BE               	cpfsgt	fround@prec& (0+255),b
  7955  013020  D0BA               	goto	l403
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7959  013022  0E00               	movlw	0
  7960  013024  6F94               	movwf	(___awdiv@divisor+1)& (0+255),b
  7961  013026  0E0A               	movlw	10
  7962  013028  6F93               	movwf	___awdiv@divisor& (0+255),b
  7963  01302A  0E00               	movlw	0
  7964  01302C  6F8E               	movwf	(___awmod@divisor+1)& (0+255),b
  7965  01302E  0E64               	movlw	100
  7966  013030  6F8D               	movwf	___awmod@divisor& (0+255),b
  7967  013032  C0BE  F08B         	movff	fround@prec,___awmod@dividend
  7968  013036  6B8C               	clrf	(___awmod@dividend+1)& (0+255),b
  7969  013038  EC7C  F0A4         	call	___awmod	;wreg free
  7970  01303C  C08B  F091         	movff	?___awmod,___awdiv@dividend
  7971  013040  C08C  F092         	movff	?___awmod+1,___awdiv@dividend+1
  7972  013044  EC74  F0A3         	call	___awdiv	;wreg free
  7973  013048  0100               	movlb	0	; () banked
  7974  01304A  90D8               	bcf	status,0,c
  7975  01304C  3791               	rlcf	?___awdiv& (0+255),f,b
  7976  01304E  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7977  013050  90D8               	bcf	status,0,c
  7978  013052  3791               	rlcf	?___awdiv& (0+255),f,b
  7979  013054  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  7980  013056  0E24               	movlw	36
  7981  013058  2791               	addwf	?___awdiv& (0+255),f,b
  7982  01305A  0E00               	movlw	0
  7983  01305C  2392               	addwfc	(?___awdiv+1)& (0+255),f,b
  7984  01305E  0E2F               	movlw	low __npowers_
  7985  013060  2591               	addwf	?___awdiv& (0+255),w,b
  7986  013062  6EF6               	movwf	tblptrl,c
  7987  013064  0EFC               	movlw	high __npowers_
  7988  013066  2192               	addwfc	(?___awdiv+1)& (0+255),w,b
  7989  013068  6EF7               	movwf	tblptrh,c
  7990  01306A                     	if	1	;There are 3 active tblptr bytes
  7991  01306A  6AF8               	clrf	tblptru,c
  7992  01306C  0E00               	movlw	low (__mediumconst shr (0+16))
  7993  01306E  22F8               	addwfc	tblptru,f,c
  7994  013070                     	endif
  7995  013070  0009               	tblrd		*+
  7996  013072  CFF5 F09D          	movff	tablat,___flmul@a
  7997  013076  0009               	tblrd		*+
  7998  013078  CFF5 F09E          	movff	tablat,___flmul@a+1
  7999  01307C  0009               	tblrd		*+
  8000  01307E  CFF5 F09F          	movff	tablat,___flmul@a+2
  8001  013082  000A               	tblrd		*-
  8002  013084  CFF5 F0A0          	movff	tablat,___flmul@a+3
  8003  013088  0E00               	movlw	0
  8004  01308A  6F94               	movwf	(___awdiv@divisor+1)& (0+255),b
  8005  01308C  0E64               	movlw	100
  8006  01308E  6F93               	movwf	___awdiv@divisor& (0+255),b
  8007  013090  C0BE  F091         	movff	fround@prec,___awdiv@dividend
  8008  013094  6B92               	clrf	(___awdiv@dividend+1)& (0+255),b
  8009  013096  EC74  F0A3         	call	___awdiv	;wreg free
  8010  01309A  0100               	movlb	0	; () banked
  8011  01309C  90D8               	bcf	status,0,c
  8012  01309E  3791               	rlcf	?___awdiv& (0+255),f,b
  8013  0130A0  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  8014  0130A2  90D8               	bcf	status,0,c
  8015  0130A4  3791               	rlcf	?___awdiv& (0+255),f,b
  8016  0130A6  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  8017  0130A8  0E48               	movlw	72
  8018  0130AA  2791               	addwf	?___awdiv& (0+255),f,b
  8019  0130AC  0E00               	movlw	0
  8020  0130AE  2392               	addwfc	(?___awdiv+1)& (0+255),f,b
  8021  0130B0  0E2F               	movlw	low __npowers_
  8022  0130B2  2591               	addwf	?___awdiv& (0+255),w,b
  8023  0130B4  6EF6               	movwf	tblptrl,c
  8024  0130B6  0EFC               	movlw	high __npowers_
  8025  0130B8  2192               	addwfc	(?___awdiv+1)& (0+255),w,b
  8026  0130BA  6EF7               	movwf	tblptrh,c
  8027  0130BC                     	if	1	;There are 3 active tblptr bytes
  8028  0130BC  6AF8               	clrf	tblptru,c
  8029  0130BE  0E00               	movlw	low (__mediumconst shr (0+16))
  8030  0130C0  22F8               	addwfc	tblptru,f,c
  8031  0130C2                     	endif
  8032  0130C2  0009               	tblrd		*+
  8033  0130C4  CFF5 F099          	movff	tablat,___flmul@b
  8034  0130C8  0009               	tblrd		*+
  8035  0130CA  CFF5 F09A          	movff	tablat,___flmul@b+1
  8036  0130CE  0009               	tblrd		*+
  8037  0130D0  CFF5 F09B          	movff	tablat,___flmul@b+2
  8038  0130D4  000A               	tblrd		*-
  8039  0130D6  CFF5 F09C          	movff	tablat,___flmul@b+3
  8040  0130DA  EC1C  F093         	call	___flmul	;wreg free
  8041  0130DE  C099  F0BA         	movff	?___flmul,_fround$1376
  8042  0130E2  C09A  F0BB         	movff	?___flmul+1,_fround$1376+1
  8043  0130E6  C09B  F0BC         	movff	?___flmul+2,_fround$1376+2
  8044  0130EA  C09C  F0BD         	movff	?___flmul+3,_fround$1376+3
  8045                           
  8046                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8047  0130EE  0E00               	movlw	0
  8048  0130F0  0100               	movlb	0	; () banked
  8049  0130F2  6F8E               	movwf	(___awmod@divisor+1)& (0+255),b
  8050  0130F4  0E0A               	movlw	10
  8051  0130F6  6F8D               	movwf	___awmod@divisor& (0+255),b
  8052  0130F8  C0BE  F08B         	movff	fround@prec,___awmod@dividend
  8053  0130FC  6B8C               	clrf	(___awmod@dividend+1)& (0+255),b
  8054  0130FE  EC7C  F0A4         	call	___awmod	;wreg free
  8055  013102  0100               	movlb	0	; () banked
  8056  013104  90D8               	bcf	status,0,c
  8057  013106  378B               	rlcf	?___awmod& (0+255),f,b
  8058  013108  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  8059  01310A  90D8               	bcf	status,0,c
  8060  01310C  378B               	rlcf	?___awmod& (0+255),f,b
  8061  01310E  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  8062  013110  0E2F               	movlw	low __npowers_
  8063  013112  258B               	addwf	?___awmod& (0+255),w,b
  8064  013114  6EF6               	movwf	tblptrl,c
  8065  013116  0EFC               	movlw	high __npowers_
  8066  013118  218C               	addwfc	(?___awmod+1)& (0+255),w,b
  8067  01311A  6EF7               	movwf	tblptrh,c
  8068  01311C                     	if	1	;There are 3 active tblptr bytes
  8069  01311C  6AF8               	clrf	tblptru,c
  8070  01311E  0E00               	movlw	low (__mediumconst shr (0+16))
  8071  013120  22F8               	addwfc	tblptru,f,c
  8072  013122                     	endif
  8073  013122  0009               	tblrd		*+
  8074  013124  CFF5 F09D          	movff	tablat,___flmul@a
  8075  013128  0009               	tblrd		*+
  8076  01312A  CFF5 F09E          	movff	tablat,___flmul@a+1
  8077  01312E  0009               	tblrd		*+
  8078  013130  CFF5 F09F          	movff	tablat,___flmul@a+2
  8079  013134  000A               	tblrd		*-
  8080  013136  CFF5 F0A0          	movff	tablat,___flmul@a+3
  8081  01313A  C0BA  F099         	movff	_fround$1376,___flmul@b
  8082  01313E  C0BB  F09A         	movff	_fround$1376+1,___flmul@b+1
  8083  013142  C0BC  F09B         	movff	_fround$1376+2,___flmul@b+2
  8084  013146  C0BD  F09C         	movff	_fround$1376+3,___flmul@b+3
  8085  01314A  EC1C  F093         	call	___flmul	;wreg free
  8086  01314E  C099  F0B6         	movff	?___flmul,_fround$1377
  8087  013152  C09A  F0B7         	movff	?___flmul+1,_fround$1377+1
  8088  013156  C09B  F0B8         	movff	?___flmul+2,_fround$1377+2
  8089  01315A  C09C  F0B9         	movff	?___flmul+3,_fround$1377+3
  8090                           
  8091                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8092  01315E  C0B6  F099         	movff	_fround$1377,___flmul@b
  8093  013162  C0B7  F09A         	movff	_fround$1377+1,___flmul@b+1
  8094  013166  C0B8  F09B         	movff	_fround$1377+2,___flmul@b+2
  8095  01316A  C0B9  F09C         	movff	_fround$1377+3,___flmul@b+3
  8096  01316E  0E00               	movlw	0
  8097  013170  0100               	movlb	0	; () banked
  8098  013172  6F9D               	movwf	___flmul@a& (0+255),b
  8099  013174  0E00               	movlw	0
  8100  013176  6F9E               	movwf	(___flmul@a+1)& (0+255),b
  8101  013178  0E00               	movlw	0
  8102  01317A  6F9F               	movwf	(___flmul@a+2)& (0+255),b
  8103  01317C  0E3F               	movlw	63
  8104  01317E  6FA0               	movwf	(___flmul@a+3)& (0+255),b
  8105  013180  EC1C  F093         	call	___flmul	;wreg free
  8106  013184  C099  F0B2         	movff	?___flmul,?_fround
  8107  013188  C09A  F0B3         	movff	?___flmul+1,?_fround+1
  8108  01318C  C09B  F0B4         	movff	?___flmul+2,?_fround+2
  8109  013190  C09C  F0B5         	movff	?___flmul+3,?_fround+3
  8110  013194  0012               	return	
  8111  013196                     l403:
  8112                           
  8113                           ;doprnt.c: 415: else if(prec > 10)
  8114  013196  0E0A               	movlw	10
  8115  013198  0100               	movlb	0	; () banked
  8116  01319A  65BE               	cpfsgt	fround@prec& (0+255),b
  8117  01319C  D074               	goto	l406
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8121  01319E  0E00               	movlw	0
  8122  0131A0  6F8E               	movwf	(___awmod@divisor+1)& (0+255),b
  8123  0131A2  0E0A               	movlw	10
  8124  0131A4  6F8D               	movwf	___awmod@divisor& (0+255),b
  8125  0131A6  C0BE  F08B         	movff	fround@prec,___awmod@dividend
  8126  0131AA  6B8C               	clrf	(___awmod@dividend+1)& (0+255),b
  8127  0131AC  EC7C  F0A4         	call	___awmod	;wreg free
  8128  0131B0  0100               	movlb	0	; () banked
  8129  0131B2  90D8               	bcf	status,0,c
  8130  0131B4  378B               	rlcf	?___awmod& (0+255),f,b
  8131  0131B6  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  8132  0131B8  90D8               	bcf	status,0,c
  8133  0131BA  378B               	rlcf	?___awmod& (0+255),f,b
  8134  0131BC  378C               	rlcf	(?___awmod+1)& (0+255),f,b
  8135  0131BE  0E2F               	movlw	low __npowers_
  8136  0131C0  258B               	addwf	?___awmod& (0+255),w,b
  8137  0131C2  6EF6               	movwf	tblptrl,c
  8138  0131C4  0EFC               	movlw	high __npowers_
  8139  0131C6  218C               	addwfc	(?___awmod+1)& (0+255),w,b
  8140  0131C8  6EF7               	movwf	tblptrh,c
  8141  0131CA                     	if	1	;There are 3 active tblptr bytes
  8142  0131CA  6AF8               	clrf	tblptru,c
  8143  0131CC  0E00               	movlw	low (__mediumconst shr (0+16))
  8144  0131CE  22F8               	addwfc	tblptru,f,c
  8145  0131D0                     	endif
  8146  0131D0  0009               	tblrd		*+
  8147  0131D2  CFF5 F09D          	movff	tablat,___flmul@a
  8148  0131D6  0009               	tblrd		*+
  8149  0131D8  CFF5 F09E          	movff	tablat,___flmul@a+1
  8150  0131DC  0009               	tblrd		*+
  8151  0131DE  CFF5 F09F          	movff	tablat,___flmul@a+2
  8152  0131E2  000A               	tblrd		*-
  8153  0131E4  CFF5 F0A0          	movff	tablat,___flmul@a+3
  8154  0131E8  0E00               	movlw	0
  8155  0131EA  6F94               	movwf	(___awdiv@divisor+1)& (0+255),b
  8156  0131EC  0E0A               	movlw	10
  8157  0131EE  6F93               	movwf	___awdiv@divisor& (0+255),b
  8158  0131F0  C0BE  F091         	movff	fround@prec,___awdiv@dividend
  8159  0131F4  6B92               	clrf	(___awdiv@dividend+1)& (0+255),b
  8160  0131F6  EC74  F0A3         	call	___awdiv	;wreg free
  8161  0131FA  0100               	movlb	0	; () banked
  8162  0131FC  90D8               	bcf	status,0,c
  8163  0131FE  3791               	rlcf	?___awdiv& (0+255),f,b
  8164  013200  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  8165  013202  90D8               	bcf	status,0,c
  8166  013204  3791               	rlcf	?___awdiv& (0+255),f,b
  8167  013206  3792               	rlcf	(?___awdiv+1)& (0+255),f,b
  8168  013208  0E24               	movlw	36
  8169  01320A  2791               	addwf	?___awdiv& (0+255),f,b
  8170  01320C  0E00               	movlw	0
  8171  01320E  2392               	addwfc	(?___awdiv+1)& (0+255),f,b
  8172  013210  0E2F               	movlw	low __npowers_
  8173  013212  2591               	addwf	?___awdiv& (0+255),w,b
  8174  013214  6EF6               	movwf	tblptrl,c
  8175  013216  0EFC               	movlw	high __npowers_
  8176  013218  2192               	addwfc	(?___awdiv+1)& (0+255),w,b
  8177  01321A  6EF7               	movwf	tblptrh,c
  8178  01321C                     	if	1	;There are 3 active tblptr bytes
  8179  01321C  6AF8               	clrf	tblptru,c
  8180  01321E  0E00               	movlw	low (__mediumconst shr (0+16))
  8181  013220  22F8               	addwfc	tblptru,f,c
  8182  013222                     	endif
  8183  013222  0009               	tblrd		*+
  8184  013224  CFF5 F099          	movff	tablat,___flmul@b
  8185  013228  0009               	tblrd		*+
  8186  01322A  CFF5 F09A          	movff	tablat,___flmul@b+1
  8187  01322E  0009               	tblrd		*+
  8188  013230  CFF5 F09B          	movff	tablat,___flmul@b+2
  8189  013234  000A               	tblrd		*-
  8190  013236  CFF5 F09C          	movff	tablat,___flmul@b+3
  8191  01323A  EC1C  F093         	call	___flmul	;wreg free
  8192  01323E  C099  F0BA         	movff	?___flmul,_fround$1376
  8193  013242  C09A  F0BB         	movff	?___flmul+1,_fround$1376+1
  8194  013246  C09B  F0BC         	movff	?___flmul+2,_fround$1376+2
  8195  01324A  C09C  F0BD         	movff	?___flmul+3,_fround$1376+3
  8196                           
  8197                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8198  01324E  C0BA  F099         	movff	_fround$1376,___flmul@b
  8199  013252  C0BB  F09A         	movff	_fround$1376+1,___flmul@b+1
  8200  013256  C0BC  F09B         	movff	_fround$1376+2,___flmul@b+2
  8201  01325A  C0BD  F09C         	movff	_fround$1376+3,___flmul@b+3
  8202  01325E  0E00               	movlw	0
  8203  013260  0100               	movlb	0	; () banked
  8204  013262  6F9D               	movwf	___flmul@a& (0+255),b
  8205  013264  0E00               	movlw	0
  8206  013266  6F9E               	movwf	(___flmul@a+1)& (0+255),b
  8207  013268  0E00               	movlw	0
  8208  01326A  6F9F               	movwf	(___flmul@a+2)& (0+255),b
  8209  01326C  0E3F               	movlw	63
  8210  01326E  6FA0               	movwf	(___flmul@a+3)& (0+255),b
  8211  013270  EC1C  F093         	call	___flmul	;wreg free
  8212  013274  C099  F0B2         	movff	?___flmul,?_fround
  8213  013278  C09A  F0B3         	movff	?___flmul+1,?_fround+1
  8214  01327C  C09B  F0B4         	movff	?___flmul+2,?_fround+2
  8215  013280  C09C  F0B5         	movff	?___flmul+3,?_fround+3
  8216  013284  0012               	return	
  8217  013286                     l406:
  8218                           
  8219                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8220  013286  0100               	movlb	0	; () banked
  8221  013288  51BE               	movf	fround@prec& (0+255),w,b
  8222  01328A  0D04               	mullw	4
  8223  01328C  0E2F               	movlw	low __npowers_
  8224  01328E  24F3               	addwf	prodl,w,c
  8225  013290  6EF6               	movwf	tblptrl,c
  8226  013292  0EFC               	movlw	high __npowers_
  8227  013294  20F4               	addwfc	prodh,w,c
  8228  013296  6EF7               	movwf	tblptrh,c
  8229  013298                     	if	1	;There are 3 active tblptr bytes
  8230  013298  6AF8               	clrf	tblptru,c
  8231  01329A  0E00               	movlw	low (__mediumconst shr (0+16))
  8232  01329C  22F8               	addwfc	tblptru,f,c
  8233  01329E                     	endif
  8234  01329E  0009               	tblrd		*+
  8235  0132A0  CFF5 F099          	movff	tablat,___flmul@b
  8236  0132A4  0009               	tblrd		*+
  8237  0132A6  CFF5 F09A          	movff	tablat,___flmul@b+1
  8238  0132AA  0009               	tblrd		*+
  8239  0132AC  CFF5 F09B          	movff	tablat,___flmul@b+2
  8240  0132B0  000A               	tblrd		*-
  8241  0132B2  CFF5 F09C          	movff	tablat,___flmul@b+3
  8242  0132B6  0E00               	movlw	0
  8243  0132B8  6F9D               	movwf	___flmul@a& (0+255),b
  8244  0132BA  0E00               	movlw	0
  8245  0132BC  6F9E               	movwf	(___flmul@a+1)& (0+255),b
  8246  0132BE  0E00               	movlw	0
  8247  0132C0  6F9F               	movwf	(___flmul@a+2)& (0+255),b
  8248  0132C2  0E3F               	movlw	63
  8249  0132C4  6FA0               	movwf	(___flmul@a+3)& (0+255),b
  8250  0132C6  EC1C  F093         	call	___flmul	;wreg free
  8251  0132CA  C099  F0B2         	movff	?___flmul,?_fround
  8252  0132CE  C09A  F0B3         	movff	?___flmul+1,?_fround+1
  8253  0132D2  C09B  F0B4         	movff	?___flmul+2,?_fround+2
  8254  0132D6  C09C  F0B5         	movff	?___flmul+3,?_fround+3
  8255  0132DA  0012               	return	
  8256  0132DC                     __end_of_fround:
  8257                           	opt stack 0
  8258                           tblptru	equ	0xFF8
  8259                           tblptrh	equ	0xFF7
  8260                           tblptrl	equ	0xFF6
  8261                           tablat	equ	0xFF5
  8262                           prodh	equ	0xFF4
  8263                           prodl	equ	0xFF3
  8264                           intcon	equ	0xFF2
  8265                           postinc0	equ	0xFEE
  8266                           wreg	equ	0xFE8
  8267                           indf1	equ	0xFE7
  8268                           fsr1h	equ	0xFE2
  8269                           fsr1l	equ	0xFE1
  8270                           indf2	equ	0xFDF
  8271                           postinc2	equ	0xFDE
  8272                           postdec2	equ	0xFDD
  8273                           fsr2h	equ	0xFDA
  8274                           fsr2l	equ	0xFD9
  8275                           status	equ	0xFD8
  8276                           
  8277 ;; *************** function ___flmul *****************
  8278 ;; Defined at:
  8279 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  b               4   57[BANK0 ] unsigned char 
  8282 ;;  a               4   61[BANK0 ] unsigned char 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;  prod            4   76[BANK0 ] struct .
  8285 ;;  grs             4   70[BANK0 ] unsigned long 
  8286 ;;  temp            2   80[BANK0 ] struct .
  8287 ;;  bexp            1   75[BANK0 ] unsigned char 
  8288 ;;  aexp            1   74[BANK0 ] unsigned char 
  8289 ;;  sign            1   69[BANK0 ] unsigned char 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  4   57[BANK0 ] unsigned char 
  8292 ;; Registers used:
  8293 ;;		wreg, status,2, status,0, prodl, prodh
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8299 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8300 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8301 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8302 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8303 ;;Total ram usage:       25 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    5
  8306 ;; This function calls:
  8307 ;;		Nothing
  8308 ;; This function is called by:
  8309 ;;		_fround
  8310 ;;		_scale
  8311 ;;		_printf
  8312 ;;		_strtod
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text19
  8317  012638                     __ptext19:
  8318                           	opt stack 0
  8319  012638                     ___flmul:
  8320                           	opt stack 21
  8321                           
  8322                           ;incstack = 0
  8323  012638  0100               	movlb	0	; () banked
  8324  01263A  519C               	movf	(___flmul@b+3)& (0+255),w,b
  8325  01263C  0B80               	andlw	128
  8326  01263E  6FA5               	movwf	___flmul@sign& (0+255),b
  8327  012640  519C               	movf	(___flmul@b+3)& (0+255),w,b
  8328  012642  259C               	addwf	(___flmul@b+3)& (0+255),w,b
  8329  012644  6FAB               	movwf	___flmul@bexp& (0+255),b
  8330                           
  8331                           ; BSR set to: 0
  8332  012646  BF9B               	btfsc	(___flmul@b+2)& (0+255),7,b
  8333                           
  8334                           ; BSR set to: 0
  8335  012648  81AB               	bsf	___flmul@bexp& (0+255),0,b
  8336                           
  8337                           ; BSR set to: 0
  8338                           
  8339                           ; BSR set to: 0
  8340  01264A  51AB               	movf	___flmul@bexp& (0+255),w,b
  8341  01264C  B4D8               	btfsc	status,2,c
  8342  01264E  D00D               	goto	l1120
  8343                           
  8344                           ; BSR set to: 0
  8345  012650  29AB               	incf	___flmul@bexp& (0+255),w,b
  8346  012652  A4D8               	btfss	status,2,c
  8347  012654  D008               	goto	l1121
  8348                           
  8349                           ; BSR set to: 0
  8350  012656  0E00               	movlw	0
  8351  012658  6F99               	movwf	___flmul@b& (0+255),b
  8352  01265A  0E00               	movlw	0
  8353  01265C  6F9A               	movwf	(___flmul@b+1)& (0+255),b
  8354  01265E  0E00               	movlw	0
  8355  012660  6F9B               	movwf	(___flmul@b+2)& (0+255),b
  8356  012662  0E00               	movlw	0
  8357  012664  6F9C               	movwf	(___flmul@b+3)& (0+255),b
  8358  012666                     l1121:
  8359                           
  8360                           ; BSR set to: 0
  8361                           
  8362                           ; BSR set to: 0
  8363  012666  8F9B               	bsf	(___flmul@b+2)& (0+255),7,b
  8364  012668  D008               	goto	l1122
  8365  01266A                     l1120:
  8366                           
  8367                           ; BSR set to: 0
  8368                           
  8369                           ; BSR set to: 0
  8370  01266A  0E00               	movlw	0
  8371  01266C  6F99               	movwf	___flmul@b& (0+255),b
  8372  01266E  0E00               	movlw	0
  8373  012670  6F9A               	movwf	(___flmul@b+1)& (0+255),b
  8374  012672  0E00               	movlw	0
  8375  012674  6F9B               	movwf	(___flmul@b+2)& (0+255),b
  8376  012676  0E00               	movlw	0
  8377  012678  6F9C               	movwf	(___flmul@b+3)& (0+255),b
  8378  01267A                     l1122:
  8379                           
  8380                           ; BSR set to: 0
  8381                           
  8382                           ; BSR set to: 0
  8383  01267A  51A0               	movf	(___flmul@a+3)& (0+255),w,b
  8384  01267C  0B80               	andlw	128
  8385  01267E  1BA5               	xorwf	___flmul@sign& (0+255),f,b
  8386                           
  8387                           ; BSR set to: 0
  8388  012680  51A0               	movf	(___flmul@a+3)& (0+255),w,b
  8389  012682  25A0               	addwf	(___flmul@a+3)& (0+255),w,b
  8390  012684  6FAA               	movwf	___flmul@aexp& (0+255),b
  8391                           
  8392                           ; BSR set to: 0
  8393  012686  BF9F               	btfsc	(___flmul@a+2)& (0+255),7,b
  8394                           
  8395                           ; BSR set to: 0
  8396  012688  81AA               	bsf	___flmul@aexp& (0+255),0,b
  8397                           
  8398                           ; BSR set to: 0
  8399                           
  8400                           ; BSR set to: 0
  8401  01268A  51AA               	movf	___flmul@aexp& (0+255),w,b
  8402  01268C  B4D8               	btfsc	status,2,c
  8403  01268E  D00D               	goto	l1124
  8404                           
  8405                           ; BSR set to: 0
  8406  012690  29AA               	incf	___flmul@aexp& (0+255),w,b
  8407  012692  A4D8               	btfss	status,2,c
  8408  012694  D008               	goto	l1125
  8409                           
  8410                           ; BSR set to: 0
  8411  012696  0E00               	movlw	0
  8412  012698  6F9D               	movwf	___flmul@a& (0+255),b
  8413  01269A  0E00               	movlw	0
  8414  01269C  6F9E               	movwf	(___flmul@a+1)& (0+255),b
  8415  01269E  0E00               	movlw	0
  8416  0126A0  6F9F               	movwf	(___flmul@a+2)& (0+255),b
  8417  0126A2  0E00               	movlw	0
  8418  0126A4  6FA0               	movwf	(___flmul@a+3)& (0+255),b
  8419  0126A6                     l1125:
  8420                           
  8421                           ; BSR set to: 0
  8422                           
  8423                           ; BSR set to: 0
  8424  0126A6  8F9F               	bsf	(___flmul@a+2)& (0+255),7,b
  8425  0126A8  D008               	goto	l1126
  8426  0126AA                     l1124:
  8427                           
  8428                           ; BSR set to: 0
  8429                           
  8430                           ; BSR set to: 0
  8431  0126AA  0E00               	movlw	0
  8432  0126AC  6F9D               	movwf	___flmul@a& (0+255),b
  8433  0126AE  0E00               	movlw	0
  8434  0126B0  6F9E               	movwf	(___flmul@a+1)& (0+255),b
  8435  0126B2  0E00               	movlw	0
  8436  0126B4  6F9F               	movwf	(___flmul@a+2)& (0+255),b
  8437  0126B6  0E00               	movlw	0
  8438  0126B8  6FA0               	movwf	(___flmul@a+3)& (0+255),b
  8439  0126BA                     l1126:
  8440                           
  8441                           ; BSR set to: 0
  8442  0126BA  51AA               	movf	___flmul@aexp& (0+255),w,b
  8443  0126BC  B4D8               	btfsc	status,2,c
  8444  0126BE  D003               	goto	u5060
  8445                           
  8446                           ; BSR set to: 0
  8447  0126C0  51AB               	movf	___flmul@bexp& (0+255),w,b
  8448  0126C2  A4D8               	btfss	status,2,c
  8449  0126C4  D009               	goto	l1127
  8450  0126C6                     u5060:
  8451                           
  8452                           ; BSR set to: 0
  8453                           
  8454                           ; BSR set to: 0
  8455  0126C6  0E00               	movlw	0
  8456  0126C8  6F99               	movwf	?___flmul& (0+255),b
  8457  0126CA  0E00               	movlw	0
  8458  0126CC  6F9A               	movwf	(?___flmul+1)& (0+255),b
  8459  0126CE  0E00               	movlw	0
  8460  0126D0  6F9B               	movwf	(?___flmul+2)& (0+255),b
  8461  0126D2  0E00               	movlw	0
  8462  0126D4  6F9C               	movwf	(?___flmul+3)& (0+255),b
  8463                           
  8464                           ; BSR set to: 0
  8465  0126D6  0012               	return	
  8466  0126D8                     l1127:
  8467                           
  8468                           ; BSR set to: 0
  8469                           
  8470                           ; BSR set to: 0
  8471  0126D8  519F               	movf	(___flmul@a+2)& (0+255),w,b
  8472  0126DA  0399               	mulwf	___flmul@b& (0+255),b
  8473  0126DC  CFF3 F0B0          	movff	prodl,___flmul@temp
  8474  0126E0  CFF4 F0B1          	movff	prodh,___flmul@temp+1
  8475                           
  8476                           ; BSR set to: 0
  8477  0126E4  51B0               	movf	___flmul@temp& (0+255),w,b
  8478  0126E6  6FA6               	movwf	___flmul@grs& (0+255),b
  8479  0126E8  6BA7               	clrf	(___flmul@grs+1)& (0+255),b
  8480  0126EA  6BA8               	clrf	(___flmul@grs+2)& (0+255),b
  8481  0126EC  6BA9               	clrf	(___flmul@grs+3)& (0+255),b
  8482                           
  8483                           ; BSR set to: 0
  8484  0126EE  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8485  0126F0  6FAC               	movwf	___flmul@prod& (0+255),b
  8486  0126F2  6BAD               	clrf	(___flmul@prod+1)& (0+255),b
  8487  0126F4  6BAE               	clrf	(___flmul@prod+2)& (0+255),b
  8488  0126F6  6BAF               	clrf	(___flmul@prod+3)& (0+255),b
  8489  0126F8  519E               	movf	(___flmul@a+1)& (0+255),w,b
  8490  0126FA  039A               	mulwf	(___flmul@b+1)& (0+255),b
  8491  0126FC  CFF3 F0B0          	movff	prodl,___flmul@temp
  8492  012700  CFF4 F0B1          	movff	prodh,___flmul@temp+1
  8493                           
  8494                           ; BSR set to: 0
  8495  012704  51B0               	movf	___flmul@temp& (0+255),w,b
  8496  012706  27A6               	addwf	___flmul@grs& (0+255),f,b
  8497  012708  0E00               	movlw	0
  8498  01270A  23A7               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8499  01270C  23A8               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8500  01270E  23A9               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8501                           
  8502                           ; BSR set to: 0
  8503  012710  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8504  012712  27AC               	addwf	___flmul@prod& (0+255),f,b
  8505  012714  0E00               	movlw	0
  8506  012716  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8507  012718  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8508  01271A  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8509  01271C  519D               	movf	___flmul@a& (0+255),w,b
  8510  01271E  039B               	mulwf	(___flmul@b+2)& (0+255),b
  8511  012720  CFF3 F0B0          	movff	prodl,___flmul@temp
  8512  012724  CFF4 F0B1          	movff	prodh,___flmul@temp+1
  8513                           
  8514                           ; BSR set to: 0
  8515  012728  51B0               	movf	___flmul@temp& (0+255),w,b
  8516  01272A  27A6               	addwf	___flmul@grs& (0+255),f,b
  8517  01272C  0E00               	movlw	0
  8518  01272E  23A7               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8519  012730  23A8               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8520  012732  23A9               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8521                           
  8522                           ; BSR set to: 0
  8523  012734  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8524  012736  27AC               	addwf	___flmul@prod& (0+255),f,b
  8525  012738  0E00               	movlw	0
  8526  01273A  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8527  01273C  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8528  01273E  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8529                           
  8530                           ; BSR set to: 0
  8531  012740  C0A8  F0A9         	movff	___flmul@grs+2,___flmul@grs+3
  8532  012744  C0A7  F0A8         	movff	___flmul@grs+1,___flmul@grs+2
  8533  012748  C0A6  F0A7         	movff	___flmul@grs,___flmul@grs+1
  8534  01274C  6BA6               	clrf	___flmul@grs& (0+255),b
  8535                           
  8536                           ; BSR set to: 0
  8537  01274E  519D               	movf	___flmul@a& (0+255),w,b
  8538  012750  039A               	mulwf	(___flmul@b+1)& (0+255),b
  8539  012752  CFF3 F0B0          	movff	prodl,___flmul@temp
  8540  012756  CFF4 F0B1          	movff	prodh,___flmul@temp+1
  8541                           
  8542                           ; BSR set to: 0
  8543  01275A  51B0               	movf	___flmul@temp& (0+255),w,b
  8544  01275C  27A6               	addwf	___flmul@grs& (0+255),f,b
  8545  01275E  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8546  012760  23A7               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8547  012762  0E00               	movlw	0
  8548  012764  23A8               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8549  012766  0E00               	movlw	0
  8550  012768  23A9               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8551                           
  8552                           ; BSR set to: 0
  8553  01276A  519E               	movf	(___flmul@a+1)& (0+255),w,b
  8554  01276C  0399               	mulwf	___flmul@b& (0+255),b
  8555  01276E  CFF3 F0B0          	movff	prodl,___flmul@temp
  8556  012772  CFF4 F0B1          	movff	prodh,___flmul@temp+1
  8557                           
  8558                           ; BSR set to: 0
  8559  012776  51B0               	movf	___flmul@temp& (0+255),w,b
  8560  012778  27A6               	addwf	___flmul@grs& (0+255),f,b
  8561  01277A  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8562  01277C  23A7               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8563  01277E  0E00               	movlw	0
  8564  012780  23A8               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8565  012782  0E00               	movlw	0
  8566  012784  23A9               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8567                           
  8568                           ; BSR set to: 0
  8569  012786  C0A8  F0A9         	movff	___flmul@grs+2,___flmul@grs+3
  8570  01278A  C0A7  F0A8         	movff	___flmul@grs+1,___flmul@grs+2
  8571  01278E  C0A6  F0A7         	movff	___flmul@grs,___flmul@grs+1
  8572  012792  6BA6               	clrf	___flmul@grs& (0+255),b
  8573  012794  519D               	movf	___flmul@a& (0+255),w,b
  8574  012796  0399               	mulwf	___flmul@b& (0+255),b
  8575  012798  CFF3 F0B0          	movff	prodl,___flmul@temp
  8576  01279C  CFF4 F0B1          	movff	prodh,___flmul@temp+1
  8577                           
  8578                           ; BSR set to: 0
  8579  0127A0  51B0               	movf	___flmul@temp& (0+255),w,b
  8580  0127A2  27A6               	addwf	___flmul@grs& (0+255),f,b
  8581  0127A4  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8582  0127A6  23A7               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8583  0127A8  0E00               	movlw	0
  8584  0127AA  23A8               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8585  0127AC  0E00               	movlw	0
  8586  0127AE  23A9               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8587                           
  8588                           ; BSR set to: 0
  8589  0127B0  519F               	movf	(___flmul@a+2)& (0+255),w,b
  8590  0127B2  039A               	mulwf	(___flmul@b+1)& (0+255),b
  8591  0127B4  CFF3 F0B0          	movff	prodl,___flmul@temp
  8592  0127B8  CFF4 F0B1          	movff	prodh,___flmul@temp+1
  8593  0127BC  51B0               	movf	___flmul@temp& (0+255),w,b
  8594  0127BE  27AC               	addwf	___flmul@prod& (0+255),f,b
  8595  0127C0  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8596  0127C2  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8597  0127C4  0E00               	movlw	0
  8598  0127C6  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8599  0127C8  0E00               	movlw	0
  8600  0127CA  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8601                           
  8602                           ; BSR set to: 0
  8603  0127CC  519E               	movf	(___flmul@a+1)& (0+255),w,b
  8604  0127CE  039B               	mulwf	(___flmul@b+2)& (0+255),b
  8605  0127D0  CFF3 F0B0          	movff	prodl,___flmul@temp
  8606  0127D4  CFF4 F0B1          	movff	prodh,___flmul@temp+1
  8607                           
  8608                           ; BSR set to: 0
  8609  0127D8  51B0               	movf	___flmul@temp& (0+255),w,b
  8610  0127DA  27AC               	addwf	___flmul@prod& (0+255),f,b
  8611  0127DC  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8612  0127DE  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8613  0127E0  0E00               	movlw	0
  8614  0127E2  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8615  0127E4  0E00               	movlw	0
  8616  0127E6  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8617  0127E8  519F               	movf	(___flmul@a+2)& (0+255),w,b
  8618  0127EA  039B               	mulwf	(___flmul@b+2)& (0+255),b
  8619  0127EC  CFF3 F0B0          	movff	prodl,___flmul@temp
  8620  0127F0  CFF4 F0B1          	movff	prodh,___flmul@temp+1
  8621                           
  8622                           ; BSR set to: 0
  8623  0127F4  51B0               	movf	___flmul@temp& (0+255),w,b
  8624  0127F6  6FA1               	movwf	??___flmul& (0+255),b
  8625  0127F8  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8626  0127FA  6FA2               	movwf	(??___flmul+1)& (0+255),b
  8627  0127FC  6BA3               	clrf	(??___flmul+2)& (0+255),b
  8628  0127FE  6BA4               	clrf	(??___flmul+3)& (0+255),b
  8629  012800  C0A3  F0A4         	movff	??___flmul+2,??___flmul+3
  8630  012804  C0A2  F0A3         	movff	??___flmul+1,??___flmul+2
  8631  012808  C0A1  F0A2         	movff	??___flmul,??___flmul+1
  8632  01280C  6BA1               	clrf	??___flmul& (0+255),b
  8633  01280E  51A1               	movf	??___flmul& (0+255),w,b
  8634  012810  27AC               	addwf	___flmul@prod& (0+255),f,b
  8635  012812  51A2               	movf	(??___flmul+1)& (0+255),w,b
  8636  012814  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8637  012816  51A3               	movf	(??___flmul+2)& (0+255),w,b
  8638  012818  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8639  01281A  51A4               	movf	(??___flmul+3)& (0+255),w,b
  8640  01281C  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8641                           
  8642                           ; BSR set to: 0
  8643  01281E  C0A6  F0A1         	movff	___flmul@grs,??___flmul
  8644  012822  C0A7  F0A2         	movff	___flmul@grs+1,??___flmul+1
  8645  012826  C0A8  F0A3         	movff	___flmul@grs+2,??___flmul+2
  8646  01282A  C0A9  F0A4         	movff	___flmul@grs+3,??___flmul+3
  8647  01282E  0E19               	movlw	25
  8648  012830  D005               	goto	u5070
  8649  012832                     u5075:
  8650  012832  90D8               	bcf	status,0,c
  8651  012834  33A4               	rrcf	(??___flmul+3)& (0+255),f,b
  8652  012836  33A3               	rrcf	(??___flmul+2)& (0+255),f,b
  8653  012838  33A2               	rrcf	(??___flmul+1)& (0+255),f,b
  8654  01283A  33A1               	rrcf	??___flmul& (0+255),f,b
  8655  01283C                     u5070:
  8656  01283C  2EE8               	decfsz	wreg,f,c
  8657  01283E  D7F9               	goto	u5075
  8658  012840  51A1               	movf	??___flmul& (0+255),w,b
  8659  012842  27AC               	addwf	___flmul@prod& (0+255),f,b
  8660  012844  51A2               	movf	(??___flmul+1)& (0+255),w,b
  8661  012846  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8662  012848  51A3               	movf	(??___flmul+2)& (0+255),w,b
  8663  01284A  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8664  01284C  51A4               	movf	(??___flmul+3)& (0+255),w,b
  8665  01284E  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8666                           
  8667                           ; BSR set to: 0
  8668  012850  C0A8  F0A9         	movff	___flmul@grs+2,___flmul@grs+3
  8669  012854  C0A7  F0A8         	movff	___flmul@grs+1,___flmul@grs+2
  8670  012858  C0A6  F0A7         	movff	___flmul@grs,___flmul@grs+1
  8671  01285C  6BA6               	clrf	___flmul@grs& (0+255),b
  8672                           
  8673                           ; BSR set to: 0
  8674  01285E  51AA               	movf	___flmul@aexp& (0+255),w,b
  8675  012860  C0AB  F0A1         	movff	___flmul@bexp,??___flmul
  8676  012864  6BA2               	clrf	(??___flmul+1)& (0+255),b
  8677  012866  27A1               	addwf	??___flmul& (0+255),f,b
  8678  012868  0E00               	movlw	0
  8679  01286A  23A2               	addwfc	(??___flmul+1)& (0+255),f,b
  8680  01286C  0E82               	movlw	130
  8681  01286E  25A1               	addwf	??___flmul& (0+255),w,b
  8682  012870  6FB0               	movwf	___flmul@temp& (0+255),b
  8683  012872  0EFF               	movlw	255
  8684  012874  21A2               	addwfc	(??___flmul+1)& (0+255),w,b
  8685  012876  6FB1               	movwf	(___flmul@temp+1)& (0+255),b
  8686  012878  D00F               	goto	l1131
  8687  01287A                     
  8688                           ; BSR set to: 0
  8689                           
  8690                           ; BSR set to: 0
  8691  01287A  90D8               	bcf	status,0,c
  8692  01287C  37AC               	rlcf	___flmul@prod& (0+255),f,b
  8693  01287E  37AD               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8694  012880  37AE               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8695  012882  37AF               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8696                           
  8697                           ; BSR set to: 0
  8698  012884  BFA9               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8699                           
  8700                           ; BSR set to: 0
  8701  012886  81AC               	bsf	___flmul@prod& (0+255),0,b
  8702                           
  8703                           ; BSR set to: 0
  8704  012888  90D8               	bcf	status,0,c
  8705  01288A  37A6               	rlcf	___flmul@grs& (0+255),f,b
  8706  01288C  37A7               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8707  01288E  37A8               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8708  012890  37A9               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8709  012892  07B0               	decf	___flmul@temp& (0+255),f,b
  8710  012894  A0D8               	btfss	status,0,c
  8711  012896  07B1               	decf	(___flmul@temp+1)& (0+255),f,b
  8712  012898                     l1131:
  8713                           
  8714                           ; BSR set to: 0
  8715                           
  8716                           ; BSR set to: 0
  8717  012898  AFAE               	btfss	(___flmul@prod+2)& (0+255),7,b
  8718  01289A  D7EF               	goto	l1132
  8719                           
  8720                           ; BSR set to: 0
  8721                           
  8722                           ; BSR set to: 0
  8723  01289C  0E00               	movlw	0
  8724  01289E  6FAA               	movwf	___flmul@aexp& (0+255),b
  8725                           
  8726                           ; BSR set to: 0
  8727  0128A0  AFA9               	btfss	(___flmul@grs+3)& (0+255),7,b
  8728  0128A2  D016               	goto	l1138
  8729                           
  8730                           ; BSR set to: 0
  8731  0128A4  0EFF               	movlw	255
  8732  0128A6  15A6               	andwf	___flmul@grs& (0+255),w,b
  8733  0128A8  6FA1               	movwf	??___flmul& (0+255),b
  8734  0128AA  0EFF               	movlw	255
  8735  0128AC  15A7               	andwf	(___flmul@grs+1)& (0+255),w,b
  8736  0128AE  6FA2               	movwf	(??___flmul+1)& (0+255),b
  8737  0128B0  0EFF               	movlw	255
  8738  0128B2  15A8               	andwf	(___flmul@grs+2)& (0+255),w,b
  8739  0128B4  6FA3               	movwf	(??___flmul+2)& (0+255),b
  8740  0128B6  0E7F               	movlw	127
  8741  0128B8  15A9               	andwf	(___flmul@grs+3)& (0+255),w,b
  8742  0128BA  6FA4               	movwf	(??___flmul+3)& (0+255),b
  8743  0128BC  51A1               	movf	??___flmul& (0+255),w,b
  8744  0128BE  11A2               	iorwf	(??___flmul+1)& (0+255),w,b
  8745  0128C0  11A3               	iorwf	(??___flmul+2)& (0+255),w,b
  8746  0128C2  11A4               	iorwf	(??___flmul+3)& (0+255),w,b
  8747  0128C4  A4D8               	btfss	status,2,c
  8748  0128C6  D002               	goto	u5120
  8749                           
  8750                           ; BSR set to: 0
  8751                           
  8752                           ; BSR set to: 0
  8753  0128C8  A1AC               	btfss	___flmul@prod& (0+255),0,b
  8754  0128CA  D002               	goto	l1138
  8755  0128CC                     u5120:
  8756                           
  8757                           ; BSR set to: 0
  8758  0128CC  0E01               	movlw	1
  8759  0128CE  6FAA               	movwf	___flmul@aexp& (0+255),b
  8760  0128D0                     l1138:
  8761                           
  8762                           ; BSR set to: 0
  8763                           
  8764                           ; BSR set to: 0
  8765                           
  8766                           ; BSR set to: 0
  8767  0128D0  51AA               	movf	___flmul@aexp& (0+255),w,b
  8768  0128D2  B4D8               	btfsc	status,2,c
  8769  0128D4  D01F               	goto	l1140
  8770                           
  8771                           ; BSR set to: 0
  8772  0128D6  0E01               	movlw	1
  8773  0128D8  27AC               	addwf	___flmul@prod& (0+255),f,b
  8774  0128DA  0E00               	movlw	0
  8775  0128DC  23AD               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8776  0128DE  23AE               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8777  0128E0  23AF               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8778                           
  8779                           ; BSR set to: 0
  8780  0128E2  A1AF               	btfss	(___flmul@prod+3)& (0+255),0,b
  8781  0128E4  D017               	goto	l1140
  8782                           
  8783                           ; BSR set to: 0
  8784  0128E6  C0AC  F0A1         	movff	___flmul@prod,??___flmul
  8785  0128EA  C0AD  F0A2         	movff	___flmul@prod+1,??___flmul+1
  8786  0128EE  C0AE  F0A3         	movff	___flmul@prod+2,??___flmul+2
  8787  0128F2  C0AF  F0A4         	movff	___flmul@prod+3,??___flmul+3
  8788  0128F6  35A4               	rlcf	(??___flmul+3)& (0+255),w,b
  8789  0128F8  33A4               	rrcf	(??___flmul+3)& (0+255),f,b
  8790  0128FA  33A3               	rrcf	(??___flmul+2)& (0+255),f,b
  8791  0128FC  33A2               	rrcf	(??___flmul+1)& (0+255),f,b
  8792  0128FE  33A1               	rrcf	??___flmul& (0+255),f,b
  8793  012900  C0A1  F0AC         	movff	??___flmul,___flmul@prod
  8794  012904  C0A2  F0AD         	movff	??___flmul+1,___flmul@prod+1
  8795  012908  C0A3  F0AE         	movff	??___flmul+2,___flmul@prod+2
  8796  01290C  C0A4  F0AF         	movff	??___flmul+3,___flmul@prod+3
  8797                           
  8798                           ; BSR set to: 0
  8799  012910  4BB0               	infsnz	___flmul@temp& (0+255),f,b
  8800  012912  2BB1               	incf	(___flmul@temp+1)& (0+255),f,b
  8801  012914                     l1140:
  8802                           
  8803                           ; BSR set to: 0
  8804                           
  8805                           ; BSR set to: 0
  8806                           
  8807                           ; BSR set to: 0
  8808  012914  BFB1               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8809  012916  D00D               	goto	l1141
  8810  012918  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8811  01291A  E103               	bnz	u5150
  8812  01291C  29B0               	incf	___flmul@temp& (0+255),w,b
  8813  01291E  A0D8               	btfss	status,0,c
  8814  012920  D008               	goto	l1141
  8815  012922                     u5150:
  8816                           
  8817                           ; BSR set to: 0
  8818  012922  0E00               	movlw	0
  8819  012924  6FAC               	movwf	___flmul@prod& (0+255),b
  8820  012926  0E00               	movlw	0
  8821  012928  6FAD               	movwf	(___flmul@prod+1)& (0+255),b
  8822  01292A  0E80               	movlw	128
  8823  01292C  6FAE               	movwf	(___flmul@prod+2)& (0+255),b
  8824  01292E  0E7F               	movlw	127
  8825  012930  D020               	goto	L5
  8826  012932                     l1141:
  8827                           
  8828                           ; BSR set to: 0
  8829                           
  8830                           ; BSR set to: 0
  8831  012932  BFB1               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8832  012934  D005               	goto	u5160
  8833  012936  51B1               	movf	(___flmul@temp+1)& (0+255),w,b
  8834  012938  E10E               	bnz	l1143
  8835  01293A  05B0               	decf	___flmul@temp& (0+255),w,b
  8836  01293C  B0D8               	btfsc	status,0,c
  8837  01293E  D00B               	goto	l1143
  8838  012940                     u5160:
  8839                           
  8840                           ; BSR set to: 0
  8841  012940  0E00               	movlw	0
  8842  012942  6FAC               	movwf	___flmul@prod& (0+255),b
  8843  012944  0E00               	movlw	0
  8844  012946  6FAD               	movwf	(___flmul@prod+1)& (0+255),b
  8845  012948  0E00               	movlw	0
  8846  01294A  6FAE               	movwf	(___flmul@prod+2)& (0+255),b
  8847  01294C  0E00               	movlw	0
  8848  01294E  6FAF               	movwf	(___flmul@prod+3)& (0+255),b
  8849  012950  0E00               	movlw	0
  8850  012952  6FA5               	movwf	___flmul@sign& (0+255),b
  8851  012954  D00F               	goto	l1144
  8852  012956                     l1143:
  8853                           
  8854                           ; BSR set to: 0
  8855  012956  C0B0  F0AB         	movff	___flmul@temp,___flmul@bexp
  8856                           
  8857                           ; BSR set to: 0
  8858  01295A  0EFF               	movlw	255
  8859  01295C  17AC               	andwf	___flmul@prod& (0+255),f,b
  8860  01295E  0EFF               	movlw	255
  8861  012960  17AD               	andwf	(___flmul@prod+1)& (0+255),f,b
  8862  012962  0E7F               	movlw	127
  8863  012964  17AE               	andwf	(___flmul@prod+2)& (0+255),f,b
  8864  012966  0E00               	movlw	0
  8865  012968  17AF               	andwf	(___flmul@prod+3)& (0+255),f,b
  8866                           
  8867                           ; BSR set to: 0
  8868  01296A  B1AB               	btfsc	___flmul@bexp& (0+255),0,b
  8869                           
  8870                           ; BSR set to: 0
  8871  01296C  8FAE               	bsf	(___flmul@prod+2)& (0+255),7,b
  8872                           
  8873                           ; BSR set to: 0
  8874                           
  8875                           ; BSR set to: 0
  8876  01296E  90D8               	bcf	status,0,c
  8877  012970  31AB               	rrcf	___flmul@bexp& (0+255),w,b
  8878  012972                     L5:
  8879  012972  6FAF               	movwf	(___flmul@prod+3)& (0+255),b
  8880  012974                     l1144:
  8881                           
  8882                           ; BSR set to: 0
  8883                           
  8884                           ; BSR set to: 0
  8885                           
  8886                           ; BSR set to: 0
  8887  012974  51A5               	movf	___flmul@sign& (0+255),w,b
  8888  012976  13AF               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8889                           
  8890                           ; BSR set to: 0
  8891  012978  C0AC  F099         	movff	___flmul@prod,?___flmul
  8892  01297C  C0AD  F09A         	movff	___flmul@prod+1,?___flmul+1
  8893  012980  C0AE  F09B         	movff	___flmul@prod+2,?___flmul+2
  8894  012984  C0AF  F09C         	movff	___flmul@prod+3,?___flmul+3
  8895  012988  0012               	return	
  8896  01298A                     __end_of___flmul:
  8897                           	opt stack 0
  8898                           tblptru	equ	0xFF8
  8899                           tblptrh	equ	0xFF7
  8900                           tblptrl	equ	0xFF6
  8901                           tablat	equ	0xFF5
  8902                           prodh	equ	0xFF4
  8903                           prodl	equ	0xFF3
  8904                           intcon	equ	0xFF2
  8905                           postinc0	equ	0xFEE
  8906                           wreg	equ	0xFE8
  8907                           indf1	equ	0xFE7
  8908                           fsr1h	equ	0xFE2
  8909                           fsr1l	equ	0xFE1
  8910                           indf2	equ	0xFDF
  8911                           postinc2	equ	0xFDE
  8912                           postdec2	equ	0xFDD
  8913                           fsr2h	equ	0xFDA
  8914                           fsr2l	equ	0xFD9
  8915                           status	equ	0xFD8
  8916                           
  8917 ;; *************** function ___awmod *****************
  8918 ;; Defined at:
  8919 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  dividend        2   43[BANK0 ] int 
  8922 ;;  divisor         2   45[BANK0 ] int 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  sign            1   48[BANK0 ] unsigned char 
  8925 ;;  counter         1   47[BANK0 ] unsigned char 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  2   43[BANK0 ] int 
  8928 ;; Registers used:
  8929 ;;		wreg, status,2, status,0
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8935 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8936 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8938 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8939 ;;Total ram usage:        6 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:    5
  8942 ;; This function calls:
  8943 ;;		Nothing
  8944 ;; This function is called by:
  8945 ;;		_fround
  8946 ;;		_scale
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           	psect	text20
  8951  0148F8                     __ptext20:
  8952                           	opt stack 0
  8953  0148F8                     ___awmod:
  8954                           	opt stack 21
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;incstack = 0
  8958  0148F8  0E00               	movlw	0
  8959  0148FA  0100               	movlb	0	; () banked
  8960  0148FC  6F90               	movwf	___awmod@sign& (0+255),b
  8961                           
  8962                           ; BSR set to: 0
  8963  0148FE  AF8C               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8964  014900  D006               	goto	l733
  8965                           
  8966                           ; BSR set to: 0
  8967  014902  6D8B               	negf	___awmod@dividend& (0+255),b
  8968  014904  1F8C               	comf	(___awmod@dividend+1)& (0+255),f,b
  8969  014906  B0D8               	btfsc	status,0,c
  8970  014908  2B8C               	incf	(___awmod@dividend+1)& (0+255),f,b
  8971                           
  8972                           ; BSR set to: 0
  8973  01490A  0E01               	movlw	1
  8974  01490C  6F90               	movwf	___awmod@sign& (0+255),b
  8975  01490E                     l733:
  8976                           
  8977                           ; BSR set to: 0
  8978                           
  8979                           ; BSR set to: 0
  8980  01490E  AF8E               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8981  014910  D004               	goto	l734
  8982                           
  8983                           ; BSR set to: 0
  8984  014912  6D8D               	negf	___awmod@divisor& (0+255),b
  8985  014914  1F8E               	comf	(___awmod@divisor+1)& (0+255),f,b
  8986  014916  B0D8               	btfsc	status,0,c
  8987  014918  2B8E               	incf	(___awmod@divisor+1)& (0+255),f,b
  8988  01491A                     l734:
  8989                           
  8990                           ; BSR set to: 0
  8991                           
  8992                           ; BSR set to: 0
  8993  01491A  518D               	movf	___awmod@divisor& (0+255),w,b
  8994  01491C  118E               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8995  01491E  B4D8               	btfsc	status,2,c
  8996  014920  D018               	goto	l741
  8997                           
  8998                           ; BSR set to: 0
  8999  014922  0E01               	movlw	1
  9000  014924  6F8F               	movwf	___awmod@counter& (0+255),b
  9001  014926  D004               	goto	l736
  9002  014928                     
  9003                           ; BSR set to: 0
  9004                           
  9005                           ; BSR set to: 0
  9006  014928  90D8               	bcf	status,0,c
  9007  01492A  378D               	rlcf	___awmod@divisor& (0+255),f,b
  9008  01492C  378E               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9009  01492E  2B8F               	incf	___awmod@counter& (0+255),f,b
  9010  014930                     l736:
  9011                           
  9012                           ; BSR set to: 0
  9013                           
  9014                           ; BSR set to: 0
  9015  014930  AF8E               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9016  014932  D7FA               	goto	l737
  9017  014934                     u5300:
  9018                           
  9019                           ; BSR set to: 0
  9020                           
  9021                           ; BSR set to: 0
  9022                           
  9023                           ; BSR set to: 0
  9024  014934  518D               	movf	___awmod@divisor& (0+255),w,b
  9025  014936  5D8B               	subwf	___awmod@dividend& (0+255),w,b
  9026  014938  518E               	movf	(___awmod@divisor+1)& (0+255),w,b
  9027  01493A  598C               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9028  01493C  A0D8               	btfss	status,0,c
  9029  01493E  D004               	goto	l740
  9030                           
  9031                           ; BSR set to: 0
  9032  014940  518D               	movf	___awmod@divisor& (0+255),w,b
  9033  014942  5F8B               	subwf	___awmod@dividend& (0+255),f,b
  9034  014944  518E               	movf	(___awmod@divisor+1)& (0+255),w,b
  9035  014946  5B8C               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9036  014948                     l740:
  9037                           
  9038                           ; BSR set to: 0
  9039                           
  9040                           ; BSR set to: 0
  9041  014948  90D8               	bcf	status,0,c
  9042  01494A  338E               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9043  01494C  338D               	rrcf	___awmod@divisor& (0+255),f,b
  9044                           
  9045                           ; BSR set to: 0
  9046  01494E  2F8F               	decfsz	___awmod@counter& (0+255),f,b
  9047  014950  D7F1               	goto	u5300
  9048  014952                     l741:
  9049                           
  9050                           ; BSR set to: 0
  9051                           
  9052                           ; BSR set to: 0
  9053                           
  9054                           ; BSR set to: 0
  9055  014952  5190               	movf	___awmod@sign& (0+255),w,b
  9056  014954  B4D8               	btfsc	status,2,c
  9057  014956  D004               	goto	l742
  9058                           
  9059                           ; BSR set to: 0
  9060  014958  6D8B               	negf	___awmod@dividend& (0+255),b
  9061  01495A  1F8C               	comf	(___awmod@dividend+1)& (0+255),f,b
  9062  01495C  B0D8               	btfsc	status,0,c
  9063  01495E  2B8C               	incf	(___awmod@dividend+1)& (0+255),f,b
  9064  014960                     l742:
  9065                           
  9066                           ; BSR set to: 0
  9067                           
  9068                           ; BSR set to: 0
  9069  014960  C08B  F08B         	movff	___awmod@dividend,?___awmod
  9070  014964  C08C  F08C         	movff	___awmod@dividend+1,?___awmod+1
  9071  014968  0012               	return	
  9072  01496A                     __end_of___awmod:
  9073                           	opt stack 0
  9074                           tblptru	equ	0xFF8
  9075                           tblptrh	equ	0xFF7
  9076                           tblptrl	equ	0xFF6
  9077                           tablat	equ	0xFF5
  9078                           prodh	equ	0xFF4
  9079                           prodl	equ	0xFF3
  9080                           intcon	equ	0xFF2
  9081                           postinc0	equ	0xFEE
  9082                           wreg	equ	0xFE8
  9083                           indf1	equ	0xFE7
  9084                           fsr1h	equ	0xFE2
  9085                           fsr1l	equ	0xFE1
  9086                           indf2	equ	0xFDF
  9087                           postinc2	equ	0xFDE
  9088                           postdec2	equ	0xFDD
  9089                           fsr2h	equ	0xFDA
  9090                           fsr2l	equ	0xFD9
  9091                           status	equ	0xFD8
  9092                           
  9093 ;; *************** function ___awdiv *****************
  9094 ;; Defined at:
  9095 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  dividend        2   49[BANK0 ] int 
  9098 ;;  divisor         2   51[BANK0 ] int 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  quotient        2   55[BANK0 ] int 
  9101 ;;  sign            1   54[BANK0 ] unsigned char 
  9102 ;;  counter         1   53[BANK0 ] unsigned char 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  2   49[BANK0 ] int 
  9105 ;; Registers used:
  9106 ;;		wreg, status,2, status,0
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9112 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9113 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9115 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9116 ;;Total ram usage:        8 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; Hardware stack levels required when called:    5
  9119 ;; This function calls:
  9120 ;;		Nothing
  9121 ;; This function is called by:
  9122 ;;		_fround
  9123 ;;		_scale
  9124 ;;		_printf
  9125 ;; This function uses a non-reentrant model
  9126 ;;
  9127                           
  9128                           	psect	text21
  9129  0146E8                     __ptext21:
  9130                           	opt stack 0
  9131  0146E8                     ___awdiv:
  9132                           	opt stack 21
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;incstack = 0
  9136  0146E8  0E00               	movlw	0
  9137  0146EA  0100               	movlb	0	; () banked
  9138  0146EC  6F96               	movwf	___awdiv@sign& (0+255),b
  9139                           
  9140                           ; BSR set to: 0
  9141  0146EE  AF94               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9142  0146F0  D006               	goto	l720
  9143                           
  9144                           ; BSR set to: 0
  9145  0146F2  6D93               	negf	___awdiv@divisor& (0+255),b
  9146  0146F4  1F94               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9147  0146F6  B0D8               	btfsc	status,0,c
  9148  0146F8  2B94               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9149                           
  9150                           ; BSR set to: 0
  9151  0146FA  0E01               	movlw	1
  9152  0146FC  6F96               	movwf	___awdiv@sign& (0+255),b
  9153  0146FE                     l720:
  9154                           
  9155                           ; BSR set to: 0
  9156                           
  9157                           ; BSR set to: 0
  9158  0146FE  AF92               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9159  014700  D006               	goto	l721
  9160                           
  9161                           ; BSR set to: 0
  9162  014702  6D91               	negf	___awdiv@dividend& (0+255),b
  9163  014704  1F92               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9164  014706  B0D8               	btfsc	status,0,c
  9165  014708  2B92               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9166                           
  9167                           ; BSR set to: 0
  9168  01470A  0E01               	movlw	1
  9169  01470C  1B96               	xorwf	___awdiv@sign& (0+255),f,b
  9170  01470E                     l721:
  9171                           
  9172                           ; BSR set to: 0
  9173                           
  9174                           ; BSR set to: 0
  9175  01470E  0E00               	movlw	0
  9176  014710  6F98               	movwf	(___awdiv@quotient+1)& (0+255),b
  9177  014712  0E00               	movlw	0
  9178  014714  6F97               	movwf	___awdiv@quotient& (0+255),b
  9179                           
  9180                           ; BSR set to: 0
  9181  014716  5193               	movf	___awdiv@divisor& (0+255),w,b
  9182  014718  1194               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9183  01471A  B4D8               	btfsc	status,2,c
  9184  01471C  D01C               	goto	l728
  9185                           
  9186                           ; BSR set to: 0
  9187  01471E  0E01               	movlw	1
  9188  014720  6F95               	movwf	___awdiv@counter& (0+255),b
  9189  014722  D004               	goto	l723
  9190  014724                     
  9191                           ; BSR set to: 0
  9192                           
  9193                           ; BSR set to: 0
  9194  014724  90D8               	bcf	status,0,c
  9195  014726  3793               	rlcf	___awdiv@divisor& (0+255),f,b
  9196  014728  3794               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9197  01472A  2B95               	incf	___awdiv@counter& (0+255),f,b
  9198  01472C                     l723:
  9199                           
  9200                           ; BSR set to: 0
  9201                           
  9202                           ; BSR set to: 0
  9203  01472C  AF94               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9204  01472E  D7FA               	goto	l724
  9205  014730                     u5240:
  9206                           
  9207                           ; BSR set to: 0
  9208                           
  9209                           ; BSR set to: 0
  9210                           
  9211                           ; BSR set to: 0
  9212  014730  90D8               	bcf	status,0,c
  9213  014732  3797               	rlcf	___awdiv@quotient& (0+255),f,b
  9214  014734  3798               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9215                           
  9216                           ; BSR set to: 0
  9217  014736  5193               	movf	___awdiv@divisor& (0+255),w,b
  9218  014738  5D91               	subwf	___awdiv@dividend& (0+255),w,b
  9219  01473A  5194               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9220  01473C  5992               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9221  01473E  A0D8               	btfss	status,0,c
  9222  014740  D005               	goto	l727
  9223                           
  9224                           ; BSR set to: 0
  9225  014742  5193               	movf	___awdiv@divisor& (0+255),w,b
  9226  014744  5F91               	subwf	___awdiv@dividend& (0+255),f,b
  9227  014746  5194               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9228  014748  5B92               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9229                           
  9230                           ; BSR set to: 0
  9231  01474A  8197               	bsf	___awdiv@quotient& (0+255),0,b
  9232  01474C                     l727:
  9233                           
  9234                           ; BSR set to: 0
  9235                           
  9236                           ; BSR set to: 0
  9237  01474C  90D8               	bcf	status,0,c
  9238  01474E  3394               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9239  014750  3393               	rrcf	___awdiv@divisor& (0+255),f,b
  9240                           
  9241                           ; BSR set to: 0
  9242  014752  2F95               	decfsz	___awdiv@counter& (0+255),f,b
  9243  014754  D7ED               	goto	u5240
  9244  014756                     l728:
  9245                           
  9246                           ; BSR set to: 0
  9247                           
  9248                           ; BSR set to: 0
  9249                           
  9250                           ; BSR set to: 0
  9251  014756  5196               	movf	___awdiv@sign& (0+255),w,b
  9252  014758  B4D8               	btfsc	status,2,c
  9253  01475A  D004               	goto	l729
  9254                           
  9255                           ; BSR set to: 0
  9256  01475C  6D97               	negf	___awdiv@quotient& (0+255),b
  9257  01475E  1F98               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9258  014760  B0D8               	btfsc	status,0,c
  9259  014762  2B98               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9260  014764                     l729:
  9261                           
  9262                           ; BSR set to: 0
  9263                           
  9264                           ; BSR set to: 0
  9265  014764  C097  F091         	movff	___awdiv@quotient,?___awdiv
  9266  014768  C098  F092         	movff	___awdiv@quotient+1,?___awdiv+1
  9267  01476C  0012               	return	
  9268  01476E                     __end_of___awdiv:
  9269                           	opt stack 0
  9270                           tblptru	equ	0xFF8
  9271                           tblptrh	equ	0xFF7
  9272                           tblptrl	equ	0xFF6
  9273                           tablat	equ	0xFF5
  9274                           prodh	equ	0xFF4
  9275                           prodl	equ	0xFF3
  9276                           intcon	equ	0xFF2
  9277                           postinc0	equ	0xFEE
  9278                           wreg	equ	0xFE8
  9279                           indf1	equ	0xFE7
  9280                           fsr1h	equ	0xFE2
  9281                           fsr1l	equ	0xFE1
  9282                           indf2	equ	0xFDF
  9283                           postinc2	equ	0xFDE
  9284                           postdec2	equ	0xFDD
  9285                           fsr2h	equ	0xFDA
  9286                           fsr2l	equ	0xFD9
  9287                           status	equ	0xFD8
  9288                           
  9289 ;; *************** function __tdiv_to_l_ *****************
  9290 ;; Defined at:
  9291 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  f1              4   43[BANK0 ] float 
  9294 ;;  f2              4   47[BANK0 ] float 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;  quot            4   54[BANK0 ] unsigned long 
  9297 ;;  exp1            1   59[BANK0 ] unsigned char 
  9298 ;;  cntr            1   58[BANK0 ] unsigned char 
  9299 ;; Return value:  Size  Location     Type
  9300 ;;                  4   43[BANK0 ] unsigned long 
  9301 ;; Registers used:
  9302 ;;		wreg, status,2, status,0
  9303 ;; Tracked objects:
  9304 ;;		On entry : 0/0
  9305 ;;		On exit  : 0/0
  9306 ;;		Unchanged: 0/0
  9307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9308 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9309 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9310 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9311 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9312 ;;Total ram usage:       17 bytes
  9313 ;; Hardware stack levels used:    1
  9314 ;; Hardware stack levels required when called:    5
  9315 ;; This function calls:
  9316 ;;		Nothing
  9317 ;; This function is called by:
  9318 ;;		_printf
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text22
  9323  013C1E                     __ptext22:
  9324                           	opt stack 0
  9325  013C1E                     __tdiv_to_l_:
  9326                           	opt stack 22
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;incstack = 0
  9330  013C1E  C08D  F093         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9331  013C22  0100               	movlb	0	; () banked
  9332  013C24  6B94               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9333  013C26  6B95               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9334  013C28  358C               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9335  013C2A  3793               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9336  013C2C  E301               	bnc	u5561
  9337  013C2E  8194               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9338  013C30                     u5561:
  9339  013C30  5193               	movf	??__tdiv_to_l_& (0+255),w,b
  9340  013C32  6F9B               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9341  013C34  519B               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9342  013C36  A4D8               	btfss	status,2,c
  9343  013C38  D009               	goto	l856
  9344                           
  9345                           ; BSR set to: 0
  9346  013C3A  0E00               	movlw	0
  9347  013C3C  6F8B               	movwf	?__tdiv_to_l_& (0+255),b
  9348  013C3E  0E00               	movlw	0
  9349  013C40  6F8C               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9350  013C42  0E00               	movlw	0
  9351  013C44  6F8D               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9352  013C46  0E00               	movlw	0
  9353  013C48  6F8E               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9354                           
  9355                           ; BSR set to: 0
  9356  013C4A  0012               	return	
  9357  013C4C                     l856:
  9358                           
  9359                           ; BSR set to: 0
  9360                           
  9361                           ; BSR set to: 0
  9362  013C4C  C091  F093         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9363  013C50  6B94               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9364  013C52  6B95               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9365  013C54  3590               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9366  013C56  3793               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9367  013C58  E301               	bnc	u5581
  9368  013C5A  8194               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9369  013C5C                     u5581:
  9370  013C5C  5193               	movf	??__tdiv_to_l_& (0+255),w,b
  9371  013C5E  6F9A               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9372  013C60  519A               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9373  013C62  A4D8               	btfss	status,2,c
  9374  013C64  D009               	goto	l858
  9375                           
  9376                           ; BSR set to: 0
  9377  013C66  0E00               	movlw	0
  9378  013C68  6F8B               	movwf	?__tdiv_to_l_& (0+255),b
  9379  013C6A  0E00               	movlw	0
  9380  013C6C  6F8C               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9381  013C6E  0E00               	movlw	0
  9382  013C70  6F8D               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9383  013C72  0E00               	movlw	0
  9384  013C74  6F8E               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9385                           
  9386                           ; BSR set to: 0
  9387  013C76  0012               	return	
  9388  013C78                     l858:
  9389                           
  9390                           ; BSR set to: 0
  9391                           
  9392                           ; BSR set to: 0
  9393  013C78  8F8C               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9394                           
  9395                           ; BSR set to: 0
  9396  013C7A  0EFF               	movlw	255
  9397  013C7C  178B               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9398  013C7E  0EFF               	movlw	255
  9399  013C80  178C               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9400  013C82  0E00               	movlw	0
  9401  013C84  178D               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9402  013C86  8F90               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9403                           
  9404                           ; BSR set to: 0
  9405  013C88  0EFF               	movlw	255
  9406  013C8A  178F               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9407  013C8C  0EFF               	movlw	255
  9408  013C8E  1790               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9409  013C90  0E00               	movlw	0
  9410  013C92  1791               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9411                           
  9412                           ; BSR set to: 0
  9413  013C94  0E00               	movlw	0
  9414  013C96  6F96               	movwf	__tdiv_to_l_@quot& (0+255),b
  9415  013C98  0E00               	movlw	0
  9416  013C9A  6F97               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9417  013C9C  0E00               	movlw	0
  9418  013C9E  6F98               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9419  013CA0  0E00               	movlw	0
  9420  013CA2  6F99               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9421                           
  9422                           ; BSR set to: 0
  9423  013CA4  0E7F               	movlw	127
  9424  013CA6  5F9B               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9425                           
  9426                           ; BSR set to: 0
  9427  013CA8  519A               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9428  013CAA  0F98               	addlw	152
  9429  013CAC  5F9B               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9430                           
  9431                           ; BSR set to: 0
  9432  013CAE  0E18               	movlw	24
  9433  013CB0  6F9A               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9434  013CB2                     l859:
  9435                           
  9436                           ; BSR set to: 0
  9437  013CB2  90D8               	bcf	status,0,c
  9438  013CB4  3796               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9439  013CB6  3797               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9440  013CB8  3798               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9441  013CBA  3799               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9442                           
  9443                           ; BSR set to: 0
  9444  013CBC  518F               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9445  013CBE  5D8B               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9446  013CC0  5190               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9447  013CC2  598C               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9448  013CC4  5191               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9449  013CC6  598D               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9450  013CC8  A0D8               	btfss	status,0,c
  9451  013CCA  D007               	goto	l860
  9452                           
  9453                           ; BSR set to: 0
  9454  013CCC  518F               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9455  013CCE  5F8B               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9456  013CD0  5190               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9457  013CD2  5B8C               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9458  013CD4  5191               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9459  013CD6  5B8D               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9460                           
  9461                           ; BSR set to: 0
  9462  013CD8  8196               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9463  013CDA                     l860:
  9464                           
  9465                           ; BSR set to: 0
  9466  013CDA  90D8               	bcf	status,0,c
  9467  013CDC  378B               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9468  013CDE  378C               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9469  013CE0  378D               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9470                           
  9471                           ; BSR set to: 0
  9472  013CE2  2F9A               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9473  013CE4  D7E6               	goto	l859
  9474                           
  9475                           ; BSR set to: 0
  9476                           
  9477                           ; BSR set to: 0
  9478  013CE6  AF9B               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9479  013CE8  D016               	goto	l862
  9480                           
  9481                           ; BSR set to: 0
  9482  013CEA  519B               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9483  013CEC  0A80               	xorlw	128
  9484  013CEE  0F97               	addlw	151
  9485  013CF0  B0D8               	btfsc	status,0,c
  9486  013CF2  D009               	goto	l863
  9487                           
  9488                           ; BSR set to: 0
  9489  013CF4  0E00               	movlw	0
  9490  013CF6  6F8B               	movwf	?__tdiv_to_l_& (0+255),b
  9491  013CF8  0E00               	movlw	0
  9492  013CFA  6F8C               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9493  013CFC  0E00               	movlw	0
  9494  013CFE  6F8D               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9495  013D00  0E00               	movlw	0
  9496  013D02  6F8E               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9497                           
  9498                           ; BSR set to: 0
  9499  013D04  0012               	return	
  9500  013D06                     l863:
  9501                           
  9502                           ; BSR set to: 0
  9503                           
  9504                           ; BSR set to: 0
  9505                           
  9506                           ; BSR set to: 0
  9507  013D06  90D8               	bcf	status,0,c
  9508  013D08  3399               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9509  013D0A  3398               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9510  013D0C  3397               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9511  013D0E  3396               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9512                           
  9513                           ; BSR set to: 0
  9514  013D10  3F9B               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9515  013D12  D7F9               	goto	l863
  9516                           
  9517                           ; BSR set to: 0
  9518  013D14  D015               	goto	u5640
  9519  013D16                     l862:
  9520                           
  9521                           ; BSR set to: 0
  9522                           
  9523                           ; BSR set to: 0
  9524  013D16  0E17               	movlw	23
  9525  013D18  659B               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9526  013D1A  D00F               	goto	l868
  9527                           
  9528                           ; BSR set to: 0
  9529  013D1C  0E00               	movlw	0
  9530  013D1E  6F8B               	movwf	?__tdiv_to_l_& (0+255),b
  9531  013D20  0E00               	movlw	0
  9532  013D22  6F8C               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9533  013D24  0E00               	movlw	0
  9534  013D26  6F8D               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9535  013D28  0E00               	movlw	0
  9536  013D2A  6F8E               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9537                           
  9538                           ; BSR set to: 0
  9539  013D2C  0012               	return	
  9540  013D2E                     
  9541                           ; BSR set to: 0
  9542                           
  9543                           ; BSR set to: 0
  9544  013D2E  90D8               	bcf	status,0,c
  9545  013D30  3796               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9546  013D32  3797               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9547  013D34  3798               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9548  013D36  3799               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9549  013D38  079B               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9550  013D3A                     l868:
  9551                           
  9552                           ; BSR set to: 0
  9553                           
  9554                           ; BSR set to: 0
  9555  013D3A  519B               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9556  013D3C  A4D8               	btfss	status,2,c
  9557  013D3E  D7F7               	goto	l869
  9558  013D40                     u5640:
  9559                           
  9560                           ; BSR set to: 0
  9561                           
  9562                           ; BSR set to: 0
  9563  013D40  C096  F08B         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9564  013D44  C097  F08C         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9565  013D48  C098  F08D         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9566  013D4C  C099  F08E         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9567                           
  9568                           ; BSR set to: 0
  9569  013D50  0012               	return		;funcret
  9570  013D52                     __end_of__tdiv_to_l_:
  9571                           	opt stack 0
  9572                           tblptru	equ	0xFF8
  9573                           tblptrh	equ	0xFF7
  9574                           tblptrl	equ	0xFF6
  9575                           tablat	equ	0xFF5
  9576                           prodh	equ	0xFF4
  9577                           prodl	equ	0xFF3
  9578                           intcon	equ	0xFF2
  9579                           postinc0	equ	0xFEE
  9580                           wreg	equ	0xFE8
  9581                           indf1	equ	0xFE7
  9582                           fsr1h	equ	0xFE2
  9583                           fsr1l	equ	0xFE1
  9584                           indf2	equ	0xFDF
  9585                           postinc2	equ	0xFDE
  9586                           postdec2	equ	0xFDD
  9587                           fsr2h	equ	0xFDA
  9588                           fsr2l	equ	0xFD9
  9589                           status	equ	0xFD8
  9590                           
  9591 ;; *************** function __div_to_l_ *****************
  9592 ;; Defined at:
  9593 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  f1              4   43[BANK0 ] unsigned long 
  9596 ;;  f2              4   47[BANK0 ] unsigned long 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  quot            4   51[BANK0 ] unsigned long 
  9599 ;;  exp1            1   56[BANK0 ] unsigned char 
  9600 ;;  cntr            1   55[BANK0 ] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  4   43[BANK0 ] unsigned long 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9610 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9611 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9613 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9614 ;;Total ram usage:       14 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:    5
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_printf
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text23
  9625  013E84                     __ptext23:
  9626                           	opt stack 0
  9627  013E84                     __div_to_l_:
  9628                           	opt stack 22
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;incstack = 0
  9632  013E84  0100               	movlb	0	; () banked
  9633  013E86  358D               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9634  013E88  358E               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9635  013E8A  6F98               	movwf	__div_to_l_@exp1& (0+255),b
  9636  013E8C  5198               	movf	__div_to_l_@exp1& (0+255),w,b
  9637  013E8E  A4D8               	btfss	status,2,c
  9638  013E90  D009               	goto	l752
  9639                           
  9640                           ; BSR set to: 0
  9641  013E92  0E00               	movlw	0
  9642  013E94  6F8B               	movwf	?__div_to_l_& (0+255),b
  9643  013E96  0E00               	movlw	0
  9644  013E98  6F8C               	movwf	(?__div_to_l_+1)& (0+255),b
  9645  013E9A  0E00               	movlw	0
  9646  013E9C  6F8D               	movwf	(?__div_to_l_+2)& (0+255),b
  9647  013E9E  0E00               	movlw	0
  9648  013EA0  6F8E               	movwf	(?__div_to_l_+3)& (0+255),b
  9649                           
  9650                           ; BSR set to: 0
  9651  013EA2  0012               	return	
  9652  013EA4                     l752:
  9653                           
  9654                           ; BSR set to: 0
  9655                           
  9656                           ; BSR set to: 0
  9657  013EA4  3591               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9658  013EA6  3592               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9659  013EA8  6F97               	movwf	__div_to_l_@cntr& (0+255),b
  9660  013EAA  5197               	movf	__div_to_l_@cntr& (0+255),w,b
  9661  013EAC  A4D8               	btfss	status,2,c
  9662  013EAE  D009               	goto	l754
  9663                           
  9664                           ; BSR set to: 0
  9665  013EB0  0E00               	movlw	0
  9666  013EB2  6F8B               	movwf	?__div_to_l_& (0+255),b
  9667  013EB4  0E00               	movlw	0
  9668  013EB6  6F8C               	movwf	(?__div_to_l_+1)& (0+255),b
  9669  013EB8  0E00               	movlw	0
  9670  013EBA  6F8D               	movwf	(?__div_to_l_+2)& (0+255),b
  9671  013EBC  0E00               	movlw	0
  9672  013EBE  6F8E               	movwf	(?__div_to_l_+3)& (0+255),b
  9673                           
  9674                           ; BSR set to: 0
  9675  013EC0  0012               	return	
  9676  013EC2                     l754:
  9677                           
  9678                           ; BSR set to: 0
  9679                           
  9680                           ; BSR set to: 0
  9681  013EC2  8F8D               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9682                           
  9683                           ; BSR set to: 0
  9684  013EC4  0EFF               	movlw	255
  9685  013EC6  178B               	andwf	__div_to_l_@f1& (0+255),f,b
  9686  013EC8  0EFF               	movlw	255
  9687  013ECA  178C               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9688  013ECC  0EFF               	movlw	255
  9689  013ECE  178D               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9690  013ED0  0E00               	movlw	0
  9691  013ED2  178E               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9692                           
  9693                           ; BSR set to: 0
  9694  013ED4  8F91               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9695  013ED6  0EFF               	movlw	255
  9696  013ED8  178F               	andwf	__div_to_l_@f2& (0+255),f,b
  9697  013EDA  0EFF               	movlw	255
  9698  013EDC  1790               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9699  013EDE  0EFF               	movlw	255
  9700  013EE0  1791               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9701  013EE2  0E00               	movlw	0
  9702  013EE4  1792               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9703                           
  9704                           ; BSR set to: 0
  9705  013EE6  0E00               	movlw	0
  9706  013EE8  6F93               	movwf	__div_to_l_@quot& (0+255),b
  9707  013EEA  0E00               	movlw	0
  9708  013EEC  6F94               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9709  013EEE  0E00               	movlw	0
  9710  013EF0  6F95               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9711  013EF2  0E00               	movlw	0
  9712  013EF4  6F96               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9713                           
  9714                           ; BSR set to: 0
  9715  013EF6  0E7F               	movlw	127
  9716  013EF8  5F98               	subwf	__div_to_l_@exp1& (0+255),f,b
  9717                           
  9718                           ; BSR set to: 0
  9719  013EFA  5197               	movf	__div_to_l_@cntr& (0+255),w,b
  9720  013EFC  0FA0               	addlw	160
  9721  013EFE  5F98               	subwf	__div_to_l_@exp1& (0+255),f,b
  9722                           
  9723                           ; BSR set to: 0
  9724  013F00  0E20               	movlw	32
  9725  013F02  6F97               	movwf	__div_to_l_@cntr& (0+255),b
  9726  013F04                     
  9727                           ; BSR set to: 0
  9728                           
  9729                           ; BSR set to: 0
  9730  013F04  90D8               	bcf	status,0,c
  9731  013F06  3793               	rlcf	__div_to_l_@quot& (0+255),f,b
  9732  013F08  3794               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9733  013F0A  3795               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9734  013F0C  3796               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9735                           
  9736                           ; BSR set to: 0
  9737  013F0E  518F               	movf	__div_to_l_@f2& (0+255),w,b
  9738  013F10  5D8B               	subwf	__div_to_l_@f1& (0+255),w,b
  9739  013F12  5190               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9740  013F14  598C               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9741  013F16  5191               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9742  013F18  598D               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9743  013F1A  5192               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9744  013F1C  598E               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9745  013F1E  A0D8               	btfss	status,0,c
  9746  013F20  D009               	goto	l756
  9747                           
  9748                           ; BSR set to: 0
  9749  013F22  518F               	movf	__div_to_l_@f2& (0+255),w,b
  9750  013F24  5F8B               	subwf	__div_to_l_@f1& (0+255),f,b
  9751  013F26  5190               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9752  013F28  5B8C               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9753  013F2A  5191               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9754  013F2C  5B8D               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9755  013F2E  5192               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9756  013F30  5B8E               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9757                           
  9758                           ; BSR set to: 0
  9759  013F32  8193               	bsf	__div_to_l_@quot& (0+255),0,b
  9760  013F34                     l756:
  9761                           
  9762                           ; BSR set to: 0
  9763                           
  9764                           ; BSR set to: 0
  9765  013F34  90D8               	bcf	status,0,c
  9766  013F36  378B               	rlcf	__div_to_l_@f1& (0+255),f,b
  9767  013F38  378C               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9768  013F3A  378D               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9769  013F3C  378E               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9770                           
  9771                           ; BSR set to: 0
  9772  013F3E  2F97               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9773  013F40  D7E1               	goto	l755
  9774                           
  9775                           ; BSR set to: 0
  9776                           
  9777                           ; BSR set to: 0
  9778  013F42  AF98               	btfss	__div_to_l_@exp1& (0+255),7,b
  9779  013F44  D016               	goto	l758
  9780                           
  9781                           ; BSR set to: 0
  9782  013F46  5198               	movf	__div_to_l_@exp1& (0+255),w,b
  9783  013F48  0A80               	xorlw	128
  9784  013F4A  0F9F               	addlw	159
  9785  013F4C  B0D8               	btfsc	status,0,c
  9786  013F4E  D009               	goto	l759
  9787                           
  9788                           ; BSR set to: 0
  9789  013F50  0E00               	movlw	0
  9790  013F52  6F8B               	movwf	?__div_to_l_& (0+255),b
  9791  013F54  0E00               	movlw	0
  9792  013F56  6F8C               	movwf	(?__div_to_l_+1)& (0+255),b
  9793  013F58  0E00               	movlw	0
  9794  013F5A  6F8D               	movwf	(?__div_to_l_+2)& (0+255),b
  9795  013F5C  0E00               	movlw	0
  9796  013F5E  6F8E               	movwf	(?__div_to_l_+3)& (0+255),b
  9797                           
  9798                           ; BSR set to: 0
  9799  013F60  0012               	return	
  9800  013F62                     l759:
  9801                           
  9802                           ; BSR set to: 0
  9803                           
  9804                           ; BSR set to: 0
  9805                           
  9806                           ; BSR set to: 0
  9807  013F62  90D8               	bcf	status,0,c
  9808  013F64  3396               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9809  013F66  3395               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9810  013F68  3394               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9811  013F6A  3393               	rrcf	__div_to_l_@quot& (0+255),f,b
  9812                           
  9813                           ; BSR set to: 0
  9814  013F6C  3F98               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9815  013F6E  D7F9               	goto	l759
  9816                           
  9817                           ; BSR set to: 0
  9818  013F70  D015               	goto	u5710
  9819  013F72                     l758:
  9820                           
  9821                           ; BSR set to: 0
  9822                           
  9823                           ; BSR set to: 0
  9824  013F72  0E1F               	movlw	31
  9825  013F74  6598               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9826  013F76  D00F               	goto	l764
  9827                           
  9828                           ; BSR set to: 0
  9829  013F78  0E00               	movlw	0
  9830  013F7A  6F8B               	movwf	?__div_to_l_& (0+255),b
  9831  013F7C  0E00               	movlw	0
  9832  013F7E  6F8C               	movwf	(?__div_to_l_+1)& (0+255),b
  9833  013F80  0E00               	movlw	0
  9834  013F82  6F8D               	movwf	(?__div_to_l_+2)& (0+255),b
  9835  013F84  0E00               	movlw	0
  9836  013F86  6F8E               	movwf	(?__div_to_l_+3)& (0+255),b
  9837                           
  9838                           ; BSR set to: 0
  9839  013F88  0012               	return	
  9840  013F8A                     
  9841                           ; BSR set to: 0
  9842                           
  9843                           ; BSR set to: 0
  9844  013F8A  90D8               	bcf	status,0,c
  9845  013F8C  3793               	rlcf	__div_to_l_@quot& (0+255),f,b
  9846  013F8E  3794               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9847  013F90  3795               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9848  013F92  3796               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9849  013F94  0798               	decf	__div_to_l_@exp1& (0+255),f,b
  9850  013F96                     l764:
  9851                           
  9852                           ; BSR set to: 0
  9853                           
  9854                           ; BSR set to: 0
  9855  013F96  5198               	movf	__div_to_l_@exp1& (0+255),w,b
  9856  013F98  A4D8               	btfss	status,2,c
  9857  013F9A  D7F7               	goto	l765
  9858  013F9C                     u5710:
  9859                           
  9860                           ; BSR set to: 0
  9861                           
  9862                           ; BSR set to: 0
  9863  013F9C  C093  F08B         	movff	__div_to_l_@quot,?__div_to_l_
  9864  013FA0  C094  F08C         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9865  013FA4  C095  F08D         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9866  013FA8  C096  F08E         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9867                           
  9868                           ; BSR set to: 0
  9869  013FAC  0012               	return		;funcret
  9870  013FAE                     __end_of__div_to_l_:
  9871                           	opt stack 0
  9872                           tblptru	equ	0xFF8
  9873                           tblptrh	equ	0xFF7
  9874                           tblptrl	equ	0xFF6
  9875                           tablat	equ	0xFF5
  9876                           prodh	equ	0xFF4
  9877                           prodl	equ	0xFF3
  9878                           intcon	equ	0xFF2
  9879                           postinc0	equ	0xFEE
  9880                           wreg	equ	0xFE8
  9881                           indf1	equ	0xFE7
  9882                           fsr1h	equ	0xFE2
  9883                           fsr1l	equ	0xFE1
  9884                           indf2	equ	0xFDF
  9885                           postinc2	equ	0xFDE
  9886                           postdec2	equ	0xFDD
  9887                           fsr2h	equ	0xFDA
  9888                           fsr2l	equ	0xFD9
  9889                           status	equ	0xFD8
  9890                           
  9891 ;; *************** function ___xxtofl *****************
  9892 ;; Defined at:
  9893 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  9894 ;; Parameters:    Size  Location     Type
  9895 ;;  sign            1    wreg     unsigned char 
  9896 ;;  val             4   56[BANK0 ] long 
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;  sign            1   64[BANK0 ] unsigned char 
  9899 ;;  arg             4   66[BANK0 ] unsigned long 
  9900 ;;  exp             1   65[BANK0 ] unsigned char 
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  4   56[BANK0 ] unsigned char 
  9903 ;; Registers used:
  9904 ;;		wreg, status,2, status,0
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9910 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9911 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9912 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9913 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9914 ;;Total ram usage:       14 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; Hardware stack levels required when called:    5
  9917 ;; This function calls:
  9918 ;;		Nothing
  9919 ;; This function is called by:
  9920 ;;		_ringBufferLUT
  9921 ;;		_printf
  9922 ;;		_strtod
  9923 ;; This function uses a non-reentrant model
  9924 ;;
  9925                           
  9926                           	psect	text24
  9927  013840                     __ptext24:
  9928                           	opt stack 0
  9929  013840                     ___xxtofl:
  9930                           	opt stack 22
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;incstack = 0
  9934                           ;___xxtofl@sign stored from wreg
  9935  013840  0100               	movlb	0	; () banked
  9936  013842  6FA0               	movwf	___xxtofl@sign& (0+255),b
  9937  013844  0100               	movlb	0	; () banked
  9938  013846  51A0               	movf	___xxtofl@sign& (0+255),w,b
  9939  013848  A4D8               	btfss	status,2,c
  9940                           
  9941                           ; BSR set to: 0
  9942  01384A  AF9B               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9943  01384C  D01A               	goto	l1162
  9944                           
  9945                           ; BSR set to: 0
  9946  01384E  C098  F09C         	movff	___xxtofl@val,??___xxtofl
  9947  013852  C099  F09D         	movff	___xxtofl@val+1,??___xxtofl+1
  9948  013856  C09A  F09E         	movff	___xxtofl@val+2,??___xxtofl+2
  9949  01385A  C09B  F09F         	movff	___xxtofl@val+3,??___xxtofl+3
  9950  01385E  1F9C               	comf	??___xxtofl& (0+255),f,b
  9951  013860  1F9D               	comf	(??___xxtofl+1)& (0+255),f,b
  9952  013862  1F9E               	comf	(??___xxtofl+2)& (0+255),f,b
  9953  013864  1F9F               	comf	(??___xxtofl+3)& (0+255),f,b
  9954  013866  2B9C               	incf	??___xxtofl& (0+255),f,b
  9955  013868  0E00               	movlw	0
  9956  01386A  239D               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9957  01386C  239E               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9958  01386E  239F               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9959  013870  C09C  F0A2         	movff	??___xxtofl,___xxtofl@arg
  9960  013874  C09D  F0A3         	movff	??___xxtofl+1,___xxtofl@arg+1
  9961  013878  C09E  F0A4         	movff	??___xxtofl+2,___xxtofl@arg+2
  9962  01387C  C09F  F0A5         	movff	??___xxtofl+3,___xxtofl@arg+3
  9963  013880  D008               	goto	l1163
  9964  013882                     l1162:
  9965                           
  9966                           ; BSR set to: 0
  9967  013882  C098  F0A2         	movff	___xxtofl@val,___xxtofl@arg
  9968  013886  C099  F0A3         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9969  01388A  C09A  F0A4         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9970  01388E  C09B  F0A5         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9971  013892                     l1163:
  9972                           
  9973                           ; BSR set to: 0
  9974                           
  9975                           ; BSR set to: 0
  9976  013892  5198               	movf	___xxtofl@val& (0+255),w,b
  9977  013894  1199               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  9978  013896  119A               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  9979  013898  119B               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  9980  01389A  A4D8               	btfss	status,2,c
  9981  01389C  D009               	goto	l1164
  9982                           
  9983                           ; BSR set to: 0
  9984  01389E  0E00               	movlw	0
  9985  0138A0  6F98               	movwf	?___xxtofl& (0+255),b
  9986  0138A2  0E00               	movlw	0
  9987  0138A4  6F99               	movwf	(?___xxtofl+1)& (0+255),b
  9988  0138A6  0E00               	movlw	0
  9989  0138A8  6F9A               	movwf	(?___xxtofl+2)& (0+255),b
  9990  0138AA  0E00               	movlw	0
  9991  0138AC  6F9B               	movwf	(?___xxtofl+3)& (0+255),b
  9992                           
  9993                           ; BSR set to: 0
  9994  0138AE  0012               	return	
  9995  0138B0                     l1164:
  9996                           
  9997                           ; BSR set to: 0
  9998                           
  9999                           ; BSR set to: 0
 10000  0138B0  0E96               	movlw	150
 10001  0138B2  6FA1               	movwf	___xxtofl@exp& (0+255),b
 10002  0138B4  D006               	goto	l1166
 10003  0138B6                     
 10004                           ; BSR set to: 0
 10005                           
 10006                           ; BSR set to: 0
 10007  0138B6  2BA1               	incf	___xxtofl@exp& (0+255),f,b
 10008  0138B8  90D8               	bcf	status,0,c
 10009  0138BA  33A5               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10010  0138BC  33A4               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10011  0138BE  33A3               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10012  0138C0  33A2               	rrcf	___xxtofl@arg& (0+255),f,b
 10013  0138C2                     l1166:
 10014                           
 10015                           ; BSR set to: 0
 10016                           
 10017                           ; BSR set to: 0
 10018  0138C2  0E00               	movlw	0
 10019  0138C4  15A2               	andwf	___xxtofl@arg& (0+255),w,b
 10020  0138C6  6F9C               	movwf	??___xxtofl& (0+255),b
 10021  0138C8  0E00               	movlw	0
 10022  0138CA  15A3               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10023  0138CC  6F9D               	movwf	(??___xxtofl+1)& (0+255),b
 10024  0138CE  0E00               	movlw	0
 10025  0138D0  15A4               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10026  0138D2  6F9E               	movwf	(??___xxtofl+2)& (0+255),b
 10027  0138D4  0EFE               	movlw	254
 10028  0138D6  15A5               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10029  0138D8  6F9F               	movwf	(??___xxtofl+3)& (0+255),b
 10030  0138DA  519C               	movf	??___xxtofl& (0+255),w,b
 10031  0138DC  119D               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10032  0138DE  119E               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10033  0138E0  119F               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10034  0138E2  B4D8               	btfsc	status,2,c
 10035  0138E4  D00D               	goto	l1169
 10036  0138E6  D7E7               	goto	l1167
 10037  0138E8                     
 10038                           ; BSR set to: 0
 10039                           
 10040                           ; BSR set to: 0
 10041  0138E8  2BA1               	incf	___xxtofl@exp& (0+255),f,b
 10042                           
 10043                           ; BSR set to: 0
 10044  0138EA  0E01               	movlw	1
 10045  0138EC  27A2               	addwf	___xxtofl@arg& (0+255),f,b
 10046  0138EE  0E00               	movlw	0
 10047  0138F0  23A3               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10048  0138F2  23A4               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10049  0138F4  23A5               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10050                           
 10051                           ; BSR set to: 0
 10052  0138F6  90D8               	bcf	status,0,c
 10053  0138F8  33A5               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10054  0138FA  33A4               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10055  0138FC  33A3               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10056  0138FE  33A2               	rrcf	___xxtofl@arg& (0+255),f,b
 10057  013900                     l1169:
 10058                           
 10059                           ; BSR set to: 0
 10060  013900  0E00               	movlw	0
 10061  013902  15A2               	andwf	___xxtofl@arg& (0+255),w,b
 10062  013904  6F9C               	movwf	??___xxtofl& (0+255),b
 10063  013906  0E00               	movlw	0
 10064  013908  15A3               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10065  01390A  6F9D               	movwf	(??___xxtofl+1)& (0+255),b
 10066  01390C  0E00               	movlw	0
 10067  01390E  15A4               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10068  013910  6F9E               	movwf	(??___xxtofl+2)& (0+255),b
 10069  013912  0EFF               	movlw	255
 10070  013914  15A5               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10071  013916  6F9F               	movwf	(??___xxtofl+3)& (0+255),b
 10072  013918  519C               	movf	??___xxtofl& (0+255),w,b
 10073  01391A  119D               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10074  01391C  119E               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10075  01391E  119F               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10076  013920  B4D8               	btfsc	status,2,c
 10077  013922  D007               	goto	l1172
 10078  013924  D7E1               	goto	l1170
 10079  013926                     
 10080                           ; BSR set to: 0
 10081                           
 10082                           ; BSR set to: 0
 10083  013926  07A1               	decf	___xxtofl@exp& (0+255),f,b
 10084  013928  90D8               	bcf	status,0,c
 10085  01392A  37A2               	rlcf	___xxtofl@arg& (0+255),f,b
 10086  01392C  37A3               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10087  01392E  37A4               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10088  013930  37A5               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10089  013932                     l1172:
 10090                           
 10091                           ; BSR set to: 0
 10092                           
 10093                           ; BSR set to: 0
 10094  013932  BFA4               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10095  013934  D003               	goto	u5450
 10096                           
 10097                           ; BSR set to: 0
 10098  013936  0E02               	movlw	2
 10099  013938  61A1               	cpfslt	___xxtofl@exp& (0+255),b
 10100  01393A  D7F5               	goto	l1173
 10101  01393C                     u5450:
 10102                           
 10103                           ; BSR set to: 0
 10104                           
 10105                           ; BSR set to: 0
 10106  01393C  B1A1               	btfsc	___xxtofl@exp& (0+255),0,b
 10107  01393E  D008               	goto	l1177
 10108                           
 10109                           ; BSR set to: 0
 10110  013940  0EFF               	movlw	255
 10111  013942  17A2               	andwf	___xxtofl@arg& (0+255),f,b
 10112  013944  0EFF               	movlw	255
 10113  013946  17A3               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10114  013948  0E7F               	movlw	127
 10115  01394A  17A4               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10116  01394C  0EFF               	movlw	255
 10117  01394E  17A5               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10118  013950                     l1177:
 10119                           
 10120                           ; BSR set to: 0
 10121  013950  90D8               	bcf	status,0,c
 10122  013952  33A1               	rrcf	___xxtofl@exp& (0+255),f,b
 10123  013954  C0A1  F09C         	movff	___xxtofl@exp,??___xxtofl
 10124  013958  6B9D               	clrf	(??___xxtofl+1)& (0+255),b
 10125  01395A  6B9E               	clrf	(??___xxtofl+2)& (0+255),b
 10126  01395C  6B9F               	clrf	(??___xxtofl+3)& (0+255),b
 10127  01395E  C09C  F09F         	movff	??___xxtofl,??___xxtofl+3
 10128  013962  6B9E               	clrf	(??___xxtofl+2)& (0+255),b
 10129  013964  6B9D               	clrf	(??___xxtofl+1)& (0+255),b
 10130  013966  6B9C               	clrf	??___xxtofl& (0+255),b
 10131  013968  519C               	movf	??___xxtofl& (0+255),w,b
 10132  01396A  13A2               	iorwf	___xxtofl@arg& (0+255),f,b
 10133  01396C  519D               	movf	(??___xxtofl+1)& (0+255),w,b
 10134  01396E  13A3               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10135  013970  519E               	movf	(??___xxtofl+2)& (0+255),w,b
 10136  013972  13A4               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10137  013974  519F               	movf	(??___xxtofl+3)& (0+255),w,b
 10138  013976  13A5               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10139                           
 10140                           ; BSR set to: 0
 10141  013978  51A0               	movf	___xxtofl@sign& (0+255),w,b
 10142  01397A  A4D8               	btfss	status,2,c
 10143                           
 10144                           ; BSR set to: 0
 10145  01397C  AF9B               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10146  01397E  D001               	goto	l1178
 10147                           
 10148                           ; BSR set to: 0
 10149  013980  8FA5               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10150  013982                     l1178:
 10151                           
 10152                           ; BSR set to: 0
 10153                           
 10154                           ; BSR set to: 0
 10155  013982  C0A2  F098         	movff	___xxtofl@arg,?___xxtofl
 10156  013986  C0A3  F099         	movff	___xxtofl@arg+1,?___xxtofl+1
 10157  01398A  C0A4  F09A         	movff	___xxtofl@arg+2,?___xxtofl+2
 10158  01398E  C0A5  F09B         	movff	___xxtofl@arg+3,?___xxtofl+3
 10159  013992  0012               	return	
 10160  013994                     __end_of___xxtofl:
 10161                           	opt stack 0
 10162                           tblptru	equ	0xFF8
 10163                           tblptrh	equ	0xFF7
 10164                           tblptrl	equ	0xFF6
 10165                           tablat	equ	0xFF5
 10166                           prodh	equ	0xFF4
 10167                           prodl	equ	0xFF3
 10168                           intcon	equ	0xFF2
 10169                           postinc0	equ	0xFEE
 10170                           wreg	equ	0xFE8
 10171                           indf1	equ	0xFE7
 10172                           fsr1h	equ	0xFE2
 10173                           fsr1l	equ	0xFE1
 10174                           indf2	equ	0xFDF
 10175                           postinc2	equ	0xFDE
 10176                           postdec2	equ	0xFDD
 10177                           fsr2h	equ	0xFDA
 10178                           fsr2l	equ	0xFD9
 10179                           status	equ	0xFD8
 10180                           
 10181 ;; *************** function ___wmul *****************
 10182 ;; Defined at:
 10183 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;  multiplier      2   43[BANK0 ] unsigned int 
 10186 ;;  multiplicand    2   45[BANK0 ] unsigned int 
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;  product         2   47[BANK0 ] unsigned int 
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  2   43[BANK0 ] unsigned int 
 10191 ;; Registers used:
 10192 ;;		wreg, status,2, status,0, prodl, prodh
 10193 ;; Tracked objects:
 10194 ;;		On entry : 0/0
 10195 ;;		On exit  : 0/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10201 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10202 ;;Total ram usage:        6 bytes
 10203 ;; Hardware stack levels used:    1
 10204 ;; Hardware stack levels required when called:    5
 10205 ;; This function calls:
 10206 ;;		Nothing
 10207 ;; This function is called by:
 10208 ;;		_printf
 10209 ;;		_atoi
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213                           	psect	text25
 10214  014E62                     __ptext25:
 10215                           	opt stack 0
 10216  014E62                     ___wmul:
 10217                           	opt stack 22
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;incstack = 0
 10221  014E62  0100               	movlb	0	; () banked
 10222  014E64  518B               	movf	___wmul@multiplier& (0+255),w,b
 10223  014E66  038D               	mulwf	___wmul@multiplicand& (0+255),b
 10224  014E68  CFF3 F08F          	movff	prodl,___wmul@product
 10225  014E6C  CFF4 F090          	movff	prodh,___wmul@product+1
 10226  014E70  518B               	movf	___wmul@multiplier& (0+255),w,b
 10227  014E72  038E               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10228  014E74  50F3               	movf	prodl,w,c
 10229  014E76  2790               	addwf	(___wmul@product+1)& (0+255),f,b
 10230  014E78  518C               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10231  014E7A  038D               	mulwf	___wmul@multiplicand& (0+255),b
 10232  014E7C  50F3               	movf	prodl,w,c
 10233  014E7E  2790               	addwf	(___wmul@product+1)& (0+255),f,b
 10234                           
 10235                           ; BSR set to: 0
 10236  014E80  C08F  F08B         	movff	___wmul@product,?___wmul
 10237  014E84  C090  F08C         	movff	___wmul@product+1,?___wmul+1
 10238  014E88  0012               	return	
 10239  014E8A                     __end_of___wmul:
 10240                           	opt stack 0
 10241                           tblptru	equ	0xFF8
 10242                           tblptrh	equ	0xFF7
 10243                           tblptrl	equ	0xFF6
 10244                           tablat	equ	0xFF5
 10245                           prodh	equ	0xFF4
 10246                           prodl	equ	0xFF3
 10247                           intcon	equ	0xFF2
 10248                           postinc0	equ	0xFEE
 10249                           wreg	equ	0xFE8
 10250                           indf1	equ	0xFE7
 10251                           fsr1h	equ	0xFE2
 10252                           fsr1l	equ	0xFE1
 10253                           indf2	equ	0xFDF
 10254                           postinc2	equ	0xFDE
 10255                           postdec2	equ	0xFDD
 10256                           fsr2h	equ	0xFDA
 10257                           fsr2l	equ	0xFD9
 10258                           status	equ	0xFD8
 10259                           
 10260 ;; *************** function ___llmod *****************
 10261 ;; Defined at:
 10262 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  dividend        4   56[BANK0 ] unsigned long 
 10265 ;;  divisor         4   60[BANK0 ] unsigned long 
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;  counter         1   64[BANK0 ] unsigned char 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  4   56[BANK0 ] unsigned long 
 10270 ;; Registers used:
 10271 ;;		wreg, status,2, status,0
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10277 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10280 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10281 ;;Total ram usage:        9 bytes
 10282 ;; Hardware stack levels used:    1
 10283 ;; Hardware stack levels required when called:    5
 10284 ;; This function calls:
 10285 ;;		Nothing
 10286 ;; This function is called by:
 10287 ;;		_printf
 10288 ;; This function uses a non-reentrant model
 10289 ;;
 10290                           
 10291                           	psect	text26
 10292  0149DA                     __ptext26:
 10293                           	opt stack 0
 10294  0149DA                     ___llmod:
 10295                           	opt stack 22
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;incstack = 0
 10299  0149DA  0100               	movlb	0	; () banked
 10300  0149DC  519C               	movf	___llmod@divisor& (0+255),w,b
 10301  0149DE  119D               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10302  0149E0  119E               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10303  0149E2  119F               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10304  0149E4  B4D8               	btfsc	status,2,c
 10305  0149E6  D024               	goto	l962
 10306                           
 10307                           ; BSR set to: 0
 10308  0149E8  0E01               	movlw	1
 10309  0149EA  6FA0               	movwf	___llmod@counter& (0+255),b
 10310  0149EC  D006               	goto	l957
 10311  0149EE                     
 10312                           ; BSR set to: 0
 10313                           
 10314                           ; BSR set to: 0
 10315  0149EE  90D8               	bcf	status,0,c
 10316  0149F0  379C               	rlcf	___llmod@divisor& (0+255),f,b
 10317  0149F2  379D               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10318  0149F4  379E               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10319  0149F6  379F               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10320  0149F8  2BA0               	incf	___llmod@counter& (0+255),f,b
 10321  0149FA                     l957:
 10322                           
 10323                           ; BSR set to: 0
 10324                           
 10325                           ; BSR set to: 0
 10326  0149FA  AF9F               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10327  0149FC  D7F8               	goto	l958
 10328  0149FE                     u6160:
 10329                           
 10330                           ; BSR set to: 0
 10331                           
 10332                           ; BSR set to: 0
 10333                           
 10334                           ; BSR set to: 0
 10335  0149FE  519C               	movf	___llmod@divisor& (0+255),w,b
 10336  014A00  5D98               	subwf	___llmod@dividend& (0+255),w,b
 10337  014A02  519D               	movf	(___llmod@divisor+1)& (0+255),w,b
 10338  014A04  5999               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10339  014A06  519E               	movf	(___llmod@divisor+2)& (0+255),w,b
 10340  014A08  599A               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10341  014A0A  519F               	movf	(___llmod@divisor+3)& (0+255),w,b
 10342  014A0C  599B               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10343  014A0E  A0D8               	btfss	status,0,c
 10344  014A10  D008               	goto	l961
 10345                           
 10346                           ; BSR set to: 0
 10347  014A12  519C               	movf	___llmod@divisor& (0+255),w,b
 10348  014A14  5F98               	subwf	___llmod@dividend& (0+255),f,b
 10349  014A16  519D               	movf	(___llmod@divisor+1)& (0+255),w,b
 10350  014A18  5B99               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10351  014A1A  519E               	movf	(___llmod@divisor+2)& (0+255),w,b
 10352  014A1C  5B9A               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10353  014A1E  519F               	movf	(___llmod@divisor+3)& (0+255),w,b
 10354  014A20  5B9B               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10355  014A22                     l961:
 10356                           
 10357                           ; BSR set to: 0
 10358                           
 10359                           ; BSR set to: 0
 10360  014A22  90D8               	bcf	status,0,c
 10361  014A24  339F               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10362  014A26  339E               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10363  014A28  339D               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10364  014A2A  339C               	rrcf	___llmod@divisor& (0+255),f,b
 10365                           
 10366                           ; BSR set to: 0
 10367  014A2C  2FA0               	decfsz	___llmod@counter& (0+255),f,b
 10368  014A2E  D7E7               	goto	u6160
 10369  014A30                     l962:
 10370                           
 10371                           ; BSR set to: 0
 10372                           
 10373                           ; BSR set to: 0
 10374  014A30  C098  F098         	movff	___llmod@dividend,?___llmod
 10375  014A34  C099  F099         	movff	___llmod@dividend+1,?___llmod+1
 10376  014A38  C09A  F09A         	movff	___llmod@dividend+2,?___llmod+2
 10377  014A3C  C09B  F09B         	movff	___llmod@dividend+3,?___llmod+3
 10378                           
 10379                           ; BSR set to: 0
 10380  014A40  0012               	return		;funcret
 10381  014A42                     __end_of___llmod:
 10382                           	opt stack 0
 10383                           tblptru	equ	0xFF8
 10384                           tblptrh	equ	0xFF7
 10385                           tblptrl	equ	0xFF6
 10386                           tablat	equ	0xFF5
 10387                           prodh	equ	0xFF4
 10388                           prodl	equ	0xFF3
 10389                           intcon	equ	0xFF2
 10390                           postinc0	equ	0xFEE
 10391                           wreg	equ	0xFE8
 10392                           indf1	equ	0xFE7
 10393                           fsr1h	equ	0xFE2
 10394                           fsr1l	equ	0xFE1
 10395                           indf2	equ	0xFDF
 10396                           postinc2	equ	0xFDE
 10397                           postdec2	equ	0xFDD
 10398                           fsr2h	equ	0xFDA
 10399                           fsr2l	equ	0xFD9
 10400                           status	equ	0xFD8
 10401                           
 10402 ;; *************** function ___lldiv *****************
 10403 ;; Defined at:
 10404 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  dividend        4   43[BANK0 ] unsigned long 
 10407 ;;  divisor         4   47[BANK0 ] unsigned long 
 10408 ;; Auto vars:     Size  Location     Type
 10409 ;;  quotient        4   51[BANK0 ] unsigned long 
 10410 ;;  counter         1   55[BANK0 ] unsigned char 
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  4   43[BANK0 ] unsigned long 
 10413 ;; Registers used:
 10414 ;;		wreg, status,2, status,0
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10420 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10421 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10423 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10424 ;;Total ram usage:       13 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:    5
 10427 ;; This function calls:
 10428 ;;		Nothing
 10429 ;; This function is called by:
 10430 ;;		_printf
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           	psect	text27
 10435  01476E                     __ptext27:
 10436                           	opt stack 0
 10437  01476E                     ___lldiv:
 10438                           	opt stack 22
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;incstack = 0
 10442  01476E  0E00               	movlw	0
 10443  014770  0100               	movlb	0	; () banked
 10444  014772  6F93               	movwf	___lldiv@quotient& (0+255),b
 10445  014774  0E00               	movlw	0
 10446  014776  6F94               	movwf	(___lldiv@quotient+1)& (0+255),b
 10447  014778  0E00               	movlw	0
 10448  01477A  6F95               	movwf	(___lldiv@quotient+2)& (0+255),b
 10449  01477C  0E00               	movlw	0
 10450  01477E  6F96               	movwf	(___lldiv@quotient+3)& (0+255),b
 10451                           
 10452                           ; BSR set to: 0
 10453  014780  518F               	movf	___lldiv@divisor& (0+255),w,b
 10454  014782  1190               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10455  014784  1191               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10456  014786  1192               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10457  014788  B4D8               	btfsc	status,2,c
 10458  01478A  D02A               	goto	l952
 10459                           
 10460                           ; BSR set to: 0
 10461  01478C  0E01               	movlw	1
 10462  01478E  6F97               	movwf	___lldiv@counter& (0+255),b
 10463  014790  D006               	goto	l947
 10464  014792                     
 10465                           ; BSR set to: 0
 10466                           
 10467                           ; BSR set to: 0
 10468  014792  90D8               	bcf	status,0,c
 10469  014794  378F               	rlcf	___lldiv@divisor& (0+255),f,b
 10470  014796  3790               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10471  014798  3791               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10472  01479A  3792               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10473  01479C  2B97               	incf	___lldiv@counter& (0+255),f,b
 10474  01479E                     l947:
 10475                           
 10476                           ; BSR set to: 0
 10477                           
 10478                           ; BSR set to: 0
 10479  01479E  AF92               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10480  0147A0  D7F8               	goto	l948
 10481  0147A2                     u6130:
 10482                           
 10483                           ; BSR set to: 0
 10484                           
 10485                           ; BSR set to: 0
 10486                           
 10487                           ; BSR set to: 0
 10488  0147A2  90D8               	bcf	status,0,c
 10489  0147A4  3793               	rlcf	___lldiv@quotient& (0+255),f,b
 10490  0147A6  3794               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10491  0147A8  3795               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10492  0147AA  3796               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10493                           
 10494                           ; BSR set to: 0
 10495  0147AC  518F               	movf	___lldiv@divisor& (0+255),w,b
 10496  0147AE  5D8B               	subwf	___lldiv@dividend& (0+255),w,b
 10497  0147B0  5190               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10498  0147B2  598C               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10499  0147B4  5191               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10500  0147B6  598D               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10501  0147B8  5192               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10502  0147BA  598E               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10503  0147BC  A0D8               	btfss	status,0,c
 10504  0147BE  D009               	goto	l951
 10505                           
 10506                           ; BSR set to: 0
 10507  0147C0  518F               	movf	___lldiv@divisor& (0+255),w,b
 10508  0147C2  5F8B               	subwf	___lldiv@dividend& (0+255),f,b
 10509  0147C4  5190               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10510  0147C6  5B8C               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10511  0147C8  5191               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10512  0147CA  5B8D               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10513  0147CC  5192               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10514  0147CE  5B8E               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10515                           
 10516                           ; BSR set to: 0
 10517  0147D0  8193               	bsf	___lldiv@quotient& (0+255),0,b
 10518  0147D2                     l951:
 10519                           
 10520                           ; BSR set to: 0
 10521                           
 10522                           ; BSR set to: 0
 10523  0147D2  90D8               	bcf	status,0,c
 10524  0147D4  3392               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10525  0147D6  3391               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10526  0147D8  3390               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10527  0147DA  338F               	rrcf	___lldiv@divisor& (0+255),f,b
 10528                           
 10529                           ; BSR set to: 0
 10530  0147DC  2F97               	decfsz	___lldiv@counter& (0+255),f,b
 10531  0147DE  D7E1               	goto	u6130
 10532  0147E0                     l952:
 10533                           
 10534                           ; BSR set to: 0
 10535                           
 10536                           ; BSR set to: 0
 10537  0147E0  C093  F08B         	movff	___lldiv@quotient,?___lldiv
 10538  0147E4  C094  F08C         	movff	___lldiv@quotient+1,?___lldiv+1
 10539  0147E8  C095  F08D         	movff	___lldiv@quotient+2,?___lldiv+2
 10540  0147EC  C096  F08E         	movff	___lldiv@quotient+3,?___lldiv+3
 10541                           
 10542                           ; BSR set to: 0
 10543  0147F0  0012               	return		;funcret
 10544  0147F2                     __end_of___lldiv:
 10545                           	opt stack 0
 10546                           tblptru	equ	0xFF8
 10547                           tblptrh	equ	0xFF7
 10548                           tblptrl	equ	0xFF6
 10549                           tablat	equ	0xFF5
 10550                           prodh	equ	0xFF4
 10551                           prodl	equ	0xFF3
 10552                           intcon	equ	0xFF2
 10553                           postinc0	equ	0xFEE
 10554                           wreg	equ	0xFE8
 10555                           indf1	equ	0xFE7
 10556                           fsr1h	equ	0xFE2
 10557                           fsr1l	equ	0xFE1
 10558                           indf2	equ	0xFDF
 10559                           postinc2	equ	0xFDE
 10560                           postdec2	equ	0xFDD
 10561                           fsr2h	equ	0xFDA
 10562                           fsr2l	equ	0xFD9
 10563                           status	equ	0xFD8
 10564                           
 10565 ;; *************** function ___fltol *****************
 10566 ;; Defined at:
 10567 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  f1              4   91[BANK0 ] unsigned long 
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;  exp1            1  100[BANK0 ] unsigned char 
 10572 ;;  sign1           1   99[BANK0 ] unsigned char 
 10573 ;; Return value:  Size  Location     Type
 10574 ;;                  4   91[BANK0 ] long 
 10575 ;; Registers used:
 10576 ;;		wreg, status,2, status,0
 10577 ;; Tracked objects:
 10578 ;;		On entry : 0/0
 10579 ;;		On exit  : 0/0
 10580 ;;		Unchanged: 0/0
 10581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10583 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10585 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10586 ;;Total ram usage:       10 bytes
 10587 ;; Hardware stack levels used:    1
 10588 ;; Hardware stack levels required when called:    5
 10589 ;; This function calls:
 10590 ;;		Nothing
 10591 ;; This function is called by:
 10592 ;;		_printf
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           	psect	text28
 10597  014318                     __ptext28:
 10598                           	opt stack 0
 10599  014318                     ___fltol:
 10600                           	opt stack 22
 10601                           
 10602                           ; BSR set to: 0
 10603                           ;incstack = 0
 10604  014318  0100               	movlb	0	; () banked
 10605  01431A  35BD               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10606  01431C  35BE               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10607  01431E  6FC4               	movwf	___fltol@exp1& (0+255),b
 10608  014320  51C4               	movf	___fltol@exp1& (0+255),w,b
 10609  014322  A4D8               	btfss	status,2,c
 10610  014324  D009               	goto	l799
 10611                           
 10612                           ; BSR set to: 0
 10613  014326  0E00               	movlw	0
 10614  014328  6FBB               	movwf	?___fltol& (0+255),b
 10615  01432A  0E00               	movlw	0
 10616  01432C  6FBC               	movwf	(?___fltol+1)& (0+255),b
 10617  01432E  0E00               	movlw	0
 10618  014330  6FBD               	movwf	(?___fltol+2)& (0+255),b
 10619  014332  0E00               	movlw	0
 10620  014334  6FBE               	movwf	(?___fltol+3)& (0+255),b
 10621                           
 10622                           ; BSR set to: 0
 10623  014336  0012               	return	
 10624  014338                     l799:
 10625                           
 10626                           ; BSR set to: 0
 10627                           
 10628                           ; BSR set to: 0
 10629  014338  C0BB  F0BF         	movff	___fltol@f1,??___fltol
 10630  01433C  C0BC  F0C0         	movff	___fltol@f1+1,??___fltol+1
 10631  014340  C0BD  F0C1         	movff	___fltol@f1+2,??___fltol+2
 10632  014344  C0BE  F0C2         	movff	___fltol@f1+3,??___fltol+3
 10633  014348  0E20               	movlw	32
 10634  01434A  D005               	goto	u6060
 10635  01434C                     u6065:
 10636  01434C  90D8               	bcf	status,0,c
 10637  01434E  33C2               	rrcf	(??___fltol+3)& (0+255),f,b
 10638  014350  33C1               	rrcf	(??___fltol+2)& (0+255),f,b
 10639  014352  33C0               	rrcf	(??___fltol+1)& (0+255),f,b
 10640  014354  33BF               	rrcf	??___fltol& (0+255),f,b
 10641  014356                     u6060:
 10642  014356  2EE8               	decfsz	wreg,f,c
 10643  014358  D7F9               	goto	u6065
 10644  01435A  51BF               	movf	??___fltol& (0+255),w,b
 10645  01435C  6FC3               	movwf	___fltol@sign1& (0+255),b
 10646                           
 10647                           ; BSR set to: 0
 10648  01435E  8FBD               	bsf	(___fltol@f1+2)& (0+255),7,b
 10649                           
 10650                           ; BSR set to: 0
 10651  014360  0EFF               	movlw	255
 10652  014362  17BB               	andwf	___fltol@f1& (0+255),f,b
 10653  014364  0EFF               	movlw	255
 10654  014366  17BC               	andwf	(___fltol@f1+1)& (0+255),f,b
 10655  014368  0EFF               	movlw	255
 10656  01436A  17BD               	andwf	(___fltol@f1+2)& (0+255),f,b
 10657  01436C  0E00               	movlw	0
 10658  01436E  17BE               	andwf	(___fltol@f1+3)& (0+255),f,b
 10659                           
 10660                           ; BSR set to: 0
 10661  014370  0E96               	movlw	150
 10662  014372  5FC4               	subwf	___fltol@exp1& (0+255),f,b
 10663                           
 10664                           ; BSR set to: 0
 10665  014374  AFC4               	btfss	___fltol@exp1& (0+255),7,b
 10666  014376  D016               	goto	l801
 10667                           
 10668                           ; BSR set to: 0
 10669  014378  51C4               	movf	___fltol@exp1& (0+255),w,b
 10670  01437A  0A80               	xorlw	128
 10671  01437C  0F97               	addlw	151
 10672  01437E  B0D8               	btfsc	status,0,c
 10673  014380  D009               	goto	l802
 10674                           
 10675                           ; BSR set to: 0
 10676  014382  0E00               	movlw	0
 10677  014384  6FBB               	movwf	?___fltol& (0+255),b
 10678  014386  0E00               	movlw	0
 10679  014388  6FBC               	movwf	(?___fltol+1)& (0+255),b
 10680  01438A  0E00               	movlw	0
 10681  01438C  6FBD               	movwf	(?___fltol+2)& (0+255),b
 10682  01438E  0E00               	movlw	0
 10683  014390  6FBE               	movwf	(?___fltol+3)& (0+255),b
 10684                           
 10685                           ; BSR set to: 0
 10686  014392  0012               	return	
 10687  014394                     l802:
 10688                           
 10689                           ; BSR set to: 0
 10690                           
 10691                           ; BSR set to: 0
 10692                           
 10693                           ; BSR set to: 0
 10694  014394  90D8               	bcf	status,0,c
 10695  014396  33BE               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10696  014398  33BD               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10697  01439A  33BC               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10698  01439C  33BB               	rrcf	___fltol@f1& (0+255),f,b
 10699                           
 10700                           ; BSR set to: 0
 10701  01439E  3FC4               	incfsz	___fltol@exp1& (0+255),f,b
 10702  0143A0  D7F9               	goto	l802
 10703                           
 10704                           ; BSR set to: 0
 10705  0143A2  D015               	goto	u6100
 10706  0143A4                     l801:
 10707                           
 10708                           ; BSR set to: 0
 10709                           
 10710                           ; BSR set to: 0
 10711  0143A4  0E1F               	movlw	31
 10712  0143A6  65C4               	cpfsgt	___fltol@exp1& (0+255),b
 10713  0143A8  D00F               	goto	l807
 10714                           
 10715                           ; BSR set to: 0
 10716  0143AA  0E00               	movlw	0
 10717  0143AC  6FBB               	movwf	?___fltol& (0+255),b
 10718  0143AE  0E00               	movlw	0
 10719  0143B0  6FBC               	movwf	(?___fltol+1)& (0+255),b
 10720  0143B2  0E00               	movlw	0
 10721  0143B4  6FBD               	movwf	(?___fltol+2)& (0+255),b
 10722  0143B6  0E00               	movlw	0
 10723  0143B8  6FBE               	movwf	(?___fltol+3)& (0+255),b
 10724                           
 10725                           ; BSR set to: 0
 10726  0143BA  0012               	return	
 10727  0143BC                     
 10728                           ; BSR set to: 0
 10729                           
 10730                           ; BSR set to: 0
 10731  0143BC  90D8               	bcf	status,0,c
 10732  0143BE  37BB               	rlcf	___fltol@f1& (0+255),f,b
 10733  0143C0  37BC               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10734  0143C2  37BD               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10735  0143C4  37BE               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10736  0143C6  07C4               	decf	___fltol@exp1& (0+255),f,b
 10737  0143C8                     l807:
 10738                           
 10739                           ; BSR set to: 0
 10740                           
 10741                           ; BSR set to: 0
 10742  0143C8  51C4               	movf	___fltol@exp1& (0+255),w,b
 10743  0143CA  A4D8               	btfss	status,2,c
 10744  0143CC  D7F7               	goto	l808
 10745  0143CE                     u6100:
 10746                           
 10747                           ; BSR set to: 0
 10748                           
 10749                           ; BSR set to: 0
 10750                           
 10751                           ; BSR set to: 0
 10752  0143CE  51C3               	movf	___fltol@sign1& (0+255),w,b
 10753  0143D0  B4D8               	btfsc	status,2,c
 10754  0143D2  D008               	goto	l810
 10755                           
 10756                           ; BSR set to: 0
 10757  0143D4  1FBE               	comf	(___fltol@f1+3)& (0+255),f,b
 10758  0143D6  1FBD               	comf	(___fltol@f1+2)& (0+255),f,b
 10759  0143D8  1FBC               	comf	(___fltol@f1+1)& (0+255),f,b
 10760  0143DA  6DBB               	negf	___fltol@f1& (0+255),b
 10761  0143DC  0E00               	movlw	0
 10762  0143DE  23BC               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10763  0143E0  23BD               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10764  0143E2  23BE               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10765  0143E4                     l810:
 10766                           
 10767                           ; BSR set to: 0
 10768                           
 10769                           ; BSR set to: 0
 10770  0143E4  C0BB  F0BB         	movff	___fltol@f1,?___fltol
 10771  0143E8  C0BC  F0BC         	movff	___fltol@f1+1,?___fltol+1
 10772  0143EC  C0BD  F0BD         	movff	___fltol@f1+2,?___fltol+2
 10773  0143F0  C0BE  F0BE         	movff	___fltol@f1+3,?___fltol+3
 10774  0143F4  0012               	return	
 10775  0143F6                     __end_of___fltol:
 10776                           	opt stack 0
 10777                           tblptru	equ	0xFF8
 10778                           tblptrh	equ	0xFF7
 10779                           tblptrl	equ	0xFF6
 10780                           tablat	equ	0xFF5
 10781                           prodh	equ	0xFF4
 10782                           prodl	equ	0xFF3
 10783                           intcon	equ	0xFF2
 10784                           postinc0	equ	0xFEE
 10785                           wreg	equ	0xFE8
 10786                           indf1	equ	0xFE7
 10787                           fsr1h	equ	0xFE2
 10788                           fsr1l	equ	0xFE1
 10789                           indf2	equ	0xFDF
 10790                           postinc2	equ	0xFDE
 10791                           postdec2	equ	0xFDD
 10792                           fsr2h	equ	0xFDA
 10793                           fsr2l	equ	0xFD9
 10794                           status	equ	0xFD8
 10795                           
 10796 ;; *************** function ___flsub *****************
 10797 ;; Defined at:
 10798 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10799 ;; Parameters:    Size  Location     Type
 10800 ;;  b               4    8[BANK1 ] long 
 10801 ;;  a               4   12[BANK1 ] long 
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;		None
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  4    8[BANK1 ] long 
 10806 ;; Registers used:
 10807 ;;		wreg, status,2, status,0, cstack
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10813 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10816 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10817 ;;Total ram usage:        8 bytes
 10818 ;; Hardware stack levels used:    1
 10819 ;; Hardware stack levels required when called:    6
 10820 ;; This function calls:
 10821 ;;		___fladd
 10822 ;; This function is called by:
 10823 ;;		_printf
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           	psect	text29
 10828  014BB2                     __ptext29:
 10829                           	opt stack 0
 10830  014BB2                     ___flsub:
 10831                           	opt stack 21
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;incstack = 0
 10835  014BB2  0E00               	movlw	0
 10836  014BB4  0101               	movlb	1	; () banked
 10837  014BB6  1B0C               	xorwf	___flsub@a& (0+255),f,b
 10838  014BB8  0E00               	movlw	0
 10839  014BBA  1B0D               	xorwf	(___flsub@a+1)& (0+255),f,b
 10840  014BBC  0E00               	movlw	0
 10841  014BBE  1B0E               	xorwf	(___flsub@a+2)& (0+255),f,b
 10842  014BC0  0E80               	movlw	128
 10843  014BC2  1B0F               	xorwf	(___flsub@a+3)& (0+255),f,b
 10844                           
 10845                           ; BSR set to: 1
 10846  014BC4  C108  F0C2         	movff	___flsub@b,___fladd@b
 10847  014BC8  C109  F0C3         	movff	___flsub@b+1,___fladd@b+1
 10848  014BCC  C10A  F0C4         	movff	___flsub@b+2,___fladd@b+2
 10849  014BD0  C10B  F0C5         	movff	___flsub@b+3,___fladd@b+3
 10850  014BD4  C10C  F0C6         	movff	___flsub@a,___fladd@a
 10851  014BD8  C10D  F0C7         	movff	___flsub@a+1,___fladd@a+1
 10852  014BDC  C10E  F0C8         	movff	___flsub@a+2,___fladd@a+2
 10853  014BE0  C10F  F0C9         	movff	___flsub@a+3,___fladd@a+3
 10854  014BE4  EC5E  F091         	call	___fladd	;wreg free
 10855  014BE8  C0C2  F108         	movff	?___fladd,?___flsub
 10856  014BEC  C0C3  F109         	movff	?___fladd+1,?___flsub+1
 10857  014BF0  C0C4  F10A         	movff	?___fladd+2,?___flsub+2
 10858  014BF4  C0C5  F10B         	movff	?___fladd+3,?___flsub+3
 10859  014BF8  0012               	return	
 10860  014BFA                     __end_of___flsub:
 10861                           	opt stack 0
 10862                           tblptru	equ	0xFF8
 10863                           tblptrh	equ	0xFF7
 10864                           tblptrl	equ	0xFF6
 10865                           tablat	equ	0xFF5
 10866                           prodh	equ	0xFF4
 10867                           prodl	equ	0xFF3
 10868                           intcon	equ	0xFF2
 10869                           postinc0	equ	0xFEE
 10870                           wreg	equ	0xFE8
 10871                           indf1	equ	0xFE7
 10872                           fsr1h	equ	0xFE2
 10873                           fsr1l	equ	0xFE1
 10874                           indf2	equ	0xFDF
 10875                           postinc2	equ	0xFDE
 10876                           postdec2	equ	0xFDD
 10877                           fsr2h	equ	0xFDA
 10878                           fsr2l	equ	0xFD9
 10879                           status	equ	0xFD8
 10880                           
 10881 ;; *************** function ___fladd *****************
 10882 ;; Defined at:
 10883 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10884 ;; Parameters:    Size  Location     Type
 10885 ;;  b               4   98[BANK0 ] long 
 10886 ;;  a               4  102[BANK0 ] long 
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;  grs             1  109[BANK0 ] unsigned char 
 10889 ;;  bexp            1  108[BANK0 ] unsigned char 
 10890 ;;  aexp            1  107[BANK0 ] unsigned char 
 10891 ;;  signs           1  106[BANK0 ] unsigned char 
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  4   98[BANK0 ] unsigned char 
 10894 ;; Registers used:
 10895 ;;		wreg, status,2, status,0
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10901 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10902 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10903 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10904 ;;      Totals:         0      12       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10905 ;;Total ram usage:       20 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; Hardware stack levels required when called:    5
 10908 ;; This function calls:
 10909 ;;		Nothing
 10910 ;; This function is called by:
 10911 ;;		_ringBufferLUT
 10912 ;;		_printf
 10913 ;;		___flsub
 10914 ;; This function uses a non-reentrant model
 10915 ;;
 10916                           
 10917                           	psect	text30
 10918  0122BC                     __ptext30:
 10919                           	opt stack 0
 10920  0122BC                     ___fladd:
 10921                           	opt stack 21
 10922                           
 10923                           ;incstack = 0
 10924  0122BC  0100               	movlb	0	; () banked
 10925  0122BE  51C5               	movf	(___fladd@b+3)& (0+255),w,b
 10926  0122C0  0B80               	andlw	128
 10927  0122C2  6FCA               	movwf	___fladd@signs& (0+255),b
 10928  0122C4  51C5               	movf	(___fladd@b+3)& (0+255),w,b
 10929  0122C6  25C5               	addwf	(___fladd@b+3)& (0+255),w,b
 10930  0122C8  6FCC               	movwf	___fladd@bexp& (0+255),b
 10931                           
 10932                           ; BSR set to: 0
 10933  0122CA  BFC4               	btfsc	(___fladd@b+2)& (0+255),7,b
 10934                           
 10935                           ; BSR set to: 0
 10936  0122CC  81CC               	bsf	___fladd@bexp& (0+255),0,b
 10937                           
 10938                           ; BSR set to: 0
 10939                           
 10940                           ; BSR set to: 0
 10941  0122CE  51CC               	movf	___fladd@bexp& (0+255),w,b
 10942  0122D0  B4D8               	btfsc	status,2,c
 10943  0122D2  D00D               	goto	l1029
 10944                           
 10945                           ; BSR set to: 0
 10946  0122D4  29CC               	incf	___fladd@bexp& (0+255),w,b
 10947  0122D6  A4D8               	btfss	status,2,c
 10948  0122D8  D008               	goto	l1030
 10949                           
 10950                           ; BSR set to: 0
 10951  0122DA  0E00               	movlw	0
 10952  0122DC  6FC2               	movwf	___fladd@b& (0+255),b
 10953  0122DE  0E00               	movlw	0
 10954  0122E0  6FC3               	movwf	(___fladd@b+1)& (0+255),b
 10955  0122E2  0E00               	movlw	0
 10956  0122E4  6FC4               	movwf	(___fladd@b+2)& (0+255),b
 10957  0122E6  0E00               	movlw	0
 10958  0122E8  6FC5               	movwf	(___fladd@b+3)& (0+255),b
 10959  0122EA                     l1030:
 10960                           
 10961                           ; BSR set to: 0
 10962                           
 10963                           ; BSR set to: 0
 10964  0122EA  8FC4               	bsf	(___fladd@b+2)& (0+255),7,b
 10965  0122EC  D006               	goto	L6
 10966  0122EE                     l1029:
 10967                           
 10968                           ; BSR set to: 0
 10969                           
 10970                           ; BSR set to: 0
 10971  0122EE  0E00               	movlw	0
 10972  0122F0  6FC2               	movwf	___fladd@b& (0+255),b
 10973  0122F2  0E00               	movlw	0
 10974  0122F4  6FC3               	movwf	(___fladd@b+1)& (0+255),b
 10975  0122F6  0E00               	movlw	0
 10976  0122F8  6FC4               	movwf	(___fladd@b+2)& (0+255),b
 10977  0122FA                     L6:
 10978  0122FA  0E00               	movlw	0
 10979  0122FC  6FC5               	movwf	(___fladd@b+3)& (0+255),b
 10980                           
 10981                           ; BSR set to: 0
 10982                           
 10983                           ; BSR set to: 0
 10984  0122FE  51C9               	movf	(___fladd@a+3)& (0+255),w,b
 10985  012300  0B80               	andlw	128
 10986  012302  6FCB               	movwf	___fladd@aexp& (0+255),b
 10987                           
 10988                           ; BSR set to: 0
 10989  012304  51CA               	movf	___fladd@signs& (0+255),w,b
 10990  012306  19CB               	xorwf	___fladd@aexp& (0+255),w,b
 10991  012308  A4D8               	btfss	status,2,c
 10992                           
 10993                           ; BSR set to: 0
 10994  01230A  8DCA               	bsf	___fladd@signs& (0+255),6,b
 10995                           
 10996                           ; BSR set to: 0
 10997                           
 10998                           ; BSR set to: 0
 10999  01230C  51C9               	movf	(___fladd@a+3)& (0+255),w,b
 11000  01230E  25C9               	addwf	(___fladd@a+3)& (0+255),w,b
 11001  012310  6FCB               	movwf	___fladd@aexp& (0+255),b
 11002                           
 11003                           ; BSR set to: 0
 11004  012312  BFC8               	btfsc	(___fladd@a+2)& (0+255),7,b
 11005                           
 11006                           ; BSR set to: 0
 11007  012314  81CB               	bsf	___fladd@aexp& (0+255),0,b
 11008                           
 11009                           ; BSR set to: 0
 11010                           
 11011                           ; BSR set to: 0
 11012  012316  51CB               	movf	___fladd@aexp& (0+255),w,b
 11013  012318  B4D8               	btfsc	status,2,c
 11014  01231A  D00D               	goto	l1034
 11015                           
 11016                           ; BSR set to: 0
 11017  01231C  29CB               	incf	___fladd@aexp& (0+255),w,b
 11018  01231E  A4D8               	btfss	status,2,c
 11019  012320  D008               	goto	l1035
 11020                           
 11021                           ; BSR set to: 0
 11022  012322  0E00               	movlw	0
 11023  012324  6FC6               	movwf	___fladd@a& (0+255),b
 11024  012326  0E00               	movlw	0
 11025  012328  6FC7               	movwf	(___fladd@a+1)& (0+255),b
 11026  01232A  0E00               	movlw	0
 11027  01232C  6FC8               	movwf	(___fladd@a+2)& (0+255),b
 11028  01232E  0E00               	movlw	0
 11029  012330  6FC9               	movwf	(___fladd@a+3)& (0+255),b
 11030  012332                     l1035:
 11031                           
 11032                           ; BSR set to: 0
 11033                           
 11034                           ; BSR set to: 0
 11035  012332  8FC8               	bsf	(___fladd@a+2)& (0+255),7,b
 11036  012334  D006               	goto	L7
 11037  012336                     l1034:
 11038                           
 11039                           ; BSR set to: 0
 11040                           
 11041                           ; BSR set to: 0
 11042  012336  0E00               	movlw	0
 11043  012338  6FC6               	movwf	___fladd@a& (0+255),b
 11044  01233A  0E00               	movlw	0
 11045  01233C  6FC7               	movwf	(___fladd@a+1)& (0+255),b
 11046  01233E  0E00               	movlw	0
 11047  012340  6FC8               	movwf	(___fladd@a+2)& (0+255),b
 11048  012342                     L7:
 11049  012342  0E00               	movlw	0
 11050  012344  6FC9               	movwf	(___fladd@a+3)& (0+255),b
 11051                           
 11052                           ; BSR set to: 0
 11053                           
 11054                           ; BSR set to: 0
 11055  012346  51CC               	movf	___fladd@bexp& (0+255),w,b
 11056  012348  5DCB               	subwf	___fladd@aexp& (0+255),w,b
 11057  01234A  B0D8               	btfsc	status,0,c
 11058  01234C  D022               	goto	l1037
 11059                           
 11060                           ; BSR set to: 0
 11061  01234E  ADCA               	btfss	___fladd@signs& (0+255),6,b
 11062  012350  D002               	goto	l1038
 11063                           
 11064                           ; BSR set to: 0
 11065  012352  0E80               	movlw	128
 11066  012354  1BCA               	xorwf	___fladd@signs& (0+255),f,b
 11067  012356                     l1038:
 11068                           
 11069                           ; BSR set to: 0
 11070                           
 11071                           ; BSR set to: 0
 11072  012356  C0CC  F0CD         	movff	___fladd@bexp,___fladd@grs
 11073                           
 11074                           ; BSR set to: 0
 11075  01235A  C0CB  F0CC         	movff	___fladd@aexp,___fladd@bexp
 11076                           
 11077                           ; BSR set to: 0
 11078  01235E  C0CD  F0CB         	movff	___fladd@grs,___fladd@aexp
 11079                           
 11080                           ; BSR set to: 0
 11081  012362  C0C2  F0CD         	movff	___fladd@b,___fladd@grs
 11082                           
 11083                           ; BSR set to: 0
 11084  012366  C0C6  F0C2         	movff	___fladd@a,___fladd@b
 11085                           
 11086                           ; BSR set to: 0
 11087  01236A  C0CD  F0C6         	movff	___fladd@grs,___fladd@a
 11088                           
 11089                           ; BSR set to: 0
 11090  01236E  C0C3  F0CD         	movff	___fladd@b+1,___fladd@grs
 11091                           
 11092                           ; BSR set to: 0
 11093  012372  C0C7  F0C3         	movff	___fladd@a+1,___fladd@b+1
 11094                           
 11095                           ; BSR set to: 0
 11096  012376  C0CD  F0C7         	movff	___fladd@grs,___fladd@a+1
 11097                           
 11098                           ; BSR set to: 0
 11099  01237A  C0C4  F0CD         	movff	___fladd@b+2,___fladd@grs
 11100                           
 11101                           ; BSR set to: 0
 11102  01237E  C0C8  F0C4         	movff	___fladd@a+2,___fladd@b+2
 11103                           
 11104                           ; BSR set to: 0
 11105  012382  C0CD  F0C8         	movff	___fladd@grs,___fladd@a+2
 11106                           
 11107                           ; BSR set to: 0
 11108  012386  C0C5  F0CD         	movff	___fladd@b+3,___fladd@grs
 11109                           
 11110                           ; BSR set to: 0
 11111  01238A  C0C9  F0C5         	movff	___fladd@a+3,___fladd@b+3
 11112                           
 11113                           ; BSR set to: 0
 11114  01238E  C0CD  F0C9         	movff	___fladd@grs,___fladd@a+3
 11115  012392                     l1037:
 11116                           
 11117                           ; BSR set to: 0
 11118                           
 11119                           ; BSR set to: 0
 11120  012392  0E00               	movlw	0
 11121  012394  6FCD               	movwf	___fladd@grs& (0+255),b
 11122                           
 11123                           ; BSR set to: 0
 11124  012396  51CC               	movf	___fladd@bexp& (0+255),w,b
 11125  012398  0101               	movlb	1	; () banked
 11126  01239A  6F00               	movwf	??___fladd& (0+255),b
 11127  01239C  6B01               	clrf	(??___fladd+1)& (0+255),b
 11128  01239E  1F00               	comf	??___fladd& (0+255),f,b
 11129  0123A0  1F01               	comf	(??___fladd+1)& (0+255),f,b
 11130  0123A2  4B00               	infsnz	??___fladd& (0+255),f,b
 11131  0123A4  2B01               	incf	(??___fladd+1)& (0+255),f,b
 11132  0123A6  0100               	movlb	0	; () banked
 11133  0123A8  51CB               	movf	___fladd@aexp& (0+255),w,b
 11134  0123AA  0101               	movlb	1	; () banked
 11135  0123AC  6F02               	movwf	(??___fladd+2)& (0+255),b
 11136  0123AE  6B03               	clrf	(??___fladd+3)& (0+255),b
 11137  0123B0  5100               	movf	??___fladd& (0+255),w,b
 11138  0123B2  2702               	addwf	(??___fladd+2)& (0+255),f,b
 11139  0123B4  5101               	movf	(??___fladd+1)& (0+255),w,b
 11140  0123B6  2303               	addwfc	(??___fladd+3)& (0+255),f,b
 11141  0123B8  BF03               	btfsc	(??___fladd+3)& (0+255),7,b
 11142  0123BA  D02D               	goto	l1041
 11143  0123BC  5103               	movf	(??___fladd+3)& (0+255),w,b
 11144  0123BE  E104               	bnz	u8680
 11145  0123C0  0E1A               	movlw	26
 11146  0123C2  5D02               	subwf	(??___fladd+2)& (0+255),w,b
 11147  0123C4  A0D8               	btfss	status,0,c
 11148  0123C6  D027               	goto	l1041
 11149  0123C8                     u8680:
 11150                           
 11151                           ; BSR set to: 1
 11152  0123C8  0100               	movlb	0	; () banked
 11153  0123CA  51C2               	movf	___fladd@b& (0+255),w,b
 11154  0123CC  11C3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11155  0123CE  11C4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11156  0123D0  11C5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11157  0123D2  B4D8               	btfsc	status,2,c
 11158  0123D4  D002               	goto	u8690
 11159  0123D6  0E01               	movlw	1
 11160  0123D8  D001               	goto	u8700
 11161  0123DA                     u8690:
 11162  0123DA  0E00               	movlw	0
 11163  0123DC                     u8700:
 11164  0123DC  6FCD               	movwf	___fladd@grs& (0+255),b
 11165                           
 11166                           ; BSR set to: 0
 11167  0123DE  0E00               	movlw	0
 11168  0123E0  6FC2               	movwf	___fladd@b& (0+255),b
 11169  0123E2  0E00               	movlw	0
 11170  0123E4  6FC3               	movwf	(___fladd@b+1)& (0+255),b
 11171  0123E6  0E00               	movlw	0
 11172  0123E8  6FC4               	movwf	(___fladd@b+2)& (0+255),b
 11173  0123EA  0E00               	movlw	0
 11174  0123EC  6FC5               	movwf	(___fladd@b+3)& (0+255),b
 11175                           
 11176                           ; BSR set to: 0
 11177  0123EE  C0CB  F0CC         	movff	___fladd@aexp,___fladd@bexp
 11178  0123F2  D016               	goto	u8730
 11179  0123F4                     l1042:
 11180                           
 11181                           ; BSR set to: 0
 11182  0123F4  A1CD               	btfss	___fladd@grs& (0+255),0,b
 11183  0123F6  D005               	goto	l1043
 11184                           
 11185                           ; BSR set to: 0
 11186  0123F8  90D8               	bcf	status,0,c
 11187  0123FA  31CD               	rrcf	___fladd@grs& (0+255),w,b
 11188  0123FC  0901               	iorlw	1
 11189  0123FE  6FCD               	movwf	___fladd@grs& (0+255),b
 11190  012400  D002               	goto	l1044
 11191  012402                     l1043:
 11192                           
 11193                           ; BSR set to: 0
 11194                           
 11195                           ; BSR set to: 0
 11196  012402  90D8               	bcf	status,0,c
 11197  012404  33CD               	rrcf	___fladd@grs& (0+255),f,b
 11198  012406                     l1044:
 11199                           
 11200                           ; BSR set to: 0
 11201                           
 11202                           ; BSR set to: 0
 11203  012406  B1C2               	btfsc	___fladd@b& (0+255),0,b
 11204                           
 11205                           ; BSR set to: 0
 11206  012408  8FCD               	bsf	___fladd@grs& (0+255),7,b
 11207                           
 11208                           ; BSR set to: 0
 11209                           
 11210                           ; BSR set to: 0
 11211  01240A  35C5               	rlcf	(___fladd@b+3)& (0+255),w,b
 11212  01240C  33C5               	rrcf	(___fladd@b+3)& (0+255),f,b
 11213  01240E  33C4               	rrcf	(___fladd@b+2)& (0+255),f,b
 11214  012410  33C3               	rrcf	(___fladd@b+1)& (0+255),f,b
 11215  012412  33C2               	rrcf	___fladd@b& (0+255),f,b
 11216                           
 11217                           ; BSR set to: 0
 11218  012414  2BCC               	incf	___fladd@bexp& (0+255),f,b
 11219  012416                     l1041:
 11220  012416  0100               	movlb	0	; () banked
 11221  012418  51CB               	movf	___fladd@aexp& (0+255),w,b
 11222  01241A  5DCC               	subwf	___fladd@bexp& (0+255),w,b
 11223  01241C  A0D8               	btfss	status,0,c
 11224  01241E  D7EA               	goto	l1042
 11225  012420                     u8730:
 11226                           
 11227                           ; BSR set to: 0
 11228                           
 11229                           ; BSR set to: 0
 11230  012420  BDCA               	btfsc	___fladd@signs& (0+255),6,b
 11231  012422  D029               	goto	l1047
 11232                           
 11233                           ; BSR set to: 0
 11234  012424  51CC               	movf	___fladd@bexp& (0+255),w,b
 11235  012426  A4D8               	btfss	status,2,c
 11236  012428  D009               	goto	l1048
 11237                           
 11238                           ; BSR set to: 0
 11239  01242A  0E00               	movlw	0
 11240  01242C  6FC2               	movwf	?___fladd& (0+255),b
 11241  01242E  0E00               	movlw	0
 11242  012430  6FC3               	movwf	(?___fladd+1)& (0+255),b
 11243  012432  0E00               	movlw	0
 11244  012434  6FC4               	movwf	(?___fladd+2)& (0+255),b
 11245  012436  0E00               	movlw	0
 11246  012438  6FC5               	movwf	(?___fladd+3)& (0+255),b
 11247                           
 11248                           ; BSR set to: 0
 11249  01243A  0012               	return	
 11250  01243C                     l1048:
 11251                           
 11252                           ; BSR set to: 0
 11253                           
 11254                           ; BSR set to: 0
 11255  01243C  51C6               	movf	___fladd@a& (0+255),w,b
 11256  01243E  27C2               	addwf	___fladd@b& (0+255),f,b
 11257  012440  51C7               	movf	(___fladd@a+1)& (0+255),w,b
 11258  012442  23C3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11259  012444  51C8               	movf	(___fladd@a+2)& (0+255),w,b
 11260  012446  23C4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11261  012448  51C9               	movf	(___fladd@a+3)& (0+255),w,b
 11262  01244A  23C5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11263                           
 11264                           ; BSR set to: 0
 11265  01244C  A1C5               	btfss	(___fladd@b+3)& (0+255),0,b
 11266  01244E  D096               	goto	u8860
 11267                           
 11268                           ; BSR set to: 0
 11269  012450  A1CD               	btfss	___fladd@grs& (0+255),0,b
 11270  012452  D006               	goto	l1051
 11271                           
 11272                           ; BSR set to: 0
 11273  012454  90D8               	bcf	status,0,c
 11274  012456  33CD               	rrcf	___fladd@grs& (0+255),f,b
 11275  012458  51CD               	movf	___fladd@grs& (0+255),w,b
 11276  01245A  0901               	iorlw	1
 11277  01245C  6FCD               	movwf	___fladd@grs& (0+255),b
 11278  01245E  D002               	goto	l1052
 11279  012460                     l1051:
 11280                           
 11281                           ; BSR set to: 0
 11282                           
 11283                           ; BSR set to: 0
 11284  012460  90D8               	bcf	status,0,c
 11285  012462  33CD               	rrcf	___fladd@grs& (0+255),f,b
 11286  012464                     l1052:
 11287                           
 11288                           ; BSR set to: 0
 11289                           
 11290                           ; BSR set to: 0
 11291  012464  B1C2               	btfsc	___fladd@b& (0+255),0,b
 11292                           
 11293                           ; BSR set to: 0
 11294  012466  8FCD               	bsf	___fladd@grs& (0+255),7,b
 11295                           
 11296                           ; BSR set to: 0
 11297                           
 11298                           ; BSR set to: 0
 11299  012468  35C5               	rlcf	(___fladd@b+3)& (0+255),w,b
 11300  01246A  33C5               	rrcf	(___fladd@b+3)& (0+255),f,b
 11301  01246C  33C4               	rrcf	(___fladd@b+2)& (0+255),f,b
 11302  01246E  33C3               	rrcf	(___fladd@b+1)& (0+255),f,b
 11303  012470  33C2               	rrcf	___fladd@b& (0+255),f,b
 11304                           
 11305                           ; BSR set to: 0
 11306  012472  2BCC               	incf	___fladd@bexp& (0+255),f,b
 11307                           
 11308                           ; BSR set to: 0
 11309  012474  D083               	goto	u8860
 11310  012476                     l1047:
 11311                           
 11312                           ; BSR set to: 0
 11313                           
 11314                           ; BSR set to: 0
 11315  012476  51C6               	movf	___fladd@a& (0+255),w,b
 11316  012478  5DC2               	subwf	___fladd@b& (0+255),w,b
 11317  01247A  51C7               	movf	(___fladd@a+1)& (0+255),w,b
 11318  01247C  59C3               	subwfb	(___fladd@b+1)& (0+255),w,b
 11319  01247E  51C8               	movf	(___fladd@a+2)& (0+255),w,b
 11320  012480  59C4               	subwfb	(___fladd@b+2)& (0+255),w,b
 11321  012482  51C5               	movf	(___fladd@b+3)& (0+255),w,b
 11322  012484  0A80               	xorlw	128
 11323  012486  0101               	movlb	1	; () banked
 11324  012488  6F00               	movwf	??___fladd& (0+255),b
 11325  01248A  0100               	movlb	0	; () banked
 11326  01248C  51C9               	movf	(___fladd@a+3)& (0+255),w,b
 11327  01248E  0A80               	xorlw	128
 11328  012490  0101               	movlb	1	; () banked
 11329  012492  5900               	subwfb	??___fladd& (0+255),w,b
 11330  012494  B0D8               	btfsc	status,0,c
 11331  012496  D045               	goto	l1055
 11332                           
 11333                           ; BSR set to: 1
 11334  012498  C0C2  F100         	movff	___fladd@b,??___fladd
 11335  01249C  C0C3  F101         	movff	___fladd@b+1,??___fladd+1
 11336  0124A0  C0C4  F102         	movff	___fladd@b+2,??___fladd+2
 11337  0124A4  C0C5  F103         	movff	___fladd@b+3,??___fladd+3
 11338  0124A8  1F00               	comf	??___fladd& (0+255),f,b
 11339  0124AA  1F01               	comf	(??___fladd+1)& (0+255),f,b
 11340  0124AC  1F02               	comf	(??___fladd+2)& (0+255),f,b
 11341  0124AE  1F03               	comf	(??___fladd+3)& (0+255),f,b
 11342  0124B0  2B00               	incf	??___fladd& (0+255),f,b
 11343  0124B2  0E00               	movlw	0
 11344  0124B4  2301               	addwfc	(??___fladd+1)& (0+255),f,b
 11345  0124B6  2302               	addwfc	(??___fladd+2)& (0+255),f,b
 11346  0124B8  2303               	addwfc	(??___fladd+3)& (0+255),f,b
 11347  0124BA  0100               	movlb	0	; () banked
 11348  0124BC  51C6               	movf	___fladd@a& (0+255),w,b
 11349  0124BE  0101               	movlb	1	; () banked
 11350  0124C0  2500               	addwf	??___fladd& (0+255),w,b
 11351  0124C2  6F04               	movwf	(??___fladd+4)& (0+255),b
 11352  0124C4  0100               	movlb	0	; () banked
 11353  0124C6  51C7               	movf	(___fladd@a+1)& (0+255),w,b
 11354  0124C8  0101               	movlb	1	; () banked
 11355  0124CA  2101               	addwfc	(??___fladd+1)& (0+255),w,b
 11356  0124CC  6F05               	movwf	(??___fladd+5)& (0+255),b
 11357  0124CE  0100               	movlb	0	; () banked
 11358  0124D0  51C8               	movf	(___fladd@a+2)& (0+255),w,b
 11359  0124D2  0101               	movlb	1	; () banked
 11360  0124D4  2102               	addwfc	(??___fladd+2)& (0+255),w,b
 11361  0124D6  6F06               	movwf	(??___fladd+6)& (0+255),b
 11362  0124D8  0100               	movlb	0	; () banked
 11363  0124DA  51C9               	movf	(___fladd@a+3)& (0+255),w,b
 11364  0124DC  0101               	movlb	1	; () banked
 11365  0124DE  2103               	addwfc	(??___fladd+3)& (0+255),w,b
 11366  0124E0  6F07               	movwf	(??___fladd+7)& (0+255),b
 11367  0124E2  0EFF               	movlw	255
 11368  0124E4  2504               	addwf	(??___fladd+4)& (0+255),w,b
 11369  0124E6  0100               	movlb	0	; () banked
 11370  0124E8  6FC2               	movwf	___fladd@b& (0+255),b
 11371  0124EA  0EFF               	movlw	255
 11372  0124EC  0101               	movlb	1	; () banked
 11373  0124EE  2105               	addwfc	(??___fladd+5)& (0+255),w,b
 11374  0124F0  0100               	movlb	0	; () banked
 11375  0124F2  6FC3               	movwf	(___fladd@b+1)& (0+255),b
 11376  0124F4  0EFF               	movlw	255
 11377  0124F6  0101               	movlb	1	; () banked
 11378  0124F8  2106               	addwfc	(??___fladd+6)& (0+255),w,b
 11379  0124FA  0100               	movlb	0	; () banked
 11380  0124FC  6FC4               	movwf	(___fladd@b+2)& (0+255),b
 11381  0124FE  0EFF               	movlw	255
 11382  012500  0101               	movlb	1	; () banked
 11383  012502  2107               	addwfc	(??___fladd+7)& (0+255),w,b
 11384  012504  0100               	movlb	0	; () banked
 11385  012506  6FC5               	movwf	(___fladd@b+3)& (0+255),b
 11386  012508  0E80               	movlw	128
 11387  01250A  1BCA               	xorwf	___fladd@signs& (0+255),f,b
 11388                           
 11389                           ; BSR set to: 0
 11390  01250C  6DCD               	negf	___fladd@grs& (0+255),b
 11391                           
 11392                           ; BSR set to: 0
 11393  01250E  51CD               	movf	___fladd@grs& (0+255),w,b
 11394  012510  A4D8               	btfss	status,2,c
 11395  012512  D010               	goto	l1057
 11396                           
 11397                           ; BSR set to: 0
 11398  012514  0E01               	movlw	1
 11399  012516  27C2               	addwf	___fladd@b& (0+255),f,b
 11400  012518  0E00               	movlw	0
 11401  01251A  23C3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11402  01251C  23C4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11403  01251E  23C5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11404                           
 11405                           ; BSR set to: 0
 11406  012520  D009               	goto	l1057
 11407  012522                     l1055:
 11408                           
 11409                           ; BSR set to: 0
 11410  012522  0100               	movlb	0	; () banked
 11411  012524  51C6               	movf	___fladd@a& (0+255),w,b
 11412  012526  5FC2               	subwf	___fladd@b& (0+255),f,b
 11413  012528  51C7               	movf	(___fladd@a+1)& (0+255),w,b
 11414  01252A  5BC3               	subwfb	(___fladd@b+1)& (0+255),f,b
 11415  01252C  51C8               	movf	(___fladd@a+2)& (0+255),w,b
 11416  01252E  5BC4               	subwfb	(___fladd@b+2)& (0+255),f,b
 11417  012530  51C9               	movf	(___fladd@a+3)& (0+255),w,b
 11418  012532  5BC5               	subwfb	(___fladd@b+3)& (0+255),f,b
 11419  012534                     l1057:
 11420                           
 11421                           ; BSR set to: 0
 11422  012534  51C2               	movf	___fladd@b& (0+255),w,b
 11423  012536  11C3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11424  012538  11C4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11425  01253A  11C5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11426  01253C  A4D8               	btfss	status,2,c
 11427  01253E  D01C               	goto	l1064
 11428                           
 11429                           ; BSR set to: 0
 11430  012540  51CD               	movf	___fladd@grs& (0+255),w,b
 11431  012542  A4D8               	btfss	status,2,c
 11432  012544  D019               	goto	l1064
 11433                           
 11434                           ; BSR set to: 0
 11435  012546  0E00               	movlw	0
 11436  012548  6FC2               	movwf	?___fladd& (0+255),b
 11437  01254A  0E00               	movlw	0
 11438  01254C  6FC3               	movwf	(?___fladd+1)& (0+255),b
 11439  01254E  0E00               	movlw	0
 11440  012550  6FC4               	movwf	(?___fladd+2)& (0+255),b
 11441  012552  0E00               	movlw	0
 11442  012554  6FC5               	movwf	(?___fladd+3)& (0+255),b
 11443                           
 11444                           ; BSR set to: 0
 11445  012556  0012               	return	
 11446  012558                     
 11447                           ; BSR set to: 0
 11448                           
 11449                           ; BSR set to: 0
 11450  012558  90D8               	bcf	status,0,c
 11451  01255A  37C2               	rlcf	___fladd@b& (0+255),f,b
 11452  01255C  37C3               	rlcf	(___fladd@b+1)& (0+255),f,b
 11453  01255E  37C4               	rlcf	(___fladd@b+2)& (0+255),f,b
 11454  012560  37C5               	rlcf	(___fladd@b+3)& (0+255),f,b
 11455                           
 11456                           ; BSR set to: 0
 11457  012562  BFCD               	btfsc	___fladd@grs& (0+255),7,b
 11458                           
 11459                           ; BSR set to: 0
 11460  012564  81C2               	bsf	___fladd@b& (0+255),0,b
 11461                           
 11462                           ; BSR set to: 0
 11463                           
 11464                           ; BSR set to: 0
 11465  012566  A1CD               	btfss	___fladd@grs& (0+255),0,b
 11466  012568  D002               	goto	l1062
 11467                           
 11468                           ; BSR set to: 0
 11469  01256A  80D8               	bsf	status,0,c
 11470  01256C  D001               	goto	L8
 11471  01256E                     l1062:
 11472                           
 11473                           ; BSR set to: 0
 11474                           
 11475                           ; BSR set to: 0
 11476  01256E  90D8               	bcf	status,0,c
 11477  012570                     L8:
 11478  012570  37CD               	rlcf	___fladd@grs& (0+255),f,b
 11479                           
 11480                           ; BSR set to: 0
 11481                           
 11482                           ; BSR set to: 0
 11483  012572  51CC               	movf	___fladd@bexp& (0+255),w,b
 11484  012574  A4D8               	btfss	status,2,c
 11485                           
 11486                           ; BSR set to: 0
 11487  012576  07CC               	decf	___fladd@bexp& (0+255),f,b
 11488  012578                     l1064:
 11489                           
 11490                           ; BSR set to: 0
 11491                           
 11492                           ; BSR set to: 0
 11493                           
 11494                           ; BSR set to: 0
 11495  012578  AFC4               	btfss	(___fladd@b+2)& (0+255),7,b
 11496  01257A  D7EE               	goto	l1060
 11497  01257C                     u8860:
 11498                           
 11499                           ; BSR set to: 0
 11500                           
 11501                           ; BSR set to: 0
 11502                           
 11503                           ; BSR set to: 0
 11504  01257C  0E00               	movlw	0
 11505  01257E  6FCB               	movwf	___fladd@aexp& (0+255),b
 11506                           
 11507                           ; BSR set to: 0
 11508  012580  AFCD               	btfss	___fladd@grs& (0+255),7,b
 11509  012582  D00F               	goto	l1069
 11510                           
 11511                           ; BSR set to: 0
 11512  012584  C0CD  F100         	movff	___fladd@grs,??___fladd
 11513  012588  0E7F               	movlw	127
 11514  01258A  0101               	movlb	1	; () banked
 11515  01258C  1700               	andwf	??___fladd& (0+255),f,b
 11516  01258E  B4D8               	btfsc	status,2,c
 11517  012590  D003               	goto	l1067
 11518                           
 11519                           ; BSR set to: 1
 11520  012592  0E01               	movlw	1
 11521  012594  0100               	movlb	0	; () banked
 11522  012596  D004               	goto	L9
 11523  012598                     l1067:
 11524                           
 11525                           ; BSR set to: 1
 11526  012598  0100               	movlb	0	; () banked
 11527  01259A  A1C2               	btfss	___fladd@b& (0+255),0,b
 11528  01259C  D002               	goto	l1069
 11529                           
 11530                           ; BSR set to: 0
 11531  01259E  0E01               	movlw	1
 11532  0125A0                     L9:
 11533  0125A0  6FCB               	movwf	___fladd@aexp& (0+255),b
 11534  0125A2                     l1069:
 11535                           
 11536                           ; BSR set to: 0
 11537                           
 11538                           ; BSR set to: 0
 11539                           
 11540                           ; BSR set to: 0
 11541  0125A2  51CB               	movf	___fladd@aexp& (0+255),w,b
 11542  0125A4  B4D8               	btfsc	status,2,c
 11543  0125A6  D022               	goto	l1072
 11544                           
 11545                           ; BSR set to: 0
 11546  0125A8  0E01               	movlw	1
 11547  0125AA  27C2               	addwf	___fladd@b& (0+255),f,b
 11548  0125AC  0E00               	movlw	0
 11549  0125AE  23C3               	addwfc	(___fladd@b+1)& (0+255),f,b
 11550  0125B0  23C4               	addwfc	(___fladd@b+2)& (0+255),f,b
 11551  0125B2  23C5               	addwfc	(___fladd@b+3)& (0+255),f,b
 11552                           
 11553                           ; BSR set to: 0
 11554  0125B4  A1C5               	btfss	(___fladd@b+3)& (0+255),0,b
 11555  0125B6  D01A               	goto	l1072
 11556                           
 11557                           ; BSR set to: 0
 11558  0125B8  C0C2  F100         	movff	___fladd@b,??___fladd
 11559  0125BC  C0C3  F101         	movff	___fladd@b+1,??___fladd+1
 11560  0125C0  C0C4  F102         	movff	___fladd@b+2,??___fladd+2
 11561  0125C4  C0C5  F103         	movff	___fladd@b+3,??___fladd+3
 11562  0125C8  0101               	movlb	1	; () banked
 11563  0125CA  3503               	rlcf	(??___fladd+3)& (0+255),w,b
 11564  0125CC  3303               	rrcf	(??___fladd+3)& (0+255),f,b
 11565  0125CE  3302               	rrcf	(??___fladd+2)& (0+255),f,b
 11566  0125D0  3301               	rrcf	(??___fladd+1)& (0+255),f,b
 11567  0125D2  3300               	rrcf	??___fladd& (0+255),f,b
 11568  0125D4  C100  F0C2         	movff	??___fladd,___fladd@b
 11569  0125D8  C101  F0C3         	movff	??___fladd+1,___fladd@b+1
 11570  0125DC  C102  F0C4         	movff	??___fladd+2,___fladd@b+2
 11571  0125E0  C103  F0C5         	movff	??___fladd+3,___fladd@b+3
 11572  0125E4  0100               	movlb	0	; () banked
 11573  0125E6  29CC               	incf	___fladd@bexp& (0+255),w,b
 11574  0125E8  A4D8               	btfss	status,2,c
 11575                           
 11576                           ; BSR set to: 0
 11577  0125EA  2BCC               	incf	___fladd@bexp& (0+255),f,b
 11578  0125EC                     l1072:
 11579                           
 11580                           ; BSR set to: 0
 11581                           
 11582                           ; BSR set to: 0
 11583                           
 11584                           ; BSR set to: 0
 11585                           
 11586                           ; BSR set to: 0
 11587  0125EC  29CC               	incf	___fladd@bexp& (0+255),w,b
 11588  0125EE  B4D8               	btfsc	status,2,c
 11589  0125F0  D003               	goto	u8940
 11590                           
 11591                           ; BSR set to: 0
 11592  0125F2  51CC               	movf	___fladd@bexp& (0+255),w,b
 11593  0125F4  A4D8               	btfss	status,2,c
 11594  0125F6  D00D               	goto	l1076
 11595  0125F8                     u8940:
 11596                           
 11597                           ; BSR set to: 0
 11598                           
 11599                           ; BSR set to: 0
 11600  0125F8  0E00               	movlw	0
 11601  0125FA  6FC2               	movwf	___fladd@b& (0+255),b
 11602  0125FC  0E00               	movlw	0
 11603  0125FE  6FC3               	movwf	(___fladd@b+1)& (0+255),b
 11604  012600  0E00               	movlw	0
 11605  012602  6FC4               	movwf	(___fladd@b+2)& (0+255),b
 11606  012604  0E00               	movlw	0
 11607  012606  6FC5               	movwf	(___fladd@b+3)& (0+255),b
 11608  012608  51CC               	movf	___fladd@bexp& (0+255),w,b
 11609  01260A  A4D8               	btfss	status,2,c
 11610  01260C  D002               	goto	l1076
 11611                           
 11612                           ; BSR set to: 0
 11613  01260E  0E00               	movlw	0
 11614  012610  6FCA               	movwf	___fladd@signs& (0+255),b
 11615  012612                     l1076:
 11616                           
 11617                           ; BSR set to: 0
 11618                           
 11619                           ; BSR set to: 0
 11620                           
 11621                           ; BSR set to: 0
 11622  012612  A1CC               	btfss	___fladd@bexp& (0+255),0,b
 11623  012614  D002               	goto	l1077
 11624                           
 11625                           ; BSR set to: 0
 11626  012616  8FC4               	bsf	(___fladd@b+2)& (0+255),7,b
 11627  012618  D001               	goto	l1078
 11628  01261A                     l1077:
 11629                           
 11630                           ; BSR set to: 0
 11631                           
 11632                           ; BSR set to: 0
 11633  01261A  9FC4               	bcf	(___fladd@b+2)& (0+255),7,b
 11634  01261C                     l1078:
 11635                           
 11636                           ; BSR set to: 0
 11637                           
 11638                           ; BSR set to: 0
 11639  01261C  90D8               	bcf	status,0,c
 11640  01261E  31CC               	rrcf	___fladd@bexp& (0+255),w,b
 11641  012620  6FC5               	movwf	(___fladd@b+3)& (0+255),b
 11642                           
 11643                           ; BSR set to: 0
 11644  012622  BFCA               	btfsc	___fladd@signs& (0+255),7,b
 11645                           
 11646                           ; BSR set to: 0
 11647  012624  8FC5               	bsf	(___fladd@b+3)& (0+255),7,b
 11648                           
 11649                           ; BSR set to: 0
 11650                           
 11651                           ; BSR set to: 0
 11652  012626  C0C2  F0C2         	movff	___fladd@b,?___fladd
 11653  01262A  C0C3  F0C3         	movff	___fladd@b+1,?___fladd+1
 11654  01262E  C0C4  F0C4         	movff	___fladd@b+2,?___fladd+2
 11655  012632  C0C5  F0C5         	movff	___fladd@b+3,?___fladd+3
 11656  012636  0012               	return	
 11657  012638                     __end_of___fladd:
 11658                           	opt stack 0
 11659                           tblptru	equ	0xFF8
 11660                           tblptrh	equ	0xFF7
 11661                           tblptrl	equ	0xFF6
 11662                           tablat	equ	0xFF5
 11663                           prodh	equ	0xFF4
 11664                           prodl	equ	0xFF3
 11665                           intcon	equ	0xFF2
 11666                           postinc0	equ	0xFEE
 11667                           wreg	equ	0xFE8
 11668                           indf1	equ	0xFE7
 11669                           fsr1h	equ	0xFE2
 11670                           fsr1l	equ	0xFE1
 11671                           indf2	equ	0xFDF
 11672                           postinc2	equ	0xFDE
 11673                           postdec2	equ	0xFDD
 11674                           fsr2h	equ	0xFDA
 11675                           fsr2l	equ	0xFD9
 11676                           status	equ	0xFD8
 11677                           
 11678 ;; *************** function ___flneg *****************
 11679 ;; Defined at:
 11680 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  f1              4   43[BANK0 ] unsigned char 
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;		None
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  4   43[BANK0 ] unsigned char 
 11687 ;; Registers used:
 11688 ;;		wreg, status,2, status,0
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11697 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11698 ;;Total ram usage:        4 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:    5
 11701 ;; This function calls:
 11702 ;;		Nothing
 11703 ;; This function is called by:
 11704 ;;		_printf
 11705 ;;		_strtod
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           	psect	text31
 11710  014DB2                     __ptext31:
 11711                           	opt stack 0
 11712  014DB2                     ___flneg:
 11713                           	opt stack 22
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;incstack = 0
 11717  014DB2  0100               	movlb	0	; () banked
 11718  014DB4  518B               	movf	___flneg@f1& (0+255),w,b
 11719  014DB6  118C               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11720  014DB8  118D               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11721  014DBA  118E               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11722  014DBC  B4D8               	btfsc	status,2,c
 11723  014DBE  D008               	goto	l776
 11724                           
 11725                           ; BSR set to: 0
 11726  014DC0  0E00               	movlw	0
 11727  014DC2  1B8B               	xorwf	___flneg@f1& (0+255),f,b
 11728  014DC4  0E00               	movlw	0
 11729  014DC6  1B8C               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11730  014DC8  0E00               	movlw	0
 11731  014DCA  1B8D               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11732  014DCC  0E80               	movlw	128
 11733  014DCE  1B8E               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11734  014DD0                     l776:
 11735                           
 11736                           ; BSR set to: 0
 11737                           
 11738                           ; BSR set to: 0
 11739  014DD0  C08B  F08B         	movff	___flneg@f1,?___flneg
 11740  014DD4  C08C  F08C         	movff	___flneg@f1+1,?___flneg+1
 11741  014DD8  C08D  F08D         	movff	___flneg@f1+2,?___flneg+2
 11742  014DDC  C08E  F08E         	movff	___flneg@f1+3,?___flneg+3
 11743  014DE0  0012               	return	
 11744  014DE2                     __end_of___flneg:
 11745                           	opt stack 0
 11746                           tblptru	equ	0xFF8
 11747                           tblptrh	equ	0xFF7
 11748                           tblptrl	equ	0xFF6
 11749                           tablat	equ	0xFF5
 11750                           prodh	equ	0xFF4
 11751                           prodl	equ	0xFF3
 11752                           intcon	equ	0xFF2
 11753                           postinc0	equ	0xFEE
 11754                           wreg	equ	0xFE8
 11755                           indf1	equ	0xFE7
 11756                           fsr1h	equ	0xFE2
 11757                           fsr1l	equ	0xFE1
 11758                           indf2	equ	0xFDF
 11759                           postinc2	equ	0xFDE
 11760                           postdec2	equ	0xFDD
 11761                           fsr2h	equ	0xFDA
 11762                           fsr2l	equ	0xFD9
 11763                           status	equ	0xFD8
 11764                           
 11765 ;; *************** function ___flge *****************
 11766 ;; Defined at:
 11767 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;  ff1             4   43[BANK0 ] unsigned char 
 11770 ;;  ff2             4   47[BANK0 ] unsigned char 
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;		None               void
 11775 ;; Registers used:
 11776 ;;		wreg, status,2, status,0
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11782 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11784 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11785 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11786 ;;Total ram usage:       12 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:    5
 11789 ;; This function calls:
 11790 ;;		Nothing
 11791 ;; This function is called by:
 11792 ;;		_printf
 11793 ;;		_strtod
 11794 ;; This function uses a non-reentrant model
 11795 ;;
 11796                           
 11797                           	psect	text32
 11798  0140D6                     __ptext32:
 11799                           	opt stack 0
 11800  0140D6                     ___flge:
 11801                           	opt stack 22
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;incstack = 0
 11805  0140D6  0E00               	movlw	0
 11806  0140D8  0100               	movlb	0	; () banked
 11807  0140DA  158B               	andwf	___flge@ff1& (0+255),w,b
 11808  0140DC  6F93               	movwf	??___flge& (0+255),b
 11809  0140DE  0E00               	movlw	0
 11810  0140E0  158C               	andwf	(___flge@ff1+1)& (0+255),w,b
 11811  0140E2  6F94               	movwf	(??___flge+1)& (0+255),b
 11812  0140E4  0E80               	movlw	128
 11813  0140E6  158D               	andwf	(___flge@ff1+2)& (0+255),w,b
 11814  0140E8  6F95               	movwf	(??___flge+2)& (0+255),b
 11815  0140EA  0E7F               	movlw	127
 11816  0140EC  158E               	andwf	(___flge@ff1+3)& (0+255),w,b
 11817  0140EE  6F96               	movwf	(??___flge+3)& (0+255),b
 11818  0140F0  5193               	movf	??___flge& (0+255),w,b
 11819  0140F2  1194               	iorwf	(??___flge+1)& (0+255),w,b
 11820  0140F4  1195               	iorwf	(??___flge+2)& (0+255),w,b
 11821  0140F6  1196               	iorwf	(??___flge+3)& (0+255),w,b
 11822  0140F8  A4D8               	btfss	status,2,c
 11823  0140FA  D008               	goto	l769
 11824                           
 11825                           ; BSR set to: 0
 11826  0140FC  0E00               	movlw	0
 11827  0140FE  6F8B               	movwf	___flge@ff1& (0+255),b
 11828  014100  0E00               	movlw	0
 11829  014102  6F8C               	movwf	(___flge@ff1+1)& (0+255),b
 11830  014104  0E00               	movlw	0
 11831  014106  6F8D               	movwf	(___flge@ff1+2)& (0+255),b
 11832  014108  0E00               	movlw	0
 11833  01410A  6F8E               	movwf	(___flge@ff1+3)& (0+255),b
 11834  01410C                     l769:
 11835                           
 11836                           ; BSR set to: 0
 11837                           
 11838                           ; BSR set to: 0
 11839  01410C  0E00               	movlw	0
 11840  01410E  158F               	andwf	___flge@ff2& (0+255),w,b
 11841  014110  6F93               	movwf	??___flge& (0+255),b
 11842  014112  0E00               	movlw	0
 11843  014114  1590               	andwf	(___flge@ff2+1)& (0+255),w,b
 11844  014116  6F94               	movwf	(??___flge+1)& (0+255),b
 11845  014118  0E80               	movlw	128
 11846  01411A  1591               	andwf	(___flge@ff2+2)& (0+255),w,b
 11847  01411C  6F95               	movwf	(??___flge+2)& (0+255),b
 11848  01411E  0E7F               	movlw	127
 11849  014120  1592               	andwf	(___flge@ff2+3)& (0+255),w,b
 11850  014122  6F96               	movwf	(??___flge+3)& (0+255),b
 11851  014124  5193               	movf	??___flge& (0+255),w,b
 11852  014126  1194               	iorwf	(??___flge+1)& (0+255),w,b
 11853  014128  1195               	iorwf	(??___flge+2)& (0+255),w,b
 11854  01412A  1196               	iorwf	(??___flge+3)& (0+255),w,b
 11855  01412C  A4D8               	btfss	status,2,c
 11856  01412E  D008               	goto	l770
 11857                           
 11858                           ; BSR set to: 0
 11859  014130  0E00               	movlw	0
 11860  014132  6F8F               	movwf	___flge@ff2& (0+255),b
 11861  014134  0E00               	movlw	0
 11862  014136  6F90               	movwf	(___flge@ff2+1)& (0+255),b
 11863  014138  0E00               	movlw	0
 11864  01413A  6F91               	movwf	(___flge@ff2+2)& (0+255),b
 11865  01413C  0E00               	movlw	0
 11866  01413E  6F92               	movwf	(___flge@ff2+3)& (0+255),b
 11867  014140                     l770:
 11868                           
 11869                           ; BSR set to: 0
 11870                           
 11871                           ; BSR set to: 0
 11872  014140  AF8E               	btfss	(___flge@ff1+3)& (0+255),7,b
 11873  014142  D01D               	goto	l771
 11874                           
 11875                           ; BSR set to: 0
 11876  014144  C08B  F093         	movff	___flge@ff1,??___flge
 11877  014148  C08C  F094         	movff	___flge@ff1+1,??___flge+1
 11878  01414C  C08D  F095         	movff	___flge@ff1+2,??___flge+2
 11879  014150  C08E  F096         	movff	___flge@ff1+3,??___flge+3
 11880  014154  1F93               	comf	??___flge& (0+255),f,b
 11881  014156  1F94               	comf	(??___flge+1)& (0+255),f,b
 11882  014158  1F95               	comf	(??___flge+2)& (0+255),f,b
 11883  01415A  1F96               	comf	(??___flge+3)& (0+255),f,b
 11884  01415C  2B93               	incf	??___flge& (0+255),f,b
 11885  01415E  0E00               	movlw	0
 11886  014160  2394               	addwfc	(??___flge+1)& (0+255),f,b
 11887  014162  2395               	addwfc	(??___flge+2)& (0+255),f,b
 11888  014164  2396               	addwfc	(??___flge+3)& (0+255),f,b
 11889  014166  0E00               	movlw	0
 11890  014168  2593               	addwf	??___flge& (0+255),w,b
 11891  01416A  6F8B               	movwf	___flge@ff1& (0+255),b
 11892  01416C  0E00               	movlw	0
 11893  01416E  2194               	addwfc	(??___flge+1)& (0+255),w,b
 11894  014170  6F8C               	movwf	(___flge@ff1+1)& (0+255),b
 11895  014172  0E00               	movlw	0
 11896  014174  2195               	addwfc	(??___flge+2)& (0+255),w,b
 11897  014176  6F8D               	movwf	(___flge@ff1+2)& (0+255),b
 11898  014178  0E80               	movlw	128
 11899  01417A  2196               	addwfc	(??___flge+3)& (0+255),w,b
 11900  01417C  6F8E               	movwf	(___flge@ff1+3)& (0+255),b
 11901  01417E                     l771:
 11902                           
 11903                           ; BSR set to: 0
 11904                           
 11905                           ; BSR set to: 0
 11906  01417E  AF92               	btfss	(___flge@ff2+3)& (0+255),7,b
 11907  014180  D01D               	goto	l772
 11908                           
 11909                           ; BSR set to: 0
 11910  014182  C08F  F093         	movff	___flge@ff2,??___flge
 11911  014186  C090  F094         	movff	___flge@ff2+1,??___flge+1
 11912  01418A  C091  F095         	movff	___flge@ff2+2,??___flge+2
 11913  01418E  C092  F096         	movff	___flge@ff2+3,??___flge+3
 11914  014192  1F93               	comf	??___flge& (0+255),f,b
 11915  014194  1F94               	comf	(??___flge+1)& (0+255),f,b
 11916  014196  1F95               	comf	(??___flge+2)& (0+255),f,b
 11917  014198  1F96               	comf	(??___flge+3)& (0+255),f,b
 11918  01419A  2B93               	incf	??___flge& (0+255),f,b
 11919  01419C  0E00               	movlw	0
 11920  01419E  2394               	addwfc	(??___flge+1)& (0+255),f,b
 11921  0141A0  2395               	addwfc	(??___flge+2)& (0+255),f,b
 11922  0141A2  2396               	addwfc	(??___flge+3)& (0+255),f,b
 11923  0141A4  0E00               	movlw	0
 11924  0141A6  2593               	addwf	??___flge& (0+255),w,b
 11925  0141A8  6F8F               	movwf	___flge@ff2& (0+255),b
 11926  0141AA  0E00               	movlw	0
 11927  0141AC  2194               	addwfc	(??___flge+1)& (0+255),w,b
 11928  0141AE  6F90               	movwf	(___flge@ff2+1)& (0+255),b
 11929  0141B0  0E00               	movlw	0
 11930  0141B2  2195               	addwfc	(??___flge+2)& (0+255),w,b
 11931  0141B4  6F91               	movwf	(___flge@ff2+2)& (0+255),b
 11932  0141B6  0E80               	movlw	128
 11933  0141B8  2196               	addwfc	(??___flge+3)& (0+255),w,b
 11934  0141BA  6F92               	movwf	(___flge@ff2+3)& (0+255),b
 11935  0141BC                     l772:
 11936                           
 11937                           ; BSR set to: 0
 11938  0141BC  0E00               	movlw	0
 11939  0141BE  1B8B               	xorwf	___flge@ff1& (0+255),f,b
 11940  0141C0  0E00               	movlw	0
 11941  0141C2  1B8C               	xorwf	(___flge@ff1+1)& (0+255),f,b
 11942  0141C4  0E00               	movlw	0
 11943  0141C6  1B8D               	xorwf	(___flge@ff1+2)& (0+255),f,b
 11944  0141C8  0E80               	movlw	128
 11945  0141CA  1B8E               	xorwf	(___flge@ff1+3)& (0+255),f,b
 11946  0141CC  0E00               	movlw	0
 11947  0141CE  1B8F               	xorwf	___flge@ff2& (0+255),f,b
 11948  0141D0  0E00               	movlw	0
 11949  0141D2  1B90               	xorwf	(___flge@ff2+1)& (0+255),f,b
 11950  0141D4  0E00               	movlw	0
 11951  0141D6  1B91               	xorwf	(___flge@ff2+2)& (0+255),f,b
 11952  0141D8  0E80               	movlw	128
 11953  0141DA  1B92               	xorwf	(___flge@ff2+3)& (0+255),f,b
 11954  0141DC  518F               	movf	___flge@ff2& (0+255),w,b
 11955  0141DE  5D8B               	subwf	___flge@ff1& (0+255),w,b
 11956  0141E0  5190               	movf	(___flge@ff2+1)& (0+255),w,b
 11957  0141E2  598C               	subwfb	(___flge@ff1+1)& (0+255),w,b
 11958  0141E4  5191               	movf	(___flge@ff2+2)& (0+255),w,b
 11959  0141E6  598D               	subwfb	(___flge@ff1+2)& (0+255),w,b
 11960  0141E8  5192               	movf	(___flge@ff2+3)& (0+255),w,b
 11961  0141EA  598E               	subwfb	(___flge@ff1+3)& (0+255),w,b
 11962  0141EC  B0D8               	btfsc	status,0,c
 11963  0141EE  D002               	goto	l3934
 11964                           
 11965                           ; BSR set to: 0
 11966  0141F0  90D8               	bcf	status,0,c
 11967  0141F2  0012               	return	
 11968  0141F4                     l3934:
 11969                           
 11970                           ; BSR set to: 0
 11971                           
 11972                           ; BSR set to: 0
 11973  0141F4  80D8               	bsf	status,0,c
 11974                           
 11975                           ; BSR set to: 0
 11976  0141F6  0012               	return	
 11977  0141F8                     __end_of___flge:
 11978                           	opt stack 0
 11979                           tblptru	equ	0xFF8
 11980                           tblptrh	equ	0xFF7
 11981                           tblptrl	equ	0xFF6
 11982                           tablat	equ	0xFF5
 11983                           prodh	equ	0xFF4
 11984                           prodl	equ	0xFF3
 11985                           intcon	equ	0xFF2
 11986                           postinc0	equ	0xFEE
 11987                           wreg	equ	0xFE8
 11988                           indf1	equ	0xFE7
 11989                           fsr1h	equ	0xFE2
 11990                           fsr1l	equ	0xFE1
 11991                           indf2	equ	0xFDF
 11992                           postinc2	equ	0xFDE
 11993                           postdec2	equ	0xFDD
 11994                           fsr2h	equ	0xFDA
 11995                           fsr2l	equ	0xFD9
 11996                           status	equ	0xFD8
 11997                           
 11998 ;; *************** function _SYSTEM_Initialize *****************
 11999 ;; Defined at:
 12000 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;		None
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;		None
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, status,2, status,0, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12018 ;;Total ram usage:        0 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    7
 12021 ;; This function calls:
 12022 ;;		_EUSART2_Initialize
 12023 ;;		_INTERRUPT_Initialize
 12024 ;;		_OSCILLATOR_Initialize
 12025 ;;		_PIN_MANAGER_Initialize
 12026 ;;		_PMD_Initialize
 12027 ;; This function is called by:
 12028 ;;		_main
 12029 ;; This function uses a non-reentrant model
 12030 ;;
 12031                           
 12032                           	psect	text33
 12033  014F48                     __ptext33:
 12034                           	opt stack 0
 12035  014F48                     _SYSTEM_Initialize:
 12036                           	opt stack 23
 12037                           
 12038                           ;mcc.c: 52: INTERRUPT_Initialize();
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;incstack = 0
 12042  014F48  ECC4  F0A7         	call	_INTERRUPT_Initialize	;wreg free
 12043                           
 12044                           ;mcc.c: 53: PMD_Initialize();
 12045  014F4C  EC8A  F0A7         	call	_PMD_Initialize	;wreg free
 12046                           
 12047                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 12048  014F50  EC29  F0A3         	call	_PIN_MANAGER_Initialize	;wreg free
 12049                           
 12050                           ;mcc.c: 55: OSCILLATOR_Initialize();
 12051  014F54  EC98  F0A7         	call	_OSCILLATOR_Initialize	;wreg free
 12052                           
 12053                           ;mcc.c: 56: EUSART2_Initialize();
 12054  014F58  EC54  F0A5         	call	_EUSART2_Initialize	;wreg free
 12055  014F5C  0012               	return		;funcret
 12056  014F5E                     __end_of_SYSTEM_Initialize:
 12057                           	opt stack 0
 12058                           tblptru	equ	0xFF8
 12059                           tblptrh	equ	0xFF7
 12060                           tblptrl	equ	0xFF6
 12061                           tablat	equ	0xFF5
 12062                           prodh	equ	0xFF4
 12063                           prodl	equ	0xFF3
 12064                           intcon	equ	0xFF2
 12065                           postinc0	equ	0xFEE
 12066                           wreg	equ	0xFE8
 12067                           indf1	equ	0xFE7
 12068                           fsr1h	equ	0xFE2
 12069                           fsr1l	equ	0xFE1
 12070                           indf2	equ	0xFDF
 12071                           postinc2	equ	0xFDE
 12072                           postdec2	equ	0xFDD
 12073                           fsr2h	equ	0xFDA
 12074                           fsr2l	equ	0xFD9
 12075                           status	equ	0xFD8
 12076                           
 12077 ;; *************** function _PMD_Initialize *****************
 12078 ;; Defined at:
 12079 ;;		line 73 in file "mcc_generated_files/mcc.c"
 12080 ;; Parameters:    Size  Location     Type
 12081 ;;		None
 12082 ;; Auto vars:     Size  Location     Type
 12083 ;;		None
 12084 ;; Return value:  Size  Location     Type
 12085 ;;                  1    wreg      void 
 12086 ;; Registers used:
 12087 ;;		wreg, status,2
 12088 ;; Tracked objects:
 12089 ;;		On entry : 0/0
 12090 ;;		On exit  : 0/0
 12091 ;;		Unchanged: 0/0
 12092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12097 ;;Total ram usage:        0 bytes
 12098 ;; Hardware stack levels used:    1
 12099 ;; Hardware stack levels required when called:    5
 12100 ;; This function calls:
 12101 ;;		Nothing
 12102 ;; This function is called by:
 12103 ;;		_SYSTEM_Initialize
 12104 ;; This function uses a non-reentrant model
 12105 ;;
 12106                           
 12107                           	psect	text34
 12108  014F14                     __ptext34:
 12109                           	opt stack 0
 12110  014F14                     _PMD_Initialize:
 12111                           	opt stack 24
 12112                           
 12113                           ;mcc.c: 76: PMD0 = 0x00;
 12114                           
 12115                           ;incstack = 0
 12116  014F14  0E00               	movlw	0
 12117  014F16  010E               	movlb	14	; () banked
 12118  014F18  6F4C               	movwf	76,b	;volatile
 12119                           
 12120                           ;mcc.c: 78: PMD1 = 0x00;
 12121  014F1A  0E00               	movlw	0
 12122  014F1C  6F4D               	movwf	77,b	;volatile
 12123                           
 12124                           ;mcc.c: 80: PMD2 = 0x00;
 12125  014F1E  0E00               	movlw	0
 12126  014F20  6F4E               	movwf	78,b	;volatile
 12127                           
 12128                           ;mcc.c: 82: PMD3 = 0x00;
 12129  014F22  0E00               	movlw	0
 12130  014F24  6F4F               	movwf	79,b	;volatile
 12131                           
 12132                           ;mcc.c: 84: PMD4 = 0x00;
 12133  014F26  0E00               	movlw	0
 12134  014F28  6F50               	movwf	80,b	;volatile
 12135                           
 12136                           ;mcc.c: 86: PMD5 = 0x00;
 12137  014F2A  0E00               	movlw	0
 12138  014F2C  6F51               	movwf	81,b	;volatile
 12139                           
 12140                           ; BSR set to: 14
 12141  014F2E  0012               	return		;funcret
 12142  014F30                     __end_of_PMD_Initialize:
 12143                           	opt stack 0
 12144                           tblptru	equ	0xFF8
 12145                           tblptrh	equ	0xFF7
 12146                           tblptrl	equ	0xFF6
 12147                           tablat	equ	0xFF5
 12148                           prodh	equ	0xFF4
 12149                           prodl	equ	0xFF3
 12150                           intcon	equ	0xFF2
 12151                           postinc0	equ	0xFEE
 12152                           wreg	equ	0xFE8
 12153                           indf1	equ	0xFE7
 12154                           fsr1h	equ	0xFE2
 12155                           fsr1l	equ	0xFE1
 12156                           indf2	equ	0xFDF
 12157                           postinc2	equ	0xFDE
 12158                           postdec2	equ	0xFDD
 12159                           fsr2h	equ	0xFDA
 12160                           fsr2l	equ	0xFD9
 12161                           status	equ	0xFD8
 12162                           
 12163 ;; *************** function _PIN_MANAGER_Initialize *****************
 12164 ;; Defined at:
 12165 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12166 ;; Parameters:    Size  Location     Type
 12167 ;;		None
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;		None
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  1    wreg      void 
 12172 ;; Registers used:
 12173 ;;		wreg, status,2
 12174 ;; Tracked objects:
 12175 ;;		On entry : 0/0
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12183 ;;Total ram usage:        0 bytes
 12184 ;; Hardware stack levels used:    1
 12185 ;; Hardware stack levels required when called:    5
 12186 ;; This function calls:
 12187 ;;		Nothing
 12188 ;; This function is called by:
 12189 ;;		_SYSTEM_Initialize
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193                           	psect	text35
 12194  014652                     __ptext35:
 12195                           	opt stack 0
 12196  014652                     _PIN_MANAGER_Initialize:
 12197                           	opt stack 24
 12198                           
 12199                           ;pin_manager.c: 62: LATE = 0x00;
 12200                           
 12201                           ; BSR set to: 14
 12202                           ;incstack = 0
 12203  014652  0E00               	movlw	0
 12204  014654  6E7D               	movwf	3965,c	;volatile
 12205                           
 12206                           ;pin_manager.c: 63: LATD = 0x00;
 12207  014656  0E00               	movlw	0
 12208  014658  6E7C               	movwf	3964,c	;volatile
 12209                           
 12210                           ;pin_manager.c: 64: LATA = 0x00;
 12211  01465A  0E00               	movlw	0
 12212  01465C  6E79               	movwf	3961,c	;volatile
 12213                           
 12214                           ;pin_manager.c: 65: LATF = 0x00;
 12215  01465E  0E00               	movlw	0
 12216  014660  6E7E               	movwf	3966,c	;volatile
 12217                           
 12218                           ;pin_manager.c: 66: LATB = 0x00;
 12219  014662  0E00               	movlw	0
 12220  014664  6E7A               	movwf	3962,c	;volatile
 12221                           
 12222                           ;pin_manager.c: 67: LATG = 0x00;
 12223  014666  0E00               	movlw	0
 12224  014668  6E7F               	movwf	3967,c	;volatile
 12225                           
 12226                           ;pin_manager.c: 68: LATC = 0x00;
 12227  01466A  0E00               	movlw	0
 12228  01466C  6E7B               	movwf	3963,c	;volatile
 12229                           
 12230                           ;pin_manager.c: 69: LATH = 0x00;
 12231  01466E  0E00               	movlw	0
 12232  014670  6E80               	movwf	3968,c	;volatile
 12233                           
 12234                           ;pin_manager.c: 74: TRISE = 0xFF;
 12235  014672  6885               	setf	3973,c	;volatile
 12236                           
 12237                           ;pin_manager.c: 75: TRISF = 0xFF;
 12238  014674  6886               	setf	3974,c	;volatile
 12239                           
 12240                           ;pin_manager.c: 76: TRISA = 0xFF;
 12241  014676  6881               	setf	3969,c	;volatile
 12242                           
 12243                           ;pin_manager.c: 77: TRISG = 0x5F;
 12244  014678  0E5F               	movlw	95
 12245  01467A  6E87               	movwf	3975,c	;volatile
 12246                           
 12247                           ;pin_manager.c: 78: TRISB = 0xFF;
 12248  01467C  6882               	setf	3970,c	;volatile
 12249                           
 12250                           ;pin_manager.c: 79: TRISH = 0x0F;
 12251  01467E  0E0F               	movlw	15
 12252  014680  6E88               	movwf	3976,c	;volatile
 12253                           
 12254                           ;pin_manager.c: 80: TRISC = 0xFF;
 12255  014682  6883               	setf	3971,c	;volatile
 12256                           
 12257                           ;pin_manager.c: 81: TRISD = 0xFF;
 12258  014684  6884               	setf	3972,c	;volatile
 12259                           
 12260                           ;pin_manager.c: 86: ANSELD = 0xFF;
 12261  014686  010E               	movlb	14	; () banked
 12262  014688  69A7               	setf	167,b	;volatile
 12263                           
 12264                           ; BSR set to: 14
 12265                           ;pin_manager.c: 87: ANSELB = 0xFF;
 12266  01468A  699A               	setf	154,b	;volatile
 12267                           
 12268                           ; BSR set to: 14
 12269                           ;pin_manager.c: 88: ANSELE = 0xFF;
 12270  01468C  69AF               	setf	175,b	;volatile
 12271                           
 12272                           ;pin_manager.c: 89: ANSELG = 0xBF;
 12273  01468E  0EBF               	movlw	191
 12274  014690  6FBC               	movwf	188,b	;volatile
 12275                           
 12276                           ; BSR set to: 14
 12277                           ;pin_manager.c: 90: ANSELF = 0xFF;
 12278  014692  69B4               	setf	180,b	;volatile
 12279                           
 12280                           ; BSR set to: 14
 12281                           ;pin_manager.c: 91: ANSELA = 0xFF;
 12282  014694  6992               	setf	146,b	;volatile
 12283                           
 12284                           ;pin_manager.c: 96: WPUD = 0x00;
 12285  014696  0E00               	movlw	0
 12286  014698  6FA6               	movwf	166,b	;volatile
 12287                           
 12288                           ;pin_manager.c: 97: WPUF = 0x00;
 12289  01469A  0E00               	movlw	0
 12290  01469C  6FB3               	movwf	179,b	;volatile
 12291                           
 12292                           ;pin_manager.c: 98: WPUE = 0x00;
 12293  01469E  0E00               	movlw	0
 12294  0146A0  6FAE               	movwf	174,b	;volatile
 12295                           
 12296                           ;pin_manager.c: 99: WPUB = 0x00;
 12297  0146A2  0E00               	movlw	0
 12298  0146A4  6F99               	movwf	153,b	;volatile
 12299                           
 12300                           ;pin_manager.c: 100: WPUG = 0x00;
 12301  0146A6  0E00               	movlw	0
 12302  0146A8  6FBB               	movwf	187,b	;volatile
 12303                           
 12304                           ;pin_manager.c: 101: WPUA = 0x00;
 12305  0146AA  0E00               	movlw	0
 12306  0146AC  6F91               	movwf	145,b	;volatile
 12307                           
 12308                           ;pin_manager.c: 102: WPUC = 0x00;
 12309  0146AE  0E00               	movlw	0
 12310  0146B0  6FA1               	movwf	161,b	;volatile
 12311                           
 12312                           ;pin_manager.c: 103: WPUH = 0x00;
 12313  0146B2  0E00               	movlw	0
 12314  0146B4  6FC0               	movwf	192,b	;volatile
 12315                           
 12316                           ;pin_manager.c: 108: ODCONE = 0x00;
 12317  0146B6  0E00               	movlw	0
 12318  0146B8  6FAD               	movwf	173,b	;volatile
 12319                           
 12320                           ;pin_manager.c: 109: ODCONF = 0x00;
 12321  0146BA  0E00               	movlw	0
 12322  0146BC  6FB2               	movwf	178,b	;volatile
 12323                           
 12324                           ;pin_manager.c: 110: ODCONA = 0x00;
 12325  0146BE  0E00               	movlw	0
 12326  0146C0  6F90               	movwf	144,b	;volatile
 12327                           
 12328                           ;pin_manager.c: 111: ODCONG = 0x00;
 12329  0146C2  0E00               	movlw	0
 12330  0146C4  6FBA               	movwf	186,b	;volatile
 12331                           
 12332                           ;pin_manager.c: 112: ODCONB = 0x00;
 12333  0146C6  0E00               	movlw	0
 12334  0146C8  6F98               	movwf	152,b	;volatile
 12335                           
 12336                           ;pin_manager.c: 113: ODCONH = 0x00;
 12337  0146CA  0E00               	movlw	0
 12338  0146CC  6FBF               	movwf	191,b	;volatile
 12339                           
 12340                           ;pin_manager.c: 114: ODCONC = 0x00;
 12341  0146CE  0E00               	movlw	0
 12342  0146D0  6FA0               	movwf	160,b	;volatile
 12343                           
 12344                           ;pin_manager.c: 115: ODCOND = 0x00;
 12345  0146D2  0E00               	movlw	0
 12346  0146D4  6FA5               	movwf	165,b	;volatile
 12347                           
 12348                           ;pin_manager.c: 124: RG7PPS = 0x0E;
 12349  0146D6  0E0E               	movlw	14
 12350  0146D8  6F89               	movwf	137,b	;volatile
 12351                           
 12352                           ; BSR set to: 14
 12353                           ;pin_manager.c: 125: RX2PPSbits.RX2PPS = 0x36;
 12354  0146DA  9111               	bcf	17,0,b	;volatile
 12355  0146DC  8311               	bsf	17,1,b	;volatile
 12356  0146DE  8511               	bsf	17,2,b	;volatile
 12357  0146E0  9711               	bcf	17,3,b	;volatile
 12358  0146E2  8911               	bsf	17,4,b	;volatile
 12359  0146E4  8B11               	bsf	17,5,b	;volatile
 12360                           
 12361                           ; BSR set to: 14
 12362  0146E6  0012               	return		;funcret
 12363  0146E8                     __end_of_PIN_MANAGER_Initialize:
 12364                           	opt stack 0
 12365                           tblptru	equ	0xFF8
 12366                           tblptrh	equ	0xFF7
 12367                           tblptrl	equ	0xFF6
 12368                           tablat	equ	0xFF5
 12369                           prodh	equ	0xFF4
 12370                           prodl	equ	0xFF3
 12371                           intcon	equ	0xFF2
 12372                           postinc0	equ	0xFEE
 12373                           wreg	equ	0xFE8
 12374                           indf1	equ	0xFE7
 12375                           fsr1h	equ	0xFE2
 12376                           fsr1l	equ	0xFE1
 12377                           indf2	equ	0xFDF
 12378                           postinc2	equ	0xFDE
 12379                           postdec2	equ	0xFDD
 12380                           fsr2h	equ	0xFDA
 12381                           fsr2l	equ	0xFD9
 12382                           status	equ	0xFD8
 12383                           
 12384 ;; *************** function _OSCILLATOR_Initialize *****************
 12385 ;; Defined at:
 12386 ;;		line 59 in file "mcc_generated_files/mcc.c"
 12387 ;; Parameters:    Size  Location     Type
 12388 ;;		None
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;		None
 12391 ;; Return value:  Size  Location     Type
 12392 ;;                  1    wreg      void 
 12393 ;; Registers used:
 12394 ;;		wreg, status,2
 12395 ;; Tracked objects:
 12396 ;;		On entry : 0/0
 12397 ;;		On exit  : 0/0
 12398 ;;		Unchanged: 0/0
 12399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12404 ;;Total ram usage:        0 bytes
 12405 ;; Hardware stack levels used:    1
 12406 ;; Hardware stack levels required when called:    5
 12407 ;; This function calls:
 12408 ;;		Nothing
 12409 ;; This function is called by:
 12410 ;;		_SYSTEM_Initialize
 12411 ;; This function uses a non-reentrant model
 12412 ;;
 12413                           
 12414                           	psect	text36
 12415  014F30                     __ptext36:
 12416                           	opt stack 0
 12417  014F30                     _OSCILLATOR_Initialize:
 12418                           	opt stack 24
 12419                           
 12420                           ;mcc.c: 62: OSCCON1 = 0x60;
 12421                           
 12422                           ; BSR set to: 14
 12423                           ;incstack = 0
 12424  014F30  0E60               	movlw	96
 12425  014F32  010E               	movlb	14	; () banked
 12426  014F34  6F43               	movwf	67,b	;volatile
 12427                           
 12428                           ;mcc.c: 64: OSCCON3 = 0x00;
 12429  014F36  0E00               	movlw	0
 12430  014F38  6F45               	movwf	69,b	;volatile
 12431                           
 12432                           ;mcc.c: 66: OSCEN = 0x00;
 12433  014F3A  0E00               	movlw	0
 12434  014F3C  6F47               	movwf	71,b	;volatile
 12435                           
 12436                           ;mcc.c: 68: OSCFRQ = 0x08;
 12437  014F3E  0E08               	movlw	8
 12438  014F40  6F49               	movwf	73,b	;volatile
 12439                           
 12440                           ;mcc.c: 70: OSCTUNE = 0x00;
 12441  014F42  0E00               	movlw	0
 12442  014F44  6F48               	movwf	72,b	;volatile
 12443                           
 12444                           ; BSR set to: 14
 12445  014F46  0012               	return		;funcret
 12446  014F48                     __end_of_OSCILLATOR_Initialize:
 12447                           	opt stack 0
 12448                           tblptru	equ	0xFF8
 12449                           tblptrh	equ	0xFF7
 12450                           tblptrl	equ	0xFF6
 12451                           tablat	equ	0xFF5
 12452                           prodh	equ	0xFF4
 12453                           prodl	equ	0xFF3
 12454                           intcon	equ	0xFF2
 12455                           postinc0	equ	0xFEE
 12456                           wreg	equ	0xFE8
 12457                           indf1	equ	0xFE7
 12458                           fsr1h	equ	0xFE2
 12459                           fsr1l	equ	0xFE1
 12460                           indf2	equ	0xFDF
 12461                           postinc2	equ	0xFDE
 12462                           postdec2	equ	0xFDD
 12463                           fsr2h	equ	0xFDA
 12464                           fsr2l	equ	0xFD9
 12465                           status	equ	0xFD8
 12466                           
 12467 ;; *************** function _INTERRUPT_Initialize *****************
 12468 ;; Defined at:
 12469 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;		None
 12472 ;; Auto vars:     Size  Location     Type
 12473 ;;		None
 12474 ;; Return value:  Size  Location     Type
 12475 ;;                  1    wreg      void 
 12476 ;; Registers used:
 12477 ;;		None
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12487 ;;Total ram usage:        0 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; Hardware stack levels required when called:    5
 12490 ;; This function calls:
 12491 ;;		Nothing
 12492 ;; This function is called by:
 12493 ;;		_SYSTEM_Initialize
 12494 ;; This function uses a non-reentrant model
 12495 ;;
 12496                           
 12497                           	psect	text37
 12498  014F88                     __ptext37:
 12499                           	opt stack 0
 12500  014F88                     _INTERRUPT_Initialize:
 12501                           	opt stack 24
 12502                           
 12503                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 12504                           
 12505                           ; BSR set to: 14
 12506                           ;incstack = 0
 12507  014F88  8AF2               	bsf	intcon,5,c	;volatile
 12508                           
 12509                           ;interrupt_manager.c: 60: IPR3bits.TX2IP = 1;
 12510  014F8A  010E               	movlb	14	; () banked
 12511  014F8C  8D22               	bsf	34,6,b	;volatile
 12512                           
 12513                           ;interrupt_manager.c: 63: IPR3bits.RC2IP = 1;
 12514  014F8E  8F22               	bsf	34,7,b	;volatile
 12515                           
 12516                           ; BSR set to: 14
 12517  014F90  0012               	return		;funcret
 12518  014F92                     __end_of_INTERRUPT_Initialize:
 12519                           	opt stack 0
 12520                           tblptru	equ	0xFF8
 12521                           tblptrh	equ	0xFF7
 12522                           tblptrl	equ	0xFF6
 12523                           tablat	equ	0xFF5
 12524                           prodh	equ	0xFF4
 12525                           prodl	equ	0xFF3
 12526                           intcon	equ	0xFF2
 12527                           postinc0	equ	0xFEE
 12528                           wreg	equ	0xFE8
 12529                           indf1	equ	0xFE7
 12530                           fsr1h	equ	0xFE2
 12531                           fsr1l	equ	0xFE1
 12532                           indf2	equ	0xFDF
 12533                           postinc2	equ	0xFDE
 12534                           postdec2	equ	0xFDD
 12535                           fsr2h	equ	0xFDA
 12536                           fsr2l	equ	0xFD9
 12537                           status	equ	0xFD8
 12538                           
 12539 ;; *************** function _EUSART2_Initialize *****************
 12540 ;; Defined at:
 12541 ;;		line 77 in file "mcc_generated_files/eusart2.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;		None
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  1    wreg      void 
 12548 ;; Registers used:
 12549 ;;		wreg, status,2, status,0, cstack
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12559 ;;Total ram usage:        0 bytes
 12560 ;; Hardware stack levels used:    1
 12561 ;; Hardware stack levels required when called:    6
 12562 ;; This function calls:
 12563 ;;		_EUSART2_SetRxInterruptHandler
 12564 ;;		_EUSART2_SetTxInterruptHandler
 12565 ;; This function is called by:
 12566 ;;		_SYSTEM_Initialize
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           	psect	text38
 12571  014AA8                     __ptext38:
 12572                           	opt stack 0
 12573  014AA8                     _EUSART2_Initialize:
 12574                           	opt stack 23
 12575                           
 12576                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
 12577                           
 12578                           ; BSR set to: 14
 12579                           ;incstack = 0
 12580  014AA8  010E               	movlb	14	; () banked
 12581  014AAA  9F2C               	bcf	44,7,b	;volatile
 12582                           
 12583                           ; BSR set to: 14
 12584                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 12585  014AAC  0EAA               	movlw	low _EUSART2_Receive_ISR
 12586  014AAE  0100               	movlb	0	; () banked
 12587  014AB0  6F8B               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 12588  014AB2  0E45               	movlw	high _EUSART2_Receive_ISR
 12589  014AB4  6F8C               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 12590  014AB6  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 12591  014AB8  6F8D               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 12592  014ABA  ECBD  F0A7         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 12593                           
 12594                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
 12595  014ABE  010E               	movlb	14	; () banked
 12596  014AC0  9D2C               	bcf	44,6,b	;volatile
 12597                           
 12598                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 12599  014AC2  0E7C               	movlw	low _EUSART2_Transmit_ISR
 12600  014AC4  0100               	movlb	0	; () banked
 12601  014AC6  6F8B               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 12602  014AC8  0E4D               	movlw	high _EUSART2_Transmit_ISR
 12603  014ACA  6F8C               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 12604  014ACC  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 12605  014ACE  6F8D               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 12606  014AD0  ECB6  F0A7         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 12607                           
 12608                           ;eusart2.c: 87: BAUD2CON = 0x08;
 12609  014AD4  0E08               	movlw	8
 12610  014AD6  010E               	movlb	14	; () banked
 12611  014AD8  6FF7               	movwf	247,b	;volatile
 12612                           
 12613                           ; BSR set to: 14
 12614                           ;eusart2.c: 90: RC2STA = 0x90;
 12615  014ADA  0E90               	movlw	144
 12616  014ADC  6FF5               	movwf	245,b	;volatile
 12617                           
 12618                           ; BSR set to: 14
 12619                           ;eusart2.c: 93: TX2STA = 0x24;
 12620  014ADE  0E24               	movlw	36
 12621  014AE0  6FF6               	movwf	246,b	;volatile
 12622                           
 12623                           ; BSR set to: 14
 12624                           ;eusart2.c: 96: SP2BRGL = 0x8A;
 12625  014AE2  0E8A               	movlw	138
 12626  014AE4  6FF3               	movwf	243,b	;volatile
 12627                           
 12628                           ; BSR set to: 14
 12629                           ;eusart2.c: 99: SP2BRGH = 0x00;
 12630  014AE6  0E00               	movlw	0
 12631  014AE8  6FF4               	movwf	244,b	;volatile
 12632                           
 12633                           ; BSR set to: 14
 12634                           ;eusart2.c: 103: eusart2TxHead = 0;
 12635  014AEA  0E00               	movlw	0
 12636  014AEC  0100               	movlb	0	; () banked
 12637  014AEE  6FD3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;eusart2.c: 104: eusart2TxTail = 0;
 12641  014AF0  0E00               	movlw	0
 12642  014AF2  6FD2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 12646  014AF4  0E40               	movlw	64
 12647  014AF6  6FD4               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 12648                           
 12649                           ; BSR set to: 0
 12650                           ;eusart2.c: 107: eusart2RxHead = 0;
 12651  014AF8  0E00               	movlw	0
 12652  014AFA  6E5B               	movwf	_eusart2RxHead,c	;volatile
 12653                           
 12654                           ; BSR set to: 0
 12655                           ;eusart2.c: 108: eusart2RxTail = 0;
 12656  014AFC  0E00               	movlw	0
 12657  014AFE  6FD1               	movwf	_eusart2RxTail& (0+255),b	;volatile
 12658                           
 12659                           ; BSR set to: 0
 12660                           ;eusart2.c: 109: eusart2RxCount = 0;
 12661  014B00  0E00               	movlw	0
 12662  014B02  6FD0               	movwf	_eusart2RxCount& (0+255),b	;volatile
 12663                           
 12664                           ; BSR set to: 0
 12665                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
 12666  014B04  010E               	movlb	14	; () banked
 12667  014B06  8F2C               	bsf	44,7,b	;volatile
 12668                           
 12669                           ; BSR set to: 14
 12670  014B08  0012               	return		;funcret
 12671  014B0A                     __end_of_EUSART2_Initialize:
 12672                           	opt stack 0
 12673                           tblptru	equ	0xFF8
 12674                           tblptrh	equ	0xFF7
 12675                           tblptrl	equ	0xFF6
 12676                           tablat	equ	0xFF5
 12677                           prodh	equ	0xFF4
 12678                           prodl	equ	0xFF3
 12679                           intcon	equ	0xFF2
 12680                           postinc0	equ	0xFEE
 12681                           wreg	equ	0xFE8
 12682                           indf1	equ	0xFE7
 12683                           fsr1h	equ	0xFE2
 12684                           fsr1l	equ	0xFE1
 12685                           indf2	equ	0xFDF
 12686                           postinc2	equ	0xFDE
 12687                           postdec2	equ	0xFDD
 12688                           fsr2h	equ	0xFDA
 12689                           fsr2l	equ	0xFD9
 12690                           status	equ	0xFD8
 12691                           
 12692 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 12693 ;; Defined at:
 12694 ;;		line 258 in file "mcc_generated_files/eusart2.c"
 12695 ;; Parameters:    Size  Location     Type
 12696 ;;  interruptHan    3   43[BANK0 ] PTR FTN()void 
 12697 ;;		 -> EUSART2_Transmit_ISR(1), 
 12698 ;; Auto vars:     Size  Location     Type
 12699 ;;		None
 12700 ;; Return value:  Size  Location     Type
 12701 ;;                  1    wreg      void 
 12702 ;; Registers used:
 12703 ;;		wreg, status,2, status,0
 12704 ;; Tracked objects:
 12705 ;;		On entry : 0/0
 12706 ;;		On exit  : 0/0
 12707 ;;		Unchanged: 0/0
 12708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12709 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12712 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12713 ;;Total ram usage:        3 bytes
 12714 ;; Hardware stack levels used:    1
 12715 ;; Hardware stack levels required when called:    5
 12716 ;; This function calls:
 12717 ;;		Nothing
 12718 ;; This function is called by:
 12719 ;;		_EUSART2_Initialize
 12720 ;; This function uses a non-reentrant model
 12721 ;;
 12722                           
 12723                           	psect	text39
 12724  014F6C                     __ptext39:
 12725                           	opt stack 0
 12726  014F6C                     _EUSART2_SetTxInterruptHandler:
 12727                           	opt stack 23
 12728                           
 12729                           ;eusart2.c: 259: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 12730                           
 12731                           ; BSR set to: 14
 12732                           ;incstack = 0
 12733  014F6C  C08B  F058         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 12734  014F70  C08C  F059         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 12735  014F74  C08D  F05A         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 12736  014F78  0012               	return		;funcret
 12737  014F7A                     __end_of_EUSART2_SetTxInterruptHandler:
 12738                           	opt stack 0
 12739                           tblptru	equ	0xFF8
 12740                           tblptrh	equ	0xFF7
 12741                           tblptrl	equ	0xFF6
 12742                           tablat	equ	0xFF5
 12743                           prodh	equ	0xFF4
 12744                           prodl	equ	0xFF3
 12745                           intcon	equ	0xFF2
 12746                           postinc0	equ	0xFEE
 12747                           wreg	equ	0xFE8
 12748                           indf1	equ	0xFE7
 12749                           fsr1h	equ	0xFE2
 12750                           fsr1l	equ	0xFE1
 12751                           indf2	equ	0xFDF
 12752                           postinc2	equ	0xFDE
 12753                           postdec2	equ	0xFDD
 12754                           fsr2h	equ	0xFDA
 12755                           fsr2l	equ	0xFD9
 12756                           status	equ	0xFD8
 12757                           
 12758 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 12759 ;; Defined at:
 12760 ;;		line 262 in file "mcc_generated_files/eusart2.c"
 12761 ;; Parameters:    Size  Location     Type
 12762 ;;  interruptHan    3   43[BANK0 ] PTR FTN()void 
 12763 ;;		 -> EUSART2_Receive_ISR(1), 
 12764 ;; Auto vars:     Size  Location     Type
 12765 ;;		None
 12766 ;; Return value:  Size  Location     Type
 12767 ;;                  1    wreg      void 
 12768 ;; Registers used:
 12769 ;;		wreg, status,2, status,0
 12770 ;; Tracked objects:
 12771 ;;		On entry : 0/0
 12772 ;;		On exit  : 0/0
 12773 ;;		Unchanged: 0/0
 12774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12775 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12778 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12779 ;;Total ram usage:        3 bytes
 12780 ;; Hardware stack levels used:    1
 12781 ;; Hardware stack levels required when called:    5
 12782 ;; This function calls:
 12783 ;;		Nothing
 12784 ;; This function is called by:
 12785 ;;		_EUSART2_Initialize
 12786 ;; This function uses a non-reentrant model
 12787 ;;
 12788                           
 12789                           	psect	text40
 12790  014F7A                     __ptext40:
 12791                           	opt stack 0
 12792  014F7A                     _EUSART2_SetRxInterruptHandler:
 12793                           	opt stack 23
 12794                           
 12795                           ;eusart2.c: 263: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 12796                           
 12797                           ;incstack = 0
 12798  014F7A  C08B  F055         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 12799  014F7E  C08C  F056         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 12800  014F82  C08D  F057         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 12801  014F86  0012               	return		;funcret
 12802  014F88                     __end_of_EUSART2_SetRxInterruptHandler:
 12803                           	opt stack 0
 12804                           tblptru	equ	0xFF8
 12805                           tblptrh	equ	0xFF7
 12806                           tblptrl	equ	0xFF6
 12807                           tablat	equ	0xFF5
 12808                           prodh	equ	0xFF4
 12809                           prodl	equ	0xFF3
 12810                           intcon	equ	0xFF2
 12811                           postinc0	equ	0xFEE
 12812                           wreg	equ	0xFE8
 12813                           indf1	equ	0xFE7
 12814                           fsr1h	equ	0xFE2
 12815                           fsr1l	equ	0xFE1
 12816                           indf2	equ	0xFDF
 12817                           postinc2	equ	0xFDE
 12818                           postdec2	equ	0xFDD
 12819                           fsr2h	equ	0xFDA
 12820                           fsr2l	equ	0xFD9
 12821                           status	equ	0xFD8
 12822                           
 12823 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 12824 ;; Defined at:
 12825 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
 12826 ;; Parameters:    Size  Location     Type
 12827 ;;		None
 12828 ;; Auto vars:     Size  Location     Type
 12829 ;;		None
 12830 ;; Return value:  Size  Location     Type
 12831 ;;                  1    wreg      void 
 12832 ;; Registers used:
 12833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12834 ;; Tracked objects:
 12835 ;;		On entry : 0/0
 12836 ;;		On exit  : 0/0
 12837 ;;		Unchanged: 0/0
 12838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12841 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12842 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12843 ;;Total ram usage:       18 bytes
 12844 ;; Hardware stack levels used:    1
 12845 ;; Hardware stack levels required when called:    4
 12846 ;; This function calls:
 12847 ;;		Absolute function
 12848 ;;		_EUSART2_Receive_ISR
 12849 ;;		_EUSART2_Transmit_ISR
 12850 ;; This function is called by:
 12851 ;;		Interrupt level 2
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           	psect	intcode
 12856  000008                     __pintcode:
 12857                           	opt stack 0
 12858  000008                     _INTERRUPT_InterruptManagerHigh:
 12859                           	opt stack 21
 12860                           
 12861                           ;incstack = 0
 12862  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12863  00000A  CFFA F079          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 12864  00000E  CFFB F07A          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 12865  000012  CFE9 F07B          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 12866  000016  CFEA F07C          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 12867  00001A  CFE1 F07D          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 12868  00001E  CFE2 F07E          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 12869  000022  CFD9 F07F          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 12870  000026  CFDA F080          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 12871  00002A  CFF3 F081          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 12872  00002E  CFF4 F082          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 12873  000032  CFF6 F083          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 12874  000036  CFF7 F084          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 12875  00003A  CFF8 F085          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 12876  00003E  CFF5 F086          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 12877  000042  C05C  F087         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 12878  000046  C05D  F088         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 12879  00004A  C05E  F089         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 12880  00004E  C05F  F08A         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 12881                           
 12882                           ;interrupt_manager.c: 71: if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 12883  000052  010E               	movlb	14	; () banked
 12884  000054  BD2C               	btfsc	44,6,b	;volatile
 12885                           
 12886                           ; BSR set to: 14
 12887  000056  AD36               	btfss	54,6,b	;volatile
 12888  000058  D00A               	goto	i2l106
 12889                           
 12890                           ; BSR set to: 14
 12891                           ;interrupt_manager.c: 72: {
 12892                           ;interrupt_manager.c: 73: EUSART2_TxDefaultInterruptHandler();
 12893  00005A  D801               	call	i2u854_48
 12894  00005C  D017               	goto	i2u857_49
 12895  00005E                     i2u854_48:
 12896  00005E  0005               	push	
 12897  000060  6EFA               	movwf	pclath,c
 12898  000062  5058               	movf	_EUSART2_TxDefaultInterruptHandler,w,c
 12899  000064  6EFD               	movwf	tosl,c
 12900  000066  5059               	movf	_EUSART2_TxDefaultInterruptHandler+1,w,c
 12901  000068  6EFE               	movwf	tosh,c
 12902  00006A  505A               	movf	_EUSART2_TxDefaultInterruptHandler+2,w,c
 12903  00006C  D00C               	goto	L10
 12904  00006E                     i2l106:
 12905                           
 12906                           ; BSR set to: 14
 12907                           ;interrupt_manager.c: 75: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 12908  00006E  BF2C               	btfsc	44,7,b	;volatile
 12909                           
 12910                           ; BSR set to: 14
 12911  000070  AF36               	btfss	54,7,b	;volatile
 12912  000072  D00C               	goto	i2u857_49
 12913                           
 12914                           ; BSR set to: 14
 12915                           ;interrupt_manager.c: 76: {
 12916                           ;interrupt_manager.c: 77: EUSART2_RxDefaultInterruptHandler();
 12917  000074  D801               	call	i2u857_48
 12918  000076  D00A               	goto	i2u857_49
 12919  000078                     i2u857_48:
 12920  000078  0005               	push	
 12921  00007A  6EFA               	movwf	pclath,c
 12922  00007C  5055               	movf	_EUSART2_RxDefaultInterruptHandler,w,c
 12923  00007E  6EFD               	movwf	tosl,c
 12924  000080  5056               	movf	_EUSART2_RxDefaultInterruptHandler+1,w,c
 12925  000082  6EFE               	movwf	tosh,c
 12926  000084  5057               	movf	_EUSART2_RxDefaultInterruptHandler+2,w,c
 12927  000086                     L10:
 12928  000086  6EFF               	movwf	tosu,c
 12929  000088  50FA               	movf	pclath,w,c
 12930  00008A  0012               	return		;indir
 12931  00008C                     i2u857_49:
 12932                           
 12933                           ;interrupt_manager.c: 79: else
 12934                           ;interrupt_manager.c: 80: {
 12935                           
 12936                           ;interrupt_manager.c: 78: }
 12937  00008C  C08A  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 12938  000090  C089  F05E         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 12939  000094  C088  F05D         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 12940  000098  C087  F05C         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 12941  00009C  C086  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 12942  0000A0  C085  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 12943  0000A4  C084  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 12944  0000A8  C083  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 12945  0000AC  C082  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 12946  0000B0  C081  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 12947  0000B4  C080  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 12948  0000B8  C07F  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 12949  0000BC  C07E  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 12950  0000C0  C07D  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 12951  0000C4  C07C  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 12952  0000C8  C07B  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 12953  0000CC  C07A  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 12954  0000D0  C079  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 12955  0000D4  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12956  0000D6  0011               	retfie		f
 12957  0000D8                     __end_of_INTERRUPT_InterruptManagerHigh:
 12958                           	opt stack 0
 12959                           tosu	equ	0xFFF
 12960                           tosh	equ	0xFFE
 12961                           tosl	equ	0xFFD
 12962                           pclatu	equ	0xFFB
 12963                           pclath	equ	0xFFA
 12964                           tblptru	equ	0xFF8
 12965                           tblptrh	equ	0xFF7
 12966                           tblptrl	equ	0xFF6
 12967                           tablat	equ	0xFF5
 12968                           prodh	equ	0xFF4
 12969                           prodl	equ	0xFF3
 12970                           intcon	equ	0xFF2
 12971                           postinc0	equ	0xFEE
 12972                           fsr0h	equ	0xFEA
 12973                           fsr0l	equ	0xFE9
 12974                           wreg	equ	0xFE8
 12975                           indf1	equ	0xFE7
 12976                           fsr1h	equ	0xFE2
 12977                           fsr1l	equ	0xFE1
 12978                           indf2	equ	0xFDF
 12979                           postinc2	equ	0xFDE
 12980                           postdec2	equ	0xFDD
 12981                           fsr2h	equ	0xFDA
 12982                           fsr2l	equ	0xFD9
 12983                           status	equ	0xFD8
 12984                           
 12985 ;; *************** function _EUSART2_Transmit_ISR *****************
 12986 ;; Defined at:
 12987 ;;		line 183 in file "mcc_generated_files/eusart2.c"
 12988 ;; Parameters:    Size  Location     Type
 12989 ;;		None
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;		None
 12992 ;; Return value:  Size  Location     Type
 12993 ;;                  1    wreg      void 
 12994 ;; Registers used:
 12995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12996 ;; Tracked objects:
 12997 ;;		On entry : 0/0
 12998 ;;		On exit  : 0/0
 12999 ;;		Unchanged: 0/0
 13000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13005 ;;Total ram usage:        0 bytes
 13006 ;; Hardware stack levels used:    1
 13007 ;; This function calls:
 13008 ;;		Nothing
 13009 ;; This function is called by:
 13010 ;;		_EUSART2_Initialize
 13011 ;;		_INTERRUPT_InterruptManagerHigh
 13012 ;; This function uses a non-reentrant model
 13013 ;;
 13014                           
 13015                           	psect	text42
 13016  014D7C                     __ptext42:
 13017                           	opt stack 0
 13018  014D7C                     _EUSART2_Transmit_ISR:
 13019                           	opt stack 24
 13020                           
 13021                           ;eusart2.c: 187: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 13022                           
 13023                           ;incstack = 0
 13024  014D7C  0E40               	movlw	64
 13025  014D7E  0100               	movlb	0	; () banked
 13026  014D80  61D4               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 13027  014D82  D014               	goto	i2l199
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;eusart2.c: 188: {
 13031                           ;eusart2.c: 189: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 13032  014D84  51D2               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 13033  014D86  0D01               	mullw	1
 13034  014D88  0E40               	movlw	low _eusart2TxBuffer
 13035  014D8A  24F3               	addwf	prodl,w,c
 13036  014D8C  6ED9               	movwf	fsr2l,c
 13037  014D8E  0E02               	movlw	high _eusart2TxBuffer
 13038  014D90  20F4               	addwfc	prodh,w,c
 13039  014D92  6EDA               	movwf	fsr2h,c
 13040  014D94  50DF               	movf	indf2,w,c
 13041  014D96  010E               	movlb	14	; () banked
 13042  014D98  6FF2               	movwf	242,b	;volatile
 13043                           
 13044                           ; BSR set to: 14
 13045  014D9A  0100               	movlb	0	; () banked
 13046  014D9C  2BD2               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;eusart2.c: 190: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 13050  014D9E  0E3F               	movlw	63
 13051  014DA0  65D2               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 13052  014DA2  D002               	goto	i2l200
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;eusart2.c: 191: {
 13056                           ;eusart2.c: 192: eusart2TxTail = 0;
 13057  014DA4  0E00               	movlw	0
 13058  014DA6  6FD2               	movwf	_eusart2TxTail& (0+255),b	;volatile
 13059  014DA8                     i2l200:
 13060                           
 13061                           ; BSR set to: 0
 13062                           ;eusart2.c: 193: }
 13063                           ;eusart2.c: 194: eusart2TxBufferRemaining++;
 13064                           
 13065                           ; BSR set to: 0
 13066  014DA8  2BD4               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 13067                           
 13068                           ;eusart2.c: 195: }
 13069  014DAA  0012               	return	
 13070  014DAC                     i2l199:
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;eusart2.c: 196: else
 13074                           ;eusart2.c: 197: {
 13075                           ;eusart2.c: 198: PIE3bits.TX2IE = 0;
 13076  014DAC  010E               	movlb	14	; () banked
 13077  014DAE  9D2C               	bcf	44,6,b	;volatile
 13078  014DB0  0012               	return	
 13079  014DB2                     __end_of_EUSART2_Transmit_ISR:
 13080                           	opt stack 0
 13081                           tosu	equ	0xFFF
 13082                           tosh	equ	0xFFE
 13083                           tosl	equ	0xFFD
 13084                           pclatu	equ	0xFFB
 13085                           pclath	equ	0xFFA
 13086                           tblptru	equ	0xFF8
 13087                           tblptrh	equ	0xFF7
 13088                           tblptrl	equ	0xFF6
 13089                           tablat	equ	0xFF5
 13090                           prodh	equ	0xFF4
 13091                           prodl	equ	0xFF3
 13092                           intcon	equ	0xFF2
 13093                           postinc0	equ	0xFEE
 13094                           fsr0h	equ	0xFEA
 13095                           fsr0l	equ	0xFE9
 13096                           wreg	equ	0xFE8
 13097                           indf1	equ	0xFE7
 13098                           fsr1h	equ	0xFE2
 13099                           fsr1l	equ	0xFE1
 13100                           indf2	equ	0xFDF
 13101                           postinc2	equ	0xFDE
 13102                           postdec2	equ	0xFDD
 13103                           fsr2h	equ	0xFDA
 13104                           fsr2l	equ	0xFD9
 13105                           status	equ	0xFD8
 13106                           
 13107 ;; *************** function _EUSART2_Receive_ISR *****************
 13108 ;; Defined at:
 13109 ;;		line 202 in file "mcc_generated_files/eusart2.c"
 13110 ;; Parameters:    Size  Location     Type
 13111 ;;		None
 13112 ;; Auto vars:     Size  Location     Type
 13113 ;;		None
 13114 ;; Return value:  Size  Location     Type
 13115 ;;                  1    wreg      void 
 13116 ;; Registers used:
 13117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13118 ;; Tracked objects:
 13119 ;;		On entry : 0/0
 13120 ;;		On exit  : 0/0
 13121 ;;		Unchanged: 0/0
 13122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13127 ;;Total ram usage:        0 bytes
 13128 ;; Hardware stack levels used:    1
 13129 ;; Hardware stack levels required when called:    3
 13130 ;; This function calls:
 13131 ;;		i2_printf
 13132 ;; This function is called by:
 13133 ;;		_EUSART2_Initialize
 13134 ;;		_INTERRUPT_InterruptManagerHigh
 13135 ;; This function uses a non-reentrant model
 13136 ;;
 13137                           
 13138                           	psect	text43
 13139  0145AA                     __ptext43:
 13140                           	opt stack 0
 13141  0145AA                     _EUSART2_Receive_ISR:
 13142                           	opt stack 21
 13143                           
 13144                           ;eusart2.c: 205: if(1 == RC2STAbits.OERR)
 13145                           
 13146                           ;incstack = 0
 13147  0145AA  010E               	movlb	14	; () banked
 13148  0145AC  A3F5               	btfss	245,1,b	;volatile
 13149  0145AE  D002               	goto	i2l205
 13150                           
 13151                           ; BSR set to: 14
 13152                           ;eusart2.c: 206: {
 13153                           ;eusart2.c: 209: RC2STAbits.CREN = 0;
 13154  0145B0  99F5               	bcf	245,4,b	;volatile
 13155                           
 13156                           ;eusart2.c: 210: RC2STAbits.CREN = 1;
 13157  0145B2  89F5               	bsf	245,4,b	;volatile
 13158  0145B4                     i2l205:
 13159                           
 13160                           ; BSR set to: 14
 13161                           ;eusart2.c: 211: }
 13162                           ;eusart2.c: 214: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 13163                           
 13164                           ; BSR set to: 14
 13165  0145B4  505B               	movf	_eusart2RxHead,w,c	;volatile
 13166  0145B6  0D01               	mullw	1
 13167  0145B8  0E00               	movlw	low _eusart2RxBuffer
 13168  0145BA  24F3               	addwf	prodl,w,c
 13169  0145BC  6ED9               	movwf	fsr2l,c
 13170  0145BE  0E02               	movlw	high _eusart2RxBuffer
 13171  0145C0  20F4               	addwfc	prodh,w,c
 13172  0145C2  6EDA               	movwf	fsr2h,c
 13173  0145C4  CEF1 FFDF          	movff	3825,indf2	;volatile
 13174                           
 13175                           ; BSR set to: 14
 13176  0145C8  2A5B               	incf	_eusart2RxHead,f,c	;volatile
 13177                           
 13178                           ; BSR set to: 14
 13179                           ;eusart2.c: 215: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 13180  0145CA  0E3F               	movlw	63
 13181  0145CC  645B               	cpfsgt	_eusart2RxHead,c	;volatile
 13182  0145CE  D002               	goto	i2l206
 13183                           
 13184                           ; BSR set to: 14
 13185                           ;eusart2.c: 216: {
 13186                           ;eusart2.c: 217: eusart2RxHead = 0;
 13187  0145D0  0E00               	movlw	0
 13188  0145D2  6E5B               	movwf	_eusart2RxHead,c	;volatile
 13189  0145D4                     i2l206:
 13190                           
 13191                           ; BSR set to: 14
 13192                           ;eusart2.c: 218: }
 13193                           ;eusart2.c: 219: eusart2RxCount++;
 13194                           
 13195                           ; BSR set to: 14
 13196  0145D4  0100               	movlb	0	; () banked
 13197  0145D6  2BD0               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;eusart2.c: 221: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 13201  0145D8  0E0A               	movlw	10
 13202  0145DA  010E               	movlb	14	; () banked
 13203  0145DC  19F1               	xorwf	241,w,b	;volatile
 13204  0145DE  B4D8               	btfsc	status,2,c
 13205  0145E0  D004               	goto	i2u844_40
 13206                           
 13207                           ; BSR set to: 14
 13208  0145E2  0E0D               	movlw	13
 13209  0145E4  19F1               	xorwf	241,w,b	;volatile
 13210  0145E6  A4D8               	btfss	status,2,c
 13211  0145E8  D007               	goto	i2l207
 13212  0145EA                     i2u844_40:
 13213                           
 13214                           ; BSR set to: 14
 13215                           ;eusart2.c: 223: eusart2RxStringReady = 1;
 13216                           
 13217                           ; BSR set to: 14
 13218  0145EA  0E01               	movlw	1
 13219  0145EC  0101               	movlb	1	; () banked
 13220  0145EE  6FD9               	movwf	_eusart2RxStringReady& (0+255),b	;volatile
 13221                           
 13222                           ;eusart2.c: 226: RC2REG = 0;
 13223  0145F0  0E00               	movlw	0
 13224  0145F2  010E               	movlb	14	; () banked
 13225  0145F4  6FF1               	movwf	241,b	;volatile
 13226                           
 13227                           ;eusart2.c: 228: }
 13228  0145F6  D003               	goto	i2l210
 13229  0145F8                     i2l207:
 13230                           
 13231                           ; BSR set to: 14
 13232                           ;eusart2.c: 230: else {
 13233                           ;eusart2.c: 232: eusart2RxStringReady = 0;
 13234                           
 13235                           ; BSR set to: 14
 13236  0145F8  0E00               	movlw	0
 13237  0145FA  0101               	movlb	1	; () banked
 13238  0145FC  6FD9               	movwf	_eusart2RxStringReady& (0+255),b	;volatile
 13239  0145FE                     i2l210:
 13240                           
 13241                           ;eusart2.c: 234: }
 13242                           ;eusart2.c: 237: if((RC2REG == (int) '\b')) {
 13243                           
 13244                           ; BSR set to: 1
 13245  0145FE  0E08               	movlw	8
 13246  014600  010E               	movlb	14	; () banked
 13247  014602  19F1               	xorwf	241,w,b	;volatile
 13248  014604  A4D8               	btfss	status,2,c
 13249  014606  0012               	return	
 13250                           
 13251                           ; BSR set to: 14
 13252                           ;eusart2.c: 239: eusart2RxBuffer[eusart2RxHead] = '\0';
 13253  014608  505B               	movf	_eusart2RxHead,w,c	;volatile
 13254  01460A  0D01               	mullw	1
 13255  01460C  0E00               	movlw	low _eusart2RxBuffer
 13256  01460E  24F3               	addwf	prodl,w,c
 13257  014610  6ED9               	movwf	fsr2l,c
 13258  014612  0E02               	movlw	high _eusart2RxBuffer
 13259  014614  20F4               	addwfc	prodh,w,c
 13260  014616  6EDA               	movwf	fsr2h,c
 13261  014618  0E00               	movlw	0
 13262  01461A  6EDF               	movwf	indf2,c
 13263                           
 13264                           ; BSR set to: 14
 13265                           ;eusart2.c: 240: eusart2RxHead--;
 13266  01461C  065B               	decf	_eusart2RxHead,f,c	;volatile
 13267                           
 13268                           ; BSR set to: 14
 13269                           ;eusart2.c: 243: printf("\033[K");
 13270  01461E  0EFA               	movlw	low STR_1
 13271  014620  6E51               	movwf	i2printf@f,c
 13272  014622  0EFF               	movlw	high STR_1
 13273  014624  6E52               	movwf	i2printf@f+1,c
 13274  014626  ECDA  F083         	call	i2_printf	;wreg free
 13275                           
 13276                           ;eusart2.c: 245: if(eusart2RxHead != eusart2RxTail) {
 13277  01462A  0100               	movlb	0	; () banked
 13278  01462C  51D1               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 13279  01462E  185B               	xorwf	_eusart2RxHead,w,c	;volatile
 13280  014630  B4D8               	btfsc	status,2,c
 13281  014632  D00B               	goto	i2l212
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;eusart2.c: 247: eusart2RxBuffer[eusart2RxHead] = '\0';
 13285  014634  505B               	movf	_eusart2RxHead,w,c	;volatile
 13286  014636  0D01               	mullw	1
 13287  014638  0E00               	movlw	low _eusart2RxBuffer
 13288  01463A  24F3               	addwf	prodl,w,c
 13289  01463C  6ED9               	movwf	fsr2l,c
 13290  01463E  0E02               	movlw	high _eusart2RxBuffer
 13291  014640  20F4               	addwfc	prodh,w,c
 13292  014642  6EDA               	movwf	fsr2h,c
 13293  014644  0E00               	movlw	0
 13294  014646  6EDF               	movwf	indf2,c
 13295                           
 13296                           ; BSR set to: 0
 13297                           ;eusart2.c: 248: eusart2RxHead--;
 13298  014648  065B               	decf	_eusart2RxHead,f,c	;volatile
 13299  01464A                     i2l212:
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;eusart2.c: 250: }
 13303                           ;eusart2.c: 252: RC2REG = 0;
 13304                           
 13305                           ; BSR set to: 0
 13306  01464A  0E00               	movlw	0
 13307  01464C  010E               	movlb	14	; () banked
 13308  01464E  6FF1               	movwf	241,b	;volatile
 13309  014650  0012               	return	
 13310  014652                     __end_of_EUSART2_Receive_ISR:
 13311                           	opt stack 0
 13312                           tosu	equ	0xFFF
 13313                           tosh	equ	0xFFE
 13314                           tosl	equ	0xFFD
 13315                           pclatu	equ	0xFFB
 13316                           pclath	equ	0xFFA
 13317                           tblptru	equ	0xFF8
 13318                           tblptrh	equ	0xFF7
 13319                           tblptrl	equ	0xFF6
 13320                           tablat	equ	0xFF5
 13321                           prodh	equ	0xFF4
 13322                           prodl	equ	0xFF3
 13323                           intcon	equ	0xFF2
 13324                           postinc0	equ	0xFEE
 13325                           fsr0h	equ	0xFEA
 13326                           fsr0l	equ	0xFE9
 13327                           wreg	equ	0xFE8
 13328                           indf1	equ	0xFE7
 13329                           fsr1h	equ	0xFE2
 13330                           fsr1l	equ	0xFE1
 13331                           indf2	equ	0xFDF
 13332                           postinc2	equ	0xFDE
 13333                           postdec2	equ	0xFDD
 13334                           fsr2h	equ	0xFDA
 13335                           fsr2l	equ	0xFD9
 13336                           status	equ	0xFD8
 13337                           
 13338 ;; *************** function i2_printf *****************
 13339 ;; Defined at:
 13340 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;  f               2   80[COMRAM] PTR const unsigned char 
 13343 ;;		 -> STR_33(3), STR_32(300), STR_31(3), STR_29(4), 
 13344 ;;		 -> STR_28(5), STR_26(3), STR_25(49), STR_24(3), 
 13345 ;;		 -> STR_23(3), STR_22(45), STR_21(3), STR_20(3), 
 13346 ;;		 -> STR_19(65), STR_18(31), STR_17(93), STR_16(44), 
 13347 ;;		 -> STR_15(3), STR_13(3), STR_12(18), STR_11(3), 
 13348 ;;		 -> STR_9(3), STR_8(14), STR_7(3), STR_5(3), 
 13349 ;;		 -> STR_4(174), STR_3(4), STR_2(5), STR_1(4), 
 13350 ;; Auto vars:     Size  Location     Type
 13351 ;;  printf          4   20[BANK0 ] PTR const unsigned char 
 13352 ;;  printf          4   16[BANK0 ] struct .
 13353 ;;  printf          4   10[BANK0 ] unsigned long 
 13354 ;;  printf          3    0        PTR const unsigned char 
 13355 ;;  printf          2   14[BANK0 ] int 
 13356 ;;  printf          2    8[BANK0 ] int 
 13357 ;;  printf          2    6[BANK0 ] unsigned short 
 13358 ;;  printf          2    4[BANK0 ] PTR void [1]
 13359 ;;		 -> ?i2_printf(2), ?_printf(2), 
 13360 ;;  printf          2    0        unsigned int 
 13361 ;;  printf          2    0        int 
 13362 ;;  printf          1   24[BANK0 ] char 
 13363 ;;  printf          1    0        unsigned char 
 13364 ;; Return value:  Size  Location     Type
 13365 ;;                  2   80[COMRAM] int 
 13366 ;; Registers used:
 13367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13368 ;; Tracked objects:
 13369 ;;		On entry : 0/0
 13370 ;;		On exit  : 0/0
 13371 ;;		Unchanged: 0/0
 13372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13374 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13375 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13376 ;;      Totals:         4      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13377 ;;Total ram usage:       29 bytes
 13378 ;; Hardware stack levels used:    1
 13379 ;; Hardware stack levels required when called:    2
 13380 ;; This function calls:
 13381 ;;		i2___awdiv
 13382 ;;		i2___fladd
 13383 ;;		i2___flge
 13384 ;;		i2___flmul
 13385 ;;		i2___flneg
 13386 ;;		i2___flsub
 13387 ;;		i2___fltol
 13388 ;;		i2___lldiv
 13389 ;;		i2___llmod
 13390 ;;		i2___wmul
 13391 ;;		i2___xxtofl
 13392 ;;		i2__div_to_l_
 13393 ;;		i2__tdiv_to_l_
 13394 ;;		i2_fround
 13395 ;;		i2_putch
 13396 ;;		i2_scale
 13397 ;; This function is called by:
 13398 ;;		_EUSART2_Receive_ISR
 13399 ;; This function uses a non-reentrant model
 13400 ;;
 13401                           
 13402                           	psect	text44
 13403  0107B4                     __ptext44:
 13404                           	opt stack 0
 13405  0107B4                     i2_printf:
 13406                           	opt stack 21
 13407                           
 13408                           ;doprnt.c: 466: va_list ap;
 13409                           ;doprnt.c: 499: signed char c;
 13410                           ;doprnt.c: 501: int width;
 13411                           ;doprnt.c: 504: int prec;
 13412                           ;doprnt.c: 508: unsigned short flag;
 13413                           ;doprnt.c: 515: char d;
 13414                           ;doprnt.c: 516: double fval;
 13415                           ;doprnt.c: 517: int exp;
 13416                           ;doprnt.c: 523: union {
 13417                           ;doprnt.c: 524: unsigned long vd;
 13418                           ;doprnt.c: 525: double integ;
 13419                           ;doprnt.c: 526: } tmpval;
 13420                           ;doprnt.c: 528: unsigned long val;
 13421                           ;doprnt.c: 529: unsigned len;
 13422                           ;doprnt.c: 530: const char * cp;
 13423                           ;doprnt.c: 533: *ap = __va_start();
 13424                           
 13425                           ; BSR set to: 14
 13426                           ;incstack = 0
 13427  0107B4  0E53               	movlw	low (?i2_printf+2)
 13428  0107B6  0100               	movlb	0	; () banked
 13429  0107B8  6F64               	movwf	i2printf@ap& (0+255),b
 13430  0107BA  0E00               	movlw	high (?i2_printf+2)
 13431  0107BC  6F65               	movwf	(i2printf@ap+1)& (0+255),b
 13432                           
 13433                           ;doprnt.c: 536: while(c = *f++) {
 13434  0107BE  D3B0               	goto	i2u837_40
 13435  0107C0                     
 13436                           ; BSR set to: 0
 13437                           ;doprnt.c: 538: if(c != '%')
 13438                           
 13439                           ; BSR set to: 0
 13440  0107C0  0E25               	movlw	37
 13441  0107C2  1978               	xorwf	i2printf@c& (0+255),w,b
 13442  0107C4  B4D8               	btfsc	status,2,c
 13443  0107C6  D004               	goto	i2l421
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;doprnt.c: 540: {
 13447                           ;doprnt.c: 541: (putch(c) );
 13448  0107C8  5178               	movf	i2printf@c& (0+255),w,b
 13449  0107CA  ECC9  F0A7         	call	i2_putch
 13450                           
 13451                           ;doprnt.c: 542: continue;
 13452  0107CE  D3A8               	goto	i2u837_40
 13453  0107D0                     i2l421:
 13454                           
 13455                           ;doprnt.c: 543: }
 13456                           ;doprnt.c: 548: flag = 0;
 13457  0107D0  0E00               	movlw	0
 13458  0107D2  0100               	movlb	0	; () banked
 13459  0107D4  6F67               	movwf	(i2printf@flag+1)& (0+255),b
 13460  0107D6  0E00               	movlw	0
 13461  0107D8  6F66               	movwf	i2printf@flag& (0+255),b
 13462                           
 13463                           ;doprnt.c: 635: switch(c = *f++) {
 13464  0107DA  D002               	goto	i2l422
 13465  0107DC                     
 13466                           ; BSR set to: 0
 13467                           ;doprnt.c: 663: flag |= 0x400;
 13468                           
 13469                           ; BSR set to: 0
 13470  0107DC  8567               	bsf	(i2printf@flag+1)& (0+255),2,b
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;doprnt.c: 698: case 'i':
 13474                           ;doprnt.c: 699: break;
 13475                           
 13476                           ; BSR set to: 0
 13477                           
 13478                           ;doprnt.c: 697: case 'd':
 13479                           
 13480                           ;doprnt.c: 664: break;
 13481  0107DE  D018               	goto	i2l426
 13482  0107E0                     i2l422:
 13483                           
 13484                           ; BSR set to: 0
 13485                           
 13486                           ; BSR set to: 0
 13487  0107E0  C051  FFF6         	movff	i2printf@f,tblptrl
 13488  0107E4  C052  FFF7         	movff	i2printf@f+1,tblptrh
 13489  0107E8  4A51               	infsnz	i2printf@f,f,c
 13490  0107EA  2A52               	incf	i2printf@f+1,f,c
 13491  0107EC                     	if	0	;tblptru may be non-zero
 13492  0107EC                     	endif
 13493  0107EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13494  0107EC  0E00               	movlw	low (__mediumconst shr (0+16))
 13495  0107EE  6EF8               	movwf	tblptru,c
 13496  0107F0                     	endif
 13497  0107F0  0008               	tblrd		*
 13498  0107F2  CFF5 F078          	movff	tablat,i2printf@c
 13499  0107F6  5178               	movf	i2printf@c& (0+255),w,b
 13500                           
 13501                           ; Switch size 1, requested type "space"
 13502                           ; Number of cases is 4, Range of values is 0 to 105
 13503                           ; switch strategies available:
 13504                           ; Name         Instructions Cycles
 13505                           ; simple_byte           13     7 (average)
 13506                           ;	Chosen strategy is simple_byte
 13507  0107F8  0A00               	xorlw	0	; case 0
 13508  0107FA  B4D8               	btfsc	status,2,c
 13509  0107FC  0012               	return	
 13510  0107FE  0A64               	xorlw	100	; case 100
 13511  010800  B4D8               	btfsc	status,2,c
 13512  010802  D006               	goto	i2l426
 13513  010804  0A02               	xorlw	2	; case 102
 13514  010806  B4D8               	btfsc	status,2,c
 13515  010808  D7E9               	goto	i2l425
 13516  01080A  0A0F               	xorlw	15	; case 105
 13517  01080C  A4D8               	btfss	status,2,c
 13518  01080E  D388               	goto	i2u837_40
 13519  010810                     i2l426:
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;doprnt.c: 825: if(flag & (0x700)) {
 13523                           
 13524                           ; BSR set to: 0
 13525  010810  0E07               	movlw	7
 13526  010812  1567               	andwf	(i2printf@flag+1)& (0+255),w,b
 13527  010814  B4D8               	btfsc	status,2,c
 13528  010816  D2E7               	goto	i2l430
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;doprnt.c: 829: prec = 6;
 13532  010818  0E00               	movlw	0
 13533  01081A  6F69               	movwf	(i2printf@prec+1)& (0+255),b
 13534  01081C  0E06               	movlw	6
 13535  01081E  6F68               	movwf	i2printf@prec& (0+255),b
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 13539  010820  C064  FFD9         	movff	i2printf@ap,fsr2l
 13540  010824  C065  FFDA         	movff	i2printf@ap+1,fsr2h
 13541  010828  CFDE F074          	movff	postinc2,i2printf@fval
 13542  01082C  CFDE F075          	movff	postinc2,i2printf@fval+1
 13543  010830  CFDE F076          	movff	postinc2,i2printf@fval+2
 13544  010834  CFDE F077          	movff	postinc2,i2printf@fval+3
 13545                           
 13546                           ; BSR set to: 0
 13547  010838  0E04               	movlw	4
 13548  01083A  2764               	addwf	i2printf@ap& (0+255),f,b
 13549  01083C  0E00               	movlw	0
 13550  01083E  2365               	addwfc	(i2printf@ap+1)& (0+255),f,b
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;doprnt.c: 831: if(fval < 0.0) {
 13554  010840  AF77               	btfss	(i2printf@fval+3)& (0+255),7,b
 13555  010842  D015               	goto	i2l431
 13556                           
 13557                           ; BSR set to: 0
 13558                           ;doprnt.c: 832: fval = -fval;
 13559  010844  C074  F001         	movff	i2printf@fval,i2___flneg@f1
 13560  010848  C075  F002         	movff	i2printf@fval+1,i2___flneg@f1+1
 13561  01084C  C076  F003         	movff	i2printf@fval+2,i2___flneg@f1+2
 13562  010850  C077  F004         	movff	i2printf@fval+3,i2___flneg@f1+3
 13563  010854  ECF1  F0A6         	call	i2___flneg	;wreg free
 13564  010858  C001  F074         	movff	?i2___flneg,i2printf@fval
 13565  01085C  C002  F075         	movff	?i2___flneg+1,i2printf@fval+1
 13566  010860  C003  F076         	movff	?i2___flneg+2,i2printf@fval+2
 13567  010864  C004  F077         	movff	?i2___flneg+3,i2printf@fval+3
 13568                           
 13569                           ;doprnt.c: 833: flag |= 0x03;
 13570  010868  0E03               	movlw	3
 13571  01086A  0100               	movlb	0	; () banked
 13572  01086C  1366               	iorwf	i2printf@flag& (0+255),f,b
 13573  01086E                     i2l431:
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;doprnt.c: 834: }
 13577                           ;doprnt.c: 835: exp = 0;
 13578                           
 13579                           ; BSR set to: 0
 13580  01086E  0E00               	movlw	0
 13581  010870  6F6F               	movwf	(i2printf@exp+1)& (0+255),b
 13582  010872  0E00               	movlw	0
 13583  010874  6F6E               	movwf	i2printf@exp& (0+255),b
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;doprnt.c: 836: if( fval!=0) {
 13587  010876  5174               	movf	i2printf@fval& (0+255),w,b
 13588  010878  1175               	iorwf	(i2printf@fval+1)& (0+255),w,b
 13589  01087A  1176               	iorwf	(i2printf@fval+2)& (0+255),w,b
 13590  01087C  1177               	iorwf	(i2printf@fval+3)& (0+255),w,b
 13591  01087E  B4D8               	btfsc	status,2,c
 13592  010880  D082               	goto	i2l436
 13593                           
 13594                           ; BSR set to: 0
 13595                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 13596  010882  3576               	rlcf	(i2printf@fval+2)& (0+255),w,b
 13597  010884  3577               	rlcf	(i2printf@fval+3)& (0+255),w,b
 13598  010886  0F82               	addlw	130
 13599  010888  6F6E               	movwf	i2printf@exp& (0+255),b
 13600  01088A  6B6F               	clrf	(i2printf@exp+1)& (0+255),b
 13601  01088C  0EFF               	movlw	255
 13602  01088E  236F               	addwfc	(i2printf@exp+1)& (0+255),f,b
 13603                           
 13604                           ; BSR set to: 0
 13605                           ;doprnt.c: 838: exp--;
 13606  010890  076E               	decf	i2printf@exp& (0+255),f,b
 13607  010892  A0D8               	btfss	status,0,c
 13608  010894  076F               	decf	(i2printf@exp+1)& (0+255),f,b
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;doprnt.c: 839: exp *= 3;
 13612  010896  C06E  F001         	movff	i2printf@exp,i2___wmul@multiplier
 13613  01089A  C06F  F002         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 13614  01089E  0E00               	movlw	0
 13615  0108A0  6E04               	movwf	i2___wmul@multiplicand+1,c
 13616  0108A2  0E03               	movlw	3
 13617  0108A4  6E03               	movwf	i2___wmul@multiplicand,c
 13618  0108A6  EC58  F0A7         	call	i2___wmul	;wreg free
 13619  0108AA  C001  F06E         	movff	?i2___wmul,i2printf@exp
 13620  0108AE  C002  F06F         	movff	?i2___wmul+1,i2printf@exp+1
 13621                           
 13622                           ;doprnt.c: 840: exp /= 10;
 13623  0108B2  C06E  F007         	movff	i2printf@exp,i2___awdiv@dividend
 13624  0108B6  C06F  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 13625  0108BA  0E00               	movlw	0
 13626  0108BC  6E0A               	movwf	i2___awdiv@divisor+1,c
 13627  0108BE  0E0A               	movlw	10
 13628  0108C0  6E09               	movwf	i2___awdiv@divisor,c
 13629  0108C2  ECF9  F0A3         	call	i2___awdiv	;wreg free
 13630  0108C6  C007  F06E         	movff	?i2___awdiv,i2printf@exp
 13631  0108CA  C008  F06F         	movff	?i2___awdiv+1,i2printf@exp+1
 13632                           
 13633                           ;doprnt.c: 841: if(exp < 0)
 13634  0108CE  0100               	movlb	0	; () banked
 13635  0108D0  AF6F               	btfss	(i2printf@exp+1)& (0+255),7,b
 13636  0108D2  D003               	goto	i2l433
 13637                           
 13638                           ; BSR set to: 0
 13639                           ;doprnt.c: 842: exp--;
 13640  0108D4  076E               	decf	i2printf@exp& (0+255),f,b
 13641  0108D6  A0D8               	btfss	status,0,c
 13642  0108D8  076F               	decf	(i2printf@exp+1)& (0+255),f,b
 13643  0108DA                     i2l433:
 13644                           
 13645                           ; BSR set to: 0
 13646                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 13647                           
 13648                           ; BSR set to: 0
 13649  0108DA  516E               	movf	i2printf@exp& (0+255),w,b
 13650  0108DC  0800               	sublw	0
 13651  0108DE  ECF7  F08C         	call	i2_scale
 13652  0108E2  C028  F070         	movff	?i2_scale,i2printf@tmpval
 13653  0108E6  C029  F071         	movff	?i2_scale+1,i2printf@tmpval+1
 13654  0108EA  C02A  F072         	movff	?i2_scale+2,i2printf@tmpval+2
 13655  0108EE  C02B  F073         	movff	?i2_scale+3,i2printf@tmpval+3
 13656                           
 13657                           ;doprnt.c: 847: tmpval.integ *= fval;
 13658  0108F2  C070  F00F         	movff	i2printf@tmpval,i2___flmul@b
 13659  0108F6  C071  F010         	movff	i2printf@tmpval+1,i2___flmul@b+1
 13660  0108FA  C072  F011         	movff	i2printf@tmpval+2,i2___flmul@b+2
 13661  0108FE  C073  F012         	movff	i2printf@tmpval+3,i2___flmul@b+3
 13662  010902  C074  F013         	movff	i2printf@fval,i2___flmul@a
 13663  010906  C075  F014         	movff	i2printf@fval+1,i2___flmul@a+1
 13664  01090A  C076  F015         	movff	i2printf@fval+2,i2___flmul@a+2
 13665  01090E  C077  F016         	movff	i2printf@fval+3,i2___flmul@a+3
 13666  010912  ECC5  F094         	call	i2___flmul	;wreg free
 13667  010916  C00F  F070         	movff	?i2___flmul,i2printf@tmpval
 13668  01091A  C010  F071         	movff	?i2___flmul+1,i2printf@tmpval+1
 13669  01091E  C011  F072         	movff	?i2___flmul+2,i2printf@tmpval+2
 13670  010922  C012  F073         	movff	?i2___flmul+3,i2printf@tmpval+3
 13671                           
 13672                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 13673  010926  C070  F001         	movff	i2printf@tmpval,i2___flge@ff1
 13674  01092A  C071  F002         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 13675  01092E  C072  F003         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 13676  010932  C073  F004         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 13677  010936  0E00               	movlw	0
 13678  010938  6E05               	movwf	i2___flge@ff2,c
 13679  01093A  0E00               	movlw	0
 13680  01093C  6E06               	movwf	i2___flge@ff2+1,c
 13681  01093E  0E80               	movlw	128
 13682  010940  6E07               	movwf	i2___flge@ff2+2,c
 13683  010942  0E3F               	movlw	63
 13684  010944  6E08               	movwf	i2___flge@ff2+3,c
 13685  010946  ECFC  F0A0         	call	i2___flge	;wreg free
 13686  01094A  B0D8               	btfsc	status,0,c
 13687  01094C  D005               	goto	i2l434
 13688                           
 13689                           ;doprnt.c: 849: exp--;
 13690  01094E  0100               	movlb	0	; () banked
 13691  010950  076E               	decf	i2printf@exp& (0+255),f,b
 13692  010952  A0D8               	btfss	status,0,c
 13693  010954  076F               	decf	(i2printf@exp+1)& (0+255),f,b
 13694  010956  D017               	goto	i2l436
 13695  010958                     i2l434:
 13696                           
 13697                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 13698                           
 13699                           ; BSR set to: 0
 13700  010958  C070  F001         	movff	i2printf@tmpval,i2___flge@ff1
 13701  01095C  C071  F002         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 13702  010960  C072  F003         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 13703  010964  C073  F004         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 13704  010968  0E00               	movlw	0
 13705  01096A  6E05               	movwf	i2___flge@ff2,c
 13706  01096C  0E00               	movlw	0
 13707  01096E  6E06               	movwf	i2___flge@ff2+1,c
 13708  010970  0E20               	movlw	32
 13709  010972  6E07               	movwf	i2___flge@ff2+2,c
 13710  010974  0E41               	movlw	65
 13711  010976  6E08               	movwf	i2___flge@ff2+3,c
 13712  010978  ECFC  F0A0         	call	i2___flge	;wreg free
 13713  01097C  A0D8               	btfss	status,0,c
 13714  01097E  D003               	goto	i2l436
 13715                           
 13716                           ;doprnt.c: 851: exp++;
 13717  010980  0100               	movlb	0	; () banked
 13718  010982  4B6E               	infsnz	i2printf@exp& (0+255),f,b
 13719  010984  2B6F               	incf	(i2printf@exp+1)& (0+255),f,b
 13720  010986                     i2l436:
 13721                           
 13722                           ;doprnt.c: 852: }
 13723                           ;doprnt.c: 1112: if(prec <= 12)
 13724                           
 13725                           ; BSR set to: 0
 13726                           
 13727                           ; BSR set to: 0
 13728                           
 13729                           ; BSR set to: 0
 13730  010986  0100               	movlb	0	; () banked
 13731  010988  BF69               	btfsc	(i2printf@prec+1)& (0+255),7,b
 13732  01098A  D006               	goto	i2u816_40
 13733  01098C  5169               	movf	(i2printf@prec+1)& (0+255),w,b
 13734  01098E  E121               	bnz	i2l6324
 13735  010990  0E0D               	movlw	13
 13736  010992  5D68               	subwf	i2printf@prec& (0+255),w,b
 13737  010994  B0D8               	btfsc	status,0,c
 13738  010996  D01D               	goto	i2l437
 13739  010998                     i2u816_40:
 13740                           
 13741                           ; BSR set to: 0
 13742                           ;doprnt.c: 1113: fval += fround(prec);
 13743  010998  C074  F035         	movff	i2printf@fval,i2___fladd@b
 13744  01099C  C075  F036         	movff	i2printf@fval+1,i2___fladd@b+1
 13745  0109A0  C076  F037         	movff	i2printf@fval+2,i2___fladd@b+2
 13746  0109A4  C077  F038         	movff	i2printf@fval+3,i2___fladd@b+3
 13747  0109A8  5168               	movf	i2printf@prec& (0+255),w,b
 13748  0109AA  ECC9  F09A         	call	i2_fround
 13749  0109AE  C028  F039         	movff	?i2_fround,i2___fladd@a
 13750  0109B2  C029  F03A         	movff	?i2_fround+1,i2___fladd@a+1
 13751  0109B6  C02A  F03B         	movff	?i2_fround+2,i2___fladd@a+2
 13752  0109BA  C02B  F03C         	movff	?i2_fround+3,i2___fladd@a+3
 13753  0109BE  EC6D  F096         	call	i2___fladd	;wreg free
 13754  0109C2  C035  F074         	movff	?i2___fladd,i2printf@fval
 13755  0109C6  C036  F075         	movff	?i2___fladd+1,i2printf@fval+1
 13756  0109CA  C037  F076         	movff	?i2___fladd+2,i2printf@fval+2
 13757  0109CE  C038  F077         	movff	?i2___fladd+3,i2printf@fval+3
 13758  0109D2                     i2l437:
 13759  0109D2                     i2l6324:
 13760                           
 13761                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 13762  0109D2  0100               	movlb	0	; () banked
 13763  0109D4  BF6F               	btfsc	(i2printf@exp+1)& (0+255),7,b
 13764  0109D6  D006               	goto	i2u817_40
 13765  0109D8  516F               	movf	(i2printf@exp+1)& (0+255),w,b
 13766  0109DA  E123               	bnz	i2l6332
 13767  0109DC  0E0A               	movlw	10
 13768  0109DE  5D6E               	subwf	i2printf@exp& (0+255),w,b
 13769  0109E0  B0D8               	btfsc	status,0,c
 13770  0109E2  D01F               	goto	i2u820_40
 13771  0109E4                     i2u817_40:
 13772                           
 13773                           ; BSR set to: 0
 13774  0109E4  5174               	movf	i2printf@fval& (0+255),w,b
 13775  0109E6  1175               	iorwf	(i2printf@fval+1)& (0+255),w,b
 13776  0109E8  1176               	iorwf	(i2printf@fval+2)& (0+255),w,b
 13777  0109EA  1177               	iorwf	(i2printf@fval+3)& (0+255),w,b
 13778  0109EC  B4D8               	btfsc	status,2,c
 13779  0109EE  D064               	goto	i2l438
 13780                           
 13781                           ; BSR set to: 0
 13782  0109F0  C074  F028         	movff	i2printf@fval,i2___fltol@f1
 13783  0109F4  C075  F029         	movff	i2printf@fval+1,i2___fltol@f1+1
 13784  0109F8  C076  F02A         	movff	i2printf@fval+2,i2___fltol@f1+2
 13785  0109FC  C077  F02B         	movff	i2printf@fval+3,i2___fltol@f1+3
 13786  010A00  ECFB  F0A1         	call	i2___fltol	;wreg free
 13787  010A04  5028               	movf	?i2___fltol,w,c
 13788  010A06  1029               	iorwf	?i2___fltol+1,w,c
 13789  010A08  102A               	iorwf	?i2___fltol+2,w,c
 13790  010A0A  102B               	iorwf	?i2___fltol+3,w,c
 13791  010A0C  A4D8               	btfss	status,2,c
 13792  010A0E  D054               	goto	i2l438
 13793  010A10  0100               	movlb	0	; () banked
 13794  010A12  BF6F               	btfsc	(i2printf@exp+1)& (0+255),7,b
 13795  010A14  D051               	goto	i2l438
 13796  010A16  516F               	movf	(i2printf@exp+1)& (0+255),w,b
 13797  010A18  E104               	bnz	i2l6332
 13798  010A1A  0E02               	movlw	2
 13799  010A1C  5D6E               	subwf	i2printf@exp& (0+255),w,b
 13800  010A1E  A0D8               	btfss	status,0,c
 13801  010A20  D04B               	goto	i2l438
 13802  010A22                     i2u820_40:
 13803  010A22                     i2l6332:
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 13807  010A22  C070  F001         	movff	i2printf@tmpval,i2___flge@ff1
 13808  010A26  C071  F002         	movff	i2printf@tmpval+1,i2___flge@ff1+1
 13809  010A2A  C072  F003         	movff	i2printf@tmpval+2,i2___flge@ff1+2
 13810  010A2E  C073  F004         	movff	i2printf@tmpval+3,i2___flge@ff1+3
 13811  010A32  0E5F               	movlw	95
 13812  010A34  6E05               	movwf	i2___flge@ff2,c
 13813  010A36  0E70               	movlw	112
 13814  010A38  6E06               	movwf	i2___flge@ff2+1,c
 13815  010A3A  0E89               	movlw	137
 13816  010A3C  6E07               	movwf	i2___flge@ff2+2,c
 13817  010A3E  0E40               	movlw	64
 13818  010A40  6E08               	movwf	i2___flge@ff2+3,c
 13819  010A42  ECFC  F0A0         	call	i2___flge	;wreg free
 13820  010A46  B0D8               	btfsc	status,0,c
 13821  010A48  D003               	goto	i2l441
 13822                           
 13823                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 13824  010A4A  0100               	movlb	0	; () banked
 13825  010A4C  0EF7               	movlw	247
 13826  010A4E  D002               	goto	L11
 13827  010A50                     i2l441:
 13828                           
 13829                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 13830                           
 13831                           ; BSR set to: 0
 13832  010A50  0100               	movlb	0	; () banked
 13833  010A52  0EF8               	movlw	248
 13834  010A54                     L11:
 13835  010A54  276E               	addwf	i2printf@exp& (0+255),f,b
 13836  010A56  0EFF               	movlw	255
 13837  010A58  236F               	addwfc	(i2printf@exp+1)& (0+255),f,b
 13838                           
 13839                           ; BSR set to: 0
 13840                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 13841                           
 13842                           ; BSR set to: 0
 13843  010A5A  516E               	movf	i2printf@exp& (0+255),w,b
 13844  010A5C  ECF7  F08C         	call	i2_scale
 13845  010A60  C028  F070         	movff	?i2_scale,i2printf@tmpval
 13846  010A64  C029  F071         	movff	?i2_scale+1,i2printf@tmpval+1
 13847  010A68  C02A  F072         	movff	?i2_scale+2,i2printf@tmpval+2
 13848  010A6C  C02B  F073         	movff	?i2_scale+3,i2printf@tmpval+3
 13849  010A70  C074  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 13850  010A74  C075  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 13851  010A78  C076  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 13852  010A7C  C077  F004         	movff	i2printf@fval+3,i2__div_to_l_@f1+3
 13853  010A80  C070  F005         	movff	i2printf@tmpval,i2__div_to_l_@f2
 13854  010A84  C071  F006         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 13855  010A88  C072  F007         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 13856  010A8C  C073  F008         	movff	i2printf@tmpval+3,i2__div_to_l_@f2+3
 13857  010A90  ECD7  F09F         	call	i2__div_to_l_	;wreg free
 13858  010A94  C001  F06A         	movff	?i2__div_to_l_,i2printf@val
 13859  010A98  C002  F06B         	movff	?i2__div_to_l_+1,i2printf@val+1
 13860  010A9C  C003  F06C         	movff	?i2__div_to_l_+2,i2printf@val+2
 13861  010AA0  C004  F06D         	movff	?i2__div_to_l_+3,i2printf@val+3
 13862                           
 13863                           ;doprnt.c: 1129: fval = 0.0;
 13864  010AA4  0E00               	movlw	0
 13865  010AA6  0100               	movlb	0	; () banked
 13866  010AA8  6F74               	movwf	i2printf@fval& (0+255),b
 13867  010AAA  0E00               	movlw	0
 13868  010AAC  6F75               	movwf	(i2printf@fval+1)& (0+255),b
 13869  010AAE  0E00               	movlw	0
 13870  010AB0  6F76               	movwf	(i2printf@fval+2)& (0+255),b
 13871  010AB2  0E00               	movlw	0
 13872  010AB4  6F77               	movwf	(i2printf@fval+3)& (0+255),b
 13873                           
 13874                           ;doprnt.c: 1130: } else {
 13875  010AB6  D03C               	goto	i2l447
 13876  010AB8                     i2l438:
 13877                           
 13878                           ;doprnt.c: 1131: val = (unsigned long)fval;
 13879                           
 13880                           ; BSR set to: 0
 13881  010AB8  C074  F028         	movff	i2printf@fval,i2___fltol@f1
 13882  010ABC  C075  F029         	movff	i2printf@fval+1,i2___fltol@f1+1
 13883  010AC0  C076  F02A         	movff	i2printf@fval+2,i2___fltol@f1+2
 13884  010AC4  C077  F02B         	movff	i2printf@fval+3,i2___fltol@f1+3
 13885  010AC8  ECFB  F0A1         	call	i2___fltol	;wreg free
 13886  010ACC  C028  F06A         	movff	?i2___fltol,i2printf@val
 13887  010AD0  C029  F06B         	movff	?i2___fltol+1,i2printf@val+1
 13888  010AD4  C02A  F06C         	movff	?i2___fltol+2,i2printf@val+2
 13889  010AD8  C02B  F06D         	movff	?i2___fltol+3,i2printf@val+3
 13890                           
 13891                           ;doprnt.c: 1132: fval -= (double)val;
 13892  010ADC  C074  F049         	movff	i2printf@fval,i2___flsub@b
 13893  010AE0  C075  F04A         	movff	i2printf@fval+1,i2___flsub@b+1
 13894  010AE4  C076  F04B         	movff	i2printf@fval+2,i2___flsub@b+2
 13895  010AE8  C077  F04C         	movff	i2printf@fval+3,i2___flsub@b+3
 13896  010AEC  C06A  F001         	movff	i2printf@val,i2___xxtofl@val
 13897  010AF0  C06B  F002         	movff	i2printf@val+1,i2___xxtofl@val+1
 13898  010AF4  C06C  F003         	movff	i2printf@val+2,i2___xxtofl@val+2
 13899  010AF8  C06D  F004         	movff	i2printf@val+3,i2___xxtofl@val+3
 13900  010AFC  0E00               	movlw	0
 13901  010AFE  ECCA  F09C         	call	i2___xxtofl
 13902  010B02  C001  F04D         	movff	?i2___xxtofl,i2___flsub@a
 13903  010B06  C002  F04E         	movff	?i2___xxtofl+1,i2___flsub@a+1
 13904  010B0A  C003  F04F         	movff	?i2___xxtofl+2,i2___flsub@a+2
 13905  010B0E  C004  F050         	movff	?i2___xxtofl+3,i2___flsub@a+3
 13906  010B12  ECFD  F0A5         	call	i2___flsub	;wreg free
 13907  010B16  C049  F074         	movff	?i2___flsub,i2printf@fval
 13908  010B1A  C04A  F075         	movff	?i2___flsub+1,i2printf@fval+1
 13909  010B1E  C04B  F076         	movff	?i2___flsub+2,i2printf@fval+2
 13910  010B22  C04C  F077         	movff	?i2___flsub+3,i2printf@fval+3
 13911                           
 13912                           ;doprnt.c: 1133: exp = 0;
 13913  010B26  0E00               	movlw	0
 13914  010B28  0100               	movlb	0	; () banked
 13915  010B2A  6F6F               	movwf	(i2printf@exp+1)& (0+255),b
 13916  010B2C  0E00               	movlw	0
 13917  010B2E  6F6E               	movwf	i2printf@exp& (0+255),b
 13918  010B30                     i2l447:
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;doprnt.c: 1134: }
 13922                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 13923                           
 13924                           ; BSR set to: 0
 13925  010B30  0E01               	movlw	1
 13926  010B32  6F78               	movwf	i2printf@c& (0+255),b
 13927  010B34                     i2l6352:
 13928                           
 13929                           ; BSR set to: 0
 13930  010B34  0E0A               	movlw	10
 13931  010B36  1978               	xorwf	i2printf@c& (0+255),w,b
 13932  010B38  B4D8               	btfsc	status,2,c
 13933  010B3A  D01B               	goto	i2u824_40
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;doprnt.c: 1137: if(val < dpowers[c])
 13937                           
 13938                           ; BSR set to: 0
 13939                           
 13940                           ; BSR set to: 0
 13941  010B3C  5178               	movf	i2printf@c& (0+255),w,b
 13942  010B3E  0D04               	mullw	4
 13943  010B40  0E63               	movlw	low _dpowers
 13944  010B42  24F3               	addwf	prodl,w,c
 13945  010B44  6EF6               	movwf	tblptrl,c
 13946  010B46  0EFC               	movlw	high _dpowers
 13947  010B48  20F4               	addwfc	prodh,w,c
 13948  010B4A  6EF7               	movwf	tblptrh,c
 13949  010B4C                     	if	1	;There are 3 active tblptr bytes
 13950  010B4C  6AF8               	clrf	tblptru,c
 13951  010B4E  0E00               	movlw	low (__mediumconst shr (0+16))
 13952  010B50  22F8               	addwfc	tblptru,f,c
 13953  010B52                     	endif
 13954  010B52  0009               	tblrd		*+
 13955  010B54  50F5               	movf	tablat,w,c
 13956  010B56  5D6A               	subwf	i2printf@val& (0+255),w,b
 13957  010B58  0009               	tblrd		*+
 13958  010B5A  50F5               	movf	tablat,w,c
 13959  010B5C  596B               	subwfb	(i2printf@val+1)& (0+255),w,b
 13960  010B5E  0009               	tblrd		*+
 13961  010B60  50F5               	movf	tablat,w,c
 13962  010B62  596C               	subwfb	(i2printf@val+2)& (0+255),w,b
 13963  010B64  0009               	tblrd		*+
 13964  010B66  50F5               	movf	tablat,w,c
 13965  010B68  596D               	subwfb	(i2printf@val+3)& (0+255),w,b
 13966  010B6A  A0D8               	btfss	status,0,c
 13967  010B6C  D002               	goto	i2u824_40
 13968                           
 13969                           ; BSR set to: 0
 13970                           
 13971                           ; BSR set to: 0
 13972                           
 13973                           ; BSR set to: 0
 13974                           ;doprnt.c: 1138: break;
 13975  010B6E  2B78               	incf	i2printf@c& (0+255),f,b
 13976  010B70  D7E1               	goto	i2l6352
 13977  010B72                     i2u824_40:
 13978                           
 13979                           ; BSR set to: 0
 13980                           ;doprnt.c: 1175: {
 13981                           ;doprnt.c: 1188: if(flag & 0x03)
 13982                           
 13983                           ; BSR set to: 0
 13984  010B72  0E03               	movlw	3
 13985  010B74  1566               	andwf	i2printf@flag& (0+255),w,b
 13986  010B76  6E53               	movwf	??i2_printf& (0+255),c
 13987  010B78  0E00               	movlw	0
 13988  010B7A  1567               	andwf	(i2printf@flag+1)& (0+255),w,b
 13989  010B7C  6E54               	movwf	(??i2_printf+1)& (0+255),c
 13990  010B7E  5053               	movf	??i2_printf,w,c
 13991  010B80  1054               	iorwf	??i2_printf+1,w,c
 13992  010B82  B4D8               	btfsc	status,2,c
 13993  010B84  D04D               	goto	i2l452
 13994                           
 13995                           ; BSR set to: 0
 13996                           ;doprnt.c: 1190: (putch('-') );
 13997  010B86  0E2D               	movlw	45
 13998  010B88  ECC9  F0A7         	call	i2_putch
 13999                           
 14000                           ;doprnt.c: 1195: }
 14001                           ;doprnt.c: 1196: while(c--) {
 14002  010B8C  D049               	goto	i2l452
 14003  010B8E                     
 14004                           ;doprnt.c: 1200: {
 14005                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 14006  010B8E  C06A  F001         	movff	i2printf@val,i2___lldiv@dividend
 14007  010B92  C06B  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 14008  010B96  C06C  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 14009  010B9A  C06D  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 14010  010B9E  0100               	movlb	0	; () banked
 14011  010BA0  5178               	movf	i2printf@c& (0+255),w,b
 14012  010BA2  0D04               	mullw	4
 14013  010BA4  0E63               	movlw	low _dpowers
 14014  010BA6  24F3               	addwf	prodl,w,c
 14015  010BA8  6EF6               	movwf	tblptrl,c
 14016  010BAA  0EFC               	movlw	high _dpowers
 14017  010BAC  20F4               	addwfc	prodh,w,c
 14018  010BAE  6EF7               	movwf	tblptrh,c
 14019  010BB0                     	if	1	;There are 3 active tblptr bytes
 14020  010BB0  6AF8               	clrf	tblptru,c
 14021  010BB2  0E00               	movlw	low (__mediumconst shr (0+16))
 14022  010BB4  22F8               	addwfc	tblptru,f,c
 14023  010BB6                     	endif
 14024  010BB6  0009               	tblrd		*+
 14025  010BB8  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14026  010BBC  0009               	tblrd		*+
 14027  010BBE  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14028  010BC2  0009               	tblrd		*+
 14029  010BC4  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14030  010BC8  000A               	tblrd		*-
 14031  010BCA  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14032  010BCE  EC3B  F0A4         	call	i2___lldiv	;wreg free
 14033  010BD2  C001  F070         	movff	?i2___lldiv,i2printf@tmpval
 14034  010BD6  C002  F071         	movff	?i2___lldiv+1,i2printf@tmpval+1
 14035  010BDA  C003  F072         	movff	?i2___lldiv+2,i2printf@tmpval+2
 14036  010BDE  C004  F073         	movff	?i2___lldiv+3,i2printf@tmpval+3
 14037                           
 14038                           ;doprnt.c: 1202: tmpval.vd %= 10;
 14039  010BE2  C070  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 14040  010BE6  C071  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 14041  010BEA  C072  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 14042  010BEE  C073  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 14043  010BF2  0E0A               	movlw	10
 14044  010BF4  6E12               	movwf	i2___llmod@divisor,c
 14045  010BF6  0E00               	movlw	0
 14046  010BF8  6E13               	movwf	i2___llmod@divisor+1,c
 14047  010BFA  0E00               	movlw	0
 14048  010BFC  6E14               	movwf	i2___llmod@divisor+2,c
 14049  010BFE  0E00               	movlw	0
 14050  010C00  6E15               	movwf	i2___llmod@divisor+3,c
 14051  010C02  EC21  F0A5         	call	i2___llmod	;wreg free
 14052  010C06  C00E  F070         	movff	?i2___llmod,i2printf@tmpval
 14053  010C0A  C00F  F071         	movff	?i2___llmod+1,i2printf@tmpval+1
 14054  010C0E  C010  F072         	movff	?i2___llmod+2,i2printf@tmpval+2
 14055  010C12  C011  F073         	movff	?i2___llmod+3,i2printf@tmpval+3
 14056                           
 14057                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 14058  010C16  0100               	movlb	0	; () banked
 14059  010C18  5170               	movf	i2printf@tmpval& (0+255),w,b
 14060  010C1A  0F30               	addlw	48
 14061  010C1C  ECC9  F0A7         	call	i2_putch
 14062  010C20                     i2l452:
 14063  010C20  0100               	movlb	0	; () banked
 14064  010C22  0778               	decf	i2printf@c& (0+255),f,b
 14065  010C24  2978               	incf	i2printf@c& (0+255),w,b
 14066  010C26  B4D8               	btfsc	status,2,c
 14067  010C28  D008               	goto	i2l455
 14068  010C2A  D7B1               	goto	i2l453
 14069  010C2C                     i2l6376:
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;doprnt.c: 1208: (putch('0') );
 14073  010C2C  0E30               	movlw	48
 14074  010C2E  ECC9  F0A7         	call	i2_putch
 14075                           
 14076                           ;doprnt.c: 1209: exp--;
 14077  010C32  0100               	movlb	0	; () banked
 14078  010C34  076E               	decf	i2printf@exp& (0+255),f,b
 14079  010C36  A0D8               	btfss	status,0,c
 14080  010C38  076F               	decf	(i2printf@exp+1)& (0+255),f,b
 14081  010C3A                     i2l455:
 14082                           
 14083                           ; BSR set to: 0
 14084                           
 14085                           ; BSR set to: 0
 14086  010C3A  BF6F               	btfsc	(i2printf@exp+1)& (0+255),7,b
 14087  010C3C  D005               	goto	i2u827_40
 14088  010C3E  516F               	movf	(i2printf@exp+1)& (0+255),w,b
 14089  010C40  E1F5               	bnz	i2l6376
 14090  010C42  056E               	decf	i2printf@exp& (0+255),w,b
 14091  010C44  B0D8               	btfsc	status,0,c
 14092  010C46  D7F2               	goto	i2l456
 14093  010C48                     i2u827_40:
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;doprnt.c: 1210: }
 14097                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 14098                           
 14099                           ; BSR set to: 0
 14100  010C48  BF69               	btfsc	(i2printf@prec+1)& (0+255),7,b
 14101  010C4A  D009               	goto	i2l458
 14102  010C4C  5169               	movf	(i2printf@prec+1)& (0+255),w,b
 14103  010C4E  E104               	bnz	i2u828_40
 14104  010C50  0E09               	movlw	9
 14105  010C52  5D68               	subwf	i2printf@prec& (0+255),w,b
 14106  010C54  A0D8               	btfss	status,0,c
 14107  010C56  D003               	goto	i2l458
 14108  010C58                     i2u828_40:
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 14112  010C58  0E08               	movlw	8
 14113  010C5A  6F78               	movwf	i2printf@c& (0+255),b
 14114  010C5C  D002               	goto	i2l459
 14115  010C5E                     i2l458:
 14116                           
 14117                           ; BSR set to: 0
 14118                           ;doprnt.c: 1213: else
 14119                           ;doprnt.c: 1214: c = prec;
 14120  010C5E  C068  F078         	movff	i2printf@prec,i2printf@c
 14121  010C62                     i2l459:
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;doprnt.c: 1215: prec -= c;
 14125                           
 14126                           ; BSR set to: 0
 14127  010C62  5178               	movf	i2printf@c& (0+255),w,b
 14128  010C64  5F68               	subwf	i2printf@prec& (0+255),f,b
 14129  010C66  0E00               	movlw	0
 14130  010C68  BF78               	btfsc	i2printf@c& (0+255),7,b
 14131  010C6A  0EFF               	movlw	255
 14132  010C6C  5B69               	subwfb	(i2printf@prec+1)& (0+255),f,b
 14133                           
 14134                           ; BSR set to: 0
 14135                           ;doprnt.c: 1219: if(c)
 14136  010C6E  5178               	movf	i2printf@c& (0+255),w,b
 14137  010C70  B4D8               	btfsc	status,2,c
 14138  010C72  D003               	goto	i2l460
 14139                           
 14140                           ; BSR set to: 0
 14141                           ;doprnt.c: 1221: (putch('.') );
 14142  010C74  0E2E               	movlw	46
 14143  010C76  ECC9  F0A7         	call	i2_putch
 14144  010C7A                     i2l460:
 14145                           
 14146                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14147  010C7A  0100               	movlb	0	; () banked
 14148  010C7C  5178               	movf	i2printf@c& (0+255),w,b
 14149  010C7E  ECF7  F08C         	call	i2_scale
 14150  010C82  C028  F060         	movff	?i2_scale,i2_printf$1541
 14151  010C86  C029  F061         	movff	?i2_scale+1,i2_printf$1541+1
 14152  010C8A  C02A  F062         	movff	?i2_scale+2,i2_printf$1541+2
 14153  010C8E  C02B  F063         	movff	?i2_scale+3,i2_printf$1541+3
 14154                           
 14155                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14156  010C92  C074  F013         	movff	i2printf@fval,i2___flmul@a
 14157  010C96  C075  F014         	movff	i2printf@fval+1,i2___flmul@a+1
 14158  010C9A  C076  F015         	movff	i2printf@fval+2,i2___flmul@a+2
 14159  010C9E  C077  F016         	movff	i2printf@fval+3,i2___flmul@a+3
 14160  010CA2  C060  F00F         	movff	i2_printf$1541,i2___flmul@b
 14161  010CA6  C061  F010         	movff	i2_printf$1541+1,i2___flmul@b+1
 14162  010CAA  C062  F011         	movff	i2_printf$1541+2,i2___flmul@b+2
 14163  010CAE  C063  F012         	movff	i2_printf$1541+3,i2___flmul@b+3
 14164  010CB2  ECC5  F094         	call	i2___flmul	;wreg free
 14165  010CB6  C00F  F028         	movff	?i2___flmul,i2___fltol@f1
 14166  010CBA  C010  F029         	movff	?i2___flmul+1,i2___fltol@f1+1
 14167  010CBE  C011  F02A         	movff	?i2___flmul+2,i2___fltol@f1+2
 14168  010CC2  C012  F02B         	movff	?i2___flmul+3,i2___fltol@f1+3
 14169  010CC6  ECFB  F0A1         	call	i2___fltol	;wreg free
 14170  010CCA  C028  F06A         	movff	?i2___fltol,i2printf@val
 14171  010CCE  C029  F06B         	movff	?i2___fltol+1,i2printf@val+1
 14172  010CD2  C02A  F06C         	movff	?i2___fltol+2,i2printf@val+2
 14173  010CD6  C02B  F06D         	movff	?i2___fltol+3,i2printf@val+3
 14174                           
 14175                           ;doprnt.c: 1228: while(c--) {
 14176  010CDA  D073               	goto	i2l461
 14177  010CDC                     
 14178                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 14179  010CDC  C06A  F001         	movff	i2printf@val,i2___lldiv@dividend
 14180  010CE0  C06B  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 14181  010CE4  C06C  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 14182  010CE8  C06D  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 14183  010CEC  0100               	movlb	0	; () banked
 14184  010CEE  5178               	movf	i2printf@c& (0+255),w,b
 14185  010CF0  0D04               	mullw	4
 14186  010CF2  0E63               	movlw	low _dpowers
 14187  010CF4  24F3               	addwf	prodl,w,c
 14188  010CF6  6EF6               	movwf	tblptrl,c
 14189  010CF8  0EFC               	movlw	high _dpowers
 14190  010CFA  20F4               	addwfc	prodh,w,c
 14191  010CFC  6EF7               	movwf	tblptrh,c
 14192  010CFE                     	if	1	;There are 3 active tblptr bytes
 14193  010CFE  6AF8               	clrf	tblptru,c
 14194  010D00  0E00               	movlw	low (__mediumconst shr (0+16))
 14195  010D02  22F8               	addwfc	tblptru,f,c
 14196  010D04                     	endif
 14197  010D04  0009               	tblrd		*+
 14198  010D06  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14199  010D0A  0009               	tblrd		*+
 14200  010D0C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14201  010D10  0009               	tblrd		*+
 14202  010D12  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14203  010D16  000A               	tblrd		*-
 14204  010D18  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14205  010D1C  EC3B  F0A4         	call	i2___lldiv	;wreg free
 14206  010D20  C001  F070         	movff	?i2___lldiv,i2printf@tmpval
 14207  010D24  C002  F071         	movff	?i2___lldiv+1,i2printf@tmpval+1
 14208  010D28  C003  F072         	movff	?i2___lldiv+2,i2printf@tmpval+2
 14209  010D2C  C004  F073         	movff	?i2___lldiv+3,i2printf@tmpval+3
 14210                           
 14211                           ;doprnt.c: 1230: tmpval.vd %= 10;
 14212  010D30  C070  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 14213  010D34  C071  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 14214  010D38  C072  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 14215  010D3C  C073  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 14216  010D40  0E0A               	movlw	10
 14217  010D42  6E12               	movwf	i2___llmod@divisor,c
 14218  010D44  0E00               	movlw	0
 14219  010D46  6E13               	movwf	i2___llmod@divisor+1,c
 14220  010D48  0E00               	movlw	0
 14221  010D4A  6E14               	movwf	i2___llmod@divisor+2,c
 14222  010D4C  0E00               	movlw	0
 14223  010D4E  6E15               	movwf	i2___llmod@divisor+3,c
 14224  010D50  EC21  F0A5         	call	i2___llmod	;wreg free
 14225  010D54  C00E  F070         	movff	?i2___llmod,i2printf@tmpval
 14226  010D58  C00F  F071         	movff	?i2___llmod+1,i2printf@tmpval+1
 14227  010D5C  C010  F072         	movff	?i2___llmod+2,i2printf@tmpval+2
 14228  010D60  C011  F073         	movff	?i2___llmod+3,i2printf@tmpval+3
 14229                           
 14230                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 14231  010D64  0100               	movlb	0	; () banked
 14232  010D66  5170               	movf	i2printf@tmpval& (0+255),w,b
 14233  010D68  0F30               	addlw	48
 14234  010D6A  ECC9  F0A7         	call	i2_putch
 14235                           
 14236                           ;doprnt.c: 1232: val %= dpowers[c];
 14237  010D6E  C06A  F00E         	movff	i2printf@val,i2___llmod@dividend
 14238  010D72  C06B  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 14239  010D76  C06C  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 14240  010D7A  C06D  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 14241  010D7E  0100               	movlb	0	; () banked
 14242  010D80  5178               	movf	i2printf@c& (0+255),w,b
 14243  010D82  0D04               	mullw	4
 14244  010D84  0E63               	movlw	low _dpowers
 14245  010D86  24F3               	addwf	prodl,w,c
 14246  010D88  6EF6               	movwf	tblptrl,c
 14247  010D8A  0EFC               	movlw	high _dpowers
 14248  010D8C  20F4               	addwfc	prodh,w,c
 14249  010D8E  6EF7               	movwf	tblptrh,c
 14250  010D90                     	if	1	;There are 3 active tblptr bytes
 14251  010D90  6AF8               	clrf	tblptru,c
 14252  010D92  0E00               	movlw	low (__mediumconst shr (0+16))
 14253  010D94  22F8               	addwfc	tblptru,f,c
 14254  010D96                     	endif
 14255  010D96  0009               	tblrd		*+
 14256  010D98  CFF5 F012          	movff	tablat,i2___llmod@divisor
 14257  010D9C  0009               	tblrd		*+
 14258  010D9E  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 14259  010DA2  0009               	tblrd		*+
 14260  010DA4  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 14261  010DA8  000A               	tblrd		*-
 14262  010DAA  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 14263  010DAE  EC21  F0A5         	call	i2___llmod	;wreg free
 14264  010DB2  C00E  F06A         	movff	?i2___llmod,i2printf@val
 14265  010DB6  C00F  F06B         	movff	?i2___llmod+1,i2printf@val+1
 14266  010DBA  C010  F06C         	movff	?i2___llmod+2,i2printf@val+2
 14267  010DBE  C011  F06D         	movff	?i2___llmod+3,i2printf@val+3
 14268  010DC2                     i2l461:
 14269  010DC2  0100               	movlb	0	; () banked
 14270  010DC4  0778               	decf	i2printf@c& (0+255),f,b
 14271  010DC6  2978               	incf	i2printf@c& (0+255),w,b
 14272  010DC8  B4D8               	btfsc	status,2,c
 14273  010DCA  D008               	goto	i2l464
 14274  010DCC  D787               	goto	i2l462
 14275  010DCE                     
 14276                           ; BSR set to: 0
 14277                           ;doprnt.c: 1236: (putch('0') );
 14278                           
 14279                           ; BSR set to: 0
 14280  010DCE  0E30               	movlw	48
 14281  010DD0  ECC9  F0A7         	call	i2_putch
 14282                           
 14283                           ;doprnt.c: 1237: prec--;
 14284  010DD4  0100               	movlb	0	; () banked
 14285  010DD6  0768               	decf	i2printf@prec& (0+255),f,b
 14286  010DD8  A0D8               	btfss	status,0,c
 14287  010DDA  0769               	decf	(i2printf@prec+1)& (0+255),f,b
 14288  010DDC                     i2l464:
 14289                           
 14290                           ; BSR set to: 0
 14291                           
 14292                           ; BSR set to: 0
 14293  010DDC  5168               	movf	i2printf@prec& (0+255),w,b
 14294  010DDE  1169               	iorwf	(i2printf@prec+1)& (0+255),w,b
 14295  010DE0  B4D8               	btfsc	status,2,c
 14296  010DE2  D09E               	goto	i2u837_40
 14297  010DE4  D7F4               	goto	i2l465
 14298  010DE6                     i2l430:
 14299                           
 14300                           ; BSR set to: 0
 14301                           ;doprnt.c: 1246: }
 14302                           ;doprnt.c: 1253: {
 14303                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14304                           
 14305                           ; BSR set to: 0
 14306  010DE6  C064  FFD9         	movff	i2printf@ap,fsr2l
 14307  010DEA  C065  FFDA         	movff	i2printf@ap+1,fsr2h
 14308  010DEE  CFDE F06A          	movff	postinc2,i2printf@val
 14309  010DF2  CFDD F06B          	movff	postdec2,i2printf@val+1
 14310  010DF6  0E00               	movlw	0
 14311  010DF8  BF6B               	btfsc	(i2printf@val+1)& (0+255),7,b
 14312  010DFA  0EFF               	movlw	-1
 14313  010DFC  6F6C               	movwf	(i2printf@val+2)& (0+255),b
 14314  010DFE  6F6D               	movwf	(i2printf@val+3)& (0+255),b
 14315                           
 14316                           ; BSR set to: 0
 14317  010E00  0E02               	movlw	2
 14318  010E02  2764               	addwf	i2printf@ap& (0+255),f,b
 14319  010E04  0E00               	movlw	0
 14320  010E06  2365               	addwfc	(i2printf@ap+1)& (0+255),f,b
 14321                           
 14322                           ; BSR set to: 0
 14323                           ;doprnt.c: 1261: if((long)val < 0) {
 14324  010E08  AF6D               	btfss	(i2printf@val+3)& (0+255),7,b
 14325  010E0A  D00A               	goto	i2l467
 14326                           
 14327                           ; BSR set to: 0
 14328                           ;doprnt.c: 1262: flag |= 0x03;
 14329  010E0C  0E03               	movlw	3
 14330  010E0E  1366               	iorwf	i2printf@flag& (0+255),f,b
 14331                           
 14332                           ; BSR set to: 0
 14333                           ;doprnt.c: 1263: val = -val;
 14334  010E10  1F6D               	comf	(i2printf@val+3)& (0+255),f,b
 14335  010E12  1F6C               	comf	(i2printf@val+2)& (0+255),f,b
 14336  010E14  1F6B               	comf	(i2printf@val+1)& (0+255),f,b
 14337  010E16  6D6A               	negf	i2printf@val& (0+255),b
 14338  010E18  0E00               	movlw	0
 14339  010E1A  236B               	addwfc	(i2printf@val+1)& (0+255),f,b
 14340  010E1C  236C               	addwfc	(i2printf@val+2)& (0+255),f,b
 14341  010E1E  236D               	addwfc	(i2printf@val+3)& (0+255),f,b
 14342  010E20                     i2l467:
 14343                           
 14344                           ; BSR set to: 0
 14345                           ;doprnt.c: 1264: }
 14346                           ;doprnt.c: 1266: }
 14347                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14348                           
 14349                           ; BSR set to: 0
 14350  010E20  0E01               	movlw	1
 14351  010E22  6F78               	movwf	i2printf@c& (0+255),b
 14352  010E24                     i2l6424:
 14353                           
 14354                           ; BSR set to: 0
 14355  010E24  0E0A               	movlw	10
 14356  010E26  1978               	xorwf	i2printf@c& (0+255),w,b
 14357  010E28  B4D8               	btfsc	status,2,c
 14358  010E2A  D01B               	goto	i2u835_40
 14359                           
 14360                           ; BSR set to: 0
 14361                           ;doprnt.c: 1306: if(val < dpowers[c])
 14362                           
 14363                           ; BSR set to: 0
 14364                           
 14365                           ; BSR set to: 0
 14366  010E2C  5178               	movf	i2printf@c& (0+255),w,b
 14367  010E2E  0D04               	mullw	4
 14368  010E30  0E63               	movlw	low _dpowers
 14369  010E32  24F3               	addwf	prodl,w,c
 14370  010E34  6EF6               	movwf	tblptrl,c
 14371  010E36  0EFC               	movlw	high _dpowers
 14372  010E38  20F4               	addwfc	prodh,w,c
 14373  010E3A  6EF7               	movwf	tblptrh,c
 14374  010E3C                     	if	1	;There are 3 active tblptr bytes
 14375  010E3C  6AF8               	clrf	tblptru,c
 14376  010E3E  0E00               	movlw	low (__mediumconst shr (0+16))
 14377  010E40  22F8               	addwfc	tblptru,f,c
 14378  010E42                     	endif
 14379  010E42  0009               	tblrd		*+
 14380  010E44  50F5               	movf	tablat,w,c
 14381  010E46  5D6A               	subwf	i2printf@val& (0+255),w,b
 14382  010E48  0009               	tblrd		*+
 14383  010E4A  50F5               	movf	tablat,w,c
 14384  010E4C  596B               	subwfb	(i2printf@val+1)& (0+255),w,b
 14385  010E4E  0009               	tblrd		*+
 14386  010E50  50F5               	movf	tablat,w,c
 14387  010E52  596C               	subwfb	(i2printf@val+2)& (0+255),w,b
 14388  010E54  0009               	tblrd		*+
 14389  010E56  50F5               	movf	tablat,w,c
 14390  010E58  596D               	subwfb	(i2printf@val+3)& (0+255),w,b
 14391  010E5A  A0D8               	btfss	status,0,c
 14392  010E5C  D002               	goto	i2u835_40
 14393                           
 14394                           ; BSR set to: 0
 14395                           
 14396                           ; BSR set to: 0
 14397                           
 14398                           ; BSR set to: 0
 14399                           ;doprnt.c: 1307: break;
 14400  010E5E  2B78               	incf	i2printf@c& (0+255),f,b
 14401  010E60  D7E1               	goto	i2l6424
 14402  010E62                     i2u835_40:
 14403                           
 14404                           ; BSR set to: 0
 14405                           ;doprnt.c: 1422: {
 14406                           ;doprnt.c: 1438: if(flag & 0x03)
 14407                           
 14408                           ; BSR set to: 0
 14409  010E62  0E03               	movlw	3
 14410  010E64  1566               	andwf	i2printf@flag& (0+255),w,b
 14411  010E66  6E53               	movwf	??i2_printf& (0+255),c
 14412  010E68  0E00               	movlw	0
 14413  010E6A  1567               	andwf	(i2printf@flag+1)& (0+255),w,b
 14414  010E6C  6E54               	movwf	(??i2_printf+1)& (0+255),c
 14415  010E6E  5053               	movf	??i2_printf,w,c
 14416  010E70  1054               	iorwf	??i2_printf+1,w,c
 14417  010E72  B4D8               	btfsc	status,2,c
 14418  010E74  D003               	goto	i2l471
 14419                           
 14420                           ; BSR set to: 0
 14421                           ;doprnt.c: 1439: (putch('-') );
 14422  010E76  0E2D               	movlw	45
 14423  010E78  ECC9  F0A7         	call	i2_putch
 14424  010E7C                     i2l471:
 14425                           
 14426                           ;doprnt.c: 1469: }
 14427                           ;doprnt.c: 1472: prec = c;
 14428  010E7C  0100               	movlb	0	; () banked
 14429  010E7E  5178               	movf	i2printf@c& (0+255),w,b
 14430  010E80  6F68               	movwf	i2printf@prec& (0+255),b
 14431  010E82  6B69               	clrf	(i2printf@prec+1)& (0+255),b
 14432  010E84  BF68               	btfsc	i2printf@prec& (0+255),7,b
 14433  010E86  0769               	decf	(i2printf@prec+1)& (0+255),f,b
 14434                           
 14435                           ;doprnt.c: 1474: while(prec--) {
 14436  010E88  D042               	goto	i2l472
 14437  010E8A                     i2l6442:
 14438                           
 14439                           ; BSR set to: 0
 14440                           ;doprnt.c: 1478: {
 14441                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14442  010E8A  C068  F053         	movff	i2printf@prec,??i2_printf
 14443  010E8E  C069  F054         	movff	i2printf@prec+1,??i2_printf+1
 14444  010E92  90D8               	bcf	status,0,c
 14445  010E94  3653               	rlcf	??i2_printf,f,c
 14446  010E96  3654               	rlcf	??i2_printf+1,f,c
 14447  010E98  90D8               	bcf	status,0,c
 14448  010E9A  3653               	rlcf	??i2_printf,f,c
 14449  010E9C  3654               	rlcf	??i2_printf+1,f,c
 14450  010E9E  0E63               	movlw	low _dpowers
 14451  010EA0  2453               	addwf	??i2_printf,w,c
 14452  010EA2  6EF6               	movwf	tblptrl,c
 14453  010EA4  0EFC               	movlw	high _dpowers
 14454  010EA6  2054               	addwfc	??i2_printf+1,w,c
 14455  010EA8  6EF7               	movwf	tblptrh,c
 14456  010EAA                     	if	1	;There are 3 active tblptr bytes
 14457  010EAA  6AF8               	clrf	tblptru,c
 14458  010EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 14459  010EAE  22F8               	addwfc	tblptru,f,c
 14460  010EB0                     	endif
 14461  010EB0  0009               	tblrd		*+
 14462  010EB2  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14463  010EB6  0009               	tblrd		*+
 14464  010EB8  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14465  010EBC  0009               	tblrd		*+
 14466  010EBE  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14467  010EC2  000A               	tblrd		*-
 14468  010EC4  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14469  010EC8  C06A  F001         	movff	i2printf@val,i2___lldiv@dividend
 14470  010ECC  C06B  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 14471  010ED0  C06C  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 14472  010ED4  C06D  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 14473  010ED8  EC3B  F0A4         	call	i2___lldiv	;wreg free
 14474  010EDC  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 14475  010EE0  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 14476  010EE4  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 14477  010EE8  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 14478  010EEC  0E0A               	movlw	10
 14479  010EEE  6E12               	movwf	i2___llmod@divisor,c
 14480  010EF0  0E00               	movlw	0
 14481  010EF2  6E13               	movwf	i2___llmod@divisor+1,c
 14482  010EF4  0E00               	movlw	0
 14483  010EF6  6E14               	movwf	i2___llmod@divisor+2,c
 14484  010EF8  0E00               	movlw	0
 14485  010EFA  6E15               	movwf	i2___llmod@divisor+3,c
 14486  010EFC  EC21  F0A5         	call	i2___llmod	;wreg free
 14487  010F00  500E               	movf	?i2___llmod,w,c
 14488  010F02  0F30               	addlw	48
 14489  010F04  0100               	movlb	0	; () banked
 14490  010F06  6F78               	movwf	i2printf@c& (0+255),b
 14491                           
 14492                           ; BSR set to: 0
 14493                           ;doprnt.c: 1523: }
 14494                           ;doprnt.c: 1524: (putch(c) );
 14495  010F08  5178               	movf	i2printf@c& (0+255),w,b
 14496  010F0A  ECC9  F0A7         	call	i2_putch
 14497  010F0E                     i2l472:
 14498  010F0E  0100               	movlb	0	; () banked
 14499  010F10  0768               	decf	i2printf@prec& (0+255),f,b
 14500  010F12  A0D8               	btfss	status,0,c
 14501  010F14  0769               	decf	(i2printf@prec+1)& (0+255),f,b
 14502  010F16  2968               	incf	i2printf@prec& (0+255),w,b
 14503  010F18  E1B8               	bnz	i2l6442
 14504  010F1A  2969               	incf	(i2printf@prec+1)& (0+255),w,b
 14505  010F1C  A4D8               	btfss	status,2,c
 14506  010F1E  D7B5               	goto	i2l473
 14507  010F20                     i2u837_40:
 14508                           
 14509                           ; BSR set to: 0
 14510                           
 14511                           ; BSR set to: 0
 14512  010F20  C051  FFF6         	movff	i2printf@f,tblptrl
 14513  010F24  C052  FFF7         	movff	i2printf@f+1,tblptrh
 14514  010F28  4A51               	infsnz	i2printf@f,f,c
 14515  010F2A  2A52               	incf	i2printf@f+1,f,c
 14516  010F2C                     	if	0	;tblptru may be non-zero
 14517  010F2C                     	endif
 14518  010F2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14519  010F2C  0E00               	movlw	low (__mediumconst shr (0+16))
 14520  010F2E  6EF8               	movwf	tblptru,c
 14521  010F30                     	endif
 14522  010F30  0008               	tblrd		*
 14523  010F32  CFF5 F078          	movff	tablat,i2printf@c
 14524  010F36  0100               	movlb	0	; () banked
 14525  010F38  5178               	movf	i2printf@c& (0+255),w,b
 14526  010F3A  B4D8               	btfsc	status,2,c
 14527  010F3C  0012               	return	
 14528  010F3E  D440               	goto	i2l420
 14529  010F40                     __end_ofi2_printf:
 14530                           	opt stack 0
 14531                           tosu	equ	0xFFF
 14532                           tosh	equ	0xFFE
 14533                           tosl	equ	0xFFD
 14534                           pclatu	equ	0xFFB
 14535                           pclath	equ	0xFFA
 14536                           tblptru	equ	0xFF8
 14537                           tblptrh	equ	0xFF7
 14538                           tblptrl	equ	0xFF6
 14539                           tablat	equ	0xFF5
 14540                           prodh	equ	0xFF4
 14541                           prodl	equ	0xFF3
 14542                           intcon	equ	0xFF2
 14543                           postinc0	equ	0xFEE
 14544                           fsr0h	equ	0xFEA
 14545                           fsr0l	equ	0xFE9
 14546                           wreg	equ	0xFE8
 14547                           indf1	equ	0xFE7
 14548                           fsr1h	equ	0xFE2
 14549                           fsr1l	equ	0xFE1
 14550                           indf2	equ	0xFDF
 14551                           postinc2	equ	0xFDE
 14552                           postdec2	equ	0xFDD
 14553                           fsr2h	equ	0xFDA
 14554                           fsr2l	equ	0xFD9
 14555                           status	equ	0xFD8
 14556                           
 14557 ;; *************** function i2_scale *****************
 14558 ;; Defined at:
 14559 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 14560 ;; Parameters:    Size  Location     Type
 14561 ;;  scl             1    wreg     char 
 14562 ;; Auto vars:     Size  Location     Type
 14563 ;;  scl             1   47[COMRAM] char 
 14564 ;; Return value:  Size  Location     Type
 14565 ;;                  4   39[COMRAM] char 
 14566 ;; Registers used:
 14567 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14568 ;; Tracked objects:
 14569 ;;		On entry : 0/0
 14570 ;;		On exit  : 0/0
 14571 ;;		Unchanged: 0/0
 14572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14574 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14576 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14577 ;;Total ram usage:        9 bytes
 14578 ;; Hardware stack levels used:    1
 14579 ;; Hardware stack levels required when called:    1
 14580 ;; This function calls:
 14581 ;;		i2___awdiv
 14582 ;;		i2___awmod
 14583 ;;		i2___flmul
 14584 ;; This function is called by:
 14585 ;;		i2_printf
 14586 ;; This function uses a non-reentrant model
 14587 ;;
 14588                           
 14589                           	psect	text45
 14590  0119EE                     __ptext45:
 14591                           	opt stack 0
 14592  0119EE                     i2_scale:
 14593                           	opt stack 21
 14594                           
 14595                           ; BSR set to: 0
 14596                           ;incstack = 0
 14597                           ;i2scale@scl stored from wreg
 14598  0119EE  6E30               	movwf	i2scale@scl,c
 14599                           
 14600                           ;doprnt.c: 428: if(scl < 0) {
 14601  0119F0  AE30               	btfss	i2scale@scl,7,c
 14602  0119F2  D11F               	goto	i2l409
 14603                           
 14604                           ;doprnt.c: 429: scl = -scl;
 14605  0119F4  6C30               	negf	i2scale@scl,c
 14606                           
 14607                           ;doprnt.c: 430: if(scl>=110)
 14608  0119F6  5030               	movf	i2scale@scl,w,c
 14609  0119F8  0A80               	xorlw	128
 14610  0119FA  0F12               	addlw	-238
 14611  0119FC  A0D8               	btfss	status,0,c
 14612  0119FE  D0A1               	goto	i2l410
 14613                           
 14614                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14615  011A00  0E00               	movlw	0
 14616  011A02  6E0A               	movwf	i2___awdiv@divisor+1,c
 14617  011A04  0E0A               	movlw	10
 14618  011A06  6E09               	movwf	i2___awdiv@divisor,c
 14619  011A08  0E00               	movlw	0
 14620  011A0A  6E04               	movwf	i2___awmod@divisor+1,c
 14621  011A0C  0E64               	movlw	100
 14622  011A0E  6E03               	movwf	i2___awmod@divisor,c
 14623  011A10  5030               	movf	i2scale@scl,w,c
 14624  011A12  6E01               	movwf	i2___awmod@dividend,c
 14625  011A14  6A02               	clrf	i2___awmod@dividend+1,c
 14626  011A16  BE01               	btfsc	i2___awmod@dividend,7,c
 14627  011A18  0602               	decf	i2___awmod@dividend+1,f,c
 14628  011A1A  ECB5  F0A4         	call	i2___awmod	;wreg free
 14629  011A1E  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14630  011A22  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14631  011A26  ECF9  F0A3         	call	i2___awdiv	;wreg free
 14632  011A2A  90D8               	bcf	status,0,c
 14633  011A2C  3607               	rlcf	?i2___awdiv,f,c
 14634  011A2E  3608               	rlcf	?i2___awdiv+1,f,c
 14635  011A30  90D8               	bcf	status,0,c
 14636  011A32  3607               	rlcf	?i2___awdiv,f,c
 14637  011A34  3608               	rlcf	?i2___awdiv+1,f,c
 14638  011A36  0E24               	movlw	36
 14639  011A38  2607               	addwf	?i2___awdiv,f,c
 14640  011A3A  0E00               	movlw	0
 14641  011A3C  2208               	addwfc	?i2___awdiv+1,f,c
 14642  011A3E  0E2F               	movlw	low __npowers_
 14643  011A40  2407               	addwf	?i2___awdiv,w,c
 14644  011A42  6EF6               	movwf	tblptrl,c
 14645  011A44  0EFC               	movlw	high __npowers_
 14646  011A46  2008               	addwfc	?i2___awdiv+1,w,c
 14647  011A48  6EF7               	movwf	tblptrh,c
 14648  011A4A                     	if	1	;There are 3 active tblptr bytes
 14649  011A4A  6AF8               	clrf	tblptru,c
 14650  011A4C  0E00               	movlw	low (__mediumconst shr (0+16))
 14651  011A4E  22F8               	addwfc	tblptru,f,c
 14652  011A50                     	endif
 14653  011A50  0009               	tblrd		*+
 14654  011A52  CFF5 F013          	movff	tablat,i2___flmul@a
 14655  011A56  0009               	tblrd		*+
 14656  011A58  CFF5 F014          	movff	tablat,i2___flmul@a+1
 14657  011A5C  0009               	tblrd		*+
 14658  011A5E  CFF5 F015          	movff	tablat,i2___flmul@a+2
 14659  011A62  000A               	tblrd		*-
 14660  011A64  CFF5 F016          	movff	tablat,i2___flmul@a+3
 14661  011A68  0E00               	movlw	0
 14662  011A6A  6E0A               	movwf	i2___awdiv@divisor+1,c
 14663  011A6C  0E64               	movlw	100
 14664  011A6E  6E09               	movwf	i2___awdiv@divisor,c
 14665  011A70  5030               	movf	i2scale@scl,w,c
 14666  011A72  6E07               	movwf	i2___awdiv@dividend,c
 14667  011A74  6A08               	clrf	i2___awdiv@dividend+1,c
 14668  011A76  BE07               	btfsc	i2___awdiv@dividend,7,c
 14669  011A78  0608               	decf	i2___awdiv@dividend+1,f,c
 14670  011A7A  ECF9  F0A3         	call	i2___awdiv	;wreg free
 14671  011A7E  90D8               	bcf	status,0,c
 14672  011A80  3607               	rlcf	?i2___awdiv,f,c
 14673  011A82  3608               	rlcf	?i2___awdiv+1,f,c
 14674  011A84  90D8               	bcf	status,0,c
 14675  011A86  3607               	rlcf	?i2___awdiv,f,c
 14676  011A88  3608               	rlcf	?i2___awdiv+1,f,c
 14677  011A8A  0E48               	movlw	72
 14678  011A8C  2607               	addwf	?i2___awdiv,f,c
 14679  011A8E  0E00               	movlw	0
 14680  011A90  2208               	addwfc	?i2___awdiv+1,f,c
 14681  011A92  0E2F               	movlw	low __npowers_
 14682  011A94  2407               	addwf	?i2___awdiv,w,c
 14683  011A96  6EF6               	movwf	tblptrl,c
 14684  011A98  0EFC               	movlw	high __npowers_
 14685  011A9A  2008               	addwfc	?i2___awdiv+1,w,c
 14686  011A9C  6EF7               	movwf	tblptrh,c
 14687  011A9E                     	if	1	;There are 3 active tblptr bytes
 14688  011A9E  6AF8               	clrf	tblptru,c
 14689  011AA0  0E00               	movlw	low (__mediumconst shr (0+16))
 14690  011AA2  22F8               	addwfc	tblptru,f,c
 14691  011AA4                     	endif
 14692  011AA4  0009               	tblrd		*+
 14693  011AA6  CFF5 F00F          	movff	tablat,i2___flmul@b
 14694  011AAA  0009               	tblrd		*+
 14695  011AAC  CFF5 F010          	movff	tablat,i2___flmul@b+1
 14696  011AB0  0009               	tblrd		*+
 14697  011AB2  CFF5 F011          	movff	tablat,i2___flmul@b+2
 14698  011AB6  000A               	tblrd		*-
 14699  011AB8  CFF5 F012          	movff	tablat,i2___flmul@b+3
 14700  011ABC  ECC5  F094         	call	i2___flmul	;wreg free
 14701  011AC0  C00F  F02C         	movff	?i2___flmul,i2_scale$1540
 14702  011AC4  C010  F02D         	movff	?i2___flmul+1,i2_scale$1540+1
 14703  011AC8  C011  F02E         	movff	?i2___flmul+2,i2_scale$1540+2
 14704  011ACC  C012  F02F         	movff	?i2___flmul+3,i2_scale$1540+3
 14705                           
 14706                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14707  011AD0  C02C  F00F         	movff	i2_scale$1540,i2___flmul@b
 14708  011AD4  C02D  F010         	movff	i2_scale$1540+1,i2___flmul@b+1
 14709  011AD8  C02E  F011         	movff	i2_scale$1540+2,i2___flmul@b+2
 14710  011ADC  C02F  F012         	movff	i2_scale$1540+3,i2___flmul@b+3
 14711  011AE0  0E00               	movlw	0
 14712  011AE2  6E04               	movwf	i2___awmod@divisor+1,c
 14713  011AE4  0E0A               	movlw	10
 14714  011AE6  6E03               	movwf	i2___awmod@divisor,c
 14715  011AE8  5030               	movf	i2scale@scl,w,c
 14716  011AEA  6E01               	movwf	i2___awmod@dividend,c
 14717  011AEC  6A02               	clrf	i2___awmod@dividend+1,c
 14718  011AEE  BE01               	btfsc	i2___awmod@dividend,7,c
 14719  011AF0  0602               	decf	i2___awmod@dividend+1,f,c
 14720  011AF2  ECB5  F0A4         	call	i2___awmod	;wreg free
 14721  011AF6  90D8               	bcf	status,0,c
 14722  011AF8  3601               	rlcf	?i2___awmod,f,c
 14723  011AFA  3602               	rlcf	?i2___awmod+1,f,c
 14724  011AFC  90D8               	bcf	status,0,c
 14725  011AFE  3601               	rlcf	?i2___awmod,f,c
 14726  011B00  3602               	rlcf	?i2___awmod+1,f,c
 14727  011B02  0E2F               	movlw	low __npowers_
 14728  011B04  2401               	addwf	?i2___awmod,w,c
 14729  011B06  6EF6               	movwf	tblptrl,c
 14730  011B08  0EFC               	movlw	high __npowers_
 14731  011B0A  2002               	addwfc	?i2___awmod+1,w,c
 14732  011B0C  6EF7               	movwf	tblptrh,c
 14733  011B0E                     	if	1	;There are 3 active tblptr bytes
 14734  011B0E  6AF8               	clrf	tblptru,c
 14735  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 14736  011B12  22F8               	addwfc	tblptru,f,c
 14737  011B14                     	endif
 14738  011B14  0009               	tblrd		*+
 14739  011B16  CFF5 F013          	movff	tablat,i2___flmul@a
 14740  011B1A  0009               	tblrd		*+
 14741  011B1C  CFF5 F014          	movff	tablat,i2___flmul@a+1
 14742  011B20  0009               	tblrd		*+
 14743  011B22  CFF5 F015          	movff	tablat,i2___flmul@a+2
 14744  011B26  000A               	tblrd		*-
 14745  011B28  CFF5 F016          	movff	tablat,i2___flmul@a+3
 14746  011B2C  ECC5  F094         	call	i2___flmul	;wreg free
 14747  011B30  C00F  F028         	movff	?i2___flmul,?i2_scale
 14748  011B34  C010  F029         	movff	?i2___flmul+1,?i2_scale+1
 14749  011B38  C011  F02A         	movff	?i2___flmul+2,?i2_scale+2
 14750  011B3C  C012  F02B         	movff	?i2___flmul+3,?i2_scale+3
 14751  011B40  0012               	return	
 14752  011B42                     i2l410:
 14753                           
 14754                           ;doprnt.c: 432: else if(scl > 10)
 14755  011B42  5030               	movf	i2scale@scl,w,c
 14756  011B44  0A80               	xorlw	128
 14757  011B46  0F75               	addlw	-139
 14758  011B48  A0D8               	btfss	status,0,c
 14759  011B4A  D05B               	goto	i2l413
 14760                           
 14761                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 14762  011B4C  0E00               	movlw	0
 14763  011B4E  6E0A               	movwf	i2___awdiv@divisor+1,c
 14764  011B50  0E0A               	movlw	10
 14765  011B52  6E09               	movwf	i2___awdiv@divisor,c
 14766  011B54  5030               	movf	i2scale@scl,w,c
 14767  011B56  6E07               	movwf	i2___awdiv@dividend,c
 14768  011B58  6A08               	clrf	i2___awdiv@dividend+1,c
 14769  011B5A  BE07               	btfsc	i2___awdiv@dividend,7,c
 14770  011B5C  0608               	decf	i2___awdiv@dividend+1,f,c
 14771  011B5E  ECF9  F0A3         	call	i2___awdiv	;wreg free
 14772  011B62  90D8               	bcf	status,0,c
 14773  011B64  3607               	rlcf	?i2___awdiv,f,c
 14774  011B66  3608               	rlcf	?i2___awdiv+1,f,c
 14775  011B68  90D8               	bcf	status,0,c
 14776  011B6A  3607               	rlcf	?i2___awdiv,f,c
 14777  011B6C  3608               	rlcf	?i2___awdiv+1,f,c
 14778  011B6E  0E24               	movlw	36
 14779  011B70  2607               	addwf	?i2___awdiv,f,c
 14780  011B72  0E00               	movlw	0
 14781  011B74  2208               	addwfc	?i2___awdiv+1,f,c
 14782  011B76  0E2F               	movlw	low __npowers_
 14783  011B78  2407               	addwf	?i2___awdiv,w,c
 14784  011B7A  6EF6               	movwf	tblptrl,c
 14785  011B7C  0EFC               	movlw	high __npowers_
 14786  011B7E  2008               	addwfc	?i2___awdiv+1,w,c
 14787  011B80  6EF7               	movwf	tblptrh,c
 14788  011B82                     	if	1	;There are 3 active tblptr bytes
 14789  011B82  6AF8               	clrf	tblptru,c
 14790  011B84  0E00               	movlw	low (__mediumconst shr (0+16))
 14791  011B86  22F8               	addwfc	tblptru,f,c
 14792  011B88                     	endif
 14793  011B88  0009               	tblrd		*+
 14794  011B8A  CFF5 F00F          	movff	tablat,i2___flmul@b
 14795  011B8E  0009               	tblrd		*+
 14796  011B90  CFF5 F010          	movff	tablat,i2___flmul@b+1
 14797  011B94  0009               	tblrd		*+
 14798  011B96  CFF5 F011          	movff	tablat,i2___flmul@b+2
 14799  011B9A  000A               	tblrd		*-
 14800  011B9C  CFF5 F012          	movff	tablat,i2___flmul@b+3
 14801  011BA0  0E00               	movlw	0
 14802  011BA2  6E04               	movwf	i2___awmod@divisor+1,c
 14803  011BA4  0E0A               	movlw	10
 14804  011BA6  6E03               	movwf	i2___awmod@divisor,c
 14805  011BA8  5030               	movf	i2scale@scl,w,c
 14806  011BAA  6E01               	movwf	i2___awmod@dividend,c
 14807  011BAC  6A02               	clrf	i2___awmod@dividend+1,c
 14808  011BAE  BE01               	btfsc	i2___awmod@dividend,7,c
 14809  011BB0  0602               	decf	i2___awmod@dividend+1,f,c
 14810  011BB2  ECB5  F0A4         	call	i2___awmod	;wreg free
 14811  011BB6  90D8               	bcf	status,0,c
 14812  011BB8  3601               	rlcf	?i2___awmod,f,c
 14813  011BBA  3602               	rlcf	?i2___awmod+1,f,c
 14814  011BBC  90D8               	bcf	status,0,c
 14815  011BBE  3601               	rlcf	?i2___awmod,f,c
 14816  011BC0  3602               	rlcf	?i2___awmod+1,f,c
 14817  011BC2  0E2F               	movlw	low __npowers_
 14818  011BC4  2401               	addwf	?i2___awmod,w,c
 14819  011BC6  6EF6               	movwf	tblptrl,c
 14820  011BC8  0EFC               	movlw	high __npowers_
 14821  011BCA  2002               	addwfc	?i2___awmod+1,w,c
 14822  011BCC  6EF7               	movwf	tblptrh,c
 14823  011BCE                     	if	1	;There are 3 active tblptr bytes
 14824  011BCE  6AF8               	clrf	tblptru,c
 14825  011BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 14826  011BD2  22F8               	addwfc	tblptru,f,c
 14827  011BD4                     	endif
 14828  011BD4  0009               	tblrd		*+
 14829  011BD6  CFF5 F013          	movff	tablat,i2___flmul@a
 14830  011BDA  0009               	tblrd		*+
 14831  011BDC  CFF5 F014          	movff	tablat,i2___flmul@a+1
 14832  011BE0  0009               	tblrd		*+
 14833  011BE2  CFF5 F015          	movff	tablat,i2___flmul@a+2
 14834  011BE6  000A               	tblrd		*-
 14835  011BE8  CFF5 F016          	movff	tablat,i2___flmul@a+3
 14836  011BEC  ECC5  F094         	call	i2___flmul	;wreg free
 14837  011BF0  C00F  F028         	movff	?i2___flmul,?i2_scale
 14838  011BF4  C010  F029         	movff	?i2___flmul+1,?i2_scale+1
 14839  011BF8  C011  F02A         	movff	?i2___flmul+2,?i2_scale+2
 14840  011BFC  C012  F02B         	movff	?i2___flmul+3,?i2_scale+3
 14841  011C00  0012               	return	
 14842  011C02                     i2l413:
 14843                           
 14844                           ;doprnt.c: 434: return _npowers_[scl];
 14845  011C02  5030               	movf	i2scale@scl,w,c
 14846  011C04  0D04               	mullw	4
 14847  011C06  0E2F               	movlw	low __npowers_
 14848  011C08  24F3               	addwf	prodl,w,c
 14849  011C0A  6EF6               	movwf	tblptrl,c
 14850  011C0C  0EFC               	movlw	high __npowers_
 14851  011C0E  20F4               	addwfc	prodh,w,c
 14852  011C10  6EF7               	movwf	tblptrh,c
 14853  011C12                     	if	1	;There are 3 active tblptr bytes
 14854  011C12  6AF8               	clrf	tblptru,c
 14855  011C14  0E00               	movlw	low (__mediumconst shr (0+16))
 14856  011C16  22F8               	addwfc	tblptru,f,c
 14857  011C18                     	endif
 14858  011C18  0009               	tblrd		*+
 14859  011C1A  CFF5 F028          	movff	tablat,?i2_scale
 14860  011C1E  0009               	tblrd		*+
 14861  011C20  CFF5 F029          	movff	tablat,?i2_scale+1
 14862  011C24  0009               	tblrd		*+
 14863  011C26  CFF5 F02A          	movff	tablat,?i2_scale+2
 14864  011C2A  000A               	tblrd		*-
 14865  011C2C  CFF5 F02B          	movff	tablat,?i2_scale+3
 14866  011C30  0012               	return	
 14867  011C32                     i2l409:
 14868                           
 14869                           ;doprnt.c: 435: }
 14870                           ;doprnt.c: 436: if(scl>=110)
 14871  011C32  5030               	movf	i2scale@scl,w,c
 14872  011C34  0A80               	xorlw	128
 14873  011C36  0F12               	addlw	-238
 14874  011C38  A0D8               	btfss	status,0,c
 14875  011C3A  D0A1               	goto	i2l414
 14876                           
 14877                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14878  011C3C  0E00               	movlw	0
 14879  011C3E  6E0A               	movwf	i2___awdiv@divisor+1,c
 14880  011C40  0E0A               	movlw	10
 14881  011C42  6E09               	movwf	i2___awdiv@divisor,c
 14882  011C44  0E00               	movlw	0
 14883  011C46  6E04               	movwf	i2___awmod@divisor+1,c
 14884  011C48  0E64               	movlw	100
 14885  011C4A  6E03               	movwf	i2___awmod@divisor,c
 14886  011C4C  5030               	movf	i2scale@scl,w,c
 14887  011C4E  6E01               	movwf	i2___awmod@dividend,c
 14888  011C50  6A02               	clrf	i2___awmod@dividend+1,c
 14889  011C52  BE01               	btfsc	i2___awmod@dividend,7,c
 14890  011C54  0602               	decf	i2___awmod@dividend+1,f,c
 14891  011C56  ECB5  F0A4         	call	i2___awmod	;wreg free
 14892  011C5A  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14893  011C5E  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14894  011C62  ECF9  F0A3         	call	i2___awdiv	;wreg free
 14895  011C66  90D8               	bcf	status,0,c
 14896  011C68  3607               	rlcf	?i2___awdiv,f,c
 14897  011C6A  3608               	rlcf	?i2___awdiv+1,f,c
 14898  011C6C  90D8               	bcf	status,0,c
 14899  011C6E  3607               	rlcf	?i2___awdiv,f,c
 14900  011C70  3608               	rlcf	?i2___awdiv+1,f,c
 14901  011C72  0E24               	movlw	36
 14902  011C74  2607               	addwf	?i2___awdiv,f,c
 14903  011C76  0E00               	movlw	0
 14904  011C78  2208               	addwfc	?i2___awdiv+1,f,c
 14905  011C7A  0EFB               	movlw	low __powers_
 14906  011C7C  2407               	addwf	?i2___awdiv,w,c
 14907  011C7E  6EF6               	movwf	tblptrl,c
 14908  011C80  0EFB               	movlw	high __powers_
 14909  011C82  2008               	addwfc	?i2___awdiv+1,w,c
 14910  011C84  6EF7               	movwf	tblptrh,c
 14911  011C86                     	if	1	;There are 3 active tblptr bytes
 14912  011C86  6AF8               	clrf	tblptru,c
 14913  011C88  0E00               	movlw	low (__mediumconst shr (0+16))
 14914  011C8A  22F8               	addwfc	tblptru,f,c
 14915  011C8C                     	endif
 14916  011C8C  0009               	tblrd		*+
 14917  011C8E  CFF5 F013          	movff	tablat,i2___flmul@a
 14918  011C92  0009               	tblrd		*+
 14919  011C94  CFF5 F014          	movff	tablat,i2___flmul@a+1
 14920  011C98  0009               	tblrd		*+
 14921  011C9A  CFF5 F015          	movff	tablat,i2___flmul@a+2
 14922  011C9E  000A               	tblrd		*-
 14923  011CA0  CFF5 F016          	movff	tablat,i2___flmul@a+3
 14924  011CA4  0E00               	movlw	0
 14925  011CA6  6E0A               	movwf	i2___awdiv@divisor+1,c
 14926  011CA8  0E64               	movlw	100
 14927  011CAA  6E09               	movwf	i2___awdiv@divisor,c
 14928  011CAC  5030               	movf	i2scale@scl,w,c
 14929  011CAE  6E07               	movwf	i2___awdiv@dividend,c
 14930  011CB0  6A08               	clrf	i2___awdiv@dividend+1,c
 14931  011CB2  BE07               	btfsc	i2___awdiv@dividend,7,c
 14932  011CB4  0608               	decf	i2___awdiv@dividend+1,f,c
 14933  011CB6  ECF9  F0A3         	call	i2___awdiv	;wreg free
 14934  011CBA  90D8               	bcf	status,0,c
 14935  011CBC  3607               	rlcf	?i2___awdiv,f,c
 14936  011CBE  3608               	rlcf	?i2___awdiv+1,f,c
 14937  011CC0  90D8               	bcf	status,0,c
 14938  011CC2  3607               	rlcf	?i2___awdiv,f,c
 14939  011CC4  3608               	rlcf	?i2___awdiv+1,f,c
 14940  011CC6  0E48               	movlw	72
 14941  011CC8  2607               	addwf	?i2___awdiv,f,c
 14942  011CCA  0E00               	movlw	0
 14943  011CCC  2208               	addwfc	?i2___awdiv+1,f,c
 14944  011CCE  0EFB               	movlw	low __powers_
 14945  011CD0  2407               	addwf	?i2___awdiv,w,c
 14946  011CD2  6EF6               	movwf	tblptrl,c
 14947  011CD4  0EFB               	movlw	high __powers_
 14948  011CD6  2008               	addwfc	?i2___awdiv+1,w,c
 14949  011CD8  6EF7               	movwf	tblptrh,c
 14950  011CDA                     	if	1	;There are 3 active tblptr bytes
 14951  011CDA  6AF8               	clrf	tblptru,c
 14952  011CDC  0E00               	movlw	low (__mediumconst shr (0+16))
 14953  011CDE  22F8               	addwfc	tblptru,f,c
 14954  011CE0                     	endif
 14955  011CE0  0009               	tblrd		*+
 14956  011CE2  CFF5 F00F          	movff	tablat,i2___flmul@b
 14957  011CE6  0009               	tblrd		*+
 14958  011CE8  CFF5 F010          	movff	tablat,i2___flmul@b+1
 14959  011CEC  0009               	tblrd		*+
 14960  011CEE  CFF5 F011          	movff	tablat,i2___flmul@b+2
 14961  011CF2  000A               	tblrd		*-
 14962  011CF4  CFF5 F012          	movff	tablat,i2___flmul@b+3
 14963  011CF8  ECC5  F094         	call	i2___flmul	;wreg free
 14964  011CFC  C00F  F02C         	movff	?i2___flmul,i2_scale$1540
 14965  011D00  C010  F02D         	movff	?i2___flmul+1,i2_scale$1540+1
 14966  011D04  C011  F02E         	movff	?i2___flmul+2,i2_scale$1540+2
 14967  011D08  C012  F02F         	movff	?i2___flmul+3,i2_scale$1540+3
 14968                           
 14969                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14970  011D0C  C02C  F00F         	movff	i2_scale$1540,i2___flmul@b
 14971  011D10  C02D  F010         	movff	i2_scale$1540+1,i2___flmul@b+1
 14972  011D14  C02E  F011         	movff	i2_scale$1540+2,i2___flmul@b+2
 14973  011D18  C02F  F012         	movff	i2_scale$1540+3,i2___flmul@b+3
 14974  011D1C  0E00               	movlw	0
 14975  011D1E  6E04               	movwf	i2___awmod@divisor+1,c
 14976  011D20  0E0A               	movlw	10
 14977  011D22  6E03               	movwf	i2___awmod@divisor,c
 14978  011D24  5030               	movf	i2scale@scl,w,c
 14979  011D26  6E01               	movwf	i2___awmod@dividend,c
 14980  011D28  6A02               	clrf	i2___awmod@dividend+1,c
 14981  011D2A  BE01               	btfsc	i2___awmod@dividend,7,c
 14982  011D2C  0602               	decf	i2___awmod@dividend+1,f,c
 14983  011D2E  ECB5  F0A4         	call	i2___awmod	;wreg free
 14984  011D32  90D8               	bcf	status,0,c
 14985  011D34  3601               	rlcf	?i2___awmod,f,c
 14986  011D36  3602               	rlcf	?i2___awmod+1,f,c
 14987  011D38  90D8               	bcf	status,0,c
 14988  011D3A  3601               	rlcf	?i2___awmod,f,c
 14989  011D3C  3602               	rlcf	?i2___awmod+1,f,c
 14990  011D3E  0EFB               	movlw	low __powers_
 14991  011D40  2401               	addwf	?i2___awmod,w,c
 14992  011D42  6EF6               	movwf	tblptrl,c
 14993  011D44  0EFB               	movlw	high __powers_
 14994  011D46  2002               	addwfc	?i2___awmod+1,w,c
 14995  011D48  6EF7               	movwf	tblptrh,c
 14996  011D4A                     	if	1	;There are 3 active tblptr bytes
 14997  011D4A  6AF8               	clrf	tblptru,c
 14998  011D4C  0E00               	movlw	low (__mediumconst shr (0+16))
 14999  011D4E  22F8               	addwfc	tblptru,f,c
 15000  011D50                     	endif
 15001  011D50  0009               	tblrd		*+
 15002  011D52  CFF5 F013          	movff	tablat,i2___flmul@a
 15003  011D56  0009               	tblrd		*+
 15004  011D58  CFF5 F014          	movff	tablat,i2___flmul@a+1
 15005  011D5C  0009               	tblrd		*+
 15006  011D5E  CFF5 F015          	movff	tablat,i2___flmul@a+2
 15007  011D62  000A               	tblrd		*-
 15008  011D64  CFF5 F016          	movff	tablat,i2___flmul@a+3
 15009  011D68  ECC5  F094         	call	i2___flmul	;wreg free
 15010  011D6C  C00F  F028         	movff	?i2___flmul,?i2_scale
 15011  011D70  C010  F029         	movff	?i2___flmul+1,?i2_scale+1
 15012  011D74  C011  F02A         	movff	?i2___flmul+2,?i2_scale+2
 15013  011D78  C012  F02B         	movff	?i2___flmul+3,?i2_scale+3
 15014  011D7C  0012               	return	
 15015  011D7E                     i2l414:
 15016                           
 15017                           ;doprnt.c: 438: else if(scl > 10)
 15018  011D7E  5030               	movf	i2scale@scl,w,c
 15019  011D80  0A80               	xorlw	128
 15020  011D82  0F75               	addlw	-139
 15021  011D84  A0D8               	btfss	status,0,c
 15022  011D86  D05B               	goto	i2l416
 15023                           
 15024                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 15025  011D88  0E00               	movlw	0
 15026  011D8A  6E0A               	movwf	i2___awdiv@divisor+1,c
 15027  011D8C  0E0A               	movlw	10
 15028  011D8E  6E09               	movwf	i2___awdiv@divisor,c
 15029  011D90  5030               	movf	i2scale@scl,w,c
 15030  011D92  6E07               	movwf	i2___awdiv@dividend,c
 15031  011D94  6A08               	clrf	i2___awdiv@dividend+1,c
 15032  011D96  BE07               	btfsc	i2___awdiv@dividend,7,c
 15033  011D98  0608               	decf	i2___awdiv@dividend+1,f,c
 15034  011D9A  ECF9  F0A3         	call	i2___awdiv	;wreg free
 15035  011D9E  90D8               	bcf	status,0,c
 15036  011DA0  3607               	rlcf	?i2___awdiv,f,c
 15037  011DA2  3608               	rlcf	?i2___awdiv+1,f,c
 15038  011DA4  90D8               	bcf	status,0,c
 15039  011DA6  3607               	rlcf	?i2___awdiv,f,c
 15040  011DA8  3608               	rlcf	?i2___awdiv+1,f,c
 15041  011DAA  0E24               	movlw	36
 15042  011DAC  2607               	addwf	?i2___awdiv,f,c
 15043  011DAE  0E00               	movlw	0
 15044  011DB0  2208               	addwfc	?i2___awdiv+1,f,c
 15045  011DB2  0EFB               	movlw	low __powers_
 15046  011DB4  2407               	addwf	?i2___awdiv,w,c
 15047  011DB6  6EF6               	movwf	tblptrl,c
 15048  011DB8  0EFB               	movlw	high __powers_
 15049  011DBA  2008               	addwfc	?i2___awdiv+1,w,c
 15050  011DBC  6EF7               	movwf	tblptrh,c
 15051  011DBE                     	if	1	;There are 3 active tblptr bytes
 15052  011DBE  6AF8               	clrf	tblptru,c
 15053  011DC0  0E00               	movlw	low (__mediumconst shr (0+16))
 15054  011DC2  22F8               	addwfc	tblptru,f,c
 15055  011DC4                     	endif
 15056  011DC4  0009               	tblrd		*+
 15057  011DC6  CFF5 F00F          	movff	tablat,i2___flmul@b
 15058  011DCA  0009               	tblrd		*+
 15059  011DCC  CFF5 F010          	movff	tablat,i2___flmul@b+1
 15060  011DD0  0009               	tblrd		*+
 15061  011DD2  CFF5 F011          	movff	tablat,i2___flmul@b+2
 15062  011DD6  000A               	tblrd		*-
 15063  011DD8  CFF5 F012          	movff	tablat,i2___flmul@b+3
 15064  011DDC  0E00               	movlw	0
 15065  011DDE  6E04               	movwf	i2___awmod@divisor+1,c
 15066  011DE0  0E0A               	movlw	10
 15067  011DE2  6E03               	movwf	i2___awmod@divisor,c
 15068  011DE4  5030               	movf	i2scale@scl,w,c
 15069  011DE6  6E01               	movwf	i2___awmod@dividend,c
 15070  011DE8  6A02               	clrf	i2___awmod@dividend+1,c
 15071  011DEA  BE01               	btfsc	i2___awmod@dividend,7,c
 15072  011DEC  0602               	decf	i2___awmod@dividend+1,f,c
 15073  011DEE  ECB5  F0A4         	call	i2___awmod	;wreg free
 15074  011DF2  90D8               	bcf	status,0,c
 15075  011DF4  3601               	rlcf	?i2___awmod,f,c
 15076  011DF6  3602               	rlcf	?i2___awmod+1,f,c
 15077  011DF8  90D8               	bcf	status,0,c
 15078  011DFA  3601               	rlcf	?i2___awmod,f,c
 15079  011DFC  3602               	rlcf	?i2___awmod+1,f,c
 15080  011DFE  0EFB               	movlw	low __powers_
 15081  011E00  2401               	addwf	?i2___awmod,w,c
 15082  011E02  6EF6               	movwf	tblptrl,c
 15083  011E04  0EFB               	movlw	high __powers_
 15084  011E06  2002               	addwfc	?i2___awmod+1,w,c
 15085  011E08  6EF7               	movwf	tblptrh,c
 15086  011E0A                     	if	1	;There are 3 active tblptr bytes
 15087  011E0A  6AF8               	clrf	tblptru,c
 15088  011E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 15089  011E0E  22F8               	addwfc	tblptru,f,c
 15090  011E10                     	endif
 15091  011E10  0009               	tblrd		*+
 15092  011E12  CFF5 F013          	movff	tablat,i2___flmul@a
 15093  011E16  0009               	tblrd		*+
 15094  011E18  CFF5 F014          	movff	tablat,i2___flmul@a+1
 15095  011E1C  0009               	tblrd		*+
 15096  011E1E  CFF5 F015          	movff	tablat,i2___flmul@a+2
 15097  011E22  000A               	tblrd		*-
 15098  011E24  CFF5 F016          	movff	tablat,i2___flmul@a+3
 15099  011E28  ECC5  F094         	call	i2___flmul	;wreg free
 15100  011E2C  C00F  F028         	movff	?i2___flmul,?i2_scale
 15101  011E30  C010  F029         	movff	?i2___flmul+1,?i2_scale+1
 15102  011E34  C011  F02A         	movff	?i2___flmul+2,?i2_scale+2
 15103  011E38  C012  F02B         	movff	?i2___flmul+3,?i2_scale+3
 15104  011E3C  0012               	return	
 15105  011E3E                     i2l416:
 15106                           
 15107                           ;doprnt.c: 440: return _powers_[scl];
 15108  011E3E  5030               	movf	i2scale@scl,w,c
 15109  011E40  0D04               	mullw	4
 15110  011E42  0EFB               	movlw	low __powers_
 15111  011E44  24F3               	addwf	prodl,w,c
 15112  011E46  6EF6               	movwf	tblptrl,c
 15113  011E48  0EFB               	movlw	high __powers_
 15114  011E4A  20F4               	addwfc	prodh,w,c
 15115  011E4C  6EF7               	movwf	tblptrh,c
 15116  011E4E                     	if	1	;There are 3 active tblptr bytes
 15117  011E4E  6AF8               	clrf	tblptru,c
 15118  011E50  0E00               	movlw	low (__mediumconst shr (0+16))
 15119  011E52  22F8               	addwfc	tblptru,f,c
 15120  011E54                     	endif
 15121  011E54  0009               	tblrd		*+
 15122  011E56  CFF5 F028          	movff	tablat,?i2_scale
 15123  011E5A  0009               	tblrd		*+
 15124  011E5C  CFF5 F029          	movff	tablat,?i2_scale+1
 15125  011E60  0009               	tblrd		*+
 15126  011E62  CFF5 F02A          	movff	tablat,?i2_scale+2
 15127  011E66  000A               	tblrd		*-
 15128  011E68  CFF5 F02B          	movff	tablat,?i2_scale+3
 15129  011E6C  0012               	return	
 15130  011E6E                     __end_ofi2_scale:
 15131                           	opt stack 0
 15132                           tosu	equ	0xFFF
 15133                           tosh	equ	0xFFE
 15134                           tosl	equ	0xFFD
 15135                           pclatu	equ	0xFFB
 15136                           pclath	equ	0xFFA
 15137                           tblptru	equ	0xFF8
 15138                           tblptrh	equ	0xFF7
 15139                           tblptrl	equ	0xFF6
 15140                           tablat	equ	0xFF5
 15141                           prodh	equ	0xFF4
 15142                           prodl	equ	0xFF3
 15143                           intcon	equ	0xFF2
 15144                           postinc0	equ	0xFEE
 15145                           fsr0h	equ	0xFEA
 15146                           fsr0l	equ	0xFE9
 15147                           wreg	equ	0xFE8
 15148                           indf1	equ	0xFE7
 15149                           fsr1h	equ	0xFE2
 15150                           fsr1l	equ	0xFE1
 15151                           indf2	equ	0xFDF
 15152                           postinc2	equ	0xFDE
 15153                           postdec2	equ	0xFDD
 15154                           fsr2h	equ	0xFDA
 15155                           fsr2l	equ	0xFD9
 15156                           status	equ	0xFD8
 15157                           
 15158 ;; *************** function i2_putch *****************
 15159 ;; Defined at:
 15160 ;;		line 178 in file "mcc_generated_files/eusart2.c"
 15161 ;; Parameters:    Size  Location     Type
 15162 ;;  txData          1    wreg     unsigned char 
 15163 ;; Auto vars:     Size  Location     Type
 15164 ;;  txData          1    1[COMRAM] unsigned char 
 15165 ;; Return value:  Size  Location     Type
 15166 ;;                  1    wreg      void 
 15167 ;; Registers used:
 15168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15169 ;; Tracked objects:
 15170 ;;		On entry : 0/0
 15171 ;;		On exit  : 0/0
 15172 ;;		Unchanged: 0/0
 15173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15178 ;;Total ram usage:        1 bytes
 15179 ;; Hardware stack levels used:    1
 15180 ;; Hardware stack levels required when called:    1
 15181 ;; This function calls:
 15182 ;;		i2_EUSART2_Write
 15183 ;; This function is called by:
 15184 ;;		i2_printf
 15185 ;; This function uses a non-reentrant model
 15186 ;;
 15187                           
 15188                           	psect	text46
 15189  014F92                     __ptext46:
 15190                           	opt stack 0
 15191  014F92                     i2_putch:
 15192                           	opt stack 21
 15193                           
 15194                           ;incstack = 0
 15195                           ;i2putch@txData stored from wreg
 15196  014F92  6E02               	movwf	i2putch@txData,c
 15197                           
 15198                           ;eusart2.c: 180: EUSART2_Write(txData);
 15199  014F94  5002               	movf	i2putch@txData,w,c
 15200  014F96  EC42  F0A6         	call	i2_EUSART2_Write
 15201  014F9A  0012               	return		;funcret
 15202  014F9C                     __end_ofi2_putch:
 15203                           	opt stack 0
 15204                           tosu	equ	0xFFF
 15205                           tosh	equ	0xFFE
 15206                           tosl	equ	0xFFD
 15207                           pclatu	equ	0xFFB
 15208                           pclath	equ	0xFFA
 15209                           tblptru	equ	0xFF8
 15210                           tblptrh	equ	0xFF7
 15211                           tblptrl	equ	0xFF6
 15212                           tablat	equ	0xFF5
 15213                           prodh	equ	0xFF4
 15214                           prodl	equ	0xFF3
 15215                           intcon	equ	0xFF2
 15216                           postinc0	equ	0xFEE
 15217                           fsr0h	equ	0xFEA
 15218                           fsr0l	equ	0xFE9
 15219                           wreg	equ	0xFE8
 15220                           indf1	equ	0xFE7
 15221                           fsr1h	equ	0xFE2
 15222                           fsr1l	equ	0xFE1
 15223                           indf2	equ	0xFDF
 15224                           postinc2	equ	0xFDE
 15225                           postdec2	equ	0xFDD
 15226                           fsr2h	equ	0xFDA
 15227                           fsr2l	equ	0xFD9
 15228                           status	equ	0xFD8
 15229                           
 15230 ;; *************** function i2_EUSART2_Write *****************
 15231 ;; Defined at:
 15232 ;;		line 150 in file "mcc_generated_files/eusart2.c"
 15233 ;; Parameters:    Size  Location     Type
 15234 ;;  txData          1    wreg     unsigned char 
 15235 ;; Auto vars:     Size  Location     Type
 15236 ;;  txData          1    0[COMRAM] unsigned char 
 15237 ;; Return value:  Size  Location     Type
 15238 ;;                  1    wreg      void 
 15239 ;; Registers used:
 15240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15241 ;; Tracked objects:
 15242 ;;		On entry : 0/0
 15243 ;;		On exit  : 0/0
 15244 ;;		Unchanged: 0/0
 15245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15249 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15250 ;;Total ram usage:        1 bytes
 15251 ;; Hardware stack levels used:    1
 15252 ;; This function calls:
 15253 ;;		Nothing
 15254 ;; This function is called by:
 15255 ;;		i2_putch
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           	psect	text47
 15260  014C84                     __ptext47:
 15261                           	opt stack 0
 15262  014C84                     i2_EUSART2_Write:
 15263                           	opt stack 21
 15264                           
 15265                           ;incstack = 0
 15266                           ;i2EUSART2_Write@txData stored from wreg
 15267  014C84  6E01               	movwf	i2EUSART2_Write@txData,c
 15268  014C86                     
 15269                           ;eusart2.c: 153: {
 15270                           
 15271                           ;eusart2.c: 152: while(0 == eusart2TxBufferRemaining)
 15272  014C86  0100               	movlb	0	; () banked
 15273  014C88  51D4               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 15274  014C8A  B4D8               	btfsc	status,2,c
 15275  014C8C  D7FC               	goto	i2l5050
 15276                           
 15277                           ; BSR set to: 0
 15278                           ;eusart2.c: 154: }
 15279                           ;eusart2.c: 156: if(0 == PIE3bits.TX2IE)
 15280  014C8E  010E               	movlb	14	; () banked
 15281  014C90  BD2C               	btfsc	44,6,b	;volatile
 15282  014C92  D003               	goto	i2l187
 15283                           
 15284                           ; BSR set to: 14
 15285                           ;eusart2.c: 157: {
 15286                           ;eusart2.c: 158: TX2REG = txData;
 15287  014C94  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 15288                           
 15289                           ;eusart2.c: 159: }
 15290  014C98  D013               	goto	i2l188
 15291  014C9A                     i2l187:
 15292                           
 15293                           ; BSR set to: 14
 15294                           ;eusart2.c: 160: else
 15295                           ;eusart2.c: 161: {
 15296                           ;eusart2.c: 162: PIE3bits.TX2IE = 0;
 15297  014C9A  9D2C               	bcf	44,6,b	;volatile
 15298                           
 15299                           ; BSR set to: 14
 15300                           ;eusart2.c: 163: eusart2TxBuffer[eusart2TxHead++] = txData;
 15301  014C9C  0100               	movlb	0	; () banked
 15302  014C9E  51D3               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 15303  014CA0  0D01               	mullw	1
 15304  014CA2  0E40               	movlw	low _eusart2TxBuffer
 15305  014CA4  24F3               	addwf	prodl,w,c
 15306  014CA6  6ED9               	movwf	fsr2l,c
 15307  014CA8  0E02               	movlw	high _eusart2TxBuffer
 15308  014CAA  20F4               	addwfc	prodh,w,c
 15309  014CAC  6EDA               	movwf	fsr2h,c
 15310  014CAE  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 15311                           
 15312                           ; BSR set to: 0
 15313  014CB2  2BD3               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 15314                           
 15315                           ; BSR set to: 0
 15316                           ;eusart2.c: 164: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 15317  014CB4  0E3F               	movlw	63
 15318  014CB6  65D3               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 15319  014CB8  D002               	goto	i2l189
 15320                           
 15321                           ; BSR set to: 0
 15322                           ;eusart2.c: 165: {
 15323                           ;eusart2.c: 166: eusart2TxHead = 0;
 15324  014CBA  0E00               	movlw	0
 15325  014CBC  6FD3               	movwf	_eusart2TxHead& (0+255),b	;volatile
 15326  014CBE                     i2l189:
 15327                           
 15328                           ; BSR set to: 0
 15329                           ;eusart2.c: 167: }
 15330                           ;eusart2.c: 168: eusart2TxBufferRemaining--;
 15331                           
 15332                           ; BSR set to: 0
 15333  014CBE  07D4               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 15334  014CC0                     i2l188:
 15335                           
 15336                           ;eusart2.c: 169: }
 15337                           ;eusart2.c: 170: PIE3bits.TX2IE = 1;
 15338                           
 15339                           ; BSR set to: 0
 15340  014CC0  010E               	movlb	14	; () banked
 15341  014CC2  8D2C               	bsf	44,6,b	;volatile
 15342                           
 15343                           ; BSR set to: 14
 15344  014CC4  0012               	return		;funcret
 15345  014CC6                     __end_ofi2_EUSART2_Write:
 15346                           	opt stack 0
 15347                           tosu	equ	0xFFF
 15348                           tosh	equ	0xFFE
 15349                           tosl	equ	0xFFD
 15350                           pclatu	equ	0xFFB
 15351                           pclath	equ	0xFFA
 15352                           tblptru	equ	0xFF8
 15353                           tblptrh	equ	0xFF7
 15354                           tblptrl	equ	0xFF6
 15355                           tablat	equ	0xFF5
 15356                           prodh	equ	0xFF4
 15357                           prodl	equ	0xFF3
 15358                           intcon	equ	0xFF2
 15359                           postinc0	equ	0xFEE
 15360                           fsr0h	equ	0xFEA
 15361                           fsr0l	equ	0xFE9
 15362                           wreg	equ	0xFE8
 15363                           indf1	equ	0xFE7
 15364                           fsr1h	equ	0xFE2
 15365                           fsr1l	equ	0xFE1
 15366                           indf2	equ	0xFDF
 15367                           postinc2	equ	0xFDE
 15368                           postdec2	equ	0xFDD
 15369                           fsr2h	equ	0xFDA
 15370                           fsr2l	equ	0xFD9
 15371                           status	equ	0xFD8
 15372                           
 15373 ;; *************** function i2_fround *****************
 15374 ;; Defined at:
 15375 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 15376 ;; Parameters:    Size  Location     Type
 15377 ;;  prec            1    wreg     unsigned char 
 15378 ;; Auto vars:     Size  Location     Type
 15379 ;;  prec            1   51[COMRAM] unsigned char 
 15380 ;; Return value:  Size  Location     Type
 15381 ;;                  4   39[COMRAM] unsigned char 
 15382 ;; Registers used:
 15383 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15384 ;; Tracked objects:
 15385 ;;		On entry : 0/0
 15386 ;;		On exit  : 0/0
 15387 ;;		Unchanged: 0/0
 15388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15390 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15392 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15393 ;;Total ram usage:       13 bytes
 15394 ;; Hardware stack levels used:    1
 15395 ;; Hardware stack levels required when called:    1
 15396 ;; This function calls:
 15397 ;;		i2___awdiv
 15398 ;;		i2___awmod
 15399 ;;		i2___flmul
 15400 ;; This function is called by:
 15401 ;;		i2_printf
 15402 ;; This function uses a non-reentrant model
 15403 ;;
 15404                           
 15405                           	psect	text48
 15406  013592                     __ptext48:
 15407                           	opt stack 0
 15408  013592                     i2_fround:
 15409                           	opt stack 21
 15410                           
 15411                           ; BSR set to: 14
 15412                           ;incstack = 0
 15413                           ;i2fround@prec stored from wreg
 15414  013592  6E34               	movwf	i2fround@prec,c
 15415                           
 15416                           ;doprnt.c: 413: if(prec>=110)
 15417  013594  0E6D               	movlw	109
 15418  013596  6434               	cpfsgt	i2fround@prec,c
 15419  013598  D0B5               	goto	i2l403
 15420                           
 15421                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15422  01359A  0E00               	movlw	0
 15423  01359C  6E0A               	movwf	i2___awdiv@divisor+1,c
 15424  01359E  0E0A               	movlw	10
 15425  0135A0  6E09               	movwf	i2___awdiv@divisor,c
 15426  0135A2  0E00               	movlw	0
 15427  0135A4  6E04               	movwf	i2___awmod@divisor+1,c
 15428  0135A6  0E64               	movlw	100
 15429  0135A8  6E03               	movwf	i2___awmod@divisor,c
 15430  0135AA  C034  F001         	movff	i2fround@prec,i2___awmod@dividend
 15431  0135AE  6A02               	clrf	i2___awmod@dividend+1,c
 15432  0135B0  ECB5  F0A4         	call	i2___awmod	;wreg free
 15433  0135B4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15434  0135B8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15435  0135BC  ECF9  F0A3         	call	i2___awdiv	;wreg free
 15436  0135C0  90D8               	bcf	status,0,c
 15437  0135C2  3607               	rlcf	?i2___awdiv,f,c
 15438  0135C4  3608               	rlcf	?i2___awdiv+1,f,c
 15439  0135C6  90D8               	bcf	status,0,c
 15440  0135C8  3607               	rlcf	?i2___awdiv,f,c
 15441  0135CA  3608               	rlcf	?i2___awdiv+1,f,c
 15442  0135CC  0E24               	movlw	36
 15443  0135CE  2607               	addwf	?i2___awdiv,f,c
 15444  0135D0  0E00               	movlw	0
 15445  0135D2  2208               	addwfc	?i2___awdiv+1,f,c
 15446  0135D4  0E2F               	movlw	low __npowers_
 15447  0135D6  2407               	addwf	?i2___awdiv,w,c
 15448  0135D8  6EF6               	movwf	tblptrl,c
 15449  0135DA  0EFC               	movlw	high __npowers_
 15450  0135DC  2008               	addwfc	?i2___awdiv+1,w,c
 15451  0135DE  6EF7               	movwf	tblptrh,c
 15452  0135E0                     	if	1	;There are 3 active tblptr bytes
 15453  0135E0  6AF8               	clrf	tblptru,c
 15454  0135E2  0E00               	movlw	low (__mediumconst shr (0+16))
 15455  0135E4  22F8               	addwfc	tblptru,f,c
 15456  0135E6                     	endif
 15457  0135E6  0009               	tblrd		*+
 15458  0135E8  CFF5 F013          	movff	tablat,i2___flmul@a
 15459  0135EC  0009               	tblrd		*+
 15460  0135EE  CFF5 F014          	movff	tablat,i2___flmul@a+1
 15461  0135F2  0009               	tblrd		*+
 15462  0135F4  CFF5 F015          	movff	tablat,i2___flmul@a+2
 15463  0135F8  000A               	tblrd		*-
 15464  0135FA  CFF5 F016          	movff	tablat,i2___flmul@a+3
 15465  0135FE  0E00               	movlw	0
 15466  013600  6E0A               	movwf	i2___awdiv@divisor+1,c
 15467  013602  0E64               	movlw	100
 15468  013604  6E09               	movwf	i2___awdiv@divisor,c
 15469  013606  C034  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15470  01360A  6A08               	clrf	i2___awdiv@dividend+1,c
 15471  01360C  ECF9  F0A3         	call	i2___awdiv	;wreg free
 15472  013610  90D8               	bcf	status,0,c
 15473  013612  3607               	rlcf	?i2___awdiv,f,c
 15474  013614  3608               	rlcf	?i2___awdiv+1,f,c
 15475  013616  90D8               	bcf	status,0,c
 15476  013618  3607               	rlcf	?i2___awdiv,f,c
 15477  01361A  3608               	rlcf	?i2___awdiv+1,f,c
 15478  01361C  0E48               	movlw	72
 15479  01361E  2607               	addwf	?i2___awdiv,f,c
 15480  013620  0E00               	movlw	0
 15481  013622  2208               	addwfc	?i2___awdiv+1,f,c
 15482  013624  0E2F               	movlw	low __npowers_
 15483  013626  2407               	addwf	?i2___awdiv,w,c
 15484  013628  6EF6               	movwf	tblptrl,c
 15485  01362A  0EFC               	movlw	high __npowers_
 15486  01362C  2008               	addwfc	?i2___awdiv+1,w,c
 15487  01362E  6EF7               	movwf	tblptrh,c
 15488  013630                     	if	1	;There are 3 active tblptr bytes
 15489  013630  6AF8               	clrf	tblptru,c
 15490  013632  0E00               	movlw	low (__mediumconst shr (0+16))
 15491  013634  22F8               	addwfc	tblptru,f,c
 15492  013636                     	endif
 15493  013636  0009               	tblrd		*+
 15494  013638  CFF5 F00F          	movff	tablat,i2___flmul@b
 15495  01363C  0009               	tblrd		*+
 15496  01363E  CFF5 F010          	movff	tablat,i2___flmul@b+1
 15497  013642  0009               	tblrd		*+
 15498  013644  CFF5 F011          	movff	tablat,i2___flmul@b+2
 15499  013648  000A               	tblrd		*-
 15500  01364A  CFF5 F012          	movff	tablat,i2___flmul@b+3
 15501  01364E  ECC5  F094         	call	i2___flmul	;wreg free
 15502  013652  C00F  F030         	movff	?i2___flmul,i2_fround$1538
 15503  013656  C010  F031         	movff	?i2___flmul+1,i2_fround$1538+1
 15504  01365A  C011  F032         	movff	?i2___flmul+2,i2_fround$1538+2
 15505  01365E  C012  F033         	movff	?i2___flmul+3,i2_fround$1538+3
 15506                           
 15507                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15508  013662  0E00               	movlw	0
 15509  013664  6E04               	movwf	i2___awmod@divisor+1,c
 15510  013666  0E0A               	movlw	10
 15511  013668  6E03               	movwf	i2___awmod@divisor,c
 15512  01366A  C034  F001         	movff	i2fround@prec,i2___awmod@dividend
 15513  01366E  6A02               	clrf	i2___awmod@dividend+1,c
 15514  013670  ECB5  F0A4         	call	i2___awmod	;wreg free
 15515  013674  90D8               	bcf	status,0,c
 15516  013676  3601               	rlcf	?i2___awmod,f,c
 15517  013678  3602               	rlcf	?i2___awmod+1,f,c
 15518  01367A  90D8               	bcf	status,0,c
 15519  01367C  3601               	rlcf	?i2___awmod,f,c
 15520  01367E  3602               	rlcf	?i2___awmod+1,f,c
 15521  013680  0E2F               	movlw	low __npowers_
 15522  013682  2401               	addwf	?i2___awmod,w,c
 15523  013684  6EF6               	movwf	tblptrl,c
 15524  013686  0EFC               	movlw	high __npowers_
 15525  013688  2002               	addwfc	?i2___awmod+1,w,c
 15526  01368A  6EF7               	movwf	tblptrh,c
 15527  01368C                     	if	1	;There are 3 active tblptr bytes
 15528  01368C  6AF8               	clrf	tblptru,c
 15529  01368E  0E00               	movlw	low (__mediumconst shr (0+16))
 15530  013690  22F8               	addwfc	tblptru,f,c
 15531  013692                     	endif
 15532  013692  0009               	tblrd		*+
 15533  013694  CFF5 F013          	movff	tablat,i2___flmul@a
 15534  013698  0009               	tblrd		*+
 15535  01369A  CFF5 F014          	movff	tablat,i2___flmul@a+1
 15536  01369E  0009               	tblrd		*+
 15537  0136A0  CFF5 F015          	movff	tablat,i2___flmul@a+2
 15538  0136A4  000A               	tblrd		*-
 15539  0136A6  CFF5 F016          	movff	tablat,i2___flmul@a+3
 15540  0136AA  C030  F00F         	movff	i2_fround$1538,i2___flmul@b
 15541  0136AE  C031  F010         	movff	i2_fround$1538+1,i2___flmul@b+1
 15542  0136B2  C032  F011         	movff	i2_fround$1538+2,i2___flmul@b+2
 15543  0136B6  C033  F012         	movff	i2_fround$1538+3,i2___flmul@b+3
 15544  0136BA  ECC5  F094         	call	i2___flmul	;wreg free
 15545  0136BE  C00F  F02C         	movff	?i2___flmul,i2_fround$1539
 15546  0136C2  C010  F02D         	movff	?i2___flmul+1,i2_fround$1539+1
 15547  0136C6  C011  F02E         	movff	?i2___flmul+2,i2_fround$1539+2
 15548  0136CA  C012  F02F         	movff	?i2___flmul+3,i2_fround$1539+3
 15549                           
 15550                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15551  0136CE  C02C  F00F         	movff	i2_fround$1539,i2___flmul@b
 15552  0136D2  C02D  F010         	movff	i2_fround$1539+1,i2___flmul@b+1
 15553  0136D6  C02E  F011         	movff	i2_fround$1539+2,i2___flmul@b+2
 15554  0136DA  C02F  F012         	movff	i2_fround$1539+3,i2___flmul@b+3
 15555  0136DE  0E00               	movlw	0
 15556  0136E0  6E13               	movwf	i2___flmul@a,c
 15557  0136E2  0E00               	movlw	0
 15558  0136E4  6E14               	movwf	i2___flmul@a+1,c
 15559  0136E6  0E00               	movlw	0
 15560  0136E8  6E15               	movwf	i2___flmul@a+2,c
 15561  0136EA  0E3F               	movlw	63
 15562  0136EC  6E16               	movwf	i2___flmul@a+3,c
 15563  0136EE  ECC5  F094         	call	i2___flmul	;wreg free
 15564  0136F2  C00F  F028         	movff	?i2___flmul,?i2_fround
 15565  0136F6  C010  F029         	movff	?i2___flmul+1,?i2_fround+1
 15566  0136FA  C011  F02A         	movff	?i2___flmul+2,?i2_fround+2
 15567  0136FE  C012  F02B         	movff	?i2___flmul+3,?i2_fround+3
 15568  013702  0012               	return	
 15569  013704                     i2l403:
 15570                           
 15571                           ;doprnt.c: 415: else if(prec > 10)
 15572  013704  0E0A               	movlw	10
 15573  013706  6434               	cpfsgt	i2fround@prec,c
 15574  013708  D071               	goto	i2l406
 15575                           
 15576                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15577  01370A  0E00               	movlw	0
 15578  01370C  6E04               	movwf	i2___awmod@divisor+1,c
 15579  01370E  0E0A               	movlw	10
 15580  013710  6E03               	movwf	i2___awmod@divisor,c
 15581  013712  C034  F001         	movff	i2fround@prec,i2___awmod@dividend
 15582  013716  6A02               	clrf	i2___awmod@dividend+1,c
 15583  013718  ECB5  F0A4         	call	i2___awmod	;wreg free
 15584  01371C  90D8               	bcf	status,0,c
 15585  01371E  3601               	rlcf	?i2___awmod,f,c
 15586  013720  3602               	rlcf	?i2___awmod+1,f,c
 15587  013722  90D8               	bcf	status,0,c
 15588  013724  3601               	rlcf	?i2___awmod,f,c
 15589  013726  3602               	rlcf	?i2___awmod+1,f,c
 15590  013728  0E2F               	movlw	low __npowers_
 15591  01372A  2401               	addwf	?i2___awmod,w,c
 15592  01372C  6EF6               	movwf	tblptrl,c
 15593  01372E  0EFC               	movlw	high __npowers_
 15594  013730  2002               	addwfc	?i2___awmod+1,w,c
 15595  013732  6EF7               	movwf	tblptrh,c
 15596  013734                     	if	1	;There are 3 active tblptr bytes
 15597  013734  6AF8               	clrf	tblptru,c
 15598  013736  0E00               	movlw	low (__mediumconst shr (0+16))
 15599  013738  22F8               	addwfc	tblptru,f,c
 15600  01373A                     	endif
 15601  01373A  0009               	tblrd		*+
 15602  01373C  CFF5 F013          	movff	tablat,i2___flmul@a
 15603  013740  0009               	tblrd		*+
 15604  013742  CFF5 F014          	movff	tablat,i2___flmul@a+1
 15605  013746  0009               	tblrd		*+
 15606  013748  CFF5 F015          	movff	tablat,i2___flmul@a+2
 15607  01374C  000A               	tblrd		*-
 15608  01374E  CFF5 F016          	movff	tablat,i2___flmul@a+3
 15609  013752  0E00               	movlw	0
 15610  013754  6E0A               	movwf	i2___awdiv@divisor+1,c
 15611  013756  0E0A               	movlw	10
 15612  013758  6E09               	movwf	i2___awdiv@divisor,c
 15613  01375A  C034  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15614  01375E  6A08               	clrf	i2___awdiv@dividend+1,c
 15615  013760  ECF9  F0A3         	call	i2___awdiv	;wreg free
 15616  013764  90D8               	bcf	status,0,c
 15617  013766  3607               	rlcf	?i2___awdiv,f,c
 15618  013768  3608               	rlcf	?i2___awdiv+1,f,c
 15619  01376A  90D8               	bcf	status,0,c
 15620  01376C  3607               	rlcf	?i2___awdiv,f,c
 15621  01376E  3608               	rlcf	?i2___awdiv+1,f,c
 15622  013770  0E24               	movlw	36
 15623  013772  2607               	addwf	?i2___awdiv,f,c
 15624  013774  0E00               	movlw	0
 15625  013776  2208               	addwfc	?i2___awdiv+1,f,c
 15626  013778  0E2F               	movlw	low __npowers_
 15627  01377A  2407               	addwf	?i2___awdiv,w,c
 15628  01377C  6EF6               	movwf	tblptrl,c
 15629  01377E  0EFC               	movlw	high __npowers_
 15630  013780  2008               	addwfc	?i2___awdiv+1,w,c
 15631  013782  6EF7               	movwf	tblptrh,c
 15632  013784                     	if	1	;There are 3 active tblptr bytes
 15633  013784  6AF8               	clrf	tblptru,c
 15634  013786  0E00               	movlw	low (__mediumconst shr (0+16))
 15635  013788  22F8               	addwfc	tblptru,f,c
 15636  01378A                     	endif
 15637  01378A  0009               	tblrd		*+
 15638  01378C  CFF5 F00F          	movff	tablat,i2___flmul@b
 15639  013790  0009               	tblrd		*+
 15640  013792  CFF5 F010          	movff	tablat,i2___flmul@b+1
 15641  013796  0009               	tblrd		*+
 15642  013798  CFF5 F011          	movff	tablat,i2___flmul@b+2
 15643  01379C  000A               	tblrd		*-
 15644  01379E  CFF5 F012          	movff	tablat,i2___flmul@b+3
 15645  0137A2  ECC5  F094         	call	i2___flmul	;wreg free
 15646  0137A6  C00F  F030         	movff	?i2___flmul,i2_fround$1538
 15647  0137AA  C010  F031         	movff	?i2___flmul+1,i2_fround$1538+1
 15648  0137AE  C011  F032         	movff	?i2___flmul+2,i2_fround$1538+2
 15649  0137B2  C012  F033         	movff	?i2___flmul+3,i2_fround$1538+3
 15650                           
 15651                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15652  0137B6  C030  F00F         	movff	i2_fround$1538,i2___flmul@b
 15653  0137BA  C031  F010         	movff	i2_fround$1538+1,i2___flmul@b+1
 15654  0137BE  C032  F011         	movff	i2_fround$1538+2,i2___flmul@b+2
 15655  0137C2  C033  F012         	movff	i2_fround$1538+3,i2___flmul@b+3
 15656  0137C6  0E00               	movlw	0
 15657  0137C8  6E13               	movwf	i2___flmul@a,c
 15658  0137CA  0E00               	movlw	0
 15659  0137CC  6E14               	movwf	i2___flmul@a+1,c
 15660  0137CE  0E00               	movlw	0
 15661  0137D0  6E15               	movwf	i2___flmul@a+2,c
 15662  0137D2  0E3F               	movlw	63
 15663  0137D4  6E16               	movwf	i2___flmul@a+3,c
 15664  0137D6  ECC5  F094         	call	i2___flmul	;wreg free
 15665  0137DA  C00F  F028         	movff	?i2___flmul,?i2_fround
 15666  0137DE  C010  F029         	movff	?i2___flmul+1,?i2_fround+1
 15667  0137E2  C011  F02A         	movff	?i2___flmul+2,?i2_fround+2
 15668  0137E6  C012  F02B         	movff	?i2___flmul+3,?i2_fround+3
 15669  0137EA  0012               	return	
 15670  0137EC                     i2l406:
 15671                           
 15672                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 15673  0137EC  5034               	movf	i2fround@prec,w,c
 15674  0137EE  0D04               	mullw	4
 15675  0137F0  0E2F               	movlw	low __npowers_
 15676  0137F2  24F3               	addwf	prodl,w,c
 15677  0137F4  6EF6               	movwf	tblptrl,c
 15678  0137F6  0EFC               	movlw	high __npowers_
 15679  0137F8  20F4               	addwfc	prodh,w,c
 15680  0137FA  6EF7               	movwf	tblptrh,c
 15681  0137FC                     	if	1	;There are 3 active tblptr bytes
 15682  0137FC  6AF8               	clrf	tblptru,c
 15683  0137FE  0E00               	movlw	low (__mediumconst shr (0+16))
 15684  013800  22F8               	addwfc	tblptru,f,c
 15685  013802                     	endif
 15686  013802  0009               	tblrd		*+
 15687  013804  CFF5 F00F          	movff	tablat,i2___flmul@b
 15688  013808  0009               	tblrd		*+
 15689  01380A  CFF5 F010          	movff	tablat,i2___flmul@b+1
 15690  01380E  0009               	tblrd		*+
 15691  013810  CFF5 F011          	movff	tablat,i2___flmul@b+2
 15692  013814  000A               	tblrd		*-
 15693  013816  CFF5 F012          	movff	tablat,i2___flmul@b+3
 15694  01381A  0E00               	movlw	0
 15695  01381C  6E13               	movwf	i2___flmul@a,c
 15696  01381E  0E00               	movlw	0
 15697  013820  6E14               	movwf	i2___flmul@a+1,c
 15698  013822  0E00               	movlw	0
 15699  013824  6E15               	movwf	i2___flmul@a+2,c
 15700  013826  0E3F               	movlw	63
 15701  013828  6E16               	movwf	i2___flmul@a+3,c
 15702  01382A  ECC5  F094         	call	i2___flmul	;wreg free
 15703  01382E  C00F  F028         	movff	?i2___flmul,?i2_fround
 15704  013832  C010  F029         	movff	?i2___flmul+1,?i2_fround+1
 15705  013836  C011  F02A         	movff	?i2___flmul+2,?i2_fround+2
 15706  01383A  C012  F02B         	movff	?i2___flmul+3,?i2_fround+3
 15707  01383E  0012               	return	
 15708  013840                     __end_ofi2_fround:
 15709                           	opt stack 0
 15710                           tosu	equ	0xFFF
 15711                           tosh	equ	0xFFE
 15712                           tosl	equ	0xFFD
 15713                           pclatu	equ	0xFFB
 15714                           pclath	equ	0xFFA
 15715                           tblptru	equ	0xFF8
 15716                           tblptrh	equ	0xFF7
 15717                           tblptrl	equ	0xFF6
 15718                           tablat	equ	0xFF5
 15719                           prodh	equ	0xFF4
 15720                           prodl	equ	0xFF3
 15721                           intcon	equ	0xFF2
 15722                           postinc0	equ	0xFEE
 15723                           fsr0h	equ	0xFEA
 15724                           fsr0l	equ	0xFE9
 15725                           wreg	equ	0xFE8
 15726                           indf1	equ	0xFE7
 15727                           fsr1h	equ	0xFE2
 15728                           fsr1l	equ	0xFE1
 15729                           indf2	equ	0xFDF
 15730                           postinc2	equ	0xFDE
 15731                           postdec2	equ	0xFDD
 15732                           fsr2h	equ	0xFDA
 15733                           fsr2l	equ	0xFD9
 15734                           status	equ	0xFD8
 15735                           
 15736 ;; *************** function i2___flmul *****************
 15737 ;; Defined at:
 15738 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 15739 ;; Parameters:    Size  Location     Type
 15740 ;;  b               4   14[COMRAM] unsigned char 
 15741 ;;  a               4   18[COMRAM] unsigned char 
 15742 ;; Auto vars:     Size  Location     Type
 15743 ;;  __flmul         4   33[COMRAM] struct .
 15744 ;;  __flmul         4   27[COMRAM] unsigned long 
 15745 ;;  __flmul         2   37[COMRAM] struct .
 15746 ;;  __flmul         1   32[COMRAM] unsigned char 
 15747 ;;  __flmul         1   31[COMRAM] unsigned char 
 15748 ;;  __flmul         1   26[COMRAM] unsigned char 
 15749 ;; Return value:  Size  Location     Type
 15750 ;;                  4   14[COMRAM] unsigned char 
 15751 ;; Registers used:
 15752 ;;		wreg, status,2, status,0, prodl, prodh
 15753 ;; Tracked objects:
 15754 ;;		On entry : 0/0
 15755 ;;		On exit  : 0/0
 15756 ;;		Unchanged: 0/0
 15757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15758 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15759 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15760 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15761 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15762 ;;Total ram usage:       25 bytes
 15763 ;; Hardware stack levels used:    1
 15764 ;; This function calls:
 15765 ;;		Nothing
 15766 ;; This function is called by:
 15767 ;;		i2_fround
 15768 ;;		i2_scale
 15769 ;;		i2_printf
 15770 ;; This function uses a non-reentrant model
 15771 ;;
 15772                           
 15773                           	psect	text49
 15774  01298A                     __ptext49:
 15775                           	opt stack 0
 15776  01298A                     i2___flmul:
 15777                           	opt stack 21
 15778                           
 15779                           ;incstack = 0
 15780  01298A  5012               	movf	i2___flmul@b+3,w,c
 15781  01298C  0B80               	andlw	128
 15782  01298E  6E1B               	movwf	i2___flmul@sign,c
 15783  012990  5012               	movf	i2___flmul@b+3,w,c
 15784  012992  2412               	addwf	i2___flmul@b+3,w,c
 15785  012994  6E21               	movwf	i2___flmul@bexp,c
 15786  012996  BE11               	btfsc	i2___flmul@b+2,7,c
 15787  012998  8021               	bsf	i2___flmul@bexp,0,c
 15788  01299A  5021               	movf	i2___flmul@bexp,w,c
 15789  01299C  B4D8               	btfsc	status,2,c
 15790  01299E  D00D               	goto	i2l1120
 15791  0129A0  2821               	incf	i2___flmul@bexp,w,c
 15792  0129A2  A4D8               	btfss	status,2,c
 15793  0129A4  D008               	goto	i2l1121
 15794  0129A6  0E00               	movlw	0
 15795  0129A8  6E0F               	movwf	i2___flmul@b,c
 15796  0129AA  0E00               	movlw	0
 15797  0129AC  6E10               	movwf	i2___flmul@b+1,c
 15798  0129AE  0E00               	movlw	0
 15799  0129B0  6E11               	movwf	i2___flmul@b+2,c
 15800  0129B2  0E00               	movlw	0
 15801  0129B4  6E12               	movwf	i2___flmul@b+3,c
 15802  0129B6                     i2l1121:
 15803  0129B6  8E11               	bsf	i2___flmul@b+2,7,c
 15804  0129B8  D008               	goto	i2l1122
 15805  0129BA                     i2l1120:
 15806  0129BA  0E00               	movlw	0
 15807  0129BC  6E0F               	movwf	i2___flmul@b,c
 15808  0129BE  0E00               	movlw	0
 15809  0129C0  6E10               	movwf	i2___flmul@b+1,c
 15810  0129C2  0E00               	movlw	0
 15811  0129C4  6E11               	movwf	i2___flmul@b+2,c
 15812  0129C6  0E00               	movlw	0
 15813  0129C8  6E12               	movwf	i2___flmul@b+3,c
 15814  0129CA                     i2l1122:
 15815  0129CA  5016               	movf	i2___flmul@a+3,w,c
 15816  0129CC  0B80               	andlw	128
 15817  0129CE  1A1B               	xorwf	i2___flmul@sign,f,c
 15818  0129D0  5016               	movf	i2___flmul@a+3,w,c
 15819  0129D2  2416               	addwf	i2___flmul@a+3,w,c
 15820  0129D4  6E20               	movwf	i2___flmul@aexp,c
 15821  0129D6  BE15               	btfsc	i2___flmul@a+2,7,c
 15822  0129D8  8020               	bsf	i2___flmul@aexp,0,c
 15823  0129DA  5020               	movf	i2___flmul@aexp,w,c
 15824  0129DC  B4D8               	btfsc	status,2,c
 15825  0129DE  D00D               	goto	i2l1124
 15826  0129E0  2820               	incf	i2___flmul@aexp,w,c
 15827  0129E2  A4D8               	btfss	status,2,c
 15828  0129E4  D008               	goto	i2l1125
 15829  0129E6  0E00               	movlw	0
 15830  0129E8  6E13               	movwf	i2___flmul@a,c
 15831  0129EA  0E00               	movlw	0
 15832  0129EC  6E14               	movwf	i2___flmul@a+1,c
 15833  0129EE  0E00               	movlw	0
 15834  0129F0  6E15               	movwf	i2___flmul@a+2,c
 15835  0129F2  0E00               	movlw	0
 15836  0129F4  6E16               	movwf	i2___flmul@a+3,c
 15837  0129F6                     i2l1125:
 15838  0129F6  8E15               	bsf	i2___flmul@a+2,7,c
 15839  0129F8  D008               	goto	i2l1126
 15840  0129FA                     i2l1124:
 15841  0129FA  0E00               	movlw	0
 15842  0129FC  6E13               	movwf	i2___flmul@a,c
 15843  0129FE  0E00               	movlw	0
 15844  012A00  6E14               	movwf	i2___flmul@a+1,c
 15845  012A02  0E00               	movlw	0
 15846  012A04  6E15               	movwf	i2___flmul@a+2,c
 15847  012A06  0E00               	movlw	0
 15848  012A08  6E16               	movwf	i2___flmul@a+3,c
 15849  012A0A                     i2l1126:
 15850  012A0A  5020               	movf	i2___flmul@aexp,w,c
 15851  012A0C  B4D8               	btfsc	status,2,c
 15852  012A0E  D003               	goto	i2u679_40
 15853  012A10  5021               	movf	i2___flmul@bexp,w,c
 15854  012A12  A4D8               	btfss	status,2,c
 15855  012A14  D009               	goto	i2l1127
 15856  012A16                     i2u679_40:
 15857  012A16  0E00               	movlw	0
 15858  012A18  6E0F               	movwf	?i2___flmul,c
 15859  012A1A  0E00               	movlw	0
 15860  012A1C  6E10               	movwf	?i2___flmul+1,c
 15861  012A1E  0E00               	movlw	0
 15862  012A20  6E11               	movwf	?i2___flmul+2,c
 15863  012A22  0E00               	movlw	0
 15864  012A24  6E12               	movwf	?i2___flmul+3,c
 15865  012A26  0012               	return	
 15866  012A28                     i2l1127:
 15867  012A28  5015               	movf	i2___flmul@a+2,w,c
 15868  012A2A  020F               	mulwf	i2___flmul@b,c
 15869  012A2C  CFF3 F026          	movff	prodl,i2___flmul@temp
 15870  012A30  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 15871  012A34  5026               	movf	i2___flmul@temp,w,c
 15872  012A36  6E1C               	movwf	i2___flmul@grs,c
 15873  012A38  6A1D               	clrf	i2___flmul@grs+1,c
 15874  012A3A  6A1E               	clrf	i2___flmul@grs+2,c
 15875  012A3C  6A1F               	clrf	i2___flmul@grs+3,c
 15876  012A3E  5027               	movf	i2___flmul@temp+1,w,c
 15877  012A40  6E22               	movwf	i2___flmul@prod,c
 15878  012A42  6A23               	clrf	i2___flmul@prod+1,c
 15879  012A44  6A24               	clrf	i2___flmul@prod+2,c
 15880  012A46  6A25               	clrf	i2___flmul@prod+3,c
 15881  012A48  5014               	movf	i2___flmul@a+1,w,c
 15882  012A4A  0210               	mulwf	i2___flmul@b+1,c
 15883  012A4C  CFF3 F026          	movff	prodl,i2___flmul@temp
 15884  012A50  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 15885  012A54  5026               	movf	i2___flmul@temp,w,c
 15886  012A56  261C               	addwf	i2___flmul@grs,f,c
 15887  012A58  0E00               	movlw	0
 15888  012A5A  221D               	addwfc	i2___flmul@grs+1,f,c
 15889  012A5C  221E               	addwfc	i2___flmul@grs+2,f,c
 15890  012A5E  221F               	addwfc	i2___flmul@grs+3,f,c
 15891  012A60  5027               	movf	i2___flmul@temp+1,w,c
 15892  012A62  2622               	addwf	i2___flmul@prod,f,c
 15893  012A64  0E00               	movlw	0
 15894  012A66  2223               	addwfc	i2___flmul@prod+1,f,c
 15895  012A68  2224               	addwfc	i2___flmul@prod+2,f,c
 15896  012A6A  2225               	addwfc	i2___flmul@prod+3,f,c
 15897  012A6C  5013               	movf	i2___flmul@a,w,c
 15898  012A6E  0211               	mulwf	i2___flmul@b+2,c
 15899  012A70  CFF3 F026          	movff	prodl,i2___flmul@temp
 15900  012A74  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 15901  012A78  5026               	movf	i2___flmul@temp,w,c
 15902  012A7A  261C               	addwf	i2___flmul@grs,f,c
 15903  012A7C  0E00               	movlw	0
 15904  012A7E  221D               	addwfc	i2___flmul@grs+1,f,c
 15905  012A80  221E               	addwfc	i2___flmul@grs+2,f,c
 15906  012A82  221F               	addwfc	i2___flmul@grs+3,f,c
 15907  012A84  5027               	movf	i2___flmul@temp+1,w,c
 15908  012A86  2622               	addwf	i2___flmul@prod,f,c
 15909  012A88  0E00               	movlw	0
 15910  012A8A  2223               	addwfc	i2___flmul@prod+1,f,c
 15911  012A8C  2224               	addwfc	i2___flmul@prod+2,f,c
 15912  012A8E  2225               	addwfc	i2___flmul@prod+3,f,c
 15913  012A90  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 15914  012A94  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 15915  012A98  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 15916  012A9C  6A1C               	clrf	i2___flmul@grs,c
 15917  012A9E  5013               	movf	i2___flmul@a,w,c
 15918  012AA0  0210               	mulwf	i2___flmul@b+1,c
 15919  012AA2  CFF3 F026          	movff	prodl,i2___flmul@temp
 15920  012AA6  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 15921  012AAA  5026               	movf	i2___flmul@temp,w,c
 15922  012AAC  261C               	addwf	i2___flmul@grs,f,c
 15923  012AAE  5027               	movf	i2___flmul@temp+1,w,c
 15924  012AB0  221D               	addwfc	i2___flmul@grs+1,f,c
 15925  012AB2  0E00               	movlw	0
 15926  012AB4  221E               	addwfc	i2___flmul@grs+2,f,c
 15927  012AB6  0E00               	movlw	0
 15928  012AB8  221F               	addwfc	i2___flmul@grs+3,f,c
 15929  012ABA  5014               	movf	i2___flmul@a+1,w,c
 15930  012ABC  020F               	mulwf	i2___flmul@b,c
 15931  012ABE  CFF3 F026          	movff	prodl,i2___flmul@temp
 15932  012AC2  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 15933  012AC6  5026               	movf	i2___flmul@temp,w,c
 15934  012AC8  261C               	addwf	i2___flmul@grs,f,c
 15935  012ACA  5027               	movf	i2___flmul@temp+1,w,c
 15936  012ACC  221D               	addwfc	i2___flmul@grs+1,f,c
 15937  012ACE  0E00               	movlw	0
 15938  012AD0  221E               	addwfc	i2___flmul@grs+2,f,c
 15939  012AD2  0E00               	movlw	0
 15940  012AD4  221F               	addwfc	i2___flmul@grs+3,f,c
 15941  012AD6  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 15942  012ADA  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 15943  012ADE  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 15944  012AE2  6A1C               	clrf	i2___flmul@grs,c
 15945  012AE4  5013               	movf	i2___flmul@a,w,c
 15946  012AE6  020F               	mulwf	i2___flmul@b,c
 15947  012AE8  CFF3 F026          	movff	prodl,i2___flmul@temp
 15948  012AEC  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 15949  012AF0  5026               	movf	i2___flmul@temp,w,c
 15950  012AF2  261C               	addwf	i2___flmul@grs,f,c
 15951  012AF4  5027               	movf	i2___flmul@temp+1,w,c
 15952  012AF6  221D               	addwfc	i2___flmul@grs+1,f,c
 15953  012AF8  0E00               	movlw	0
 15954  012AFA  221E               	addwfc	i2___flmul@grs+2,f,c
 15955  012AFC  0E00               	movlw	0
 15956  012AFE  221F               	addwfc	i2___flmul@grs+3,f,c
 15957  012B00  5015               	movf	i2___flmul@a+2,w,c
 15958  012B02  0210               	mulwf	i2___flmul@b+1,c
 15959  012B04  CFF3 F026          	movff	prodl,i2___flmul@temp
 15960  012B08  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 15961  012B0C  5026               	movf	i2___flmul@temp,w,c
 15962  012B0E  2622               	addwf	i2___flmul@prod,f,c
 15963  012B10  5027               	movf	i2___flmul@temp+1,w,c
 15964  012B12  2223               	addwfc	i2___flmul@prod+1,f,c
 15965  012B14  0E00               	movlw	0
 15966  012B16  2224               	addwfc	i2___flmul@prod+2,f,c
 15967  012B18  0E00               	movlw	0
 15968  012B1A  2225               	addwfc	i2___flmul@prod+3,f,c
 15969  012B1C  5014               	movf	i2___flmul@a+1,w,c
 15970  012B1E  0211               	mulwf	i2___flmul@b+2,c
 15971  012B20  CFF3 F026          	movff	prodl,i2___flmul@temp
 15972  012B24  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 15973  012B28  5026               	movf	i2___flmul@temp,w,c
 15974  012B2A  2622               	addwf	i2___flmul@prod,f,c
 15975  012B2C  5027               	movf	i2___flmul@temp+1,w,c
 15976  012B2E  2223               	addwfc	i2___flmul@prod+1,f,c
 15977  012B30  0E00               	movlw	0
 15978  012B32  2224               	addwfc	i2___flmul@prod+2,f,c
 15979  012B34  0E00               	movlw	0
 15980  012B36  2225               	addwfc	i2___flmul@prod+3,f,c
 15981  012B38  5015               	movf	i2___flmul@a+2,w,c
 15982  012B3A  0211               	mulwf	i2___flmul@b+2,c
 15983  012B3C  CFF3 F026          	movff	prodl,i2___flmul@temp
 15984  012B40  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 15985  012B44  5026               	movf	i2___flmul@temp,w,c
 15986  012B46  6E17               	movwf	??i2___flmul& (0+255),c
 15987  012B48  5027               	movf	i2___flmul@temp+1,w,c
 15988  012B4A  6E18               	movwf	(??i2___flmul+1)& (0+255),c
 15989  012B4C  6A19               	clrf	(??i2___flmul+2)& (0+255),c
 15990  012B4E  6A1A               	clrf	(??i2___flmul+3)& (0+255),c
 15991  012B50  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 15992  012B54  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 15993  012B58  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 15994  012B5C  6A17               	clrf	??i2___flmul,c
 15995  012B5E  5017               	movf	??i2___flmul,w,c
 15996  012B60  2622               	addwf	i2___flmul@prod,f,c
 15997  012B62  5018               	movf	??i2___flmul+1,w,c
 15998  012B64  2223               	addwfc	i2___flmul@prod+1,f,c
 15999  012B66  5019               	movf	??i2___flmul+2,w,c
 16000  012B68  2224               	addwfc	i2___flmul@prod+2,f,c
 16001  012B6A  501A               	movf	??i2___flmul+3,w,c
 16002  012B6C  2225               	addwfc	i2___flmul@prod+3,f,c
 16003  012B6E  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 16004  012B72  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 16005  012B76  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 16006  012B7A  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 16007  012B7E  0E19               	movlw	25
 16008  012B80  D005               	goto	i2u680_40
 16009  012B82                     i2u680_45:
 16010  012B82  90D8               	bcf	status,0,c
 16011  012B84  321A               	rrcf	??i2___flmul+3,f,c
 16012  012B86  3219               	rrcf	??i2___flmul+2,f,c
 16013  012B88  3218               	rrcf	??i2___flmul+1,f,c
 16014  012B8A  3217               	rrcf	??i2___flmul,f,c
 16015  012B8C                     i2u680_40:
 16016  012B8C  2EE8               	decfsz	wreg,f,c
 16017  012B8E  D7F9               	goto	i2u680_45
 16018  012B90  5017               	movf	??i2___flmul,w,c
 16019  012B92  2622               	addwf	i2___flmul@prod,f,c
 16020  012B94  5018               	movf	??i2___flmul+1,w,c
 16021  012B96  2223               	addwfc	i2___flmul@prod+1,f,c
 16022  012B98  5019               	movf	??i2___flmul+2,w,c
 16023  012B9A  2224               	addwfc	i2___flmul@prod+2,f,c
 16024  012B9C  501A               	movf	??i2___flmul+3,w,c
 16025  012B9E  2225               	addwfc	i2___flmul@prod+3,f,c
 16026  012BA0  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 16027  012BA4  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 16028  012BA8  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 16029  012BAC  6A1C               	clrf	i2___flmul@grs,c
 16030  012BAE  5020               	movf	i2___flmul@aexp,w,c
 16031  012BB0  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 16032  012BB4  6A18               	clrf	(??i2___flmul+1)& (0+255),c
 16033  012BB6  2617               	addwf	??i2___flmul,f,c
 16034  012BB8  0E00               	movlw	0
 16035  012BBA  2218               	addwfc	??i2___flmul+1,f,c
 16036  012BBC  0E82               	movlw	130
 16037  012BBE  2417               	addwf	??i2___flmul,w,c
 16038  012BC0  6E26               	movwf	i2___flmul@temp,c
 16039  012BC2  0EFF               	movlw	255
 16040  012BC4  2018               	addwfc	??i2___flmul+1,w,c
 16041  012BC6  6E27               	movwf	i2___flmul@temp+1,c
 16042  012BC8  D00F               	goto	i2l1131
 16043  012BCA  90D8               	bcf	status,0,c
 16044  012BCC  3622               	rlcf	i2___flmul@prod,f,c
 16045  012BCE  3623               	rlcf	i2___flmul@prod+1,f,c
 16046  012BD0  3624               	rlcf	i2___flmul@prod+2,f,c
 16047  012BD2  3625               	rlcf	i2___flmul@prod+3,f,c
 16048  012BD4  BE1F               	btfsc	i2___flmul@grs+3,7,c
 16049  012BD6  8022               	bsf	i2___flmul@prod,0,c
 16050  012BD8  90D8               	bcf	status,0,c
 16051  012BDA  361C               	rlcf	i2___flmul@grs,f,c
 16052  012BDC  361D               	rlcf	i2___flmul@grs+1,f,c
 16053  012BDE  361E               	rlcf	i2___flmul@grs+2,f,c
 16054  012BE0  361F               	rlcf	i2___flmul@grs+3,f,c
 16055  012BE2  0626               	decf	i2___flmul@temp,f,c
 16056  012BE4  A0D8               	btfss	status,0,c
 16057  012BE6  0627               	decf	i2___flmul@temp+1,f,c
 16058  012BE8                     i2l1131:
 16059  012BE8  AE24               	btfss	i2___flmul@prod+2,7,c
 16060  012BEA  D7EF               	goto	i2l1132
 16061  012BEC  0E00               	movlw	0
 16062  012BEE  6E20               	movwf	i2___flmul@aexp,c
 16063  012BF0  AE1F               	btfss	i2___flmul@grs+3,7,c
 16064  012BF2  D016               	goto	i2l1138
 16065  012BF4  0EFF               	movlw	255
 16066  012BF6  141C               	andwf	i2___flmul@grs,w,c
 16067  012BF8  6E17               	movwf	??i2___flmul& (0+255),c
 16068  012BFA  0EFF               	movlw	255
 16069  012BFC  141D               	andwf	i2___flmul@grs+1,w,c
 16070  012BFE  6E18               	movwf	(??i2___flmul+1)& (0+255),c
 16071  012C00  0EFF               	movlw	255
 16072  012C02  141E               	andwf	i2___flmul@grs+2,w,c
 16073  012C04  6E19               	movwf	(??i2___flmul+2)& (0+255),c
 16074  012C06  0E7F               	movlw	127
 16075  012C08  141F               	andwf	i2___flmul@grs+3,w,c
 16076  012C0A  6E1A               	movwf	(??i2___flmul+3)& (0+255),c
 16077  012C0C  5017               	movf	??i2___flmul,w,c
 16078  012C0E  1018               	iorwf	??i2___flmul+1,w,c
 16079  012C10  1019               	iorwf	??i2___flmul+2,w,c
 16080  012C12  101A               	iorwf	??i2___flmul+3,w,c
 16081  012C14  A4D8               	btfss	status,2,c
 16082  012C16  D002               	goto	i2u685_40
 16083  012C18  A022               	btfss	i2___flmul@prod,0,c
 16084  012C1A  D002               	goto	i2l1138
 16085  012C1C                     i2u685_40:
 16086  012C1C  0E01               	movlw	1
 16087  012C1E  6E20               	movwf	i2___flmul@aexp,c
 16088  012C20                     i2l1138:
 16089  012C20  5020               	movf	i2___flmul@aexp,w,c
 16090  012C22  B4D8               	btfsc	status,2,c
 16091  012C24  D01F               	goto	i2l1140
 16092  012C26  0E01               	movlw	1
 16093  012C28  2622               	addwf	i2___flmul@prod,f,c
 16094  012C2A  0E00               	movlw	0
 16095  012C2C  2223               	addwfc	i2___flmul@prod+1,f,c
 16096  012C2E  2224               	addwfc	i2___flmul@prod+2,f,c
 16097  012C30  2225               	addwfc	i2___flmul@prod+3,f,c
 16098  012C32  A025               	btfss	i2___flmul@prod+3,0,c
 16099  012C34  D017               	goto	i2l1140
 16100  012C36  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 16101  012C3A  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 16102  012C3E  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 16103  012C42  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 16104  012C46  341A               	rlcf	??i2___flmul+3,w,c
 16105  012C48  321A               	rrcf	??i2___flmul+3,f,c
 16106  012C4A  3219               	rrcf	??i2___flmul+2,f,c
 16107  012C4C  3218               	rrcf	??i2___flmul+1,f,c
 16108  012C4E  3217               	rrcf	??i2___flmul,f,c
 16109  012C50  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 16110  012C54  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 16111  012C58  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 16112  012C5C  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 16113  012C60  4A26               	infsnz	i2___flmul@temp,f,c
 16114  012C62  2A27               	incf	i2___flmul@temp+1,f,c
 16115  012C64                     i2l1140:
 16116  012C64  BE27               	btfsc	i2___flmul@temp+1,7,c
 16117  012C66  D00D               	goto	i2l1141
 16118  012C68  5027               	movf	i2___flmul@temp+1,w,c
 16119  012C6A  E103               	bnz	i2u688_40
 16120  012C6C  2826               	incf	i2___flmul@temp,w,c
 16121  012C6E  A0D8               	btfss	status,0,c
 16122  012C70  D008               	goto	i2l1141
 16123  012C72                     i2u688_40:
 16124  012C72  0E00               	movlw	0
 16125  012C74  6E22               	movwf	i2___flmul@prod,c
 16126  012C76  0E00               	movlw	0
 16127  012C78  6E23               	movwf	i2___flmul@prod+1,c
 16128  012C7A  0E80               	movlw	128
 16129  012C7C  6E24               	movwf	i2___flmul@prod+2,c
 16130  012C7E  0E7F               	movlw	127
 16131  012C80  D020               	goto	L12
 16132  012C82                     i2l1141:
 16133  012C82  BE27               	btfsc	i2___flmul@temp+1,7,c
 16134  012C84  D005               	goto	i2u689_40
 16135  012C86  5027               	movf	i2___flmul@temp+1,w,c
 16136  012C88  E10E               	bnz	i2l1143
 16137  012C8A  0426               	decf	i2___flmul@temp,w,c
 16138  012C8C  B0D8               	btfsc	status,0,c
 16139  012C8E  D00B               	goto	i2l1143
 16140  012C90                     i2u689_40:
 16141  012C90  0E00               	movlw	0
 16142  012C92  6E22               	movwf	i2___flmul@prod,c
 16143  012C94  0E00               	movlw	0
 16144  012C96  6E23               	movwf	i2___flmul@prod+1,c
 16145  012C98  0E00               	movlw	0
 16146  012C9A  6E24               	movwf	i2___flmul@prod+2,c
 16147  012C9C  0E00               	movlw	0
 16148  012C9E  6E25               	movwf	i2___flmul@prod+3,c
 16149  012CA0  0E00               	movlw	0
 16150  012CA2  6E1B               	movwf	i2___flmul@sign,c
 16151  012CA4  D00F               	goto	i2l1144
 16152  012CA6                     i2l1143:
 16153  012CA6  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 16154  012CAA  0EFF               	movlw	255
 16155  012CAC  1622               	andwf	i2___flmul@prod,f,c
 16156  012CAE  0EFF               	movlw	255
 16157  012CB0  1623               	andwf	i2___flmul@prod+1,f,c
 16158  012CB2  0E7F               	movlw	127
 16159  012CB4  1624               	andwf	i2___flmul@prod+2,f,c
 16160  012CB6  0E00               	movlw	0
 16161  012CB8  1625               	andwf	i2___flmul@prod+3,f,c
 16162  012CBA  B021               	btfsc	i2___flmul@bexp,0,c
 16163  012CBC  8E24               	bsf	i2___flmul@prod+2,7,c
 16164  012CBE  90D8               	bcf	status,0,c
 16165  012CC0  3021               	rrcf	i2___flmul@bexp,w,c
 16166  012CC2                     L12:
 16167  012CC2  6E25               	movwf	i2___flmul@prod+3,c
 16168  012CC4                     i2l1144:
 16169  012CC4  501B               	movf	i2___flmul@sign,w,c
 16170  012CC6  1225               	iorwf	i2___flmul@prod+3,f,c
 16171  012CC8  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 16172  012CCC  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 16173  012CD0  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 16174  012CD4  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 16175  012CD8  0012               	return	
 16176  012CDA                     __end_ofi2___flmul:
 16177                           	opt stack 0
 16178                           tosu	equ	0xFFF
 16179                           tosh	equ	0xFFE
 16180                           tosl	equ	0xFFD
 16181                           pclatu	equ	0xFFB
 16182                           pclath	equ	0xFFA
 16183                           tblptru	equ	0xFF8
 16184                           tblptrh	equ	0xFF7
 16185                           tblptrl	equ	0xFF6
 16186                           tablat	equ	0xFF5
 16187                           prodh	equ	0xFF4
 16188                           prodl	equ	0xFF3
 16189                           intcon	equ	0xFF2
 16190                           postinc0	equ	0xFEE
 16191                           fsr0h	equ	0xFEA
 16192                           fsr0l	equ	0xFE9
 16193                           wreg	equ	0xFE8
 16194                           indf1	equ	0xFE7
 16195                           fsr1h	equ	0xFE2
 16196                           fsr1l	equ	0xFE1
 16197                           indf2	equ	0xFDF
 16198                           postinc2	equ	0xFDE
 16199                           postdec2	equ	0xFDD
 16200                           fsr2h	equ	0xFDA
 16201                           fsr2l	equ	0xFD9
 16202                           status	equ	0xFD8
 16203                           
 16204 ;; *************** function i2___awmod *****************
 16205 ;; Defined at:
 16206 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;  dividend        2    0[COMRAM] int 
 16209 ;;  divisor         2    2[COMRAM] int 
 16210 ;; Auto vars:     Size  Location     Type
 16211 ;;  __awmod         1    5[COMRAM] unsigned char 
 16212 ;;  __awmod         1    4[COMRAM] unsigned char 
 16213 ;; Return value:  Size  Location     Type
 16214 ;;                  2    0[COMRAM] int 
 16215 ;; Registers used:
 16216 ;;		wreg, status,2, status,0
 16217 ;; Tracked objects:
 16218 ;;		On entry : 0/0
 16219 ;;		On exit  : 0/0
 16220 ;;		Unchanged: 0/0
 16221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16226 ;;Total ram usage:        6 bytes
 16227 ;; Hardware stack levels used:    1
 16228 ;; This function calls:
 16229 ;;		Nothing
 16230 ;; This function is called by:
 16231 ;;		i2_fround
 16232 ;;		i2_scale
 16233 ;; This function uses a non-reentrant model
 16234 ;;
 16235                           
 16236                           	psect	text50
 16237  01496A                     __ptext50:
 16238                           	opt stack 0
 16239  01496A                     i2___awmod:
 16240                           	opt stack 21
 16241                           
 16242                           ;incstack = 0
 16243  01496A  0E00               	movlw	0
 16244  01496C  6E06               	movwf	i2___awmod@sign,c
 16245  01496E  AE02               	btfss	i2___awmod@dividend+1,7,c
 16246  014970  D006               	goto	i2l733
 16247  014972  6C01               	negf	i2___awmod@dividend,c
 16248  014974  1E02               	comf	i2___awmod@dividend+1,f,c
 16249  014976  B0D8               	btfsc	status,0,c
 16250  014978  2A02               	incf	i2___awmod@dividend+1,f,c
 16251  01497A  0E01               	movlw	1
 16252  01497C  6E06               	movwf	i2___awmod@sign,c
 16253  01497E                     i2l733:
 16254  01497E  AE04               	btfss	i2___awmod@divisor+1,7,c
 16255  014980  D004               	goto	i2l734
 16256  014982  6C03               	negf	i2___awmod@divisor,c
 16257  014984  1E04               	comf	i2___awmod@divisor+1,f,c
 16258  014986  B0D8               	btfsc	status,0,c
 16259  014988  2A04               	incf	i2___awmod@divisor+1,f,c
 16260  01498A                     i2l734:
 16261  01498A  5003               	movf	i2___awmod@divisor,w,c
 16262  01498C  1004               	iorwf	i2___awmod@divisor+1,w,c
 16263  01498E  B4D8               	btfsc	status,2,c
 16264  014990  D018               	goto	i2l741
 16265  014992  0E01               	movlw	1
 16266  014994  6E05               	movwf	i2___awmod@counter,c
 16267  014996  D004               	goto	i2l736
 16268  014998  90D8               	bcf	status,0,c
 16269  01499A  3603               	rlcf	i2___awmod@divisor,f,c
 16270  01499C  3604               	rlcf	i2___awmod@divisor+1,f,c
 16271  01499E  2A05               	incf	i2___awmod@counter,f,c
 16272  0149A0                     i2l736:
 16273  0149A0  AE04               	btfss	i2___awmod@divisor+1,7,c
 16274  0149A2  D7FA               	goto	i2l737
 16275  0149A4                     i2u630_40:
 16276  0149A4  5003               	movf	i2___awmod@divisor,w,c
 16277  0149A6  5C01               	subwf	i2___awmod@dividend,w,c
 16278  0149A8  5004               	movf	i2___awmod@divisor+1,w,c
 16279  0149AA  5802               	subwfb	i2___awmod@dividend+1,w,c
 16280  0149AC  A0D8               	btfss	status,0,c
 16281  0149AE  D004               	goto	i2l740
 16282  0149B0  5003               	movf	i2___awmod@divisor,w,c
 16283  0149B2  5E01               	subwf	i2___awmod@dividend,f,c
 16284  0149B4  5004               	movf	i2___awmod@divisor+1,w,c
 16285  0149B6  5A02               	subwfb	i2___awmod@dividend+1,f,c
 16286  0149B8                     i2l740:
 16287  0149B8  90D8               	bcf	status,0,c
 16288  0149BA  3204               	rrcf	i2___awmod@divisor+1,f,c
 16289  0149BC  3203               	rrcf	i2___awmod@divisor,f,c
 16290  0149BE  2E05               	decfsz	i2___awmod@counter,f,c
 16291  0149C0  D7F1               	goto	i2u630_40
 16292  0149C2                     i2l741:
 16293  0149C2  5006               	movf	i2___awmod@sign,w,c
 16294  0149C4  B4D8               	btfsc	status,2,c
 16295  0149C6  D004               	goto	i2l742
 16296  0149C8  6C01               	negf	i2___awmod@dividend,c
 16297  0149CA  1E02               	comf	i2___awmod@dividend+1,f,c
 16298  0149CC  B0D8               	btfsc	status,0,c
 16299  0149CE  2A02               	incf	i2___awmod@dividend+1,f,c
 16300  0149D0                     i2l742:
 16301  0149D0  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 16302  0149D4  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 16303  0149D8  0012               	return	
 16304  0149DA                     __end_ofi2___awmod:
 16305                           	opt stack 0
 16306                           tosu	equ	0xFFF
 16307                           tosh	equ	0xFFE
 16308                           tosl	equ	0xFFD
 16309                           pclatu	equ	0xFFB
 16310                           pclath	equ	0xFFA
 16311                           tblptru	equ	0xFF8
 16312                           tblptrh	equ	0xFF7
 16313                           tblptrl	equ	0xFF6
 16314                           tablat	equ	0xFF5
 16315                           prodh	equ	0xFF4
 16316                           prodl	equ	0xFF3
 16317                           intcon	equ	0xFF2
 16318                           postinc0	equ	0xFEE
 16319                           fsr0h	equ	0xFEA
 16320                           fsr0l	equ	0xFE9
 16321                           wreg	equ	0xFE8
 16322                           indf1	equ	0xFE7
 16323                           fsr1h	equ	0xFE2
 16324                           fsr1l	equ	0xFE1
 16325                           indf2	equ	0xFDF
 16326                           postinc2	equ	0xFDE
 16327                           postdec2	equ	0xFDD
 16328                           fsr2h	equ	0xFDA
 16329                           fsr2l	equ	0xFD9
 16330                           status	equ	0xFD8
 16331                           
 16332 ;; *************** function i2___awdiv *****************
 16333 ;; Defined at:
 16334 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 16335 ;; Parameters:    Size  Location     Type
 16336 ;;  dividend        2    6[COMRAM] int 
 16337 ;;  divisor         2    8[COMRAM] int 
 16338 ;; Auto vars:     Size  Location     Type
 16339 ;;  __awdiv         2   12[COMRAM] int 
 16340 ;;  __awdiv         1   11[COMRAM] unsigned char 
 16341 ;;  __awdiv         1   10[COMRAM] unsigned char 
 16342 ;; Return value:  Size  Location     Type
 16343 ;;                  2    6[COMRAM] int 
 16344 ;; Registers used:
 16345 ;;		wreg, status,2, status,0
 16346 ;; Tracked objects:
 16347 ;;		On entry : 0/0
 16348 ;;		On exit  : 0/0
 16349 ;;		Unchanged: 0/0
 16350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16352 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16354 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16355 ;;Total ram usage:        8 bytes
 16356 ;; Hardware stack levels used:    1
 16357 ;; This function calls:
 16358 ;;		Nothing
 16359 ;; This function is called by:
 16360 ;;		i2_fround
 16361 ;;		i2_scale
 16362 ;;		i2_printf
 16363 ;; This function uses a non-reentrant model
 16364 ;;
 16365                           
 16366                           	psect	text51
 16367  0147F2                     __ptext51:
 16368                           	opt stack 0
 16369  0147F2                     i2___awdiv:
 16370                           	opt stack 21
 16371                           
 16372                           ;incstack = 0
 16373  0147F2  0E00               	movlw	0
 16374  0147F4  6E0C               	movwf	i2___awdiv@sign,c
 16375  0147F6  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 16376  0147F8  D006               	goto	i2l720
 16377  0147FA  6C09               	negf	i2___awdiv@divisor,c
 16378  0147FC  1E0A               	comf	i2___awdiv@divisor+1,f,c
 16379  0147FE  B0D8               	btfsc	status,0,c
 16380  014800  2A0A               	incf	i2___awdiv@divisor+1,f,c
 16381  014802  0E01               	movlw	1
 16382  014804  6E0C               	movwf	i2___awdiv@sign,c
 16383  014806                     i2l720:
 16384  014806  AE08               	btfss	i2___awdiv@dividend+1,7,c
 16385  014808  D006               	goto	i2l721
 16386  01480A  6C07               	negf	i2___awdiv@dividend,c
 16387  01480C  1E08               	comf	i2___awdiv@dividend+1,f,c
 16388  01480E  B0D8               	btfsc	status,0,c
 16389  014810  2A08               	incf	i2___awdiv@dividend+1,f,c
 16390  014812  0E01               	movlw	1
 16391  014814  1A0C               	xorwf	i2___awdiv@sign,f,c
 16392  014816                     i2l721:
 16393  014816  0E00               	movlw	0
 16394  014818  6E0E               	movwf	i2___awdiv@quotient+1,c
 16395  01481A  0E00               	movlw	0
 16396  01481C  6E0D               	movwf	i2___awdiv@quotient,c
 16397  01481E  5009               	movf	i2___awdiv@divisor,w,c
 16398  014820  100A               	iorwf	i2___awdiv@divisor+1,w,c
 16399  014822  B4D8               	btfsc	status,2,c
 16400  014824  D01C               	goto	i2l728
 16401  014826  0E01               	movlw	1
 16402  014828  6E0B               	movwf	i2___awdiv@counter,c
 16403  01482A  D004               	goto	i2l723
 16404  01482C  90D8               	bcf	status,0,c
 16405  01482E  3609               	rlcf	i2___awdiv@divisor,f,c
 16406  014830  360A               	rlcf	i2___awdiv@divisor+1,f,c
 16407  014832  2A0B               	incf	i2___awdiv@counter,f,c
 16408  014834                     i2l723:
 16409  014834  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 16410  014836  D7FA               	goto	i2l724
 16411  014838                     i2u624_40:
 16412  014838  90D8               	bcf	status,0,c
 16413  01483A  360D               	rlcf	i2___awdiv@quotient,f,c
 16414  01483C  360E               	rlcf	i2___awdiv@quotient+1,f,c
 16415  01483E  5009               	movf	i2___awdiv@divisor,w,c
 16416  014840  5C07               	subwf	i2___awdiv@dividend,w,c
 16417  014842  500A               	movf	i2___awdiv@divisor+1,w,c
 16418  014844  5808               	subwfb	i2___awdiv@dividend+1,w,c
 16419  014846  A0D8               	btfss	status,0,c
 16420  014848  D005               	goto	i2l727
 16421  01484A  5009               	movf	i2___awdiv@divisor,w,c
 16422  01484C  5E07               	subwf	i2___awdiv@dividend,f,c
 16423  01484E  500A               	movf	i2___awdiv@divisor+1,w,c
 16424  014850  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 16425  014852  800D               	bsf	i2___awdiv@quotient,0,c
 16426  014854                     i2l727:
 16427  014854  90D8               	bcf	status,0,c
 16428  014856  320A               	rrcf	i2___awdiv@divisor+1,f,c
 16429  014858  3209               	rrcf	i2___awdiv@divisor,f,c
 16430  01485A  2E0B               	decfsz	i2___awdiv@counter,f,c
 16431  01485C  D7ED               	goto	i2u624_40
 16432  01485E                     i2l728:
 16433  01485E  500C               	movf	i2___awdiv@sign,w,c
 16434  014860  B4D8               	btfsc	status,2,c
 16435  014862  D004               	goto	i2l729
 16436  014864  6C0D               	negf	i2___awdiv@quotient,c
 16437  014866  1E0E               	comf	i2___awdiv@quotient+1,f,c
 16438  014868  B0D8               	btfsc	status,0,c
 16439  01486A  2A0E               	incf	i2___awdiv@quotient+1,f,c
 16440  01486C                     i2l729:
 16441  01486C  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 16442  014870  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 16443  014874  0012               	return	
 16444  014876                     __end_ofi2___awdiv:
 16445                           	opt stack 0
 16446                           tosu	equ	0xFFF
 16447                           tosh	equ	0xFFE
 16448                           tosl	equ	0xFFD
 16449                           pclatu	equ	0xFFB
 16450                           pclath	equ	0xFFA
 16451                           tblptru	equ	0xFF8
 16452                           tblptrh	equ	0xFF7
 16453                           tblptrl	equ	0xFF6
 16454                           tablat	equ	0xFF5
 16455                           prodh	equ	0xFF4
 16456                           prodl	equ	0xFF3
 16457                           intcon	equ	0xFF2
 16458                           postinc0	equ	0xFEE
 16459                           fsr0h	equ	0xFEA
 16460                           fsr0l	equ	0xFE9
 16461                           wreg	equ	0xFE8
 16462                           indf1	equ	0xFE7
 16463                           fsr1h	equ	0xFE2
 16464                           fsr1l	equ	0xFE1
 16465                           indf2	equ	0xFDF
 16466                           postinc2	equ	0xFDE
 16467                           postdec2	equ	0xFDD
 16468                           fsr2h	equ	0xFDA
 16469                           fsr2l	equ	0xFD9
 16470                           status	equ	0xFD8
 16471                           
 16472 ;; *************** function i2__tdiv_to_l_ *****************
 16473 ;; Defined at:
 16474 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 16475 ;; Parameters:    Size  Location     Type
 16476 ;;  f1              4    0[COMRAM] float 
 16477 ;;  f2              4    4[COMRAM] float 
 16478 ;; Auto vars:     Size  Location     Type
 16479 ;;  _tdiv_to_l_     4   11[COMRAM] unsigned long 
 16480 ;;  _tdiv_to_l_     1   16[COMRAM] unsigned char 
 16481 ;;  _tdiv_to_l_     1   15[COMRAM] unsigned char 
 16482 ;; Return value:  Size  Location     Type
 16483 ;;                  4    0[COMRAM] unsigned long 
 16484 ;; Registers used:
 16485 ;;		wreg, status,2, status,0
 16486 ;; Tracked objects:
 16487 ;;		On entry : 0/0
 16488 ;;		On exit  : 0/0
 16489 ;;		Unchanged: 0/0
 16490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16491 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16492 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16493 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16494 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16495 ;;Total ram usage:       17 bytes
 16496 ;; Hardware stack levels used:    1
 16497 ;; This function calls:
 16498 ;;		Nothing
 16499 ;; This function is called by:
 16500 ;;		i2_printf
 16501 ;; This function uses a non-reentrant model
 16502 ;;
 16503                           
 16504                           	psect	text52
 16505  013D52                     __ptext52:
 16506                           	opt stack 0
 16507  013D52                     i2__tdiv_to_l_:
 16508                           	opt stack 22
 16509                           
 16510                           ;incstack = 0
 16511  013D52  C003  F009         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 16512  013D56  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16513  013D58  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16514  013D5A  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 16515  013D5C  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16516  013D5E  E301               	bnc	u757_41
 16517  013D60  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16518  013D62                     u757_41:
 16519  013D62  5009               	movf	??i2__tdiv_to_l_,w,c
 16520  013D64  6E11               	movwf	i2__tdiv_to_l_@exp1,c
 16521  013D66  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 16522  013D68  A4D8               	btfss	status,2,c
 16523  013D6A  D009               	goto	i2l856
 16524  013D6C  0E00               	movlw	0
 16525  013D6E  6E01               	movwf	?i2__tdiv_to_l_,c
 16526  013D70  0E00               	movlw	0
 16527  013D72  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16528  013D74  0E00               	movlw	0
 16529  013D76  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16530  013D78  0E00               	movlw	0
 16531  013D7A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16532  013D7C  0012               	return	
 16533  013D7E                     i2l856:
 16534  013D7E  C007  F009         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 16535  013D82  6A0A               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16536  013D84  6A0B               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16537  013D86  3406               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 16538  013D88  3609               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16539  013D8A  E301               	bnc	u759_41
 16540  013D8C  800A               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16541  013D8E                     u759_41:
 16542  013D8E  5009               	movf	??i2__tdiv_to_l_,w,c
 16543  013D90  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 16544  013D92  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 16545  013D94  A4D8               	btfss	status,2,c
 16546  013D96  D009               	goto	i2l858
 16547  013D98  0E00               	movlw	0
 16548  013D9A  6E01               	movwf	?i2__tdiv_to_l_,c
 16549  013D9C  0E00               	movlw	0
 16550  013D9E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16551  013DA0  0E00               	movlw	0
 16552  013DA2  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16553  013DA4  0E00               	movlw	0
 16554  013DA6  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16555  013DA8  0012               	return	
 16556  013DAA                     i2l858:
 16557  013DAA  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 16558  013DAC  0EFF               	movlw	255
 16559  013DAE  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 16560  013DB0  0EFF               	movlw	255
 16561  013DB2  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 16562  013DB4  0E00               	movlw	0
 16563  013DB6  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 16564  013DB8  8E06               	bsf	i2__tdiv_to_l_@f2+1,7,c
 16565  013DBA  0EFF               	movlw	255
 16566  013DBC  1605               	andwf	i2__tdiv_to_l_@f2,f,c
 16567  013DBE  0EFF               	movlw	255
 16568  013DC0  1606               	andwf	i2__tdiv_to_l_@f2+1,f,c
 16569  013DC2  0E00               	movlw	0
 16570  013DC4  1607               	andwf	i2__tdiv_to_l_@f2+2,f,c
 16571  013DC6  0E00               	movlw	0
 16572  013DC8  6E0C               	movwf	i2__tdiv_to_l_@quot,c
 16573  013DCA  0E00               	movlw	0
 16574  013DCC  6E0D               	movwf	i2__tdiv_to_l_@quot+1,c
 16575  013DCE  0E00               	movlw	0
 16576  013DD0  6E0E               	movwf	i2__tdiv_to_l_@quot+2,c
 16577  013DD2  0E00               	movlw	0
 16578  013DD4  6E0F               	movwf	i2__tdiv_to_l_@quot+3,c
 16579  013DD6  0E7F               	movlw	127
 16580  013DD8  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 16581  013DDA  5010               	movf	i2__tdiv_to_l_@cntr,w,c
 16582  013DDC  0F98               	addlw	152
 16583  013DDE  5E11               	subwf	i2__tdiv_to_l_@exp1,f,c
 16584  013DE0  0E18               	movlw	24
 16585  013DE2  6E10               	movwf	i2__tdiv_to_l_@cntr,c
 16586  013DE4                     i2l859:
 16587  013DE4  90D8               	bcf	status,0,c
 16588  013DE6  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 16589  013DE8  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16590  013DEA  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16591  013DEC  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16592  013DEE  5005               	movf	i2__tdiv_to_l_@f2,w,c
 16593  013DF0  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 16594  013DF2  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 16595  013DF4  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 16596  013DF6  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 16597  013DF8  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 16598  013DFA  A0D8               	btfss	status,0,c
 16599  013DFC  D007               	goto	i2l860
 16600  013DFE  5005               	movf	i2__tdiv_to_l_@f2,w,c
 16601  013E00  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 16602  013E02  5006               	movf	i2__tdiv_to_l_@f2+1,w,c
 16603  013E04  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 16604  013E06  5007               	movf	i2__tdiv_to_l_@f2+2,w,c
 16605  013E08  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 16606  013E0A  800C               	bsf	i2__tdiv_to_l_@quot,0,c
 16607  013E0C                     i2l860:
 16608  013E0C  90D8               	bcf	status,0,c
 16609  013E0E  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 16610  013E10  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 16611  013E12  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 16612  013E14  2E10               	decfsz	i2__tdiv_to_l_@cntr,f,c
 16613  013E16  D7E6               	goto	i2l859
 16614  013E18  AE11               	btfss	i2__tdiv_to_l_@exp1,7,c
 16615  013E1A  D016               	goto	i2l862
 16616  013E1C  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 16617  013E1E  0A80               	xorlw	128
 16618  013E20  0F97               	addlw	151
 16619  013E22  B0D8               	btfsc	status,0,c
 16620  013E24  D009               	goto	i2l863
 16621  013E26  0E00               	movlw	0
 16622  013E28  6E01               	movwf	?i2__tdiv_to_l_,c
 16623  013E2A  0E00               	movlw	0
 16624  013E2C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16625  013E2E  0E00               	movlw	0
 16626  013E30  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16627  013E32  0E00               	movlw	0
 16628  013E34  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16629  013E36  0012               	return	
 16630  013E38                     i2l863:
 16631  013E38  90D8               	bcf	status,0,c
 16632  013E3A  320F               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 16633  013E3C  320E               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 16634  013E3E  320D               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 16635  013E40  320C               	rrcf	i2__tdiv_to_l_@quot,f,c
 16636  013E42  3E11               	incfsz	i2__tdiv_to_l_@exp1,f,c
 16637  013E44  D7F9               	goto	i2l863
 16638  013E46  D015               	goto	i2u765_40
 16639  013E48                     i2l862:
 16640  013E48  0E17               	movlw	23
 16641  013E4A  6411               	cpfsgt	i2__tdiv_to_l_@exp1,c
 16642  013E4C  D00F               	goto	i2l868
 16643  013E4E  0E00               	movlw	0
 16644  013E50  6E01               	movwf	?i2__tdiv_to_l_,c
 16645  013E52  0E00               	movlw	0
 16646  013E54  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16647  013E56  0E00               	movlw	0
 16648  013E58  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16649  013E5A  0E00               	movlw	0
 16650  013E5C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16651  013E5E  0012               	return	
 16652  013E60  90D8               	bcf	status,0,c
 16653  013E62  360C               	rlcf	i2__tdiv_to_l_@quot,f,c
 16654  013E64  360D               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16655  013E66  360E               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16656  013E68  360F               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16657  013E6A  0611               	decf	i2__tdiv_to_l_@exp1,f,c
 16658  013E6C                     i2l868:
 16659  013E6C  5011               	movf	i2__tdiv_to_l_@exp1,w,c
 16660  013E6E  A4D8               	btfss	status,2,c
 16661  013E70  D7F7               	goto	i2l869
 16662  013E72                     i2u765_40:
 16663  013E72  C00C  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 16664  013E76  C00D  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 16665  013E7A  C00E  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 16666  013E7E  C00F  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 16667  013E82  0012               	return		;funcret
 16668  013E84                     __end_ofi2__tdiv_to_l_:
 16669                           	opt stack 0
 16670                           tosu	equ	0xFFF
 16671                           tosh	equ	0xFFE
 16672                           tosl	equ	0xFFD
 16673                           pclatu	equ	0xFFB
 16674                           pclath	equ	0xFFA
 16675                           tblptru	equ	0xFF8
 16676                           tblptrh	equ	0xFF7
 16677                           tblptrl	equ	0xFF6
 16678                           tablat	equ	0xFF5
 16679                           prodh	equ	0xFF4
 16680                           prodl	equ	0xFF3
 16681                           intcon	equ	0xFF2
 16682                           postinc0	equ	0xFEE
 16683                           fsr0h	equ	0xFEA
 16684                           fsr0l	equ	0xFE9
 16685                           wreg	equ	0xFE8
 16686                           indf1	equ	0xFE7
 16687                           fsr1h	equ	0xFE2
 16688                           fsr1l	equ	0xFE1
 16689                           indf2	equ	0xFDF
 16690                           postinc2	equ	0xFDE
 16691                           postdec2	equ	0xFDD
 16692                           fsr2h	equ	0xFDA
 16693                           fsr2l	equ	0xFD9
 16694                           status	equ	0xFD8
 16695                           
 16696 ;; *************** function i2__div_to_l_ *****************
 16697 ;; Defined at:
 16698 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;  f1              4    0[COMRAM] unsigned long 
 16701 ;;  f2              4    4[COMRAM] unsigned long 
 16702 ;; Auto vars:     Size  Location     Type
 16703 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 16704 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 16705 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 16706 ;; Return value:  Size  Location     Type
 16707 ;;                  4    0[COMRAM] unsigned long 
 16708 ;; Registers used:
 16709 ;;		wreg, status,2, status,0
 16710 ;; Tracked objects:
 16711 ;;		On entry : 0/0
 16712 ;;		On exit  : 0/0
 16713 ;;		Unchanged: 0/0
 16714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16715 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16716 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16718 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16719 ;;Total ram usage:       14 bytes
 16720 ;; Hardware stack levels used:    1
 16721 ;; This function calls:
 16722 ;;		Nothing
 16723 ;; This function is called by:
 16724 ;;		i2_printf
 16725 ;; This function uses a non-reentrant model
 16726 ;;
 16727                           
 16728                           	psect	text53
 16729  013FAE                     __ptext53:
 16730                           	opt stack 0
 16731  013FAE                     i2__div_to_l_:
 16732                           	opt stack 22
 16733                           
 16734                           ;incstack = 0
 16735  013FAE  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 16736  013FB0  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 16737  013FB2  6E0E               	movwf	i2__div_to_l_@exp1,c
 16738  013FB4  500E               	movf	i2__div_to_l_@exp1,w,c
 16739  013FB6  A4D8               	btfss	status,2,c
 16740  013FB8  D009               	goto	i2l752
 16741  013FBA  0E00               	movlw	0
 16742  013FBC  6E01               	movwf	?i2__div_to_l_,c
 16743  013FBE  0E00               	movlw	0
 16744  013FC0  6E02               	movwf	?i2__div_to_l_+1,c
 16745  013FC2  0E00               	movlw	0
 16746  013FC4  6E03               	movwf	?i2__div_to_l_+2,c
 16747  013FC6  0E00               	movlw	0
 16748  013FC8  6E04               	movwf	?i2__div_to_l_+3,c
 16749  013FCA  0012               	return	
 16750  013FCC                     i2l752:
 16751  013FCC  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 16752  013FCE  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 16753  013FD0  6E0D               	movwf	i2__div_to_l_@cntr,c
 16754  013FD2  500D               	movf	i2__div_to_l_@cntr,w,c
 16755  013FD4  A4D8               	btfss	status,2,c
 16756  013FD6  D009               	goto	i2l754
 16757  013FD8  0E00               	movlw	0
 16758  013FDA  6E01               	movwf	?i2__div_to_l_,c
 16759  013FDC  0E00               	movlw	0
 16760  013FDE  6E02               	movwf	?i2__div_to_l_+1,c
 16761  013FE0  0E00               	movlw	0
 16762  013FE2  6E03               	movwf	?i2__div_to_l_+2,c
 16763  013FE4  0E00               	movlw	0
 16764  013FE6  6E04               	movwf	?i2__div_to_l_+3,c
 16765  013FE8  0012               	return	
 16766  013FEA                     i2l754:
 16767  013FEA  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 16768  013FEC  0EFF               	movlw	255
 16769  013FEE  1601               	andwf	i2__div_to_l_@f1,f,c
 16770  013FF0  0EFF               	movlw	255
 16771  013FF2  1602               	andwf	i2__div_to_l_@f1+1,f,c
 16772  013FF4  0EFF               	movlw	255
 16773  013FF6  1603               	andwf	i2__div_to_l_@f1+2,f,c
 16774  013FF8  0E00               	movlw	0
 16775  013FFA  1604               	andwf	i2__div_to_l_@f1+3,f,c
 16776  013FFC  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 16777  013FFE  0EFF               	movlw	255
 16778  014000  1605               	andwf	i2__div_to_l_@f2,f,c
 16779  014002  0EFF               	movlw	255
 16780  014004  1606               	andwf	i2__div_to_l_@f2+1,f,c
 16781  014006  0EFF               	movlw	255
 16782  014008  1607               	andwf	i2__div_to_l_@f2+2,f,c
 16783  01400A  0E00               	movlw	0
 16784  01400C  1608               	andwf	i2__div_to_l_@f2+3,f,c
 16785  01400E  0E00               	movlw	0
 16786  014010  6E09               	movwf	i2__div_to_l_@quot,c
 16787  014012  0E00               	movlw	0
 16788  014014  6E0A               	movwf	i2__div_to_l_@quot+1,c
 16789  014016  0E00               	movlw	0
 16790  014018  6E0B               	movwf	i2__div_to_l_@quot+2,c
 16791  01401A  0E00               	movlw	0
 16792  01401C  6E0C               	movwf	i2__div_to_l_@quot+3,c
 16793  01401E  0E7F               	movlw	127
 16794  014020  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 16795  014022  500D               	movf	i2__div_to_l_@cntr,w,c
 16796  014024  0FA0               	addlw	160
 16797  014026  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 16798  014028  0E20               	movlw	32
 16799  01402A  6E0D               	movwf	i2__div_to_l_@cntr,c
 16800  01402C  90D8               	bcf	status,0,c
 16801  01402E  3609               	rlcf	i2__div_to_l_@quot,f,c
 16802  014030  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 16803  014032  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 16804  014034  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 16805  014036  5005               	movf	i2__div_to_l_@f2,w,c
 16806  014038  5C01               	subwf	i2__div_to_l_@f1,w,c
 16807  01403A  5006               	movf	i2__div_to_l_@f2+1,w,c
 16808  01403C  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 16809  01403E  5007               	movf	i2__div_to_l_@f2+2,w,c
 16810  014040  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 16811  014042  5008               	movf	i2__div_to_l_@f2+3,w,c
 16812  014044  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 16813  014046  A0D8               	btfss	status,0,c
 16814  014048  D009               	goto	i2l756
 16815  01404A  5005               	movf	i2__div_to_l_@f2,w,c
 16816  01404C  5E01               	subwf	i2__div_to_l_@f1,f,c
 16817  01404E  5006               	movf	i2__div_to_l_@f2+1,w,c
 16818  014050  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 16819  014052  5007               	movf	i2__div_to_l_@f2+2,w,c
 16820  014054  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 16821  014056  5008               	movf	i2__div_to_l_@f2+3,w,c
 16822  014058  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 16823  01405A  8009               	bsf	i2__div_to_l_@quot,0,c
 16824  01405C                     i2l756:
 16825  01405C  90D8               	bcf	status,0,c
 16826  01405E  3601               	rlcf	i2__div_to_l_@f1,f,c
 16827  014060  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 16828  014062  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 16829  014064  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 16830  014066  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 16831  014068  D7E1               	goto	i2l755
 16832  01406A  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 16833  01406C  D016               	goto	i2l758
 16834  01406E  500E               	movf	i2__div_to_l_@exp1,w,c
 16835  014070  0A80               	xorlw	128
 16836  014072  0F9F               	addlw	159
 16837  014074  B0D8               	btfsc	status,0,c
 16838  014076  D009               	goto	i2l759
 16839  014078  0E00               	movlw	0
 16840  01407A  6E01               	movwf	?i2__div_to_l_,c
 16841  01407C  0E00               	movlw	0
 16842  01407E  6E02               	movwf	?i2__div_to_l_+1,c
 16843  014080  0E00               	movlw	0
 16844  014082  6E03               	movwf	?i2__div_to_l_+2,c
 16845  014084  0E00               	movlw	0
 16846  014086  6E04               	movwf	?i2__div_to_l_+3,c
 16847  014088  0012               	return	
 16848  01408A                     i2l759:
 16849  01408A  90D8               	bcf	status,0,c
 16850  01408C  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 16851  01408E  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 16852  014090  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 16853  014092  3209               	rrcf	i2__div_to_l_@quot,f,c
 16854  014094  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 16855  014096  D7F9               	goto	i2l759
 16856  014098  D015               	goto	i2u743_40
 16857  01409A                     i2l758:
 16858  01409A  0E1F               	movlw	31
 16859  01409C  640E               	cpfsgt	i2__div_to_l_@exp1,c
 16860  01409E  D00F               	goto	i2l764
 16861  0140A0  0E00               	movlw	0
 16862  0140A2  6E01               	movwf	?i2__div_to_l_,c
 16863  0140A4  0E00               	movlw	0
 16864  0140A6  6E02               	movwf	?i2__div_to_l_+1,c
 16865  0140A8  0E00               	movlw	0
 16866  0140AA  6E03               	movwf	?i2__div_to_l_+2,c
 16867  0140AC  0E00               	movlw	0
 16868  0140AE  6E04               	movwf	?i2__div_to_l_+3,c
 16869  0140B0  0012               	return	
 16870  0140B2  90D8               	bcf	status,0,c
 16871  0140B4  3609               	rlcf	i2__div_to_l_@quot,f,c
 16872  0140B6  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 16873  0140B8  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 16874  0140BA  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 16875  0140BC  060E               	decf	i2__div_to_l_@exp1,f,c
 16876  0140BE                     i2l764:
 16877  0140BE  500E               	movf	i2__div_to_l_@exp1,w,c
 16878  0140C0  A4D8               	btfss	status,2,c
 16879  0140C2  D7F7               	goto	i2l765
 16880  0140C4                     i2u743_40:
 16881  0140C4  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 16882  0140C8  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 16883  0140CC  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 16884  0140D0  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 16885  0140D4  0012               	return		;funcret
 16886  0140D6                     __end_ofi2__div_to_l_:
 16887                           	opt stack 0
 16888                           tosu	equ	0xFFF
 16889                           tosh	equ	0xFFE
 16890                           tosl	equ	0xFFD
 16891                           pclatu	equ	0xFFB
 16892                           pclath	equ	0xFFA
 16893                           tblptru	equ	0xFF8
 16894                           tblptrh	equ	0xFF7
 16895                           tblptrl	equ	0xFF6
 16896                           tablat	equ	0xFF5
 16897                           prodh	equ	0xFF4
 16898                           prodl	equ	0xFF3
 16899                           intcon	equ	0xFF2
 16900                           postinc0	equ	0xFEE
 16901                           fsr0h	equ	0xFEA
 16902                           fsr0l	equ	0xFE9
 16903                           wreg	equ	0xFE8
 16904                           indf1	equ	0xFE7
 16905                           fsr1h	equ	0xFE2
 16906                           fsr1l	equ	0xFE1
 16907                           indf2	equ	0xFDF
 16908                           postinc2	equ	0xFDE
 16909                           postdec2	equ	0xFDD
 16910                           fsr2h	equ	0xFDA
 16911                           fsr2l	equ	0xFD9
 16912                           status	equ	0xFD8
 16913                           
 16914 ;; *************** function i2___xxtofl *****************
 16915 ;; Defined at:
 16916 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 16917 ;; Parameters:    Size  Location     Type
 16918 ;;  sign            1    wreg     unsigned char 
 16919 ;;  val             4    0[COMRAM] long 
 16920 ;; Auto vars:     Size  Location     Type
 16921 ;;  sign            1    8[COMRAM] unsigned char 
 16922 ;;  __xxtofl        4   10[COMRAM] unsigned long 
 16923 ;;  __xxtofl        1    9[COMRAM] unsigned char 
 16924 ;; Return value:  Size  Location     Type
 16925 ;;                  4    0[COMRAM] unsigned char 
 16926 ;; Registers used:
 16927 ;;		wreg, status,2, status,0
 16928 ;; Tracked objects:
 16929 ;;		On entry : 0/0
 16930 ;;		On exit  : 0/0
 16931 ;;		Unchanged: 0/0
 16932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16934 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16935 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16936 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16937 ;;Total ram usage:       14 bytes
 16938 ;; Hardware stack levels used:    1
 16939 ;; This function calls:
 16940 ;;		Nothing
 16941 ;; This function is called by:
 16942 ;;		i2_printf
 16943 ;; This function uses a non-reentrant model
 16944 ;;
 16945                           
 16946                           	psect	text54
 16947  013994                     __ptext54:
 16948                           	opt stack 0
 16949  013994                     i2___xxtofl:
 16950                           	opt stack 22
 16951                           
 16952                           ;incstack = 0
 16953                           ;i2___xxtofl@sign stored from wreg
 16954  013994  6E09               	movwf	i2___xxtofl@sign,c
 16955  013996  5009               	movf	i2___xxtofl@sign,w,c
 16956  013998  A4D8               	btfss	status,2,c
 16957  01399A  AE04               	btfss	i2___xxtofl@val+3,7,c
 16958  01399C  D01A               	goto	i2l1162
 16959  01399E  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 16960  0139A2  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 16961  0139A6  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 16962  0139AA  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 16963  0139AE  1E05               	comf	??i2___xxtofl,f,c
 16964  0139B0  1E06               	comf	??i2___xxtofl+1,f,c
 16965  0139B2  1E07               	comf	??i2___xxtofl+2,f,c
 16966  0139B4  1E08               	comf	??i2___xxtofl+3,f,c
 16967  0139B6  2A05               	incf	??i2___xxtofl,f,c
 16968  0139B8  0E00               	movlw	0
 16969  0139BA  2206               	addwfc	??i2___xxtofl+1,f,c
 16970  0139BC  2207               	addwfc	??i2___xxtofl+2,f,c
 16971  0139BE  2208               	addwfc	??i2___xxtofl+3,f,c
 16972  0139C0  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 16973  0139C4  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 16974  0139C8  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 16975  0139CC  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 16976  0139D0  D008               	goto	i2l1163
 16977  0139D2                     i2l1162:
 16978  0139D2  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 16979  0139D6  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 16980  0139DA  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 16981  0139DE  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 16982  0139E2                     i2l1163:
 16983  0139E2  5001               	movf	i2___xxtofl@val,w,c
 16984  0139E4  1002               	iorwf	i2___xxtofl@val+1,w,c
 16985  0139E6  1003               	iorwf	i2___xxtofl@val+2,w,c
 16986  0139E8  1004               	iorwf	i2___xxtofl@val+3,w,c
 16987  0139EA  A4D8               	btfss	status,2,c
 16988  0139EC  D009               	goto	i2l1164
 16989  0139EE  0E00               	movlw	0
 16990  0139F0  6E01               	movwf	?i2___xxtofl,c
 16991  0139F2  0E00               	movlw	0
 16992  0139F4  6E02               	movwf	?i2___xxtofl+1,c
 16993  0139F6  0E00               	movlw	0
 16994  0139F8  6E03               	movwf	?i2___xxtofl+2,c
 16995  0139FA  0E00               	movlw	0
 16996  0139FC  6E04               	movwf	?i2___xxtofl+3,c
 16997  0139FE  0012               	return	
 16998  013A00                     i2l1164:
 16999  013A00  0E96               	movlw	150
 17000  013A02  6E0A               	movwf	i2___xxtofl@exp,c
 17001  013A04  D006               	goto	i2l1166
 17002  013A06  2A0A               	incf	i2___xxtofl@exp,f,c
 17003  013A08  90D8               	bcf	status,0,c
 17004  013A0A  320E               	rrcf	i2___xxtofl@arg+3,f,c
 17005  013A0C  320D               	rrcf	i2___xxtofl@arg+2,f,c
 17006  013A0E  320C               	rrcf	i2___xxtofl@arg+1,f,c
 17007  013A10  320B               	rrcf	i2___xxtofl@arg,f,c
 17008  013A12                     i2l1166:
 17009  013A12  0E00               	movlw	0
 17010  013A14  140B               	andwf	i2___xxtofl@arg,w,c
 17011  013A16  6E05               	movwf	??i2___xxtofl& (0+255),c
 17012  013A18  0E00               	movlw	0
 17013  013A1A  140C               	andwf	i2___xxtofl@arg+1,w,c
 17014  013A1C  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 17015  013A1E  0E00               	movlw	0
 17016  013A20  140D               	andwf	i2___xxtofl@arg+2,w,c
 17017  013A22  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 17018  013A24  0EFE               	movlw	254
 17019  013A26  140E               	andwf	i2___xxtofl@arg+3,w,c
 17020  013A28  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 17021  013A2A  5005               	movf	??i2___xxtofl,w,c
 17022  013A2C  1006               	iorwf	??i2___xxtofl+1,w,c
 17023  013A2E  1007               	iorwf	??i2___xxtofl+2,w,c
 17024  013A30  1008               	iorwf	??i2___xxtofl+3,w,c
 17025  013A32  B4D8               	btfsc	status,2,c
 17026  013A34  D00D               	goto	i2l1169
 17027  013A36  D7E7               	goto	i2l1167
 17028  013A38  2A0A               	incf	i2___xxtofl@exp,f,c
 17029  013A3A  0E01               	movlw	1
 17030  013A3C  260B               	addwf	i2___xxtofl@arg,f,c
 17031  013A3E  0E00               	movlw	0
 17032  013A40  220C               	addwfc	i2___xxtofl@arg+1,f,c
 17033  013A42  220D               	addwfc	i2___xxtofl@arg+2,f,c
 17034  013A44  220E               	addwfc	i2___xxtofl@arg+3,f,c
 17035  013A46  90D8               	bcf	status,0,c
 17036  013A48  320E               	rrcf	i2___xxtofl@arg+3,f,c
 17037  013A4A  320D               	rrcf	i2___xxtofl@arg+2,f,c
 17038  013A4C  320C               	rrcf	i2___xxtofl@arg+1,f,c
 17039  013A4E  320B               	rrcf	i2___xxtofl@arg,f,c
 17040  013A50                     i2l1169:
 17041  013A50  0E00               	movlw	0
 17042  013A52  140B               	andwf	i2___xxtofl@arg,w,c
 17043  013A54  6E05               	movwf	??i2___xxtofl& (0+255),c
 17044  013A56  0E00               	movlw	0
 17045  013A58  140C               	andwf	i2___xxtofl@arg+1,w,c
 17046  013A5A  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 17047  013A5C  0E00               	movlw	0
 17048  013A5E  140D               	andwf	i2___xxtofl@arg+2,w,c
 17049  013A60  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 17050  013A62  0EFF               	movlw	255
 17051  013A64  140E               	andwf	i2___xxtofl@arg+3,w,c
 17052  013A66  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 17053  013A68  5005               	movf	??i2___xxtofl,w,c
 17054  013A6A  1006               	iorwf	??i2___xxtofl+1,w,c
 17055  013A6C  1007               	iorwf	??i2___xxtofl+2,w,c
 17056  013A6E  1008               	iorwf	??i2___xxtofl+3,w,c
 17057  013A70  B4D8               	btfsc	status,2,c
 17058  013A72  D007               	goto	i2l1172
 17059  013A74  D7E1               	goto	i2l1170
 17060  013A76  060A               	decf	i2___xxtofl@exp,f,c
 17061  013A78  90D8               	bcf	status,0,c
 17062  013A7A  360B               	rlcf	i2___xxtofl@arg,f,c
 17063  013A7C  360C               	rlcf	i2___xxtofl@arg+1,f,c
 17064  013A7E  360D               	rlcf	i2___xxtofl@arg+2,f,c
 17065  013A80  360E               	rlcf	i2___xxtofl@arg+3,f,c
 17066  013A82                     i2l1172:
 17067  013A82  BE0D               	btfsc	i2___xxtofl@arg+2,7,c
 17068  013A84  D003               	goto	i2u778_40
 17069  013A86  0E02               	movlw	2
 17070  013A88  600A               	cpfslt	i2___xxtofl@exp,c
 17071  013A8A  D7F5               	goto	i2l1173
 17072  013A8C                     i2u778_40:
 17073  013A8C  B00A               	btfsc	i2___xxtofl@exp,0,c
 17074  013A8E  D008               	goto	i2l1177
 17075  013A90  0EFF               	movlw	255
 17076  013A92  160B               	andwf	i2___xxtofl@arg,f,c
 17077  013A94  0EFF               	movlw	255
 17078  013A96  160C               	andwf	i2___xxtofl@arg+1,f,c
 17079  013A98  0E7F               	movlw	127
 17080  013A9A  160D               	andwf	i2___xxtofl@arg+2,f,c
 17081  013A9C  0EFF               	movlw	255
 17082  013A9E  160E               	andwf	i2___xxtofl@arg+3,f,c
 17083  013AA0                     i2l1177:
 17084  013AA0  90D8               	bcf	status,0,c
 17085  013AA2  320A               	rrcf	i2___xxtofl@exp,f,c
 17086  013AA4  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 17087  013AA8  6A06               	clrf	(??i2___xxtofl+1)& (0+255),c
 17088  013AAA  6A07               	clrf	(??i2___xxtofl+2)& (0+255),c
 17089  013AAC  6A08               	clrf	(??i2___xxtofl+3)& (0+255),c
 17090  013AAE  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 17091  013AB2  6A07               	clrf	??i2___xxtofl+2,c
 17092  013AB4  6A06               	clrf	??i2___xxtofl+1,c
 17093  013AB6  6A05               	clrf	??i2___xxtofl,c
 17094  013AB8  5005               	movf	??i2___xxtofl,w,c
 17095  013ABA  120B               	iorwf	i2___xxtofl@arg,f,c
 17096  013ABC  5006               	movf	??i2___xxtofl+1,w,c
 17097  013ABE  120C               	iorwf	i2___xxtofl@arg+1,f,c
 17098  013AC0  5007               	movf	??i2___xxtofl+2,w,c
 17099  013AC2  120D               	iorwf	i2___xxtofl@arg+2,f,c
 17100  013AC4  5008               	movf	??i2___xxtofl+3,w,c
 17101  013AC6  120E               	iorwf	i2___xxtofl@arg+3,f,c
 17102  013AC8  5009               	movf	i2___xxtofl@sign,w,c
 17103  013ACA  A4D8               	btfss	status,2,c
 17104  013ACC  AE04               	btfss	i2___xxtofl@val+3,7,c
 17105  013ACE  D001               	goto	i2l1178
 17106  013AD0  8E0E               	bsf	i2___xxtofl@arg+3,7,c
 17107  013AD2                     i2l1178:
 17108  013AD2  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 17109  013AD6  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 17110  013ADA  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 17111  013ADE  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 17112  013AE2  0012               	return	
 17113  013AE4                     __end_ofi2___xxtofl:
 17114                           	opt stack 0
 17115                           tosu	equ	0xFFF
 17116                           tosh	equ	0xFFE
 17117                           tosl	equ	0xFFD
 17118                           pclatu	equ	0xFFB
 17119                           pclath	equ	0xFFA
 17120                           tblptru	equ	0xFF8
 17121                           tblptrh	equ	0xFF7
 17122                           tblptrl	equ	0xFF6
 17123                           tablat	equ	0xFF5
 17124                           prodh	equ	0xFF4
 17125                           prodl	equ	0xFF3
 17126                           intcon	equ	0xFF2
 17127                           postinc0	equ	0xFEE
 17128                           fsr0h	equ	0xFEA
 17129                           fsr0l	equ	0xFE9
 17130                           wreg	equ	0xFE8
 17131                           indf1	equ	0xFE7
 17132                           fsr1h	equ	0xFE2
 17133                           fsr1l	equ	0xFE1
 17134                           indf2	equ	0xFDF
 17135                           postinc2	equ	0xFDE
 17136                           postdec2	equ	0xFDD
 17137                           fsr2h	equ	0xFDA
 17138                           fsr2l	equ	0xFD9
 17139                           status	equ	0xFD8
 17140                           
 17141 ;; *************** function i2___wmul *****************
 17142 ;; Defined at:
 17143 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 17144 ;; Parameters:    Size  Location     Type
 17145 ;;  multiplier      2    0[COMRAM] unsigned int 
 17146 ;;  multiplicand    2    2[COMRAM] unsigned int 
 17147 ;; Auto vars:     Size  Location     Type
 17148 ;;  __wmul          2    4[COMRAM] unsigned int 
 17149 ;; Return value:  Size  Location     Type
 17150 ;;                  2    0[COMRAM] unsigned int 
 17151 ;; Registers used:
 17152 ;;		wreg, status,2, status,0, prodl, prodh
 17153 ;; Tracked objects:
 17154 ;;		On entry : 0/0
 17155 ;;		On exit  : 0/0
 17156 ;;		Unchanged: 0/0
 17157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17162 ;;Total ram usage:        6 bytes
 17163 ;; Hardware stack levels used:    1
 17164 ;; This function calls:
 17165 ;;		Nothing
 17166 ;; This function is called by:
 17167 ;;		i2_printf
 17168 ;; This function uses a non-reentrant model
 17169 ;;
 17170                           
 17171                           	psect	text55
 17172  014EB0                     __ptext55:
 17173                           	opt stack 0
 17174  014EB0                     i2___wmul:
 17175                           	opt stack 22
 17176                           
 17177                           ;incstack = 0
 17178  014EB0  5001               	movf	i2___wmul@multiplier,w,c
 17179  014EB2  0203               	mulwf	i2___wmul@multiplicand,c
 17180  014EB4  CFF3 F005          	movff	prodl,i2___wmul@product
 17181  014EB8  CFF4 F006          	movff	prodh,i2___wmul@product+1
 17182  014EBC  5001               	movf	i2___wmul@multiplier,w,c
 17183  014EBE  0204               	mulwf	i2___wmul@multiplicand+1,c
 17184  014EC0  50F3               	movf	prodl,w,c
 17185  014EC2  2606               	addwf	i2___wmul@product+1,f,c
 17186  014EC4  5002               	movf	i2___wmul@multiplier+1,w,c
 17187  014EC6  0203               	mulwf	i2___wmul@multiplicand,c
 17188  014EC8  50F3               	movf	prodl,w,c
 17189  014ECA  2606               	addwf	i2___wmul@product+1,f,c
 17190  014ECC  C005  F001         	movff	i2___wmul@product,?i2___wmul
 17191  014ED0  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 17192  014ED4  0012               	return	
 17193  014ED6                     __end_ofi2___wmul:
 17194                           	opt stack 0
 17195                           tosu	equ	0xFFF
 17196                           tosh	equ	0xFFE
 17197                           tosl	equ	0xFFD
 17198                           pclatu	equ	0xFFB
 17199                           pclath	equ	0xFFA
 17200                           tblptru	equ	0xFF8
 17201                           tblptrh	equ	0xFF7
 17202                           tblptrl	equ	0xFF6
 17203                           tablat	equ	0xFF5
 17204                           prodh	equ	0xFF4
 17205                           prodl	equ	0xFF3
 17206                           intcon	equ	0xFF2
 17207                           postinc0	equ	0xFEE
 17208                           fsr0h	equ	0xFEA
 17209                           fsr0l	equ	0xFE9
 17210                           wreg	equ	0xFE8
 17211                           indf1	equ	0xFE7
 17212                           fsr1h	equ	0xFE2
 17213                           fsr1l	equ	0xFE1
 17214                           indf2	equ	0xFDF
 17215                           postinc2	equ	0xFDE
 17216                           postdec2	equ	0xFDD
 17217                           fsr2h	equ	0xFDA
 17218                           fsr2l	equ	0xFD9
 17219                           status	equ	0xFD8
 17220                           
 17221 ;; *************** function i2___llmod *****************
 17222 ;; Defined at:
 17223 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 17224 ;; Parameters:    Size  Location     Type
 17225 ;;  dividend        4   13[COMRAM] unsigned long 
 17226 ;;  divisor         4   17[COMRAM] unsigned long 
 17227 ;; Auto vars:     Size  Location     Type
 17228 ;;  __llmod         1   21[COMRAM] unsigned char 
 17229 ;; Return value:  Size  Location     Type
 17230 ;;                  4   13[COMRAM] unsigned long 
 17231 ;; Registers used:
 17232 ;;		wreg, status,2, status,0
 17233 ;; Tracked objects:
 17234 ;;		On entry : 0/0
 17235 ;;		On exit  : 0/0
 17236 ;;		Unchanged: 0/0
 17237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17238 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17241 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17242 ;;Total ram usage:        9 bytes
 17243 ;; Hardware stack levels used:    1
 17244 ;; This function calls:
 17245 ;;		Nothing
 17246 ;; This function is called by:
 17247 ;;		i2_printf
 17248 ;; This function uses a non-reentrant model
 17249 ;;
 17250                           
 17251                           	psect	text56
 17252  014A42                     __ptext56:
 17253                           	opt stack 0
 17254  014A42                     i2___llmod:
 17255                           	opt stack 22
 17256                           
 17257                           ;incstack = 0
 17258  014A42  5012               	movf	i2___llmod@divisor,w,c
 17259  014A44  1013               	iorwf	i2___llmod@divisor+1,w,c
 17260  014A46  1014               	iorwf	i2___llmod@divisor+2,w,c
 17261  014A48  1015               	iorwf	i2___llmod@divisor+3,w,c
 17262  014A4A  B4D8               	btfsc	status,2,c
 17263  014A4C  D024               	goto	i2l962
 17264  014A4E  0E01               	movlw	1
 17265  014A50  6E16               	movwf	i2___llmod@counter,c
 17266  014A52  D006               	goto	i2l957
 17267  014A54  90D8               	bcf	status,0,c
 17268  014A56  3612               	rlcf	i2___llmod@divisor,f,c
 17269  014A58  3613               	rlcf	i2___llmod@divisor+1,f,c
 17270  014A5A  3614               	rlcf	i2___llmod@divisor+2,f,c
 17271  014A5C  3615               	rlcf	i2___llmod@divisor+3,f,c
 17272  014A5E  2A16               	incf	i2___llmod@counter,f,c
 17273  014A60                     i2l957:
 17274  014A60  AE15               	btfss	i2___llmod@divisor+3,7,c
 17275  014A62  D7F8               	goto	i2l958
 17276  014A64                     i2u770_40:
 17277  014A64  5012               	movf	i2___llmod@divisor,w,c
 17278  014A66  5C0E               	subwf	i2___llmod@dividend,w,c
 17279  014A68  5013               	movf	i2___llmod@divisor+1,w,c
 17280  014A6A  580F               	subwfb	i2___llmod@dividend+1,w,c
 17281  014A6C  5014               	movf	i2___llmod@divisor+2,w,c
 17282  014A6E  5810               	subwfb	i2___llmod@dividend+2,w,c
 17283  014A70  5015               	movf	i2___llmod@divisor+3,w,c
 17284  014A72  5811               	subwfb	i2___llmod@dividend+3,w,c
 17285  014A74  A0D8               	btfss	status,0,c
 17286  014A76  D008               	goto	i2l961
 17287  014A78  5012               	movf	i2___llmod@divisor,w,c
 17288  014A7A  5E0E               	subwf	i2___llmod@dividend,f,c
 17289  014A7C  5013               	movf	i2___llmod@divisor+1,w,c
 17290  014A7E  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 17291  014A80  5014               	movf	i2___llmod@divisor+2,w,c
 17292  014A82  5A10               	subwfb	i2___llmod@dividend+2,f,c
 17293  014A84  5015               	movf	i2___llmod@divisor+3,w,c
 17294  014A86  5A11               	subwfb	i2___llmod@dividend+3,f,c
 17295  014A88                     i2l961:
 17296  014A88  90D8               	bcf	status,0,c
 17297  014A8A  3215               	rrcf	i2___llmod@divisor+3,f,c
 17298  014A8C  3214               	rrcf	i2___llmod@divisor+2,f,c
 17299  014A8E  3213               	rrcf	i2___llmod@divisor+1,f,c
 17300  014A90  3212               	rrcf	i2___llmod@divisor,f,c
 17301  014A92  2E16               	decfsz	i2___llmod@counter,f,c
 17302  014A94  D7E7               	goto	i2u770_40
 17303  014A96                     i2l962:
 17304  014A96  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 17305  014A9A  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 17306  014A9E  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 17307  014AA2  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 17308  014AA6  0012               	return		;funcret
 17309  014AA8                     __end_ofi2___llmod:
 17310                           	opt stack 0
 17311                           tosu	equ	0xFFF
 17312                           tosh	equ	0xFFE
 17313                           tosl	equ	0xFFD
 17314                           pclatu	equ	0xFFB
 17315                           pclath	equ	0xFFA
 17316                           tblptru	equ	0xFF8
 17317                           tblptrh	equ	0xFF7
 17318                           tblptrl	equ	0xFF6
 17319                           tablat	equ	0xFF5
 17320                           prodh	equ	0xFF4
 17321                           prodl	equ	0xFF3
 17322                           intcon	equ	0xFF2
 17323                           postinc0	equ	0xFEE
 17324                           fsr0h	equ	0xFEA
 17325                           fsr0l	equ	0xFE9
 17326                           wreg	equ	0xFE8
 17327                           indf1	equ	0xFE7
 17328                           fsr1h	equ	0xFE2
 17329                           fsr1l	equ	0xFE1
 17330                           indf2	equ	0xFDF
 17331                           postinc2	equ	0xFDE
 17332                           postdec2	equ	0xFDD
 17333                           fsr2h	equ	0xFDA
 17334                           fsr2l	equ	0xFD9
 17335                           status	equ	0xFD8
 17336                           
 17337 ;; *************** function i2___lldiv *****************
 17338 ;; Defined at:
 17339 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 17340 ;; Parameters:    Size  Location     Type
 17341 ;;  dividend        4    0[COMRAM] unsigned long 
 17342 ;;  divisor         4    4[COMRAM] unsigned long 
 17343 ;; Auto vars:     Size  Location     Type
 17344 ;;  __lldiv         4    8[COMRAM] unsigned long 
 17345 ;;  __lldiv         1   12[COMRAM] unsigned char 
 17346 ;; Return value:  Size  Location     Type
 17347 ;;                  4    0[COMRAM] unsigned long 
 17348 ;; Registers used:
 17349 ;;		wreg, status,2, status,0
 17350 ;; Tracked objects:
 17351 ;;		On entry : 0/0
 17352 ;;		On exit  : 0/0
 17353 ;;		Unchanged: 0/0
 17354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17355 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17356 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17358 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17359 ;;Total ram usage:       13 bytes
 17360 ;; Hardware stack levels used:    1
 17361 ;; This function calls:
 17362 ;;		Nothing
 17363 ;; This function is called by:
 17364 ;;		i2_printf
 17365 ;; This function uses a non-reentrant model
 17366 ;;
 17367                           
 17368                           	psect	text57
 17369  014876                     __ptext57:
 17370                           	opt stack 0
 17371  014876                     i2___lldiv:
 17372                           	opt stack 22
 17373                           
 17374                           ;incstack = 0
 17375  014876  0E00               	movlw	0
 17376  014878  6E09               	movwf	i2___lldiv@quotient,c
 17377  01487A  0E00               	movlw	0
 17378  01487C  6E0A               	movwf	i2___lldiv@quotient+1,c
 17379  01487E  0E00               	movlw	0
 17380  014880  6E0B               	movwf	i2___lldiv@quotient+2,c
 17381  014882  0E00               	movlw	0
 17382  014884  6E0C               	movwf	i2___lldiv@quotient+3,c
 17383  014886  5005               	movf	i2___lldiv@divisor,w,c
 17384  014888  1006               	iorwf	i2___lldiv@divisor+1,w,c
 17385  01488A  1007               	iorwf	i2___lldiv@divisor+2,w,c
 17386  01488C  1008               	iorwf	i2___lldiv@divisor+3,w,c
 17387  01488E  B4D8               	btfsc	status,2,c
 17388  014890  D02A               	goto	i2l952
 17389  014892  0E01               	movlw	1
 17390  014894  6E0D               	movwf	i2___lldiv@counter,c
 17391  014896  D006               	goto	i2l947
 17392  014898  90D8               	bcf	status,0,c
 17393  01489A  3605               	rlcf	i2___lldiv@divisor,f,c
 17394  01489C  3606               	rlcf	i2___lldiv@divisor+1,f,c
 17395  01489E  3607               	rlcf	i2___lldiv@divisor+2,f,c
 17396  0148A0  3608               	rlcf	i2___lldiv@divisor+3,f,c
 17397  0148A2  2A0D               	incf	i2___lldiv@counter,f,c
 17398  0148A4                     i2l947:
 17399  0148A4  AE08               	btfss	i2___lldiv@divisor+3,7,c
 17400  0148A6  D7F8               	goto	i2l948
 17401  0148A8                     i2u767_40:
 17402  0148A8  90D8               	bcf	status,0,c
 17403  0148AA  3609               	rlcf	i2___lldiv@quotient,f,c
 17404  0148AC  360A               	rlcf	i2___lldiv@quotient+1,f,c
 17405  0148AE  360B               	rlcf	i2___lldiv@quotient+2,f,c
 17406  0148B0  360C               	rlcf	i2___lldiv@quotient+3,f,c
 17407  0148B2  5005               	movf	i2___lldiv@divisor,w,c
 17408  0148B4  5C01               	subwf	i2___lldiv@dividend,w,c
 17409  0148B6  5006               	movf	i2___lldiv@divisor+1,w,c
 17410  0148B8  5802               	subwfb	i2___lldiv@dividend+1,w,c
 17411  0148BA  5007               	movf	i2___lldiv@divisor+2,w,c
 17412  0148BC  5803               	subwfb	i2___lldiv@dividend+2,w,c
 17413  0148BE  5008               	movf	i2___lldiv@divisor+3,w,c
 17414  0148C0  5804               	subwfb	i2___lldiv@dividend+3,w,c
 17415  0148C2  A0D8               	btfss	status,0,c
 17416  0148C4  D009               	goto	i2l951
 17417  0148C6  5005               	movf	i2___lldiv@divisor,w,c
 17418  0148C8  5E01               	subwf	i2___lldiv@dividend,f,c
 17419  0148CA  5006               	movf	i2___lldiv@divisor+1,w,c
 17420  0148CC  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 17421  0148CE  5007               	movf	i2___lldiv@divisor+2,w,c
 17422  0148D0  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 17423  0148D2  5008               	movf	i2___lldiv@divisor+3,w,c
 17424  0148D4  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 17425  0148D6  8009               	bsf	i2___lldiv@quotient,0,c
 17426  0148D8                     i2l951:
 17427  0148D8  90D8               	bcf	status,0,c
 17428  0148DA  3208               	rrcf	i2___lldiv@divisor+3,f,c
 17429  0148DC  3207               	rrcf	i2___lldiv@divisor+2,f,c
 17430  0148DE  3206               	rrcf	i2___lldiv@divisor+1,f,c
 17431  0148E0  3205               	rrcf	i2___lldiv@divisor,f,c
 17432  0148E2  2E0D               	decfsz	i2___lldiv@counter,f,c
 17433  0148E4  D7E1               	goto	i2u767_40
 17434  0148E6                     i2l952:
 17435  0148E6  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 17436  0148EA  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 17437  0148EE  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 17438  0148F2  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 17439  0148F6  0012               	return		;funcret
 17440  0148F8                     __end_ofi2___lldiv:
 17441                           	opt stack 0
 17442                           tosu	equ	0xFFF
 17443                           tosh	equ	0xFFE
 17444                           tosl	equ	0xFFD
 17445                           pclatu	equ	0xFFB
 17446                           pclath	equ	0xFFA
 17447                           tblptru	equ	0xFF8
 17448                           tblptrh	equ	0xFF7
 17449                           tblptrl	equ	0xFF6
 17450                           tablat	equ	0xFF5
 17451                           prodh	equ	0xFF4
 17452                           prodl	equ	0xFF3
 17453                           intcon	equ	0xFF2
 17454                           postinc0	equ	0xFEE
 17455                           fsr0h	equ	0xFEA
 17456                           fsr0l	equ	0xFE9
 17457                           wreg	equ	0xFE8
 17458                           indf1	equ	0xFE7
 17459                           fsr1h	equ	0xFE2
 17460                           fsr1l	equ	0xFE1
 17461                           indf2	equ	0xFDF
 17462                           postinc2	equ	0xFDE
 17463                           postdec2	equ	0xFDD
 17464                           fsr2h	equ	0xFDA
 17465                           fsr2l	equ	0xFD9
 17466                           status	equ	0xFD8
 17467                           
 17468 ;; *************** function i2___fltol *****************
 17469 ;; Defined at:
 17470 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 17471 ;; Parameters:    Size  Location     Type
 17472 ;;  f1              4   39[COMRAM] unsigned long 
 17473 ;; Auto vars:     Size  Location     Type
 17474 ;;  __fltol         1   48[COMRAM] unsigned char 
 17475 ;;  __fltol         1   47[COMRAM] unsigned char 
 17476 ;; Return value:  Size  Location     Type
 17477 ;;                  4   39[COMRAM] long 
 17478 ;; Registers used:
 17479 ;;		wreg, status,2, status,0
 17480 ;; Tracked objects:
 17481 ;;		On entry : 0/0
 17482 ;;		On exit  : 0/0
 17483 ;;		Unchanged: 0/0
 17484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17487 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17488 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17489 ;;Total ram usage:       10 bytes
 17490 ;; Hardware stack levels used:    1
 17491 ;; This function calls:
 17492 ;;		Nothing
 17493 ;; This function is called by:
 17494 ;;		i2_printf
 17495 ;; This function uses a non-reentrant model
 17496 ;;
 17497                           
 17498                           	psect	text58
 17499  0143F6                     __ptext58:
 17500                           	opt stack 0
 17501  0143F6                     i2___fltol:
 17502                           	opt stack 22
 17503                           
 17504                           ;incstack = 0
 17505  0143F6  342A               	rlcf	i2___fltol@f1+2,w,c
 17506  0143F8  342B               	rlcf	i2___fltol@f1+3,w,c
 17507  0143FA  6E31               	movwf	i2___fltol@exp1,c
 17508  0143FC  5031               	movf	i2___fltol@exp1,w,c
 17509  0143FE  A4D8               	btfss	status,2,c
 17510  014400  D009               	goto	i2l799
 17511  014402  0E00               	movlw	0
 17512  014404  6E28               	movwf	?i2___fltol,c
 17513  014406  0E00               	movlw	0
 17514  014408  6E29               	movwf	?i2___fltol+1,c
 17515  01440A  0E00               	movlw	0
 17516  01440C  6E2A               	movwf	?i2___fltol+2,c
 17517  01440E  0E00               	movlw	0
 17518  014410  6E2B               	movwf	?i2___fltol+3,c
 17519  014412  0012               	return	
 17520  014414                     i2l799:
 17521  014414  C028  F02C         	movff	i2___fltol@f1,??i2___fltol
 17522  014418  C029  F02D         	movff	i2___fltol@f1+1,??i2___fltol+1
 17523  01441C  C02A  F02E         	movff	i2___fltol@f1+2,??i2___fltol+2
 17524  014420  C02B  F02F         	movff	i2___fltol@f1+3,??i2___fltol+3
 17525  014424  0E20               	movlw	32
 17526  014426  D005               	goto	i2u751_40
 17527  014428                     i2u751_45:
 17528  014428  90D8               	bcf	status,0,c
 17529  01442A  322F               	rrcf	??i2___fltol+3,f,c
 17530  01442C  322E               	rrcf	??i2___fltol+2,f,c
 17531  01442E  322D               	rrcf	??i2___fltol+1,f,c
 17532  014430  322C               	rrcf	??i2___fltol,f,c
 17533  014432                     i2u751_40:
 17534  014432  2EE8               	decfsz	wreg,f,c
 17535  014434  D7F9               	goto	i2u751_45
 17536  014436  502C               	movf	??i2___fltol,w,c
 17537  014438  6E30               	movwf	i2___fltol@sign1,c
 17538  01443A  8E2A               	bsf	i2___fltol@f1+2,7,c
 17539  01443C  0EFF               	movlw	255
 17540  01443E  1628               	andwf	i2___fltol@f1,f,c
 17541  014440  0EFF               	movlw	255
 17542  014442  1629               	andwf	i2___fltol@f1+1,f,c
 17543  014444  0EFF               	movlw	255
 17544  014446  162A               	andwf	i2___fltol@f1+2,f,c
 17545  014448  0E00               	movlw	0
 17546  01444A  162B               	andwf	i2___fltol@f1+3,f,c
 17547  01444C  0E96               	movlw	150
 17548  01444E  5E31               	subwf	i2___fltol@exp1,f,c
 17549  014450  AE31               	btfss	i2___fltol@exp1,7,c
 17550  014452  D016               	goto	i2l801
 17551  014454  5031               	movf	i2___fltol@exp1,w,c
 17552  014456  0A80               	xorlw	128
 17553  014458  0F97               	addlw	151
 17554  01445A  B0D8               	btfsc	status,0,c
 17555  01445C  D009               	goto	i2l802
 17556  01445E  0E00               	movlw	0
 17557  014460  6E28               	movwf	?i2___fltol,c
 17558  014462  0E00               	movlw	0
 17559  014464  6E29               	movwf	?i2___fltol+1,c
 17560  014466  0E00               	movlw	0
 17561  014468  6E2A               	movwf	?i2___fltol+2,c
 17562  01446A  0E00               	movlw	0
 17563  01446C  6E2B               	movwf	?i2___fltol+3,c
 17564  01446E  0012               	return	
 17565  014470                     i2l802:
 17566  014470  90D8               	bcf	status,0,c
 17567  014472  322B               	rrcf	i2___fltol@f1+3,f,c
 17568  014474  322A               	rrcf	i2___fltol@f1+2,f,c
 17569  014476  3229               	rrcf	i2___fltol@f1+1,f,c
 17570  014478  3228               	rrcf	i2___fltol@f1,f,c
 17571  01447A  3E31               	incfsz	i2___fltol@exp1,f,c
 17572  01447C  D7F9               	goto	i2l802
 17573  01447E  D015               	goto	i2u755_40
 17574  014480                     i2l801:
 17575  014480  0E1F               	movlw	31
 17576  014482  6431               	cpfsgt	i2___fltol@exp1,c
 17577  014484  D00F               	goto	i2l807
 17578  014486  0E00               	movlw	0
 17579  014488  6E28               	movwf	?i2___fltol,c
 17580  01448A  0E00               	movlw	0
 17581  01448C  6E29               	movwf	?i2___fltol+1,c
 17582  01448E  0E00               	movlw	0
 17583  014490  6E2A               	movwf	?i2___fltol+2,c
 17584  014492  0E00               	movlw	0
 17585  014494  6E2B               	movwf	?i2___fltol+3,c
 17586  014496  0012               	return	
 17587  014498  90D8               	bcf	status,0,c
 17588  01449A  3628               	rlcf	i2___fltol@f1,f,c
 17589  01449C  3629               	rlcf	i2___fltol@f1+1,f,c
 17590  01449E  362A               	rlcf	i2___fltol@f1+2,f,c
 17591  0144A0  362B               	rlcf	i2___fltol@f1+3,f,c
 17592  0144A2  0631               	decf	i2___fltol@exp1,f,c
 17593  0144A4                     i2l807:
 17594  0144A4  5031               	movf	i2___fltol@exp1,w,c
 17595  0144A6  A4D8               	btfss	status,2,c
 17596  0144A8  D7F7               	goto	i2l808
 17597  0144AA                     i2u755_40:
 17598  0144AA  5030               	movf	i2___fltol@sign1,w,c
 17599  0144AC  B4D8               	btfsc	status,2,c
 17600  0144AE  D008               	goto	i2l810
 17601  0144B0  1E2B               	comf	i2___fltol@f1+3,f,c
 17602  0144B2  1E2A               	comf	i2___fltol@f1+2,f,c
 17603  0144B4  1E29               	comf	i2___fltol@f1+1,f,c
 17604  0144B6  6C28               	negf	i2___fltol@f1,c
 17605  0144B8  0E00               	movlw	0
 17606  0144BA  2229               	addwfc	i2___fltol@f1+1,f,c
 17607  0144BC  222A               	addwfc	i2___fltol@f1+2,f,c
 17608  0144BE  222B               	addwfc	i2___fltol@f1+3,f,c
 17609  0144C0                     i2l810:
 17610  0144C0  C028  F028         	movff	i2___fltol@f1,?i2___fltol
 17611  0144C4  C029  F029         	movff	i2___fltol@f1+1,?i2___fltol+1
 17612  0144C8  C02A  F02A         	movff	i2___fltol@f1+2,?i2___fltol+2
 17613  0144CC  C02B  F02B         	movff	i2___fltol@f1+3,?i2___fltol+3
 17614  0144D0  0012               	return	
 17615  0144D2                     __end_ofi2___fltol:
 17616                           	opt stack 0
 17617                           tosu	equ	0xFFF
 17618                           tosh	equ	0xFFE
 17619                           tosl	equ	0xFFD
 17620                           pclatu	equ	0xFFB
 17621                           pclath	equ	0xFFA
 17622                           tblptru	equ	0xFF8
 17623                           tblptrh	equ	0xFF7
 17624                           tblptrl	equ	0xFF6
 17625                           tablat	equ	0xFF5
 17626                           prodh	equ	0xFF4
 17627                           prodl	equ	0xFF3
 17628                           intcon	equ	0xFF2
 17629                           postinc0	equ	0xFEE
 17630                           fsr0h	equ	0xFEA
 17631                           fsr0l	equ	0xFE9
 17632                           wreg	equ	0xFE8
 17633                           indf1	equ	0xFE7
 17634                           fsr1h	equ	0xFE2
 17635                           fsr1l	equ	0xFE1
 17636                           indf2	equ	0xFDF
 17637                           postinc2	equ	0xFDE
 17638                           postdec2	equ	0xFDD
 17639                           fsr2h	equ	0xFDA
 17640                           fsr2l	equ	0xFD9
 17641                           status	equ	0xFD8
 17642                           
 17643 ;; *************** function i2___flsub *****************
 17644 ;; Defined at:
 17645 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 17646 ;; Parameters:    Size  Location     Type
 17647 ;;  b               4   72[COMRAM] long 
 17648 ;;  a               4   76[COMRAM] long 
 17649 ;; Auto vars:     Size  Location     Type
 17650 ;;		None
 17651 ;; Return value:  Size  Location     Type
 17652 ;;                  4   72[COMRAM] long 
 17653 ;; Registers used:
 17654 ;;		wreg, status,2, status,0, cstack
 17655 ;; Tracked objects:
 17656 ;;		On entry : 0/0
 17657 ;;		On exit  : 0/0
 17658 ;;		Unchanged: 0/0
 17659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17660 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17663 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17664 ;;Total ram usage:        8 bytes
 17665 ;; Hardware stack levels used:    1
 17666 ;; Hardware stack levels required when called:    1
 17667 ;; This function calls:
 17668 ;;		i2___fladd
 17669 ;; This function is called by:
 17670 ;;		i2_printf
 17671 ;; This function uses a non-reentrant model
 17672 ;;
 17673                           
 17674                           	psect	text59
 17675  014BFA                     __ptext59:
 17676                           	opt stack 0
 17677  014BFA                     i2___flsub:
 17678                           	opt stack 21
 17679                           
 17680                           ;incstack = 0
 17681  014BFA  0E00               	movlw	0
 17682  014BFC  1A4D               	xorwf	i2___flsub@a,f,c
 17683  014BFE  0E00               	movlw	0
 17684  014C00  1A4E               	xorwf	i2___flsub@a+1,f,c
 17685  014C02  0E00               	movlw	0
 17686  014C04  1A4F               	xorwf	i2___flsub@a+2,f,c
 17687  014C06  0E80               	movlw	128
 17688  014C08  1A50               	xorwf	i2___flsub@a+3,f,c
 17689  014C0A  C049  F035         	movff	i2___flsub@b,i2___fladd@b
 17690  014C0E  C04A  F036         	movff	i2___flsub@b+1,i2___fladd@b+1
 17691  014C12  C04B  F037         	movff	i2___flsub@b+2,i2___fladd@b+2
 17692  014C16  C04C  F038         	movff	i2___flsub@b+3,i2___fladd@b+3
 17693  014C1A  C04D  F039         	movff	i2___flsub@a,i2___fladd@a
 17694  014C1E  C04E  F03A         	movff	i2___flsub@a+1,i2___fladd@a+1
 17695  014C22  C04F  F03B         	movff	i2___flsub@a+2,i2___fladd@a+2
 17696  014C26  C050  F03C         	movff	i2___flsub@a+3,i2___fladd@a+3
 17697  014C2A  EC6D  F096         	call	i2___fladd	;wreg free
 17698  014C2E  C035  F049         	movff	?i2___fladd,?i2___flsub
 17699  014C32  C036  F04A         	movff	?i2___fladd+1,?i2___flsub+1
 17700  014C36  C037  F04B         	movff	?i2___fladd+2,?i2___flsub+2
 17701  014C3A  C038  F04C         	movff	?i2___fladd+3,?i2___flsub+3
 17702  014C3E  0012               	return	
 17703  014C40                     __end_ofi2___flsub:
 17704                           	opt stack 0
 17705                           tosu	equ	0xFFF
 17706                           tosh	equ	0xFFE
 17707                           tosl	equ	0xFFD
 17708                           pclatu	equ	0xFFB
 17709                           pclath	equ	0xFFA
 17710                           tblptru	equ	0xFF8
 17711                           tblptrh	equ	0xFF7
 17712                           tblptrl	equ	0xFF6
 17713                           tablat	equ	0xFF5
 17714                           prodh	equ	0xFF4
 17715                           prodl	equ	0xFF3
 17716                           intcon	equ	0xFF2
 17717                           postinc0	equ	0xFEE
 17718                           fsr0h	equ	0xFEA
 17719                           fsr0l	equ	0xFE9
 17720                           wreg	equ	0xFE8
 17721                           indf1	equ	0xFE7
 17722                           fsr1h	equ	0xFE2
 17723                           fsr1l	equ	0xFE1
 17724                           indf2	equ	0xFDF
 17725                           postinc2	equ	0xFDE
 17726                           postdec2	equ	0xFDD
 17727                           fsr2h	equ	0xFDA
 17728                           fsr2l	equ	0xFD9
 17729                           status	equ	0xFD8
 17730                           
 17731 ;; *************** function i2___fladd *****************
 17732 ;; Defined at:
 17733 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 17734 ;; Parameters:    Size  Location     Type
 17735 ;;  b               4   52[COMRAM] long 
 17736 ;;  a               4   56[COMRAM] long 
 17737 ;; Auto vars:     Size  Location     Type
 17738 ;;  __fladd         1   71[COMRAM] unsigned char 
 17739 ;;  __fladd         1   70[COMRAM] unsigned char 
 17740 ;;  __fladd         1   69[COMRAM] unsigned char 
 17741 ;;  __fladd         1   68[COMRAM] unsigned char 
 17742 ;; Return value:  Size  Location     Type
 17743 ;;                  4   52[COMRAM] unsigned char 
 17744 ;; Registers used:
 17745 ;;		wreg, status,2, status,0
 17746 ;; Tracked objects:
 17747 ;;		On entry : 0/0
 17748 ;;		On exit  : 0/0
 17749 ;;		Unchanged: 0/0
 17750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17751 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17752 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17753 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17754 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17755 ;;Total ram usage:       20 bytes
 17756 ;; Hardware stack levels used:    1
 17757 ;; This function calls:
 17758 ;;		Nothing
 17759 ;; This function is called by:
 17760 ;;		i2_printf
 17761 ;;		i2___flsub
 17762 ;; This function uses a non-reentrant model
 17763 ;;
 17764                           
 17765                           	psect	text60
 17766  012CDA                     __ptext60:
 17767                           	opt stack 0
 17768  012CDA                     i2___fladd:
 17769                           	opt stack 21
 17770                           
 17771                           ;incstack = 0
 17772  012CDA  5038               	movf	i2___fladd@b+3,w,c
 17773  012CDC  0B80               	andlw	128
 17774  012CDE  6E45               	movwf	i2___fladd@signs,c
 17775  012CE0  5038               	movf	i2___fladd@b+3,w,c
 17776  012CE2  2438               	addwf	i2___fladd@b+3,w,c
 17777  012CE4  6E47               	movwf	i2___fladd@bexp,c
 17778  012CE6  BE37               	btfsc	i2___fladd@b+2,7,c
 17779  012CE8  8047               	bsf	i2___fladd@bexp,0,c
 17780  012CEA  5047               	movf	i2___fladd@bexp,w,c
 17781  012CEC  B4D8               	btfsc	status,2,c
 17782  012CEE  D00D               	goto	i2l1029
 17783  012CF0  2847               	incf	i2___fladd@bexp,w,c
 17784  012CF2  A4D8               	btfss	status,2,c
 17785  012CF4  D008               	goto	i2l1030
 17786  012CF6  0E00               	movlw	0
 17787  012CF8  6E35               	movwf	i2___fladd@b,c
 17788  012CFA  0E00               	movlw	0
 17789  012CFC  6E36               	movwf	i2___fladd@b+1,c
 17790  012CFE  0E00               	movlw	0
 17791  012D00  6E37               	movwf	i2___fladd@b+2,c
 17792  012D02  0E00               	movlw	0
 17793  012D04  6E38               	movwf	i2___fladd@b+3,c
 17794  012D06                     i2l1030:
 17795  012D06  8E37               	bsf	i2___fladd@b+2,7,c
 17796  012D08  D006               	goto	L13
 17797  012D0A                     i2l1029:
 17798  012D0A  0E00               	movlw	0
 17799  012D0C  6E35               	movwf	i2___fladd@b,c
 17800  012D0E  0E00               	movlw	0
 17801  012D10  6E36               	movwf	i2___fladd@b+1,c
 17802  012D12  0E00               	movlw	0
 17803  012D14  6E37               	movwf	i2___fladd@b+2,c
 17804  012D16                     L13:
 17805  012D16  0E00               	movlw	0
 17806  012D18  6E38               	movwf	i2___fladd@b+3,c
 17807  012D1A  503C               	movf	i2___fladd@a+3,w,c
 17808  012D1C  0B80               	andlw	128
 17809  012D1E  6E46               	movwf	i2___fladd@aexp,c
 17810  012D20  5045               	movf	i2___fladd@signs,w,c
 17811  012D22  1846               	xorwf	i2___fladd@aexp,w,c
 17812  012D24  A4D8               	btfss	status,2,c
 17813  012D26  8C45               	bsf	i2___fladd@signs,6,c
 17814  012D28  503C               	movf	i2___fladd@a+3,w,c
 17815  012D2A  243C               	addwf	i2___fladd@a+3,w,c
 17816  012D2C  6E46               	movwf	i2___fladd@aexp,c
 17817  012D2E  BE3B               	btfsc	i2___fladd@a+2,7,c
 17818  012D30  8046               	bsf	i2___fladd@aexp,0,c
 17819  012D32  5046               	movf	i2___fladd@aexp,w,c
 17820  012D34  B4D8               	btfsc	status,2,c
 17821  012D36  D00D               	goto	i2l1034
 17822  012D38  2846               	incf	i2___fladd@aexp,w,c
 17823  012D3A  A4D8               	btfss	status,2,c
 17824  012D3C  D008               	goto	i2l1035
 17825  012D3E  0E00               	movlw	0
 17826  012D40  6E39               	movwf	i2___fladd@a,c
 17827  012D42  0E00               	movlw	0
 17828  012D44  6E3A               	movwf	i2___fladd@a+1,c
 17829  012D46  0E00               	movlw	0
 17830  012D48  6E3B               	movwf	i2___fladd@a+2,c
 17831  012D4A  0E00               	movlw	0
 17832  012D4C  6E3C               	movwf	i2___fladd@a+3,c
 17833  012D4E                     i2l1035:
 17834  012D4E  8E3B               	bsf	i2___fladd@a+2,7,c
 17835  012D50  D006               	goto	L14
 17836  012D52                     i2l1034:
 17837  012D52  0E00               	movlw	0
 17838  012D54  6E39               	movwf	i2___fladd@a,c
 17839  012D56  0E00               	movlw	0
 17840  012D58  6E3A               	movwf	i2___fladd@a+1,c
 17841  012D5A  0E00               	movlw	0
 17842  012D5C  6E3B               	movwf	i2___fladd@a+2,c
 17843  012D5E                     L14:
 17844  012D5E  0E00               	movlw	0
 17845  012D60  6E3C               	movwf	i2___fladd@a+3,c
 17846  012D62  5047               	movf	i2___fladd@bexp,w,c
 17847  012D64  5C46               	subwf	i2___fladd@aexp,w,c
 17848  012D66  B0D8               	btfsc	status,0,c
 17849  012D68  D022               	goto	i2l1037
 17850  012D6A  AC45               	btfss	i2___fladd@signs,6,c
 17851  012D6C  D002               	goto	i2l1038
 17852  012D6E  0E80               	movlw	128
 17853  012D70  1A45               	xorwf	i2___fladd@signs,f,c
 17854  012D72                     i2l1038:
 17855  012D72  C047  F048         	movff	i2___fladd@bexp,i2___fladd@grs
 17856  012D76  C046  F047         	movff	i2___fladd@aexp,i2___fladd@bexp
 17857  012D7A  C048  F046         	movff	i2___fladd@grs,i2___fladd@aexp
 17858  012D7E  C035  F048         	movff	i2___fladd@b,i2___fladd@grs
 17859  012D82  C039  F035         	movff	i2___fladd@a,i2___fladd@b
 17860  012D86  C048  F039         	movff	i2___fladd@grs,i2___fladd@a
 17861  012D8A  C036  F048         	movff	i2___fladd@b+1,i2___fladd@grs
 17862  012D8E  C03A  F036         	movff	i2___fladd@a+1,i2___fladd@b+1
 17863  012D92  C048  F03A         	movff	i2___fladd@grs,i2___fladd@a+1
 17864  012D96  C037  F048         	movff	i2___fladd@b+2,i2___fladd@grs
 17865  012D9A  C03B  F037         	movff	i2___fladd@a+2,i2___fladd@b+2
 17866  012D9E  C048  F03B         	movff	i2___fladd@grs,i2___fladd@a+2
 17867  012DA2  C038  F048         	movff	i2___fladd@b+3,i2___fladd@grs
 17868  012DA6  C03C  F038         	movff	i2___fladd@a+3,i2___fladd@b+3
 17869  012DAA  C048  F03C         	movff	i2___fladd@grs,i2___fladd@a+3
 17870  012DAE                     i2l1037:
 17871  012DAE  0E00               	movlw	0
 17872  012DB0  6E48               	movwf	i2___fladd@grs,c
 17873  012DB2  5047               	movf	i2___fladd@bexp,w,c
 17874  012DB4  6E3D               	movwf	??i2___fladd& (0+255),c
 17875  012DB6  6A3E               	clrf	(??i2___fladd+1)& (0+255),c
 17876  012DB8  1E3D               	comf	??i2___fladd,f,c
 17877  012DBA  1E3E               	comf	??i2___fladd+1,f,c
 17878  012DBC  4A3D               	infsnz	??i2___fladd,f,c
 17879  012DBE  2A3E               	incf	??i2___fladd+1,f,c
 17880  012DC0  5046               	movf	i2___fladd@aexp,w,c
 17881  012DC2  6E3F               	movwf	(??i2___fladd+2)& (0+255),c
 17882  012DC4  6A40               	clrf	(??i2___fladd+3)& (0+255),c
 17883  012DC6  503D               	movf	??i2___fladd,w,c
 17884  012DC8  263F               	addwf	??i2___fladd+2,f,c
 17885  012DCA  503E               	movf	??i2___fladd+1,w,c
 17886  012DCC  2240               	addwfc	??i2___fladd+3,f,c
 17887  012DCE  BE40               	btfsc	??i2___fladd+3,7,c
 17888  012DD0  D02C               	goto	i2l1041
 17889  012DD2  5040               	movf	??i2___fladd+3,w,c
 17890  012DD4  E104               	bnz	i2u642_40
 17891  012DD6  0E1A               	movlw	26
 17892  012DD8  5C3F               	subwf	??i2___fladd+2,w,c
 17893  012DDA  A0D8               	btfss	status,0,c
 17894  012DDC  D026               	goto	i2l1041
 17895  012DDE                     i2u642_40:
 17896  012DDE  5035               	movf	i2___fladd@b,w,c
 17897  012DE0  1036               	iorwf	i2___fladd@b+1,w,c
 17898  012DE2  1037               	iorwf	i2___fladd@b+2,w,c
 17899  012DE4  1038               	iorwf	i2___fladd@b+3,w,c
 17900  012DE6  B4D8               	btfsc	status,2,c
 17901  012DE8  D002               	goto	i2u643_40
 17902  012DEA  0E01               	movlw	1
 17903  012DEC  D001               	goto	i2u644_40
 17904  012DEE                     i2u643_40:
 17905  012DEE  0E00               	movlw	0
 17906  012DF0                     i2u644_40:
 17907  012DF0  6E48               	movwf	i2___fladd@grs,c
 17908  012DF2  0E00               	movlw	0
 17909  012DF4  6E35               	movwf	i2___fladd@b,c
 17910  012DF6  0E00               	movlw	0
 17911  012DF8  6E36               	movwf	i2___fladd@b+1,c
 17912  012DFA  0E00               	movlw	0
 17913  012DFC  6E37               	movwf	i2___fladd@b+2,c
 17914  012DFE  0E00               	movlw	0
 17915  012E00  6E38               	movwf	i2___fladd@b+3,c
 17916  012E02  C046  F047         	movff	i2___fladd@aexp,i2___fladd@bexp
 17917  012E06  D015               	goto	i2u647_40
 17918  012E08                     i2l1042:
 17919  012E08  A048               	btfss	i2___fladd@grs,0,c
 17920  012E0A  D005               	goto	i2l1043
 17921  012E0C  90D8               	bcf	status,0,c
 17922  012E0E  3048               	rrcf	i2___fladd@grs,w,c
 17923  012E10  0901               	iorlw	1
 17924  012E12  6E48               	movwf	i2___fladd@grs,c
 17925  012E14  D002               	goto	i2l1044
 17926  012E16                     i2l1043:
 17927  012E16  90D8               	bcf	status,0,c
 17928  012E18  3248               	rrcf	i2___fladd@grs,f,c
 17929  012E1A                     i2l1044:
 17930  012E1A  B035               	btfsc	i2___fladd@b,0,c
 17931  012E1C  8E48               	bsf	i2___fladd@grs,7,c
 17932  012E1E  3438               	rlcf	i2___fladd@b+3,w,c
 17933  012E20  3238               	rrcf	i2___fladd@b+3,f,c
 17934  012E22  3237               	rrcf	i2___fladd@b+2,f,c
 17935  012E24  3236               	rrcf	i2___fladd@b+1,f,c
 17936  012E26  3235               	rrcf	i2___fladd@b,f,c
 17937  012E28  2A47               	incf	i2___fladd@bexp,f,c
 17938  012E2A                     i2l1041:
 17939  012E2A  5046               	movf	i2___fladd@aexp,w,c
 17940  012E2C  5C47               	subwf	i2___fladd@bexp,w,c
 17941  012E2E  A0D8               	btfss	status,0,c
 17942  012E30  D7EB               	goto	i2l1042
 17943  012E32                     i2u647_40:
 17944  012E32  BC45               	btfsc	i2___fladd@signs,6,c
 17945  012E34  D029               	goto	i2l1047
 17946  012E36  5047               	movf	i2___fladd@bexp,w,c
 17947  012E38  A4D8               	btfss	status,2,c
 17948  012E3A  D009               	goto	i2l1048
 17949  012E3C  0E00               	movlw	0
 17950  012E3E  6E35               	movwf	?i2___fladd,c
 17951  012E40  0E00               	movlw	0
 17952  012E42  6E36               	movwf	?i2___fladd+1,c
 17953  012E44  0E00               	movlw	0
 17954  012E46  6E37               	movwf	?i2___fladd+2,c
 17955  012E48  0E00               	movlw	0
 17956  012E4A  6E38               	movwf	?i2___fladd+3,c
 17957  012E4C  0012               	return	
 17958  012E4E                     i2l1048:
 17959  012E4E  5039               	movf	i2___fladd@a,w,c
 17960  012E50  2635               	addwf	i2___fladd@b,f,c
 17961  012E52  503A               	movf	i2___fladd@a+1,w,c
 17962  012E54  2236               	addwfc	i2___fladd@b+1,f,c
 17963  012E56  503B               	movf	i2___fladd@a+2,w,c
 17964  012E58  2237               	addwfc	i2___fladd@b+2,f,c
 17965  012E5A  503C               	movf	i2___fladd@a+3,w,c
 17966  012E5C  2238               	addwfc	i2___fladd@b+3,f,c
 17967  012E5E  A038               	btfss	i2___fladd@b+3,0,c
 17968  012E60  D083               	goto	i2u660_40
 17969  012E62  A048               	btfss	i2___fladd@grs,0,c
 17970  012E64  D006               	goto	i2l1051
 17971  012E66  90D8               	bcf	status,0,c
 17972  012E68  3248               	rrcf	i2___fladd@grs,f,c
 17973  012E6A  5048               	movf	i2___fladd@grs,w,c
 17974  012E6C  0901               	iorlw	1
 17975  012E6E  6E48               	movwf	i2___fladd@grs,c
 17976  012E70  D002               	goto	i2l1052
 17977  012E72                     i2l1051:
 17978  012E72  90D8               	bcf	status,0,c
 17979  012E74  3248               	rrcf	i2___fladd@grs,f,c
 17980  012E76                     i2l1052:
 17981  012E76  B035               	btfsc	i2___fladd@b,0,c
 17982  012E78  8E48               	bsf	i2___fladd@grs,7,c
 17983  012E7A  3438               	rlcf	i2___fladd@b+3,w,c
 17984  012E7C  3238               	rrcf	i2___fladd@b+3,f,c
 17985  012E7E  3237               	rrcf	i2___fladd@b+2,f,c
 17986  012E80  3236               	rrcf	i2___fladd@b+1,f,c
 17987  012E82  3235               	rrcf	i2___fladd@b,f,c
 17988  012E84  2A47               	incf	i2___fladd@bexp,f,c
 17989  012E86  D070               	goto	i2u660_40
 17990  012E88                     i2l1047:
 17991  012E88  5039               	movf	i2___fladd@a,w,c
 17992  012E8A  5C35               	subwf	i2___fladd@b,w,c
 17993  012E8C  503A               	movf	i2___fladd@a+1,w,c
 17994  012E8E  5836               	subwfb	i2___fladd@b+1,w,c
 17995  012E90  503B               	movf	i2___fladd@a+2,w,c
 17996  012E92  5837               	subwfb	i2___fladd@b+2,w,c
 17997  012E94  5038               	movf	i2___fladd@b+3,w,c
 17998  012E96  0A80               	xorlw	128
 17999  012E98  6E3D               	movwf	??i2___fladd& (0+255),c
 18000  012E9A  503C               	movf	i2___fladd@a+3,w,c
 18001  012E9C  0A80               	xorlw	128
 18002  012E9E  583D               	subwfb	??i2___fladd& (0+255),w,c
 18003  012EA0  B0D8               	btfsc	status,0,c
 18004  012EA2  D036               	goto	i2l1055
 18005  012EA4  C035  F03D         	movff	i2___fladd@b,??i2___fladd
 18006  012EA8  C036  F03E         	movff	i2___fladd@b+1,??i2___fladd+1
 18007  012EAC  C037  F03F         	movff	i2___fladd@b+2,??i2___fladd+2
 18008  012EB0  C038  F040         	movff	i2___fladd@b+3,??i2___fladd+3
 18009  012EB4  1E3D               	comf	??i2___fladd,f,c
 18010  012EB6  1E3E               	comf	??i2___fladd+1,f,c
 18011  012EB8  1E3F               	comf	??i2___fladd+2,f,c
 18012  012EBA  1E40               	comf	??i2___fladd+3,f,c
 18013  012EBC  2A3D               	incf	??i2___fladd,f,c
 18014  012EBE  0E00               	movlw	0
 18015  012EC0  223E               	addwfc	??i2___fladd+1,f,c
 18016  012EC2  223F               	addwfc	??i2___fladd+2,f,c
 18017  012EC4  2240               	addwfc	??i2___fladd+3,f,c
 18018  012EC6  5039               	movf	i2___fladd@a,w,c
 18019  012EC8  243D               	addwf	??i2___fladd,w,c
 18020  012ECA  6E41               	movwf	(??i2___fladd+4)& (0+255),c
 18021  012ECC  503A               	movf	i2___fladd@a+1,w,c
 18022  012ECE  203E               	addwfc	??i2___fladd+1,w,c
 18023  012ED0  6E42               	movwf	(??i2___fladd+5)& (0+255),c
 18024  012ED2  503B               	movf	i2___fladd@a+2,w,c
 18025  012ED4  203F               	addwfc	??i2___fladd+2,w,c
 18026  012ED6  6E43               	movwf	(??i2___fladd+6)& (0+255),c
 18027  012ED8  503C               	movf	i2___fladd@a+3,w,c
 18028  012EDA  2040               	addwfc	??i2___fladd+3,w,c
 18029  012EDC  6E44               	movwf	(??i2___fladd+7)& (0+255),c
 18030  012EDE  0EFF               	movlw	255
 18031  012EE0  2441               	addwf	??i2___fladd+4,w,c
 18032  012EE2  6E35               	movwf	i2___fladd@b,c
 18033  012EE4  0EFF               	movlw	255
 18034  012EE6  2042               	addwfc	??i2___fladd+5,w,c
 18035  012EE8  6E36               	movwf	i2___fladd@b+1,c
 18036  012EEA  0EFF               	movlw	255
 18037  012EEC  2043               	addwfc	??i2___fladd+6,w,c
 18038  012EEE  6E37               	movwf	i2___fladd@b+2,c
 18039  012EF0  0EFF               	movlw	255
 18040  012EF2  2044               	addwfc	??i2___fladd+7,w,c
 18041  012EF4  6E38               	movwf	i2___fladd@b+3,c
 18042  012EF6  0E80               	movlw	128
 18043  012EF8  1A45               	xorwf	i2___fladd@signs,f,c
 18044  012EFA  6C48               	negf	i2___fladd@grs,c
 18045  012EFC  5048               	movf	i2___fladd@grs,w,c
 18046  012EFE  A4D8               	btfss	status,2,c
 18047  012F00  D00F               	goto	i2l1057
 18048  012F02  0E01               	movlw	1
 18049  012F04  2635               	addwf	i2___fladd@b,f,c
 18050  012F06  0E00               	movlw	0
 18051  012F08  2236               	addwfc	i2___fladd@b+1,f,c
 18052  012F0A  2237               	addwfc	i2___fladd@b+2,f,c
 18053  012F0C  2238               	addwfc	i2___fladd@b+3,f,c
 18054  012F0E  D008               	goto	i2l1057
 18055  012F10                     i2l1055:
 18056  012F10  5039               	movf	i2___fladd@a,w,c
 18057  012F12  5E35               	subwf	i2___fladd@b,f,c
 18058  012F14  503A               	movf	i2___fladd@a+1,w,c
 18059  012F16  5A36               	subwfb	i2___fladd@b+1,f,c
 18060  012F18  503B               	movf	i2___fladd@a+2,w,c
 18061  012F1A  5A37               	subwfb	i2___fladd@b+2,f,c
 18062  012F1C  503C               	movf	i2___fladd@a+3,w,c
 18063  012F1E  5A38               	subwfb	i2___fladd@b+3,f,c
 18064  012F20                     i2l1057:
 18065  012F20  5035               	movf	i2___fladd@b,w,c
 18066  012F22  1036               	iorwf	i2___fladd@b+1,w,c
 18067  012F24  1037               	iorwf	i2___fladd@b+2,w,c
 18068  012F26  1038               	iorwf	i2___fladd@b+3,w,c
 18069  012F28  A4D8               	btfss	status,2,c
 18070  012F2A  D01C               	goto	i2l1064
 18071  012F2C  5048               	movf	i2___fladd@grs,w,c
 18072  012F2E  A4D8               	btfss	status,2,c
 18073  012F30  D019               	goto	i2l1064
 18074  012F32  0E00               	movlw	0
 18075  012F34  6E35               	movwf	?i2___fladd,c
 18076  012F36  0E00               	movlw	0
 18077  012F38  6E36               	movwf	?i2___fladd+1,c
 18078  012F3A  0E00               	movlw	0
 18079  012F3C  6E37               	movwf	?i2___fladd+2,c
 18080  012F3E  0E00               	movlw	0
 18081  012F40  6E38               	movwf	?i2___fladd+3,c
 18082  012F42  0012               	return	
 18083  012F44  90D8               	bcf	status,0,c
 18084  012F46  3635               	rlcf	i2___fladd@b,f,c
 18085  012F48  3636               	rlcf	i2___fladd@b+1,f,c
 18086  012F4A  3637               	rlcf	i2___fladd@b+2,f,c
 18087  012F4C  3638               	rlcf	i2___fladd@b+3,f,c
 18088  012F4E  BE48               	btfsc	i2___fladd@grs,7,c
 18089  012F50  8035               	bsf	i2___fladd@b,0,c
 18090  012F52  A048               	btfss	i2___fladd@grs,0,c
 18091  012F54  D002               	goto	i2l1062
 18092  012F56  80D8               	bsf	status,0,c
 18093  012F58  D001               	goto	L15
 18094  012F5A                     i2l1062:
 18095  012F5A  90D8               	bcf	status,0,c
 18096  012F5C                     L15:
 18097  012F5C  3648               	rlcf	i2___fladd@grs,f,c
 18098  012F5E  5047               	movf	i2___fladd@bexp,w,c
 18099  012F60  A4D8               	btfss	status,2,c
 18100  012F62  0647               	decf	i2___fladd@bexp,f,c
 18101  012F64                     i2l1064:
 18102  012F64  AE37               	btfss	i2___fladd@b+2,7,c
 18103  012F66  D7EE               	goto	i2l1060
 18104  012F68                     i2u660_40:
 18105  012F68  0E00               	movlw	0
 18106  012F6A  6E46               	movwf	i2___fladd@aexp,c
 18107  012F6C  AE48               	btfss	i2___fladd@grs,7,c
 18108  012F6E  D00A               	goto	i2l1069
 18109  012F70  C048  F03D         	movff	i2___fladd@grs,??i2___fladd
 18110  012F74  0E7F               	movlw	127
 18111  012F76  163D               	andwf	??i2___fladd,f,c
 18112  012F78  A4D8               	btfss	status,2,c
 18113  012F7A  D002               	goto	i2u663_40
 18114  012F7C  A035               	btfss	i2___fladd@b,0,c
 18115  012F7E  D002               	goto	i2l1069
 18116  012F80                     i2u663_40:
 18117  012F80  0E01               	movlw	1
 18118  012F82  6E46               	movwf	i2___fladd@aexp,c
 18119  012F84                     i2l1069:
 18120  012F84  5046               	movf	i2___fladd@aexp,w,c
 18121  012F86  B4D8               	btfsc	status,2,c
 18122  012F88  D020               	goto	i2l1072
 18123  012F8A  0E01               	movlw	1
 18124  012F8C  2635               	addwf	i2___fladd@b,f,c
 18125  012F8E  0E00               	movlw	0
 18126  012F90  2236               	addwfc	i2___fladd@b+1,f,c
 18127  012F92  2237               	addwfc	i2___fladd@b+2,f,c
 18128  012F94  2238               	addwfc	i2___fladd@b+3,f,c
 18129  012F96  A038               	btfss	i2___fladd@b+3,0,c
 18130  012F98  D018               	goto	i2l1072
 18131  012F9A  C035  F03D         	movff	i2___fladd@b,??i2___fladd
 18132  012F9E  C036  F03E         	movff	i2___fladd@b+1,??i2___fladd+1
 18133  012FA2  C037  F03F         	movff	i2___fladd@b+2,??i2___fladd+2
 18134  012FA6  C038  F040         	movff	i2___fladd@b+3,??i2___fladd+3
 18135  012FAA  3440               	rlcf	??i2___fladd+3,w,c
 18136  012FAC  3240               	rrcf	??i2___fladd+3,f,c
 18137  012FAE  323F               	rrcf	??i2___fladd+2,f,c
 18138  012FB0  323E               	rrcf	??i2___fladd+1,f,c
 18139  012FB2  323D               	rrcf	??i2___fladd,f,c
 18140  012FB4  C03D  F035         	movff	??i2___fladd,i2___fladd@b
 18141  012FB8  C03E  F036         	movff	??i2___fladd+1,i2___fladd@b+1
 18142  012FBC  C03F  F037         	movff	??i2___fladd+2,i2___fladd@b+2
 18143  012FC0  C040  F038         	movff	??i2___fladd+3,i2___fladd@b+3
 18144  012FC4  2847               	incf	i2___fladd@bexp,w,c
 18145  012FC6  A4D8               	btfss	status,2,c
 18146  012FC8  2A47               	incf	i2___fladd@bexp,f,c
 18147  012FCA                     i2l1072:
 18148  012FCA  2847               	incf	i2___fladd@bexp,w,c
 18149  012FCC  B4D8               	btfsc	status,2,c
 18150  012FCE  D003               	goto	i2u668_40
 18151  012FD0  5047               	movf	i2___fladd@bexp,w,c
 18152  012FD2  A4D8               	btfss	status,2,c
 18153  012FD4  D00D               	goto	i2l1076
 18154  012FD6                     i2u668_40:
 18155  012FD6  0E00               	movlw	0
 18156  012FD8  6E35               	movwf	i2___fladd@b,c
 18157  012FDA  0E00               	movlw	0
 18158  012FDC  6E36               	movwf	i2___fladd@b+1,c
 18159  012FDE  0E00               	movlw	0
 18160  012FE0  6E37               	movwf	i2___fladd@b+2,c
 18161  012FE2  0E00               	movlw	0
 18162  012FE4  6E38               	movwf	i2___fladd@b+3,c
 18163  012FE6  5047               	movf	i2___fladd@bexp,w,c
 18164  012FE8  A4D8               	btfss	status,2,c
 18165  012FEA  D002               	goto	i2l1076
 18166  012FEC  0E00               	movlw	0
 18167  012FEE  6E45               	movwf	i2___fladd@signs,c
 18168  012FF0                     i2l1076:
 18169  012FF0  A047               	btfss	i2___fladd@bexp,0,c
 18170  012FF2  D002               	goto	i2l1077
 18171  012FF4  8E37               	bsf	i2___fladd@b+2,7,c
 18172  012FF6  D001               	goto	i2l1078
 18173  012FF8                     i2l1077:
 18174  012FF8  9E37               	bcf	i2___fladd@b+2,7,c
 18175  012FFA                     i2l1078:
 18176  012FFA  90D8               	bcf	status,0,c
 18177  012FFC  3047               	rrcf	i2___fladd@bexp,w,c
 18178  012FFE  6E38               	movwf	i2___fladd@b+3,c
 18179  013000  BE45               	btfsc	i2___fladd@signs,7,c
 18180  013002  8E38               	bsf	i2___fladd@b+3,7,c
 18181  013004  C035  F035         	movff	i2___fladd@b,?i2___fladd
 18182  013008  C036  F036         	movff	i2___fladd@b+1,?i2___fladd+1
 18183  01300C  C037  F037         	movff	i2___fladd@b+2,?i2___fladd+2
 18184  013010  C038  F038         	movff	i2___fladd@b+3,?i2___fladd+3
 18185  013014  0012               	return	
 18186  013016                     __end_ofi2___fladd:
 18187                           	opt stack 0
 18188                           tosu	equ	0xFFF
 18189                           tosh	equ	0xFFE
 18190                           tosl	equ	0xFFD
 18191                           pclatu	equ	0xFFB
 18192                           pclath	equ	0xFFA
 18193                           tblptru	equ	0xFF8
 18194                           tblptrh	equ	0xFF7
 18195                           tblptrl	equ	0xFF6
 18196                           tablat	equ	0xFF5
 18197                           prodh	equ	0xFF4
 18198                           prodl	equ	0xFF3
 18199                           intcon	equ	0xFF2
 18200                           postinc0	equ	0xFEE
 18201                           fsr0h	equ	0xFEA
 18202                           fsr0l	equ	0xFE9
 18203                           wreg	equ	0xFE8
 18204                           indf1	equ	0xFE7
 18205                           fsr1h	equ	0xFE2
 18206                           fsr1l	equ	0xFE1
 18207                           indf2	equ	0xFDF
 18208                           postinc2	equ	0xFDE
 18209                           postdec2	equ	0xFDD
 18210                           fsr2h	equ	0xFDA
 18211                           fsr2l	equ	0xFD9
 18212                           status	equ	0xFD8
 18213                           
 18214 ;; *************** function i2___flneg *****************
 18215 ;; Defined at:
 18216 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 18217 ;; Parameters:    Size  Location     Type
 18218 ;;  f1              4    0[COMRAM] unsigned char 
 18219 ;; Auto vars:     Size  Location     Type
 18220 ;;		None
 18221 ;; Return value:  Size  Location     Type
 18222 ;;                  4    0[COMRAM] unsigned char 
 18223 ;; Registers used:
 18224 ;;		wreg, status,2, status,0
 18225 ;; Tracked objects:
 18226 ;;		On entry : 0/0
 18227 ;;		On exit  : 0/0
 18228 ;;		Unchanged: 0/0
 18229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18234 ;;Total ram usage:        4 bytes
 18235 ;; Hardware stack levels used:    1
 18236 ;; This function calls:
 18237 ;;		Nothing
 18238 ;; This function is called by:
 18239 ;;		i2_printf
 18240 ;; This function uses a non-reentrant model
 18241 ;;
 18242                           
 18243                           	psect	text61
 18244  014DE2                     __ptext61:
 18245                           	opt stack 0
 18246  014DE2                     i2___flneg:
 18247                           	opt stack 22
 18248                           
 18249                           ;incstack = 0
 18250  014DE2  5001               	movf	i2___flneg@f1,w,c
 18251  014DE4  1002               	iorwf	i2___flneg@f1+1,w,c
 18252  014DE6  1003               	iorwf	i2___flneg@f1+2,w,c
 18253  014DE8  1004               	iorwf	i2___flneg@f1+3,w,c
 18254  014DEA  B4D8               	btfsc	status,2,c
 18255  014DEC  D008               	goto	i2l776
 18256  014DEE  0E00               	movlw	0
 18257  014DF0  1A01               	xorwf	i2___flneg@f1,f,c
 18258  014DF2  0E00               	movlw	0
 18259  014DF4  1A02               	xorwf	i2___flneg@f1+1,f,c
 18260  014DF6  0E00               	movlw	0
 18261  014DF8  1A03               	xorwf	i2___flneg@f1+2,f,c
 18262  014DFA  0E80               	movlw	128
 18263  014DFC  1A04               	xorwf	i2___flneg@f1+3,f,c
 18264  014DFE                     i2l776:
 18265  014DFE  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 18266  014E02  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 18267  014E06  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 18268  014E0A  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 18269  014E0E  0012               	return	
 18270  014E10                     __end_ofi2___flneg:
 18271                           	opt stack 0
 18272                           tosu	equ	0xFFF
 18273                           tosh	equ	0xFFE
 18274                           tosl	equ	0xFFD
 18275                           pclatu	equ	0xFFB
 18276                           pclath	equ	0xFFA
 18277                           tblptru	equ	0xFF8
 18278                           tblptrh	equ	0xFF7
 18279                           tblptrl	equ	0xFF6
 18280                           tablat	equ	0xFF5
 18281                           prodh	equ	0xFF4
 18282                           prodl	equ	0xFF3
 18283                           intcon	equ	0xFF2
 18284                           postinc0	equ	0xFEE
 18285                           fsr0h	equ	0xFEA
 18286                           fsr0l	equ	0xFE9
 18287                           wreg	equ	0xFE8
 18288                           indf1	equ	0xFE7
 18289                           fsr1h	equ	0xFE2
 18290                           fsr1l	equ	0xFE1
 18291                           indf2	equ	0xFDF
 18292                           postinc2	equ	0xFDE
 18293                           postdec2	equ	0xFDD
 18294                           fsr2h	equ	0xFDA
 18295                           fsr2l	equ	0xFD9
 18296                           status	equ	0xFD8
 18297                           
 18298 ;; *************** function i2___flge *****************
 18299 ;; Defined at:
 18300 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 18301 ;; Parameters:    Size  Location     Type
 18302 ;;  ff1             4    0[COMRAM] unsigned char 
 18303 ;;  ff2             4    4[COMRAM] unsigned char 
 18304 ;; Auto vars:     Size  Location     Type
 18305 ;;		None
 18306 ;; Return value:  Size  Location     Type
 18307 ;;		None               void
 18308 ;; Registers used:
 18309 ;;		wreg, status,2, status,0
 18310 ;; Tracked objects:
 18311 ;;		On entry : 0/0
 18312 ;;		On exit  : 0/0
 18313 ;;		Unchanged: 0/0
 18314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18315 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18317 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18318 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18319 ;;Total ram usage:       12 bytes
 18320 ;; Hardware stack levels used:    1
 18321 ;; This function calls:
 18322 ;;		Nothing
 18323 ;; This function is called by:
 18324 ;;		i2_printf
 18325 ;; This function uses a non-reentrant model
 18326 ;;
 18327                           
 18328                           	psect	text62
 18329  0141F8                     __ptext62:
 18330                           	opt stack 0
 18331  0141F8                     i2___flge:
 18332                           	opt stack 22
 18333                           
 18334                           ;incstack = 0
 18335  0141F8  0E00               	movlw	0
 18336  0141FA  1401               	andwf	i2___flge@ff1,w,c
 18337  0141FC  6E09               	movwf	??i2___flge& (0+255),c
 18338  0141FE  0E00               	movlw	0
 18339  014200  1402               	andwf	i2___flge@ff1+1,w,c
 18340  014202  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 18341  014204  0E80               	movlw	128
 18342  014206  1403               	andwf	i2___flge@ff1+2,w,c
 18343  014208  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 18344  01420A  0E7F               	movlw	127
 18345  01420C  1404               	andwf	i2___flge@ff1+3,w,c
 18346  01420E  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 18347  014210  5009               	movf	??i2___flge,w,c
 18348  014212  100A               	iorwf	??i2___flge+1,w,c
 18349  014214  100B               	iorwf	??i2___flge+2,w,c
 18350  014216  100C               	iorwf	??i2___flge+3,w,c
 18351  014218  A4D8               	btfss	status,2,c
 18352  01421A  D008               	goto	i2l769
 18353  01421C  0E00               	movlw	0
 18354  01421E  6E01               	movwf	i2___flge@ff1,c
 18355  014220  0E00               	movlw	0
 18356  014222  6E02               	movwf	i2___flge@ff1+1,c
 18357  014224  0E00               	movlw	0
 18358  014226  6E03               	movwf	i2___flge@ff1+2,c
 18359  014228  0E00               	movlw	0
 18360  01422A  6E04               	movwf	i2___flge@ff1+3,c
 18361  01422C                     i2l769:
 18362  01422C  0E00               	movlw	0
 18363  01422E  1405               	andwf	i2___flge@ff2,w,c
 18364  014230  6E09               	movwf	??i2___flge& (0+255),c
 18365  014232  0E00               	movlw	0
 18366  014234  1406               	andwf	i2___flge@ff2+1,w,c
 18367  014236  6E0A               	movwf	(??i2___flge+1)& (0+255),c
 18368  014238  0E80               	movlw	128
 18369  01423A  1407               	andwf	i2___flge@ff2+2,w,c
 18370  01423C  6E0B               	movwf	(??i2___flge+2)& (0+255),c
 18371  01423E  0E7F               	movlw	127
 18372  014240  1408               	andwf	i2___flge@ff2+3,w,c
 18373  014242  6E0C               	movwf	(??i2___flge+3)& (0+255),c
 18374  014244  5009               	movf	??i2___flge,w,c
 18375  014246  100A               	iorwf	??i2___flge+1,w,c
 18376  014248  100B               	iorwf	??i2___flge+2,w,c
 18377  01424A  100C               	iorwf	??i2___flge+3,w,c
 18378  01424C  A4D8               	btfss	status,2,c
 18379  01424E  D008               	goto	i2l770
 18380  014250  0E00               	movlw	0
 18381  014252  6E05               	movwf	i2___flge@ff2,c
 18382  014254  0E00               	movlw	0
 18383  014256  6E06               	movwf	i2___flge@ff2+1,c
 18384  014258  0E00               	movlw	0
 18385  01425A  6E07               	movwf	i2___flge@ff2+2,c
 18386  01425C  0E00               	movlw	0
 18387  01425E  6E08               	movwf	i2___flge@ff2+3,c
 18388  014260                     i2l770:
 18389  014260  AE04               	btfss	i2___flge@ff1+3,7,c
 18390  014262  D01D               	goto	i2l771
 18391  014264  C001  F009         	movff	i2___flge@ff1,??i2___flge
 18392  014268  C002  F00A         	movff	i2___flge@ff1+1,??i2___flge+1
 18393  01426C  C003  F00B         	movff	i2___flge@ff1+2,??i2___flge+2
 18394  014270  C004  F00C         	movff	i2___flge@ff1+3,??i2___flge+3
 18395  014274  1E09               	comf	??i2___flge,f,c
 18396  014276  1E0A               	comf	??i2___flge+1,f,c
 18397  014278  1E0B               	comf	??i2___flge+2,f,c
 18398  01427A  1E0C               	comf	??i2___flge+3,f,c
 18399  01427C  2A09               	incf	??i2___flge,f,c
 18400  01427E  0E00               	movlw	0
 18401  014280  220A               	addwfc	??i2___flge+1,f,c
 18402  014282  220B               	addwfc	??i2___flge+2,f,c
 18403  014284  220C               	addwfc	??i2___flge+3,f,c
 18404  014286  0E00               	movlw	0
 18405  014288  2409               	addwf	??i2___flge,w,c
 18406  01428A  6E01               	movwf	i2___flge@ff1,c
 18407  01428C  0E00               	movlw	0
 18408  01428E  200A               	addwfc	??i2___flge+1,w,c
 18409  014290  6E02               	movwf	i2___flge@ff1+1,c
 18410  014292  0E00               	movlw	0
 18411  014294  200B               	addwfc	??i2___flge+2,w,c
 18412  014296  6E03               	movwf	i2___flge@ff1+2,c
 18413  014298  0E80               	movlw	128
 18414  01429A  200C               	addwfc	??i2___flge+3,w,c
 18415  01429C  6E04               	movwf	i2___flge@ff1+3,c
 18416  01429E                     i2l771:
 18417  01429E  AE08               	btfss	i2___flge@ff2+3,7,c
 18418  0142A0  D01D               	goto	i2l772
 18419  0142A2  C005  F009         	movff	i2___flge@ff2,??i2___flge
 18420  0142A6  C006  F00A         	movff	i2___flge@ff2+1,??i2___flge+1
 18421  0142AA  C007  F00B         	movff	i2___flge@ff2+2,??i2___flge+2
 18422  0142AE  C008  F00C         	movff	i2___flge@ff2+3,??i2___flge+3
 18423  0142B2  1E09               	comf	??i2___flge,f,c
 18424  0142B4  1E0A               	comf	??i2___flge+1,f,c
 18425  0142B6  1E0B               	comf	??i2___flge+2,f,c
 18426  0142B8  1E0C               	comf	??i2___flge+3,f,c
 18427  0142BA  2A09               	incf	??i2___flge,f,c
 18428  0142BC  0E00               	movlw	0
 18429  0142BE  220A               	addwfc	??i2___flge+1,f,c
 18430  0142C0  220B               	addwfc	??i2___flge+2,f,c
 18431  0142C2  220C               	addwfc	??i2___flge+3,f,c
 18432  0142C4  0E00               	movlw	0
 18433  0142C6  2409               	addwf	??i2___flge,w,c
 18434  0142C8  6E05               	movwf	i2___flge@ff2,c
 18435  0142CA  0E00               	movlw	0
 18436  0142CC  200A               	addwfc	??i2___flge+1,w,c
 18437  0142CE  6E06               	movwf	i2___flge@ff2+1,c
 18438  0142D0  0E00               	movlw	0
 18439  0142D2  200B               	addwfc	??i2___flge+2,w,c
 18440  0142D4  6E07               	movwf	i2___flge@ff2+2,c
 18441  0142D6  0E80               	movlw	128
 18442  0142D8  200C               	addwfc	??i2___flge+3,w,c
 18443  0142DA  6E08               	movwf	i2___flge@ff2+3,c
 18444  0142DC                     i2l772:
 18445  0142DC  0E00               	movlw	0
 18446  0142DE  1A01               	xorwf	i2___flge@ff1,f,c
 18447  0142E0  0E00               	movlw	0
 18448  0142E2  1A02               	xorwf	i2___flge@ff1+1,f,c
 18449  0142E4  0E00               	movlw	0
 18450  0142E6  1A03               	xorwf	i2___flge@ff1+2,f,c
 18451  0142E8  0E80               	movlw	128
 18452  0142EA  1A04               	xorwf	i2___flge@ff1+3,f,c
 18453  0142EC  0E00               	movlw	0
 18454  0142EE  1A05               	xorwf	i2___flge@ff2,f,c
 18455  0142F0  0E00               	movlw	0
 18456  0142F2  1A06               	xorwf	i2___flge@ff2+1,f,c
 18457  0142F4  0E00               	movlw	0
 18458  0142F6  1A07               	xorwf	i2___flge@ff2+2,f,c
 18459  0142F8  0E80               	movlw	128
 18460  0142FA  1A08               	xorwf	i2___flge@ff2+3,f,c
 18461  0142FC  5005               	movf	i2___flge@ff2,w,c
 18462  0142FE  5C01               	subwf	i2___flge@ff1,w,c
 18463  014300  5006               	movf	i2___flge@ff2+1,w,c
 18464  014302  5802               	subwfb	i2___flge@ff1+1,w,c
 18465  014304  5007               	movf	i2___flge@ff2+2,w,c
 18466  014306  5803               	subwfb	i2___flge@ff1+2,w,c
 18467  014308  5008               	movf	i2___flge@ff2+3,w,c
 18468  01430A  5804               	subwfb	i2___flge@ff1+3,w,c
 18469  01430C  B0D8               	btfsc	status,0,c
 18470  01430E  D002               	goto	i2l3928
 18471  014310  90D8               	bcf	status,0,c
 18472  014312  0012               	return	
 18473  014314                     i2l3928:
 18474  014314  80D8               	bsf	status,0,c
 18475  014316  0012               	return	
 18476  014318                     __end_ofi2___flge:
 18477                           	opt stack 0
 18478                           tosu	equ	0xFFF
 18479                           tosh	equ	0xFFE
 18480                           tosl	equ	0xFFD
 18481                           pclatu	equ	0xFFB
 18482                           pclath	equ	0xFFA
 18483                           tblptru	equ	0xFF8
 18484                           tblptrh	equ	0xFF7
 18485                           tblptrl	equ	0xFF6
 18486                           tablat	equ	0xFF5
 18487                           prodh	equ	0xFF4
 18488                           prodl	equ	0xFF3
 18489                           intcon	equ	0xFF2
 18490                           postinc0	equ	0xFEE
 18491                           fsr0h	equ	0xFEA
 18492                           fsr0l	equ	0xFE9
 18493                           wreg	equ	0xFE8
 18494                           indf1	equ	0xFE7
 18495                           fsr1h	equ	0xFE2
 18496                           fsr1l	equ	0xFE1
 18497                           indf2	equ	0xFDF
 18498                           postinc2	equ	0xFDE
 18499                           postdec2	equ	0xFDD
 18500                           fsr2h	equ	0xFDA
 18501                           fsr2l	equ	0xFD9
 18502                           status	equ	0xFD8
 18503                           tosu	equ	0xFFF
 18504                           tosh	equ	0xFFE
 18505                           tosl	equ	0xFFD
 18506                           pclatu	equ	0xFFB
 18507                           pclath	equ	0xFFA
 18508                           tblptru	equ	0xFF8
 18509                           tblptrh	equ	0xFF7
 18510                           tblptrl	equ	0xFF6
 18511                           tablat	equ	0xFF5
 18512                           prodh	equ	0xFF4
 18513                           prodl	equ	0xFF3
 18514                           intcon	equ	0xFF2
 18515                           postinc0	equ	0xFEE
 18516                           fsr0h	equ	0xFEA
 18517                           fsr0l	equ	0xFE9
 18518                           wreg	equ	0xFE8
 18519                           indf1	equ	0xFE7
 18520                           fsr1h	equ	0xFE2
 18521                           fsr1l	equ	0xFE1
 18522                           indf2	equ	0xFDF
 18523                           postinc2	equ	0xFDE
 18524                           postdec2	equ	0xFDD
 18525                           fsr2h	equ	0xFDA
 18526                           fsr2l	equ	0xFD9
 18527                           status	equ	0xFD8
 18528                           
 18529                           	psect	text63
 18530  000000                     __ptext63:
 18531                           	opt stack 0
 18532                           tosu	equ	0xFFF
 18533                           tosh	equ	0xFFE
 18534                           tosl	equ	0xFFD
 18535                           pclatu	equ	0xFFB
 18536                           pclath	equ	0xFFA
 18537                           tblptru	equ	0xFF8
 18538                           tblptrh	equ	0xFF7
 18539                           tblptrl	equ	0xFF6
 18540                           tablat	equ	0xFF5
 18541                           prodh	equ	0xFF4
 18542                           prodl	equ	0xFF3
 18543                           intcon	equ	0xFF2
 18544                           postinc0	equ	0xFEE
 18545                           fsr0h	equ	0xFEA
 18546                           fsr0l	equ	0xFE9
 18547                           wreg	equ	0xFE8
 18548                           indf1	equ	0xFE7
 18549                           fsr1h	equ	0xFE2
 18550                           fsr1l	equ	0xFE1
 18551                           indf2	equ	0xFDF
 18552                           postinc2	equ	0xFDE
 18553                           postdec2	equ	0xFDD
 18554                           fsr2h	equ	0xFDA
 18555                           fsr2l	equ	0xFD9
 18556                           status	equ	0xFD8
 18557                           
 18558                           	psect	rparam
 18559  0000                     tosu	equ	0xFFF
 18560                           tosh	equ	0xFFE
 18561                           tosl	equ	0xFFD
 18562                           pclatu	equ	0xFFB
 18563                           pclath	equ	0xFFA
 18564                           tblptru	equ	0xFF8
 18565                           tblptrh	equ	0xFF7
 18566                           tblptrl	equ	0xFF6
 18567                           tablat	equ	0xFF5
 18568                           prodh	equ	0xFF4
 18569                           prodl	equ	0xFF3
 18570                           intcon	equ	0xFF2
 18571                           postinc0	equ	0xFEE
 18572                           fsr0h	equ	0xFEA
 18573                           fsr0l	equ	0xFE9
 18574                           wreg	equ	0xFE8
 18575                           indf1	equ	0xFE7
 18576                           fsr1h	equ	0xFE2
 18577                           fsr1l	equ	0xFE1
 18578                           indf2	equ	0xFDF
 18579                           postinc2	equ	0xFDE
 18580                           postdec2	equ	0xFDD
 18581                           fsr2h	equ	0xFDA
 18582                           fsr2l	equ	0xFD9
 18583                           status	equ	0xFD8
 18584                           
 18585                           	psect	temp
 18586  00005C                     btemp:
 18587                           	opt stack 0
 18588  00005C                     	ds	1
 18589  0000                     int$flags	set	btemp
 18590  0000                     wtemp6	set	btemp+1
 18591                           tosu	equ	0xFFF
 18592                           tosh	equ	0xFFE
 18593                           tosl	equ	0xFFD
 18594                           pclatu	equ	0xFFB
 18595                           pclath	equ	0xFFA
 18596                           tblptru	equ	0xFF8
 18597                           tblptrh	equ	0xFF7
 18598                           tblptrl	equ	0xFF6
 18599                           tablat	equ	0xFF5
 18600                           prodh	equ	0xFF4
 18601                           prodl	equ	0xFF3
 18602                           intcon	equ	0xFF2
 18603                           postinc0	equ	0xFEE
 18604                           fsr0h	equ	0xFEA
 18605                           fsr0l	equ	0xFE9
 18606                           wreg	equ	0xFE8
 18607                           indf1	equ	0xFE7
 18608                           fsr1h	equ	0xFE2
 18609                           fsr1l	equ	0xFE1
 18610                           indf2	equ	0xFDF
 18611                           postinc2	equ	0xFDE
 18612                           postdec2	equ	0xFDD
 18613                           fsr2h	equ	0xFDA
 18614                           fsr2l	equ	0xFD9
 18615                           status	equ	0xFD8


Data Sizes:
    Strings     883
    Constant    144
    Data        0
    BSS         198
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      91
    BANK0           160    112     117
    BANK1           256    217     218
    BANK2           256      0     192
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_30(CODE[5]), STR_27(CODE[6]), STR_14(CODE[11]), STR_10(CODE[8]), 
		 -> STR_6(CODE[7]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> ringBufferLUT@arg_str_685(BANK1[64]), ringBufferLUT@arg_str(BANK1[64]), 

    atof@s	PTR const unsigned char  size(2) Largest target is 64
		 -> ringBufferLUT@arg_str(BANK1[64]), 

    strtod@s	PTR const unsigned char  size(2) Largest target is 64
		 -> ringBufferLUT@arg_str(BANK1[64]), 

    strtod@res	PTR PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 300
		 -> STR_33(CODE[3]), STR_32(CODE[300]), STR_31(CODE[3]), STR_29(CODE[4]), 
		 -> STR_28(CODE[5]), STR_26(CODE[3]), STR_25(CODE[49]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[45]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[65]), STR_18(CODE[31]), STR_17(CODE[93]), STR_16(CODE[44]), 
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_12(CODE[18]), STR_11(CODE[3]), 
		 -> STR_9(CODE[3]), STR_8(CODE[14]), STR_7(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[174]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK1[2]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___flsub
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___flmul->i2___awdiv
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    i2___fltol->i2___flmul
    i2___flsub->i2___fladd
    i2___fladd->i2_fround

Critical Paths under _main in BANK0

    _ringBufferLUT->_printf
    _atoi->___wmul
    _atof->_strtod
    _strtod->___flmul
    ___lmul->_atoi
    _printResetMessage->_printf
    _printf->___fladd
    _scale->___flmul
    _putch->_EUSART2_Write
    _fround->___flmul
    ___flmul->___awdiv
    ___awdiv->___awmod
    ___xxtofl->_atoi
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_atof
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf

Critical Paths under _main in BANK1

    _main->_ringBufferPull
    _ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_printf
    _printResetMessage->_printf
    _printf->___flsub
    ___flsub->___fladd

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   99296
                  _SYSTEM_Initialize
                  _printResetMessage
                     _ringBufferPull
 ---------------------------------------------------------------------------------
 (1) _ringBufferPull                                       9     9      0   59390
                                            208 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                      161   159      2   58695
                                             47 BANK1    161   159      2
                            ___fladd
                             ___lmul
                           ___xxtofl
                               _atof
                               _atoi
                            _isdigit
                             _printf
                             _strcmp
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     470
                                             43 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4     851
                                             43 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2     913
                                             49 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _atof                                                 4     0      4    9404
                                             94 BANK0      4     0      4
                             _strtod
 ---------------------------------------------------------------------------------
 (4) _strtod                                              12     8      4    9306
                                             82 BANK0     12     8      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                           ___xxtofl
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              3     3      0      90
                                             43 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             43 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     522
                                             56 BANK0     12     4      8
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1505
                                             43 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      24
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _printResetMessage                                    0     0      0   39710
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              41    35      6   39710
                                            110 BANK0      2     2      0
                                             16 BANK1     31    25      6
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4    7978
                                             82 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      66
                                             44 BANK0      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      44
                                             43 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4    7780
                                             82 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4051
                                             57 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1664
                                             43 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1820
                                             49 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     455
                                             43 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     455
                                             43 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                             56 BANK0     14    10      4
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     465
                                             43 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     767
                                             56 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     618
                                             43 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     457
                                             91 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4295
                                              8 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3910
                                             98 BANK0     12     4      8
                                              0 BANK1      8     8      0
                           ___xxtofl (ARG)
                               _atof (ARG)
                               _atoi (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                             43 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     942
                                             43 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     196
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3      98
                                             43 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3      98
                                             43 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerHigh                      18    18      0   19796
                                             25 BANK0     18    18      0
                   Absolute function *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Receive_ISR                                  0     0      0   19796
                           i2_printf
 ---------------------------------------------------------------------------------
 (8) i2_printf                                            37    35      2   19796
                                             80 COMRAM     4     2      2
                                              0 BANK0     25    25      0
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (9) i2_scale                                              9     5      4    4194
                                             39 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (9) i2_putch                                              1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (10) i2_EUSART2_Write                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_fround                                            13     9      4    3996
                                             39 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (10) i2___flmul                                          25    17      8    2167
                                             14 COMRAM    25    17      8
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) i2__tdiv_to_l_                                       17     9      8     355
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (9) i2__div_to_l_                                        14     6      8     355
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (9) i2___xxtofl                                          14    10      4     348
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___llmod                                            9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___lldiv                                           13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (9) i2___fltol                                           10     6      4     307
                                             39 COMRAM    10     6      4
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___flsub                                            8     0      8    2149
                                             72 COMRAM     8     0      8
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___fladd                                          20    12      8    2052
                                             52 COMRAM    20    12      8
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___flneg                                            4     0      4      71
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) i2___flge                                            12     4      8     338
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printResetMessage
     _printf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___xxtofl (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         _atof (ARG)
           _strtod
             ___fldiv
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___flneg
             ___lmul
               _atoi (ARG)
                 ___wmul
                 _isdigit
             ___xxtofl
               _atoi (ARG)
                 ___wmul
                 _isdigit
             _isdigit
             _isspace
         _atoi (ARG)
           ___wmul
           _isdigit
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___xxtofl (ARG)
             _atoi (ARG)
               ___wmul
               _isdigit
           _atof (ARG)
             _strtod
               ___fldiv
               ___flge
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___flneg
               ___lmul
                 _atoi (ARG)
                   ___wmul
                   _isdigit
               ___xxtofl
                 _atoi (ARG)
                   ___wmul
                   _isdigit
               _isdigit
               _isspace
           _atoi (ARG)
             ___wmul
             _isdigit
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         _atoi (ARG)
           ___wmul
           _isdigit
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       ___fladd
         ___xxtofl (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         _atof (ARG)
           _strtod
             ___fldiv
             ___flge
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___flneg
             ___lmul
               _atoi (ARG)
                 ___wmul
                 _isdigit
             ___xxtofl
               _atoi (ARG)
                 ___wmul
                 _isdigit
             _isdigit
             _isspace
         _atoi (ARG)
           ___wmul
           _isdigit
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lmul
         _atoi (ARG)
           ___wmul
           _isdigit
       ___xxtofl
         _atoi (ARG)
           ___wmul
           _isdigit
       _atof
         _strtod
           ___fldiv
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___flneg
           ___lmul
             _atoi (ARG)
               ___wmul
               _isdigit
           ___xxtofl
             _atoi (ARG)
               ___wmul
               _isdigit
           _isdigit
           _isspace
       _atoi
         ___wmul
         _isdigit
       _isdigit
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___xxtofl (ARG)
             _atoi (ARG)
               ___wmul
               _isdigit
           _atof (ARG)
             _strtod
               ___fldiv
               ___flge
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___flneg
               ___lmul
                 _atoi (ARG)
                   ___wmul
                   _isdigit
               ___xxtofl
                 _atoi (ARG)
                   ___wmul
                   _isdigit
               _isdigit
               _isspace
           _atoi (ARG)
             ___wmul
             _isdigit
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___xxtofl (ARG)
               _atoi (ARG)
                 ___wmul
                 _isdigit
             _atof (ARG)
               _strtod
                 ___fldiv
                 ___flge
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___flneg
                 ___lmul
                   _atoi (ARG)
                     ___wmul
                     _isdigit
                 ___xxtofl
                   _atoi (ARG)
                     ___wmul
                     _isdigit
                 _isdigit
                 _isspace
             _atoi (ARG)
               ___wmul
               _isdigit
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
             _atoi (ARG)
               ___wmul
               _isdigit
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _atoi (ARG)
             ___wmul
             _isdigit
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strlen
     _strlen

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___flge
       i2___flmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2___flneg
       i2___flsub
         i2___fladd
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___xxtofl (ARG)
       i2___fltol
         i2___flmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C0      10       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D9      DA       7       85.2%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     70      75       5       73.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      5B       1       96.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26A       8        0.0%
DATA                 0      0     26A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Aug 28 14:03:44 2018

                                 ___fldiv@aexp 00A3                                   ___fldiv@bexp 00A2  
                                 ___fldiv@sign 0097                                    __CFG_CP$OFF 000000  
                                 ___awdiv@sign 0096                            ___wmul@multiplicand 008D  
                                          l321 3B92                                            l410 16AA  
                                          l322 3B5A                                            l403 3196  
                                          l420 000C                                            l180 4D30  
                                          l316 3B04                                            l413 1770  
                                          l421 001C                                            l406 3286  
                                          l414 18F6                                            l430 064E  
                                          l422 002C                                            l350 0FDC  
                                          l318 3B40                                            l431 00BA  
                                          l319 3B24                                            l416 19BC  
                                          l360 1100                                            l352 1052  
                                          l409 17A2                                            l441 02AE  
                                          l433 012A                                            l425 0028  
                                          l434 01AC                                            l426 005C  
                                          l178 4D0A                                            l370 134A  
                                          l354 12BE                                            l362 110A  
                                          l187 4C58                                            l371 132E  
                                          l363 115C                                            l355 10CA  
                                          l188 4C7E                                            l460 04E0  
                                          l452 0486                                            l436 01DE  
                                          l372 1346                                            l356 10AE  
                                          l348 0F8E                                            l189 4C7C  
                                          l461 062A                                            l453 03F2  
                                          l437 022A                                            l701 44DA  
                                          l381 14FE                                            l365 120E  
                                          l357 10C6                                            l462 0542  
                                          l438 0316                                            l710 45A0  
                                          l702 44D4                                            l374 1470  
                                          l471 06EA                                            l455 04A0  
                                          l447 038E                                            l375 137C  
                                          l359 1270                                            l287 4F04  
                                          l720 46FE                                            l472 0782  
                                          l464 0644                                            l456 0492  
                                          l704 451C                                            l376 13C0  
                                          l801 43A4                                            l721 470E  
                                          l473 06F8                                            l465 0636  
                                          l369 14BE                                            l377 1386  
                                          l810 43E4                                            l802 4394  
                                          l458 04C4                                            l650 1EF6  
                                          l723 472C                                            l467 0688  
                                          l459 04C8                                            l643 1E90  
                                          l707 456C                                            l724 4724  
                                          l740 4948                                            l644 1E8A  
                                          l708 452E                                            l741 4952  
                                          l733 490E                                            l661 1FB6  
                                          l653 1F78                                            l742 4960  
                                          l734 491A                                            l670 2062  
                                          l654 1F6E                                            l646 1EBA  
                                          l807 43C8                                            l727 474C  
                                          l671 2080                                            l808 43BC  
                                          l752 3EA4                                            l728 4756  
                                          l736 4930                                            l488 4B1C  
                                          l672 20C6                                            l664 1FCA  
                                          l648 1EC6                                            l729 4764  
                                          l737 4928                                            l489 4B30  
                                          l921 4E32                                            l657 1F72  
                                          l649 1EDE                                            l770 4140  
                                          l754 3EC2                                            l674 21A4  
                                          l682 2192                                            l771 417E  
                                          l755 3F04                                            l691 2282  
                                          l675 2108                                            l772 41BC  
                                          l764 3F96                                            l756 3F34  
                                          l860 3CDA                                            l916 4EF0  
                                          l692 2270                                            l676 20CE  
                                          l765 3F8A                                            l693 22AA  
                                          l685 21EA                                            l669 205C  
                                          l758 3F72                                            l862 3D16  
                                          l686 21B0                                            l678 214C  
                                          l951 47D2                                            l759 3F62  
                                          l863 3D06                                            l679 2114  
                                          l776 4DD0                                            l952 47E0  
                                          l856 3C4C                                            l688 222A  
                                          l769 410C                                            l961 4A22  
                                          l689 21F2                                            l962 4A30  
                                          l858 3C78                                            l947 479E  
                                          l859 3CB2                                            l948 4792  
                                          l868 3D3A                                            l957 49FA  
                                          l869 3D2E                                            l958 49EE  
                                          l799 4338                                   __CFG_CPD$OFF 000000  
                                  i2___fladd@a 0039                                    i2___fladd@b 0035  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 0090  
                                   i2___xxtofl 3994                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                  i2___flmul@a 0013                                    i2___flmul@b 000F  
                                  i2___flsub@a 004D                                    i2___flsub@b 0049  
                                 ___flmul@aexp 00AA                                   ___flmul@bexp 00AB  
                      __size_of_ringBufferPull 013A                                   ___flmul@sign 00A5  
                                 ___flmul@temp 00B0                                   ___flmul@prod 00AC  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___fltol@exp1 00C4                                           l1100 3468  
                                         l1030 22EA                                           l1110 34D6  
                                         l1103 349E                                           l1120 266A  
                                         l1112 351A                                           l1104 3480  
                                         l1041 2416                                           l1121 2666  
                                         l1113 353E                                           l1042 23F4  
                                         l1034 2336                                           l1122 267A  
                                         l1114 3568                                           l1051 2460  
                                         l1043 2402                                           l1035 2332  
                                         l1131 2898                                           l1115 3574  
                                         l1060 2558                                           l1052 2464  
                                         l1044 2406                                           l1140 2914  
                                         l1132 287A                                           l1124 26AA  
                                         l1116 3576                                           l1037 2392  
                                         l1029 22EE                                           l1141 2932  
                                         l1125 26A6                                           l1062 256E  
                                         l1038 2356                                           l1126 26BA  
                                         l1055 2522                                           l1047 2476  
                                         l1143 2956                                           l1127 26D8  
                                         l1072 25EC                                           l1064 2578  
                                         l1048 243C                                           l1144 2974  
                                         l1057 2534                                           l1170 38E8  
                                         l1162 3882                                           l1138 28D0  
                                         l1090 334E                                           l1067 2598  
                                         l1163 3892                                           l1091 334A  
                                         l1076 2612                                           l1172 3932  
                                         l1164 38B0                                           l1148 4B6E  
                                         l1156 4CD6                                           l1077 261A  
                                         l1069 25A2                                           l1173 3926  
                                         l1093 3394                                           l1149 4B64  
                                         l1157 4CD0                                           l1078 261C  
                                         l1166 38C2                                           l1086 330E  
                                         l1167 38B6                                           l1095 33BC  
                                         l1087 330A                                           l1096 346A  
                                         l1177 3950                                           l1169 3900  
                                         l1097 341A                                           l1178 3982  
                                         l1098 3442                                           l4300 3568  
                                         l3934 41F4                                           l3938 4C44  
                                         l7082 3AF4                                           l5716 4568  
                                         l7092 3B1A                                           l6846 027C  
                                         l6838 022A                                           l6938 068C  
                                         l6890 0492                                           l6866 0392  
                                         l6956 06F8                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFFA                                           STR_2 FFF1  
                                         STR_3 FFF6                                           STR_4 FDB7  
                                         STR_5 FF8A                                           STR_6 FFDF  
                                         STR_7 FF8A                                           STR_8 FFBE  
                                         STR_9 FF8A                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                           u5120 28CC  
                                         u5200 4E2E                                   printf@tmpval 0126  
                                         u6100 43CE                                           u5300 4934  
                                         u5060 26C6                                           u5150 2922  
                                         u5070 283C                                           u5240 4730  
                                         u5160 2940                                           u6130 47A2  
                                         u5075 2832                                           u6060 4356  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         u6160 49FE                                           _PMD4 000E50  
                                         u6065 434C                                           _PMD5 000E51  
                                         u5450 393C                                           u5710 3F9C  
                                         u7230 4BA6                                           u5640 3D40  
                                         u5561 3C30                                           u4930 34D2  
                                         u5581 3C5C                                           u5830 1F9E  
                                         u5750 1EC2                                           u4960 3528  
                                         u9130 03D0                                           u9050 01F0  
                                         u4970 354C                                           u5850 1FC6  
                                         u9060 023C                                           u9240 06CA  
                                         u9160 04AE                                           u9170 04BE  
                                         u9090 027C                                           u8700 23DC  
                                         u9260 0794                                           u8730 2420  
                                         u9540 3B1A                                           u8680 23C8  
                                         u8690 23DA                                           u8940 25F8  
                                         u8860 257C                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 0055  
                                 i2___flge@ff1 0001                                   i2___flge@ff2 0005  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write 4C40  
                                         _atof 4E3A                                           _atoi 44D2  
                                         _main 4EF8                                           _line 0280  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005C  
                                 i2___flneg@f1 0001                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00D8  
                                 i2___fltol@f1 0028                                ___fldiv@new_exp 009C  
                              __end_ofi2_scale 1E6E                   __end_of_EUSART2_Transmit_ISR 4DB2  
                              __end_ofi2_putch 4F9C                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                                  __CFG_SCANE$ON 000000  
                     __size_ofi2_EUSART2_Write 0042                 __size_of_OSCILLATOR_Initialize 0018  
                          ringBufferPull@index 01D7                  __end_of_OSCILLATOR_Initialize 4F48  
                                ___fltol@sign1 00C3                                          ?_atof 00BE  
                                        ?_atoi 0091                                __end_of___fladd 2638  
                                        ?_main 0001                                __end_of___fldiv 3592  
                              __end_of___awdiv 476E                                __end_of___flneg 4DE2  
                                        STR_10 FFD7                                          STR_11 FF8A  
                                        STR_20 FF8A                                          STR_12 FFAC  
                                        STR_21 FF8A                                          STR_13 FF8A  
                                        STR_30 FFEC                                          STR_14 FFCC  
                                        STR_22 FF34                                          STR_31 FF8A  
                                        STR_23 FF8A                                          STR_15 FF8A  
                                        STR_24 FF8A                                          STR_16 FF61  
                                        STR_32 FC8B                                          STR_33 FF8A  
                                        STR_25 FF03                                          STR_17 FE65  
                                __CFG_WDTE$OFF 000000                                          STR_26 FF8A  
                                        STR_18 FF8D                                          STR_27 FFE6  
                                        STR_19 FEC2                                          STR_28 FFF1  
                              __end_of___awmod 496A                                          STR_29 FFF6  
                              __end_of___flmul 298A                                __end_of___flsub 4BFA  
                              __end_of___fltol 43F6                                __end_of___lldiv 47F2  
                              ___awdiv@divisor 0093                                __end_of___llmod 4A42  
                               __CFG_DEBUG$OFF 000000                                          i2l200 4DA8  
                                        i2l210 45FE                                          i2l106 006E  
                                        i2l212 464A                                          i2l205 45B4  
                                        i2l206 45D4                                          i2l207 45F8  
                                        i2l410 1B42                                          i2l403 3704  
                                        i2l420 07C0                                          i2l413 1C02  
                                        i2l421 07D0                                          i2l406 37EC  
                                        i2l414 1D7E                                          i2l430 0DE6  
                                        i2l422 07E0                                          i2l431 086E  
                                        i2l416 1E3E                                          i2l409 1C32  
                                        i2l441 0A50                                          i2l433 08DA  
                                        i2l425 07DC                                          i2l434 0958  
                                        i2l426 0810                                          i2l187 4C9A  
                                        i2l188 4CC0                                          i2l460 0C7A  
                                        i2l452 0C20                                          i2l436 0986  
                                        i2l189 4CBE                                          i2l461 0DC2  
                                        i2l453 0B8E                                          i2l437 09D2  
                                        i2l462 0CDC                                          i2l438 0AB8  
                                        i2l471 0E7C                                          i2l455 0C3A  
                                        i2l447 0B30                                          i2l199 4DAC  
                                        i2l720 4806                                          i2l472 0F0E  
                                        i2l464 0DDC                                          i2l456 0C2C  
                                        i2l801 4480                                          i2l721 4816  
                                        i2l473 0E8A                                          i2l465 0DCE  
                                        i2l810 44C0                                          i2l802 4470  
                                        i2l458 0C5E                                          i2l723 4834  
                                        i2l467 0E20                                          i2l459 0C62  
                                        i2l724 482C                                          i2l740 49B8  
                                        i2l741 49C2                                          i2l733 497E  
                                        i2l742 49D0                                          i2l734 498A  
                                        i2l807 44A4                                          i2l727 4854  
                                        i2l808 4498                                          i2l752 3FCC  
                                        i2l728 485E                                          i2l736 49A0  
                                        i2l729 486C                                          i2l737 4998  
                                        i2l770 4260                                          i2l754 3FEA  
                                        i2l771 429E                                          i2l755 402C  
                                        i2l772 42DC                                          i2l764 40BE  
                                        i2l756 405C                                          i2l860 3E0C  
                                        i2l765 40B2                                          i2l758 409A  
                                        i2l862 3E48                                          i2l951 48D8  
                                        i2l759 408A                                          i2l863 3E38  
                                        i2l776 4DFE                                          i2l952 48E6  
                                        i2l856 3D7E                                          i2l769 422C  
                                        i2l961 4A88                                          i2l962 4A96  
                                        i2l858 3DAA                                          i2l947 48A4  
                                        i2l859 3DE4                                          i2l948 4898  
                                        i2l868 3E6C                                ___awdiv@counter 0095  
                                        i2l957 4A60                                          i2l869 3E60  
                                        i2l958 4A54                                          i2l799 4414  
                                        _OSCEN 000E47                                   i2__div_to_l_ 3FAE  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                            ___lmul@multiplicand 009C  
                                __CFG_WRT3$OFF 000000                                  __CFG_WRT4$OFF 000000  
                                i2___fladd@grs 0048                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                                 __CFG_EBTRB$OFF 000000  
                              __end_of_dpowers FC8B                                     i2scale@scl 0030  
                                        _scale 154A                                __end_of_isdigit 4EF8  
                           __CFG_MCLRE$EXTMCLR 000000                                          atoi@a 0096  
                                        atof@s 00BE                                          atoi@s 0091  
                                        _putch 4F5E                                __end_of_isspace 4E3A  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 4318                                          tablat 000FF5  
                             __end_ofi2___wmul 4ED6                                 ??_EUSART2_Read 008B  
                  ringBufferLUT@line_index_684 01CC                                          status 000FD8  
                                        wtemp6 005D                                  i2___flmul@grs 001C  
                             __end_ofi2_fround 3840                             __size_ofi2___fladd 033C  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                             __size_ofi2___flmul 0350  
                           __size_ofi2___flsub 0046                             __size_ofi2___fltol 00DC  
                           __size_ofi2___lldiv 0082                             __size_ofi2___llmod 0066  
                             __end_ofi2_printf 0F40          __end_of_EUSART2_SetTxInterruptHandler 4F7A  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 4F6C  
                              __initialization 4E8A                              i2___lldiv@divisor 0005  
                                 __end_of_atof 4E62                                   __end_of_atoi 45AA  
                                 __end_of_main 4F14                              i2___lldiv@counter 000D  
                                   i2printf@ap 0064                          __end_of_ringBufferLUT 154A  
                                       ??_atof 00C2                                         ??_atoi 0093  
                                       ??_main 00D0                                  __activetblptr 000003  
                         __size_of__tdiv_to_l_ 0134                                    ?i2___xxtofl 0001  
                   __end_of_EUSART2_Initialize 4B0A                       _eusart2TxBufferRemaining 00D4  
                             ___llmod@dividend 0098                                         ?_scale 00B2  
                             ___awdiv@dividend 0091                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                                       _RC2REG 000EF1                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l1030 2D06                                         i2l1120 29BA  
                                       i2l1041 2E2A                                         i2l1121 29B6  
                                       i2l1042 2E08                                         i2l1034 2D52  
                                       i2l1122 29CA                                         i2l1051 2E72  
                                       i2l1043 2E16                                         i2l1035 2D4E  
                                       i2l1131 2BE8                                         i2l1060 2F44  
                                       i2l1052 2E76                                         i2l1044 2E1A  
                                       i2l1140 2C64                                         i2l1132 2BCA  
                                       i2l1124 29FA                                         i2l1037 2DAE  
                                       i2l1029 2D0A                                         i2l1141 2C82  
                                       i2l1125 29F6                                         i2l1062 2F5A  
                                       i2l1038 2D72                                         i2l1126 2A0A  
                                       i2l1055 2F10                                         i2l1047 2E88  
                                       i2l1143 2CA6                                         i2l1127 2A28  
                                       i2l1072 2FCA                                         i2l1064 2F64  
                                       i2l1048 2E4E                                         i2l1144 2CC4  
                                       i2l1057 2F20                                         i2l1170 3A38  
                                       i2l1162 39D2                                         i2l1138 2C20  
                                       i2l1163 39E2                                         i2l1076 2FF0  
                                       i2l1172 3A82                                         i2l1164 3A00  
                                       i2l1077 2FF8                                         i2l1069 2F84  
                                       i2l1173 3A76                                         i2l1078 2FFA  
                                       i2l1166 3A12                                         i2l1167 3A06  
                                       i2l1177 3AA0                                         i2l1169 3A50  
                               __CFG_WDTCCS$SC 000000                                         i2l1178 3AD2  
                                       i2l5050 4C86                                         i2l6332 0A22  
                                       i2l6324 09D2                                         i2l3928 4314  
                                       i2l6424 0E24                                         i2l6352 0B34  
                                       i2l6442 0E8A                                         _RG7PPS 000E89  
                                       i2l6376 0C2C                                  i2putch@txData 0002  
                                    ??i2_scale 002C                                         _OSCFRQ 000E49  
                                    ??i2_putch 0002                                         u757_41 3D62  
                                       u759_41 3D8E                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                               __end_of___xxtofl 3994  
                       __size_ofi2__tdiv_to_l_ 0132                                 i2___fladd@aexp 0046  
                               __CFG_PWRTE$OFF 000000                                 i2___fladd@bexp 0047  
                               __CFG_XINST$OFF 000000                                   i2_scale$1540 002C  
                             __end_of__powers_ FC2F                      __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                                       ___flge 40D6                                         ___lmul 4B0A  
                                    ??___fladd 0100                                         ___wmul 4E62  
                                    ??___fldiv 0093                                      ??___awdiv 0095  
                                    ??___flneg 008F                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 008F                                      ??___flmul 00A1  
                                    ??___flsub 00CE                                      ??___fltol 00BF  
                                    ??___lldiv 0093                                      ??___llmod 00A0  
                                       _fround 3016                                         clear_0 4E90  
                         _eusart2RxStringReady 01D9                               ___awdiv@quotient 0097  
                              ___awmod@divisor 008D                                ___awmod@counter 008F  
                                       _printf 0000                                         _strcmp 4B62  
                                       _strlen 4CC6                                         _strtod 1E6E  
                               i2___awdiv@sign 000C                              ??i2_EUSART2_Write 0001  
                               _PMD_Initialize 4F14                              __end_ofi2___fladd 3016  
                                    ??_isdigit 008B                              __end_ofi2___awdiv 4876  
                            __end_ofi2___flneg 4E10                              __end_ofi2___awmod 49DA  
                            __end_ofi2___flmul 2CDA                              __end_ofi2___flsub 4C40  
                            __end_ofi2___fltol 44D2                              __end_ofi2___lldiv 48F8  
                            __end_ofi2___llmod 4AA8                                   __mediumconst FBFA  
                                    ??_isspace 008B                                 _ringBufferPull 3AE4  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                           _EUSART2_Transmit_ISR 4D7C  
                               i2___awmod@sign 0006                                ??_EUSART2_Write 008B  
                               i2___flmul@aexp 0020                                 i2___flmul@bexp 0021  
                               i2___flmul@sign 001B                                 i2___flmul@temp 0026  
                               i2___flmul@prod 0022                  __size_of_INTERRUPT_Initialize 000A  
                              _eusart2RxBuffer 0200                                     ___flge@ff1 008B  
                                   ___flge@ff2 008F                                   ___xxtofl@arg 00A2  
                                 ___xxtofl@exp 00A1                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 0079                              _SYSTEM_Initialize 4F48  
                                 ___xxtofl@val 0098                                _eusart2TxBuffer 0240  
                                   __accesstop 0060                        __end_of__initialization 4EA6  
                               i2___fltol@exp1 0031                                     ___flneg@f1 008B  
                               i2printf@tmpval 0070                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 000001                                     ___fltol@f1 00BB  
                           i2__tdiv_to_l_@exp1 0011                              i2___llmod@divisor 0012  
                           i2__tdiv_to_l_@cntr 0010                              i2___llmod@counter 0016  
                           i2__tdiv_to_l_@quot 000C                            __size_ofi2___xxtofl 0150  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                          ??_SYSTEM_Initialize 008E                                  __end_of_scale 19EE  
               ?_EUSART2_SetTxInterruptHandler 008B                                  __end_of_putch 4F6C  
                                  i2printf@exp 006E                                    i2printf@val 006A  
                       __end_of_PMD_Initialize 4F30                                      ?i2___flge 0001  
                         __end_of_EUSART2_Read 4D42                                      ?i2___wmul 0001  
                                i2__tdiv_to_l_ 3D52                         __end_of_ringBufferPull 3C1E  
                                   __div_to_l_ 3E84                                      ?i2_fround 0028  
                        ?_EUSART2_Transmit_ISR 0001                                      ?i2_printf 0051  
                      ringBufferPull@index_572 01D5                                __div_to_l_@exp1 0098  
                              __div_to_l_@cntr 0097                                        ??_scale 00B6  
                    __end_of_SYSTEM_Initialize 4F5E                                __div_to_l_@quot 0093  
                                      ??_putch 008C                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 005B                                  _eusart2TxHead 00D3  
                                   __pbssBANK0 00D0                                     __pbssBANK1 01D9  
                                   __pbssBANK2 0200                                  _eusart2RxTail 00D1  
                                _eusart2TxTail 00D2                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0005                                     __pnvCOMRAM 0055  
                                __div_to_l_@f1 008B                                  __div_to_l_@f2 008F  
                        EUSART2_Read@readValue 008B                                        ?___flge 008B  
                                      ?___lmul 0098                                        ?___wmul 008B  
                                      ?_fround 00B2                                 ___lmul@product 00A0  
                                      ?_printf 0110                                ?_PMD_Initialize 0001  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 0009  
                                      ?_strcmp 008B                                        ?_strlen 008B  
                                      ?_strtod 00B2                                     ??i2___wmul 0005  
                              ?_ringBufferPull 0001                                      ?___xxtofl 0098  
                                      _SP2BRGH 000EF4                                     ??i2_fround 002C  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 4652  
                                   ??i2_printf 0053                                        _OSCTUNE 000E48  
                      ringBufferLUT@float_flag 01BB                                        i2_scale 19EE  
                                      i2_putch 4F92                                i2___fladd@signs 0045  
                            __end_of__npowers_ FC63                                        __Hparam 0000  
                                   _scale$1378 00B6                                        __Lparam 0000  
                              __size_of___flge 0122                                        ___fladd 22BC  
                                      ___fldiv 32DC                                        ___awdiv 46E8  
                                      ___flneg 4DB2                                __size_of___lmul 0058  
                                      ___awmod 48F8                                        ___flmul 2638  
                                      ___flsub 4BB2                                        ___fltol 4318  
                                      ___lldiv 476E                                __size_of___wmul 0028  
                                      ___llmod 49DA                        ringBufferLUT@line_index 01CE  
                                      __pcinit 4E8A                                __size_of_fround 02C6  
                                      __ramtop 0E00                                        __ptext0 4EF8  
                                      __ptext1 3AE4                                        __ptext2 0F40  
                                      __ptext3 4CC6                                        __ptext4 4B62  
                                      __ptext5 44D2                                        __ptext6 4E3A  
                                      __ptext7 1E6E                                        __ptext8 4E10  
                                      __ptext9 4ED6                                __size_of_printf 07B4  
                                i2_fround$1538 0030                                  i2_fround$1539 002C  
                              __size_of_strcmp 0050                                __size_of_strlen 003E  
                                  ?__div_to_l_ 008B                                __size_of_strtod 044E  
                                      _dpowers FC63                          _OSCILLATOR_Initialize 4F30  
                       ??_EUSART2_Transmit_ISR 0001                                   i2fround@prec 0034  
                                      _isdigit 4ED6                                   ??i2___xxtofl 0005  
                                   ??___xxtofl 009C                               ___awmod@dividend 008B  
                     ??_PIN_MANAGER_Initialize 008B                                        _isspace 4E10  
                   __size_of_SYSTEM_Initialize 0016                          i2EUSART2_Write@txData 0001  
                            _printResetMessage 4D42                           end_of_initialization 4EA6  
                           ?_printResetMessage 0001                            i2___wmul@multiplier 0001  
                               i2___xxtofl@arg 000B                                 i2___xxtofl@exp 000A  
                               i2___xxtofl@val 0001                                ___lldiv@divisor 008F  
                              ___lldiv@counter 0097                             _EUSART2_Initialize 4AA8  
                          ??_printResetMessage 00D0                                i2_EUSART2_Write 4C84  
                                      printf@c 012E                                        printf@f 0110  
                           __end_ofi2___xxtofl 3AE4                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 003E                                 __tdiv_to_l_@f1 008B  
                               __tdiv_to_l_@f2 008F                                ??i2__tdiv_to_l_ 0009  
                                      strcmp@r 0090                          __CFG_WDTCPS$WDTCPS_31 000000  
                          ?_EUSART2_Initialize 0001                                        strlen@s 008B  
                                ??__tdiv_to_l_ 0093                                        strtod@s 00B2  
                   ringBufferLUT@arg_index_687 01B9                                    ___fladd@grs 00CD  
                                ___xxtofl@sign 00A0                      __end_of_printResetMessage 4D7C  
                                  ___fldiv@grs 009E                                    ___fldiv@rem 0098  
                              i2___fltol@sign1 0030                                      i2___fladd 2CDA  
                                    i2___awdiv 47F2                                      i2___flneg 4DE2  
                                    i2___awmod 496A                                      i2___flmul 298A  
                                    i2___flsub 4BFA                                      i2___fltol 43F6  
                             __CFG_FEXTOSC$OFF 000000                                      i2___lldiv 4876  
                                    i2___llmod 4A42                           ??_EUSART2_Initialize 008E  
                       __size_of_ringBufferLUT 060A                                    ___flmul@grs 00A6  
                                 _EUSART2_Read 4D04                             i2___llmod@dividend 000E  
                           i2___awdiv@dividend 0007                            __size_of__div_to_l_ 012A  
                     ringBufferPull@charNumber 01D3                   __end_of_INTERRUPT_Initialize 4F92  
                               __end_of___flge 41F8                                 __end_of___lmul 4B62  
                               __end_of___wmul 4E8A                         ?_OSCILLATOR_Initialize 0001  
                               __end_of_fround 32DC                               i2___wmul@product 0005  
                               __end_of_printf 07B4                                  i2_printf$1541 0060  
                               __end_of_strcmp 4BB2                                   i2printf@flag 0066  
                               __end_of_strlen 4D04                                   i2printf@fval 0074  
                               __end_of_strtod 22BC                                   i2printf@prec 0068  
                            __size_ofi2___flge 0120                            start_initialization 4E8A  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
                   ringBufferLUT@num_arguments 01B3                __size_of_PIN_MANAGER_Initialize 0096  
                          __end_of__tdiv_to_l_ 3D52                                      i2printf@c 0078  
                                    i2printf@f 0051                                     ?i2___fladd 0035  
EUSART2_SetRxInterruptHandler@interruptHandler 008B  EUSART2_SetTxInterruptHandler@interruptHandler 008B  
                            __size_ofi2_fround 02AE                                     ?i2___awdiv 0007  
                                   ?i2___flneg 0001                                     ?i2___awmod 0001  
                                   ?i2___flmul 000F                                     ?i2___flsub 0049  
                                   ?i2___fltol 0028                                     ?i2___lldiv 0001  
                                   ?i2___llmod 000E                                    putch@txData 008C  
                            __size_ofi2_printf 078C                          __end_of_EUSART2_Write 4C84  
                      __end_ofi2_EUSART2_Write 4CC6                                ___llmod@divisor 009C  
                              ___llmod@counter 00A0                               __CFG_LPBOREN$OFF 000000  
                                     ??___flge 0093                               ??_PMD_Initialize 008B  
               ringBufferLUT@num_arguments_681 01B7                                       ??___lmul 00A0  
                                     ??___wmul 008F                               ??_ringBufferPull 01D0  
                                     ??_fround 00B6                                  _ringBufferLUT 0F40  
                                     ??_printf 00CE                                       ??_strcmp 008F  
                                     ??_strlen 008D                                       ??_strtod 00B6  
                                    ___fladd@a 00C6                                      ___fladd@b 00C2  
                                   fround@prec 00BE                                 _eusart2RxCount 00D0  
                                ?i2__div_to_l_ 0001                                      ___fldiv@a 008F  
                                    ___fldiv@b 008B                                      ___flmul@a 009D  
                                    ___flmul@b 0099                                    __pbssCOMRAM 005B  
                                    ___flsub@a 010C                                      ___flsub@b 0108  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                   __size_of_printResetMessage 003A                              __size_of___xxtofl 0154  
                                 _isdigit$1001 008C                            EUSART2_Write@txData 008B  
                                     ?i2_scale 0028                ??_EUSART2_SetRxInterruptHandler 008E  
                                     ?i2_putch 0001                                      __pnvBANK0 00D4  
                       _PIN_MANAGER_Initialize 4652                           ringBufferLUT@arg_str 0173  
                                    __pintcode 0008                         ringBufferLUT@arg_index 01B5  
                                __pmediumconst FBFA                                       ?___fladd 00C2  
                                     ?___fldiv 008B                                       ?___awdiv 0091  
                                     ?___flneg 008B                                       ?___awmod 008B  
                                     ?___flmul 0099                                       ?___flsub 0108  
                                     ?___fltol 00BB                                       ?___lldiv 008B  
                                     ?___llmod 0098                                      __npowers_ FC2F  
                               ?_ringBufferLUT 012F              _EUSART2_TxDefaultInterruptHandler 0058  
                             __CFG_PPS1WAY$OFF 000000                                    __tdiv_to_l_ 3C1E  
                               ??i2__div_to_l_ 0009                                   ??__div_to_l_ 0093  
                                     _BAUD2CON 000EF7                       ringBufferLUT@arg_str_685 0133  
                       ringBufferLUT@index_683 01C4                                       ?_isdigit 0001  
                                     ?_isspace 0001                                    ??i2___fladd 003D  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0005  
                                  ??i2___awmod 0005                                    ??i2___flmul 0017  
                                  ??i2___flsub 0051                                    ??i2___fltol 002C  
                                  ??i2___lldiv 0009                                 __size_of_scale 04A4  
                                  ??i2___llmod 0016                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 4F88                   __size_of_EUSART2_Receive_ISR 00A8  
                               ___wmul@product 008F                               ?i2_EUSART2_Write 0001  
                                     _LATCbits 000F7B                                       _IPR3bits 000E22  
                                     _PIE3bits 000E2C                             __end_of__div_to_l_ 3FAE  
                                     _PIR3bits 000E36                                       i2u630_40 49A4  
                                     i2u624_40 4838                                       i2u642_40 2DDE  
                                     i2u643_40 2DEE                                       i2u660_40 2F68  
                                     i2u644_40 2DF0                                       i2u820_40 0A22  
                                     i2u663_40 2F80                                       i2u647_40 2E32  
                                     i2u751_40 4432                                       i2u743_40 40C4  
                                     i2u751_45 4428                                       i2u680_40 2B8C  
                                     i2u824_40 0B72                                       i2u816_40 0998  
                                     i2u680_45 2B82                                       i2u817_40 09E4  
                                     i2u770_40 4A64                                       i2u755_40 44AA  
                                     i2u835_40 0E62                                       i2u827_40 0C48  
                                     i2u668_40 2FD6                                       i2u828_40 0C58  
                                     i2u844_40 45EA                                       i2u765_40 3E72  
                                     i2u685_40 2C1C                                       i2u837_40 0F20  
                                     i2u767_40 48A8                                       i2u679_40 2A16  
                                     i2u854_48 005E                                       i2u688_40 2C72  
                                     i2u689_40 2C90                                       i2u778_40 3A8C  
                                     i2u857_48 0078                                       i2u857_49 008C  
                                  strtod@flags 00B8                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0005                                    strtod@expon 00B9  
                                     i2___flge 41F8                              ___wmul@multiplier 008B  
                                     i2___wmul 4EB0                                     printf@flag 011C  
                                   printf@fval 012A                                     printf@prec 011E  
                            i2___awdiv@divisor 0009                                       i2_fround 3592  
                            i2___awdiv@counter 000B                  __size_of_EUSART2_Transmit_ISR 0036  
                                 _isspace$1004 008C                                       i2_printf 07B4  
                            ___lmul@multiplier 0098                          ?_INTERRUPT_Initialize 0001  
                           i2___awmod@dividend 0001                               __size_ofi2_scale 0480  
                             __size_ofi2_putch 000A                                       __Hrparam 0000  
        __end_of_EUSART2_SetRxInterruptHandler 4F88         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 4F7A                                       __Lrparam 0000  
              ringBufferLUT@last_arg_start_686 01C6                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 0131                        ??_OSCILLATOR_Initialize 008B  
                             __size_of___fladd 037C                               __size_of___fldiv 02B6  
                             __size_of___awdiv 0086                               __size_of___flneg 0030  
                             __size_of___awmod 0072                               __size_of___flmul 0352  
                             __size_of___flsub 0048                               __size_of___fltol 00DE  
                        i2___wmul@multiplicand 0003                               __size_of___lldiv 0084  
                             __size_of___llmod 0068                                    _fround$1376 00BA  
                                  _fround$1377 00B6                          __end_ofi2__tdiv_to_l_ 3E84  
                                     ___xxtofl 3840                               __size_of_isdigit 0022  
                             __size_of_isspace 002A                                       __ptext10 4B0A  
                                     __ptext11 32DC                                       __ptext20 48F8  
                                     __ptext12 4D04                                       __ptext21 46E8  
                                     __ptext13 4D42                                       __ptext30 22BC  
                                     __ptext22 3C1E                                       __ptext14 0000  
                                     __ptext31 4DB2                                       __ptext23 3E84  
                                     __ptext15 154A                                       __ptext40 4F7A  
                                     __ptext32 40D6                                       __ptext24 3840  
                                     __ptext16 4F5E                                       __ptext33 4F48  
                                     __ptext25 4E62                                       __ptext17 4C40  
                                     __ptext50 496A                                       __ptext42 4D7C  
                                     __ptext34 4F14                                       __ptext26 49DA  
                                     __ptext18 3016                                       __ptext51 47F2  
                                     __ptext43 45AA                                       __ptext35 4652  
                                     __ptext27 476E                                       __ptext19 2638  
                                     __ptext60 2CDA                                       __ptext52 3D52  
                                     __ptext44 07B4                                       __ptext36 4F30  
                                     __ptext28 4318                                       __ptext61 4DE2  
                                     __ptext53 3FAE                                       __ptext45 19EE  
                                     __ptext37 4F88                                       __ptext29 4BB2  
                                     __ptext62 41F8                                       __ptext54 3994  
                                     __ptext46 4F92                                       __ptext38 4AA8  
                                     __ptext63 0000                                       __ptext55 4EB0  
                                     __ptext47 4C84                                       __ptext39 4F6C  
                                     __ptext56 4A42                                       __ptext48 3592  
                                     __ptext57 4876                                       __ptext49 298A  
                                     __ptext58 43F6                                       __ptext59 4BFA  
                                     __powers_ FBFB                    __size_of_EUSART2_Initialize 0062  
                                __size_of_atof 0028                                  __size_of_atoi 00D8  
                                __size_of_main 001C                           __end_ofi2__div_to_l_ 40D6  
                         __CFG_WDTCWS$WDTCWS_7 000000                             __CFG_BORV$VBOR_190 000000  
                                   _RC2STAbits 000EF5                                     strtod@eexp 00B7  
                                     int$flags 005C                                       atoi@sign 0095  
                                    printf@exp 0124                                      printf@val 0120  
                            i2___awmod@divisor 0003                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                       isdigit@c 008D  
                       ??_INTERRUPT_Initialize 008B                                       scale@scl 00BA  
                                     intlevel2 0000                               __tdiv_to_l_@exp1 009B  
                             __tdiv_to_l_@cntr 009A                               __tdiv_to_l_@quot 0096  
                              i2___xxtofl@sign 0009                             ringBufferLUT@index 01C0  
                                     isspace@c 008D                               ___lldiv@dividend 008B  
                      ?_PIN_MANAGER_Initialize 0001                              __CFG_CLKOUTEN$OFF 000000  
                                    strtod@res 00B4                                       printf@ap 011A  
               ?_EUSART2_SetRxInterruptHandler 008B                                   ?__tdiv_to_l_ 008B  
                       __size_of_EUSART2_Write 0044                            _EUSART2_Receive_ISR 45AA  
       __end_of_INTERRUPT_InterruptManagerHigh 00D8        __size_of_INTERRUPT_InterruptManagerHigh 00D0  
               _INTERRUPT_InterruptManagerHigh 0008                                    _printf$1379 0116  
                                   _RX2PPSbits 000E11                                       strcmp@s1 008B  
                                     strcmp@s2 008D                              ringBufferLUT@line 012F  
                             ___lldiv@quotient 0093                              ringBufferLUT@prod 01BC  
                                     strlen@cp 008F                                       strtod@_u 00BA  
                                   _TX2STAbits 000EF6                                  ___fladd@signs 00CA  
               __end_of_PIN_MANAGER_Initialize 46E8                               ringBufferLUT@sum 01C8  
                            i2__div_to_l_@exp1 000E                              i2__div_to_l_@cntr 000D  
                  ringBufferLUT@last_arg_start 01C2                ??_EUSART2_SetTxInterruptHandler 008E  
                            i2__div_to_l_@quot 0009                           ?_EUSART2_Receive_ISR 0001  
                                 ___fladd@aexp 00CB                                   ___fladd@bexp 00CC  
            _EUSART2_RxDefaultInterruptHandler 0055  
