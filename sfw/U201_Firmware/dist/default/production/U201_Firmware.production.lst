

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Aug 28 14:30:41 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 1.45 (B)
    42                           ; Generated 30/01/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18LF67K40 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	nvCOMRAM
    77  00002C                     __pnvCOMRAM:
    78                           	opt stack 0
    79  00002C                     _EUSART2_RxDefaultInterruptHandler:
    80                           	opt stack 0
    81  00002C                     	ds	3
    82  00002F                     _EUSART2_TxDefaultInterruptHandler:
    83                           	opt stack 0
    84  00002F                     	ds	3
    85  000032                     _eusart2TxBufferRemaining:
    86                           	opt stack 0
    87  000032                     	ds	1
    88  0000                     _PMD5	set	3665
    89  0000                     _PMD4	set	3664
    90  0000                     _PMD3	set	3663
    91  0000                     _PMD2	set	3662
    92  0000                     _PMD1	set	3661
    93  0000                     _PMD0	set	3660
    94  0000                     _OSCTUNE	set	3656
    95  0000                     _OSCFRQ	set	3657
    96  0000                     _OSCEN	set	3655
    97  0000                     _OSCCON3	set	3653
    98  0000                     _OSCCON1	set	3651
    99  0000                     _RC2REG	set	3825
   100  0000                     _RC2STAbits	set	3829
   101  0000                     _TX2REG	set	3826
   102  0000                     _TX2STAbits	set	3830
   103  0000                     _SP2BRGH	set	3828
   104  0000                     _SP2BRGL	set	3827
   105  0000                     _TX2STA	set	3830
   106  0000                     _RC2STA	set	3829
   107  0000                     _BAUD2CON	set	3831
   108  0000                     _PIR3bits	set	3638
   109  0000                     _PIE3bits	set	3628
   110  0000                     _IPR3bits	set	3618
   111  0000                     _RX2PPSbits	set	3601
   112  0000                     _RG7PPS	set	3721
   113  0000                     _ODCOND	set	3749
   114  0000                     _ODCONC	set	3744
   115  0000                     _ODCONH	set	3775
   116  0000                     _ODCONB	set	3736
   117  0000                     _ODCONG	set	3770
   118  0000                     _ODCONA	set	3728
   119  0000                     _ODCONF	set	3762
   120  0000                     _ODCONE	set	3757
   121  0000                     _WPUH	set	3776
   122  0000                     _WPUC	set	3745
   123  0000                     _WPUA	set	3729
   124  0000                     _WPUG	set	3771
   125  0000                     _WPUB	set	3737
   126  0000                     _WPUE	set	3758
   127  0000                     _WPUF	set	3763
   128  0000                     _WPUD	set	3750
   129  0000                     _ANSELA	set	3730
   130  0000                     _ANSELF	set	3764
   131  0000                     _ANSELG	set	3772
   132  0000                     _ANSELE	set	3759
   133  0000                     _ANSELB	set	3738
   134  0000                     _ANSELD	set	3751
   135  0000                     _INTCONbits	set	4082
   136  0000                     _TRISD	set	3972
   137  0000                     _TRISC	set	3971
   138  0000                     _TRISH	set	3976
   139  0000                     _TRISB	set	3970
   140  0000                     _TRISG	set	3975
   141  0000                     _TRISA	set	3969
   142  0000                     _TRISF	set	3974
   143  0000                     _TRISE	set	3973
   144  0000                     _LATH	set	3968
   145  0000                     _LATC	set	3963
   146  0000                     _LATG	set	3967
   147  0000                     _LATB	set	3962
   148  0000                     _LATF	set	3966
   149  0000                     _LATA	set	3961
   150  0000                     _LATD	set	3964
   151  0000                     _LATE	set	3965
   152                           
   153                           	psect	mediumconst
   154  00FDBA                     __pmediumconst:
   155                           	opt stack 0
   156  00FDBA  00                 	db	0
   157  00FDBB                     STR_27:
   158                           
   159                           ; BSR set to: 14
   160  00FDBB  20                 	db	32
   161  00FDBC  20                 	db	32
   162  00FDBD  20                 	db	32
   163  00FDBE  4C                 	db	76	;'L'
   164  00FDBF  69                 	db	105	;'i'
   165  00FDC0  73                 	db	115	;'s'
   166  00FDC1  74                 	db	116	;'t'
   167  00FDC2  20                 	db	32
   168  00FDC3  6F                 	db	111	;'o'
   169  00FDC4  66                 	db	102	;'f'
   170  00FDC5  20                 	db	32
   171  00FDC6  73                 	db	115	;'s'
   172  00FDC7  75                 	db	117	;'u'
   173  00FDC8  70                 	db	112	;'p'
   174  00FDC9  70                 	db	112	;'p'
   175  00FDCA  6F                 	db	111	;'o'
   176  00FDCB  72                 	db	114	;'r'
   177  00FDCC  74                 	db	116	;'t'
   178  00FDCD  65                 	db	101	;'e'
   179  00FDCE  64                 	db	100	;'d'
   180  00FDCF  20                 	db	32
   181  00FDD0  63                 	db	99	;'c'
   182  00FDD1  6F                 	db	111	;'o'
   183  00FDD2  6D                 	db	109	;'m'
   184  00FDD3  6D                 	db	109	;'m'
   185  00FDD4  61                 	db	97	;'a'
   186  00FDD5  6E                 	db	110	;'n'
   187  00FDD6  64                 	db	100	;'d'
   188  00FDD7  73                 	db	115	;'s'
   189  00FDD8  3A                 	db	58	;':'
   190  00FDD9  0A                 	db	10
   191  00FDDA  0D                 	db	13
   192  00FDDB  20                 	db	32
   193  00FDDC  20                 	db	32
   194  00FDDD  20                 	db	32
   195  00FDDE  4C                 	db	76	;'L'
   196  00FDDF  45                 	db	69	;'E'
   197  00FDE0  44                 	db	68	;'D'
   198  00FDE1  73                 	db	115	;'s'
   199  00FDE2  20                 	db	32
   200  00FDE3  4F                 	db	79	;'O'
   201  00FDE4  6E                 	db	110	;'n'
   202  00FDE5  3A                 	db	58	;':'
   203  00FDE6  20                 	db	32
   204  00FDE7  54                 	db	84	;'T'
   205  00FDE8  75                 	db	117	;'u'
   206  00FDE9  72                 	db	114	;'r'
   207  00FDEA  6E                 	db	110	;'n'
   208  00FDEB  73                 	db	115	;'s'
   209  00FDEC  20                 	db	32
   210  00FDED  61                 	db	97	;'a'
   211  00FDEE  6C                 	db	108	;'l'
   212  00FDEF  6C                 	db	108	;'l'
   213  00FDF0  20                 	db	32
   214  00FDF1  4C                 	db	76	;'L'
   215  00FDF2  45                 	db	69	;'E'
   216  00FDF3  44                 	db	68	;'D'
   217  00FDF4  73                 	db	115	;'s'
   218  00FDF5  20                 	db	32
   219  00FDF6  4F                 	db	79	;'O'
   220  00FDF7  6E                 	db	110	;'n'
   221  00FDF8  0A                 	db	10
   222  00FDF9  0D                 	db	13
   223  00FDFA  20                 	db	32
   224  00FDFB  20                 	db	32
   225  00FDFC  20                 	db	32
   226  00FDFD  4C                 	db	76	;'L'
   227  00FDFE  45                 	db	69	;'E'
   228  00FDFF  44                 	db	68	;'D'
   229  00FE00  73                 	db	115	;'s'
   230  00FE01  20                 	db	32
   231  00FE02  4F                 	db	79	;'O'
   232  00FE03  66                 	db	102	;'f'
   233  00FE04  66                 	db	102	;'f'
   234  00FE05  3A                 	db	58	;':'
   235  00FE06  20                 	db	32
   236  00FE07  54                 	db	84	;'T'
   237  00FE08  75                 	db	117	;'u'
   238  00FE09  72                 	db	114	;'r'
   239  00FE0A  6E                 	db	110	;'n'
   240  00FE0B  73                 	db	115	;'s'
   241  00FE0C  20                 	db	32
   242  00FE0D  61                 	db	97	;'a'
   243  00FE0E  6C                 	db	108	;'l'
   244  00FE0F  6C                 	db	108	;'l'
   245  00FE10  20                 	db	32
   246  00FE11  4C                 	db	76	;'L'
   247  00FE12  45                 	db	69	;'E'
   248  00FE13  44                 	db	68	;'D'
   249  00FE14  73                 	db	115	;'s'
   250  00FE15  20                 	db	32
   251  00FE16  4F                 	db	79	;'O'
   252  00FE17  66                 	db	102	;'f'
   253  00FE18  66                 	db	102	;'f'
   254  00FE19  0A                 	db	10
   255  00FE1A  0D                 	db	13
   256  00FE1B  20                 	db	32
   257  00FE1C  20                 	db	32
   258  00FE1D  20                 	db	32
   259  00FE1E  52                 	db	82	;'R'
   260  00FE1F  65                 	db	101	;'e'
   261  00FE20  73                 	db	115	;'s'
   262  00FE21  65                 	db	101	;'e'
   263  00FE22  74                 	db	116	;'t'
   264  00FE23  3A                 	db	58	;':'
   265  00FE24  20                 	db	32
   266  00FE25  43                 	db	67	;'C'
   267  00FE26  6C                 	db	108	;'l'
   268  00FE27  65                 	db	101	;'e'
   269  00FE28  61                 	db	97	;'a'
   270  00FE29  72                 	db	114	;'r'
   271  00FE2A  73                 	db	115	;'s'
   272  00FE2B  20                 	db	32
   273  00FE2C  74                 	db	116	;'t'
   274  00FE2D  68                 	db	104	;'h'
   275  00FE2E  65                 	db	101	;'e'
   276  00FE2F  20                 	db	32
   277  00FE30  74                 	db	116	;'t'
   278  00FE31  65                 	db	101	;'e'
   279  00FE32  72                 	db	114	;'r'
   280  00FE33  6D                 	db	109	;'m'
   281  00FE34  69                 	db	105	;'i'
   282  00FE35  6E                 	db	110	;'n'
   283  00FE36  61                 	db	97	;'a'
   284  00FE37  6C                 	db	108	;'l'
   285  00FE38  20                 	db	32
   286  00FE39  61                 	db	97	;'a'
   287  00FE3A  6E                 	db	110	;'n'
   288  00FE3B  64                 	db	100	;'d'
   289  00FE3C  20                 	db	32
   290  00FE3D  72                 	db	114	;'r'
   291  00FE3E  65                 	db	101	;'e'
   292  00FE3F  73                 	db	115	;'s'
   293  00FE40  65                 	db	101	;'e'
   294  00FE41  74                 	db	116	;'t'
   295  00FE42  73                 	db	115	;'s'
   296  00FE43  20                 	db	32
   297  00FE44  74                 	db	116	;'t'
   298  00FE45  68                 	db	104	;'h'
   299  00FE46  65                 	db	101	;'e'
   300  00FE47  20                 	db	32
   301  00FE48  6D                 	db	109	;'m'
   302  00FE49  69                 	db	105	;'i'
   303  00FE4A  63                 	db	99	;'c'
   304  00FE4B  72                 	db	114	;'r'
   305  00FE4C  6F                 	db	111	;'o'
   306  00FE4D  0A                 	db	10
   307  00FE4E  0D                 	db	13
   308  00FE4F  20                 	db	32
   309  00FE50  20                 	db	32
   310  00FE51  20                 	db	32
   311  00FE52  43                 	db	67	;'C'
   312  00FE53  6C                 	db	108	;'l'
   313  00FE54  65                 	db	101	;'e'
   314  00FE55  61                 	db	97	;'a'
   315  00FE56  72                 	db	114	;'r'
   316  00FE57  3A                 	db	58	;':'
   317  00FE58  20                 	db	32
   318  00FE59  43                 	db	67	;'C'
   319  00FE5A  6C                 	db	108	;'l'
   320  00FE5B  65                 	db	101	;'e'
   321  00FE5C  61                 	db	97	;'a'
   322  00FE5D  72                 	db	114	;'r'
   323  00FE5E  73                 	db	115	;'s'
   324  00FE5F  20                 	db	32
   325  00FE60  74                 	db	116	;'t'
   326  00FE61  68                 	db	104	;'h'
   327  00FE62  65                 	db	101	;'e'
   328  00FE63  20                 	db	32
   329  00FE64  74                 	db	116	;'t'
   330  00FE65  65                 	db	101	;'e'
   331  00FE66  72                 	db	114	;'r'
   332  00FE67  6D                 	db	109	;'m'
   333  00FE68  69                 	db	105	;'i'
   334  00FE69  6E                 	db	110	;'n'
   335  00FE6A  61                 	db	97	;'a'
   336  00FE6B  6C                 	db	108	;'l'
   337  00FE6C  20                 	db	32
   338  00FE6D  62                 	db	98	;'b'
   339  00FE6E  75                 	db	117	;'u'
   340  00FE6F  74                 	db	116	;'t'
   341  00FE70  20                 	db	32
   342  00FE71  64                 	db	100	;'d'
   343  00FE72  6F                 	db	111	;'o'
   344  00FE73  65                 	db	101	;'e'
   345  00FE74  73                 	db	115	;'s'
   346  00FE75  6E                 	db	110	;'n'
   347  00FE76  27                 	db	39
   348  00FE77  74                 	db	116	;'t'
   349  00FE78  20                 	db	32
   350  00FE79  72                 	db	114	;'r'
   351  00FE7A  65                 	db	101	;'e'
   352  00FE7B  73                 	db	115	;'s'
   353  00FE7C  65                 	db	101	;'e'
   354  00FE7D  74                 	db	116	;'t'
   355  00FE7E  20                 	db	32
   356  00FE7F  74                 	db	116	;'t'
   357  00FE80  68                 	db	104	;'h'
   358  00FE81  65                 	db	101	;'e'
   359  00FE82  20                 	db	32
   360  00FE83  6D                 	db	109	;'m'
   361  00FE84  69                 	db	105	;'i'
   362  00FE85  63                 	db	99	;'c'
   363  00FE86  72                 	db	114	;'r'
   364  00FE87  6F                 	db	111	;'o'
   365  00FE88  0A                 	db	10
   366  00FE89  0D                 	db	13
   367  00FE8A  20                 	db	32
   368  00FE8B  20                 	db	32
   369  00FE8C  20                 	db	32
   370  00FE8D  2A                 	db	42
   371  00FE8E  49                 	db	73	;'I'
   372  00FE8F  44                 	db	68	;'D'
   373  00FE90  4E                 	db	78	;'N'
   374  00FE91  3F                 	db	63	;'?'
   375  00FE92  3A                 	db	58	;':'
   376  00FE93  20                 	db	32
   377  00FE94  52                 	db	82	;'R'
   378  00FE95  65                 	db	101	;'e'
   379  00FE96  74                 	db	116	;'t'
   380  00FE97  75                 	db	117	;'u'
   381  00FE98  72                 	db	114	;'r'
   382  00FE99  6E                 	db	110	;'n'
   383  00FE9A  73                 	db	115	;'s'
   384  00FE9B  20                 	db	32
   385  00FE9C  64                 	db	100	;'d'
   386  00FE9D  65                 	db	101	;'e'
   387  00FE9E  76                 	db	118	;'v'
   388  00FE9F  69                 	db	105	;'i'
   389  00FEA0  63                 	db	99	;'c'
   390  00FEA1  65                 	db	101	;'e'
   391  00FEA2  20                 	db	32
   392  00FEA3  69                 	db	105	;'i'
   393  00FEA4  64                 	db	100	;'d'
   394  00FEA5  65                 	db	101	;'e'
   395  00FEA6  6E                 	db	110	;'n'
   396  00FEA7  74                 	db	116	;'t'
   397  00FEA8  69                 	db	105	;'i'
   398  00FEA9  66                 	db	102	;'f'
   399  00FEAA  69                 	db	105	;'i'
   400  00FEAB  63                 	db	99	;'c'
   401  00FEAC  61                 	db	97	;'a'
   402  00FEAD  74                 	db	116	;'t'
   403  00FEAE  69                 	db	105	;'i'
   404  00FEAF  6F                 	db	111	;'o'
   405  00FEB0  6E                 	db	110	;'n'
   406  00FEB1  0A                 	db	10
   407  00FEB2  0D                 	db	13
   408  00FEB3  20                 	db	32
   409  00FEB4  20                 	db	32
   410  00FEB5  20                 	db	32
   411  00FEB6  48                 	db	72	;'H'
   412  00FEB7  65                 	db	101	;'e'
   413  00FEB8  6C                 	db	108	;'l'
   414  00FEB9  70                 	db	112	;'p'
   415  00FEBA  3A                 	db	58	;':'
   416  00FEBB  20                 	db	32
   417  00FEBC  54                 	db	84	;'T'
   418  00FEBD  68                 	db	104	;'h'
   419  00FEBE  69                 	db	105	;'i'
   420  00FEBF  73                 	db	115	;'s'
   421  00FEC0  20                 	db	32
   422  00FEC1  6D                 	db	109	;'m'
   423  00FEC2  65                 	db	101	;'e'
   424  00FEC3  73                 	db	115	;'s'
   425  00FEC4  73                 	db	115	;'s'
   426  00FEC5  61                 	db	97	;'a'
   427  00FEC6  67                 	db	103	;'g'
   428  00FEC7  65                 	db	101	;'e'
   429  00FEC8  2C                 	db	44
   430  00FEC9  20                 	db	32
   431  00FECA  6C                 	db	108	;'l'
   432  00FECB  69                 	db	105	;'i'
   433  00FECC  73                 	db	115	;'s'
   434  00FECD  74                 	db	116	;'t'
   435  00FECE  73                 	db	115	;'s'
   436  00FECF  20                 	db	32
   437  00FED0  63                 	db	99	;'c'
   438  00FED1  6F                 	db	111	;'o'
   439  00FED2  6D                 	db	109	;'m'
   440  00FED3  6D                 	db	109	;'m'
   441  00FED4  61                 	db	97	;'a'
   442  00FED5  6E                 	db	110	;'n'
   443  00FED6  64                 	db	100	;'d'
   444  00FED7  73                 	db	115	;'s'
   445  00FED8  0A                 	db	10
   446  00FED9  0D                 	db	13
   447  00FEDA  00                 	db	0
   448  00FEDB                     STR_4:
   449                           
   450                           ; BSR set to: 14
   451  00FEDB  50                 	db	80	;'P'
   452  00FEDC  49                 	db	73	;'I'
   453  00FEDD  43                 	db	67	;'C'
   454  00FEDE  31                 	db	49	;'1'
   455  00FEDF  38                 	db	56	;'8'
   456  00FEE0  46                 	db	70	;'F'
   457  00FEE1  36                 	db	54	;'6'
   458  00FEE2  37                 	db	55	;'7'
   459  00FEE3  4B                 	db	75	;'K'
   460  00FEE4  34                 	db	52	;'4'
   461  00FEE5  30                 	db	48	;'0'
   462  00FEE6  20                 	db	32
   463  00FEE7  6D                 	db	109	;'m'
   464  00FEE8  54                 	db	84	;'T'
   465  00FEE9  6F                 	db	111	;'o'
   466  00FEEA  75                 	db	117	;'u'
   467  00FEEB  63                 	db	99	;'c'
   468  00FEEC  68                 	db	104	;'h'
   469  00FEED  20                 	db	32
   470  00FEEE  44                 	db	68	;'D'
   471  00FEEF  65                 	db	101	;'e'
   472  00FEF0  6D                 	db	109	;'m'
   473  00FEF1  6F                 	db	111	;'o'
   474  00FEF2  0A                 	db	10
   475  00FEF3  0D                 	db	13
   476  00FEF4  42                 	db	66	;'B'
   477  00FEF5  61                 	db	97	;'a'
   478  00FEF6  75                 	db	117	;'u'
   479  00FEF7  64                 	db	100	;'d'
   480  00FEF8  20                 	db	32
   481  00FEF9  72                 	db	114	;'r'
   482  00FEFA  61                 	db	97	;'a'
   483  00FEFB  74                 	db	116	;'t'
   484  00FEFC  65                 	db	101	;'e'
   485  00FEFD  3A                 	db	58	;':'
   486  00FEFE  20                 	db	32
   487  00FEFF  31                 	db	49	;'1'
   488  00FF00  31                 	db	49	;'1'
   489  00FF01  35                 	db	53	;'5'
   490  00FF02  32                 	db	50	;'2'
   491  00FF03  30                 	db	48	;'0'
   492  00FF04  30                 	db	48	;'0'
   493  00FF05  20                 	db	32
   494  00FF06  6B                 	db	107	;'k'
   495  00FF07  62                 	db	98	;'b'
   496  00FF08  70                 	db	112	;'p'
   497  00FF09  73                 	db	115	;'s'
   498  00FF0A  0A                 	db	10
   499  00FF0B  0D                 	db	13
   500  00FF0C  4E                 	db	78	;'N'
   501  00FF0D  6F                 	db	111	;'o'
   502  00FF0E  20                 	db	32
   503  00FF0F  70                 	db	112	;'p'
   504  00FF10  61                 	db	97	;'a'
   505  00FF11  72                 	db	114	;'r'
   506  00FF12  69                 	db	105	;'i'
   507  00FF13  74                 	db	116	;'t'
   508  00FF14  79                 	db	121	;'y'
   509  00FF15  2C                 	db	44
   510  00FF16  20                 	db	32
   511  00FF17  38                 	db	56	;'8'
   512  00FF18  20                 	db	32
   513  00FF19  62                 	db	98	;'b'
   514  00FF1A  69                 	db	105	;'i'
   515  00FF1B  74                 	db	116	;'t'
   516  00FF1C  73                 	db	115	;'s'
   517  00FF1D  2C                 	db	44
   518  00FF1E  20                 	db	32
   519  00FF1F  6E                 	db	110	;'n'
   520  00FF20  6F                 	db	111	;'o'
   521  00FF21  20                 	db	32
   522  00FF22  66                 	db	102	;'f'
   523  00FF23  6C                 	db	108	;'l'
   524  00FF24  6F                 	db	111	;'o'
   525  00FF25  77                 	db	119	;'w'
   526  00FF26  20                 	db	32
   527  00FF27  63                 	db	99	;'c'
   528  00FF28  6F                 	db	111	;'o'
   529  00FF29  6E                 	db	110	;'n'
   530  00FF2A  74                 	db	116	;'t'
   531  00FF2B  72                 	db	114	;'r'
   532  00FF2C  6F                 	db	111	;'o'
   533  00FF2D  6C                 	db	108	;'l'
   534  00FF2E  2C                 	db	44
   535  00FF2F  20                 	db	32
   536  00FF30  31                 	db	49	;'1'
   537  00FF31  20                 	db	32
   538  00FF32  73                 	db	115	;'s'
   539  00FF33  74                 	db	116	;'t'
   540  00FF34  6F                 	db	111	;'o'
   541  00FF35  70                 	db	112	;'p'
   542  00FF36  20                 	db	32
   543  00FF37  62                 	db	98	;'b'
   544  00FF38  69                 	db	105	;'i'
   545  00FF39  74                 	db	116	;'t'
   546  00FF3A  0A                 	db	10
   547  00FF3B  0D                 	db	13
   548  00FF3C  43                 	db	67	;'C'
   549  00FF3D  6F                 	db	111	;'o'
   550  00FF3E  6D                 	db	109	;'m'
   551  00FF3F  6D                 	db	109	;'m'
   552  00FF40  61                 	db	97	;'a'
   553  00FF41  6E                 	db	110	;'n'
   554  00FF42  64                 	db	100	;'d'
   555  00FF43  73                 	db	115	;'s'
   556  00FF44  20                 	db	32
   557  00FF45  61                 	db	97	;'a'
   558  00FF46  72                 	db	114	;'r'
   559  00FF47  65                 	db	101	;'e'
   560  00FF48  20                 	db	32
   561  00FF49  63                 	db	99	;'c'
   562  00FF4A  61                 	db	97	;'a'
   563  00FF4B  73                 	db	115	;'s'
   564  00FF4C  65                 	db	101	;'e'
   565  00FF4D  20                 	db	32
   566  00FF4E  73                 	db	115	;'s'
   567  00FF4F  65                 	db	101	;'e'
   568  00FF50  6E                 	db	110	;'n'
   569  00FF51  73                 	db	115	;'s'
   570  00FF52  69                 	db	105	;'i'
   571  00FF53  74                 	db	116	;'t'
   572  00FF54  69                 	db	105	;'i'
   573  00FF55  76                 	db	118	;'v'
   574  00FF56  65                 	db	101	;'e'
   575  00FF57  0A                 	db	10
   576  00FF58  0D                 	db	13
   577  00FF59  45                 	db	69	;'E'
   578  00FF5A  6E                 	db	110	;'n'
   579  00FF5B  74                 	db	116	;'t'
   580  00FF5C  65                 	db	101	;'e'
   581  00FF5D  72                 	db	114	;'r'
   582  00FF5E  20                 	db	32
   583  00FF5F  61                 	db	97	;'a'
   584  00FF60  20                 	db	32
   585  00FF61  63                 	db	99	;'c'
   586  00FF62  6F                 	db	111	;'o'
   587  00FF63  6D                 	db	109	;'m'
   588  00FF64  6D                 	db	109	;'m'
   589  00FF65  61                 	db	97	;'a'
   590  00FF66  6E                 	db	110	;'n'
   591  00FF67  64                 	db	100	;'d'
   592  00FF68  2C                 	db	44
   593  00FF69  20                 	db	32
   594  00FF6A  6F                 	db	111	;'o'
   595  00FF6B  72                 	db	114	;'r'
   596  00FF6C  20                 	db	32
   597  00FF6D  48                 	db	72	;'H'
   598  00FF6E  65                 	db	101	;'e'
   599  00FF6F  6C                 	db	108	;'l'
   600  00FF70  70                 	db	112	;'p'
   601  00FF71  20                 	db	32
   602  00FF72  66                 	db	102	;'f'
   603  00FF73  6F                 	db	111	;'o'
   604  00FF74  72                 	db	114	;'r'
   605  00FF75  20                 	db	32
   606  00FF76  6C                 	db	108	;'l'
   607  00FF77  69                 	db	105	;'i'
   608  00FF78  73                 	db	115	;'s'
   609  00FF79  74                 	db	116	;'t'
   610  00FF7A  20                 	db	32
   611  00FF7B  6F                 	db	111	;'o'
   612  00FF7C  66                 	db	102	;'f'
   613  00FF7D  20                 	db	32
   614  00FF7E  63                 	db	99	;'c'
   615  00FF7F  6F                 	db	111	;'o'
   616  00FF80  6D                 	db	109	;'m'
   617  00FF81  6D                 	db	109	;'m'
   618  00FF82  61                 	db	97	;'a'
   619  00FF83  6E                 	db	110	;'n'
   620  00FF84  64                 	db	100	;'d'
   621  00FF85  73                 	db	115	;'s'
   622  00FF86  0A                 	db	10
   623  00FF87  0D                 	db	13
   624  00FF88  00                 	db	0
   625  00FF89                     STR_23:
   626                           
   627                           ; BSR set to: 14
   628  00FF89  20                 	db	32
   629  00FF8A  20                 	db	32
   630  00FF8B  20                 	db	32
   631  00FF8C  20                 	db	32
   632  00FF8D  6D                 	db	109	;'m'
   633  00FF8E  54                 	db	84	;'T'
   634  00FF8F  6F                 	db	111	;'o'
   635  00FF90  75                 	db	117	;'u'
   636  00FF91  63                 	db	99	;'c'
   637  00FF92  68                 	db	104	;'h'
   638  00FF93  20                 	db	32
   639  00FF94  54                 	db	84	;'T'
   640  00FF95  65                 	db	101	;'e'
   641  00FF96  73                 	db	115	;'s'
   642  00FF97  74                 	db	116	;'t'
   643  00FF98  20                 	db	32
   644  00FF99  42                 	db	66	;'B'
   645  00FF9A  6F                 	db	111	;'o'
   646  00FF9B  61                 	db	97	;'a'
   647  00FF9C  72                 	db	114	;'r'
   648  00FF9D  64                 	db	100	;'d'
   649  00FF9E  2C                 	db	44
   650  00FF9F  20                 	db	32
   651  00FFA0  52                 	db	82	;'R'
   652  00FFA1  45                 	db	69	;'E'
   653  00FFA2  56                 	db	86	;'V'
   654  00FFA3  41                 	db	65	;'A'
   655  00FFA4  00                 	db	0
   656  00FFA5                     STR_8:
   657                           
   658                           ; BSR set to: 14
   659  00FFA5  20                 	db	32
   660  00FFA6  20                 	db	32
   661  00FFA7  20                 	db	32
   662  00FFA8  20                 	db	32
   663  00FFA9  4C                 	db	76	;'L'
   664  00FFAA  41                 	db	65	;'A'
   665  00FFAB  54                 	db	84	;'T'
   666  00FFAC  46                 	db	70	;'F'
   667  00FFAD  20                 	db	32
   668  00FFAE  3D                 	db	61	;'='
   669  00FFAF  20                 	db	32
   670  00FFB0  30                 	db	48	;'0'
   671  00FFB1  78                 	db	120	;'x'
   672  00FFB2  30                 	db	48	;'0'
   673  00FFB3  30                 	db	48	;'0'
   674  00FFB4  0A                 	db	10
   675  00FFB5  0D                 	db	13
   676  00FFB6  00                 	db	0
   677  00FFB7                     STR_12:
   678                           
   679                           ; BSR set to: 14
   680  00FFB7  4C                 	db	76	;'L'
   681  00FFB8  41                 	db	65	;'A'
   682  00FFB9  54                 	db	84	;'T'
   683  00FFBA  46                 	db	70	;'F'
   684  00FFBB  20                 	db	32
   685  00FFBC  3D                 	db	61	;'='
   686  00FFBD  20                 	db	32
   687  00FFBE  30                 	db	48	;'0'
   688  00FFBF  78                 	db	120	;'x'
   689  00FFC0  46                 	db	70	;'F'
   690  00FFC1  46                 	db	70	;'F'
   691  00FFC2  0A                 	db	10
   692  00FFC3  0D                 	db	13
   693  00FFC4  00                 	db	0
   694  00FFC5                     STR_10:
   695                           
   696                           ; BSR set to: 14
   697  00FFC5  4C                 	db	76	;'L'
   698  00FFC6  45                 	db	69	;'E'
   699  00FFC7  44                 	db	68	;'D'
   700  00FFC8  73                 	db	115	;'s'
   701  00FFC9  20                 	db	32
   702  00FFCA  4F                 	db	79	;'O'
   703  00FFCB  66                 	db	102	;'f'
   704  00FFCC  66                 	db	102	;'f'
   705  00FFCD  00                 	db	0
   706  00FFCE                     STR_6:
   707                           
   708                           ; BSR set to: 14
   709  00FFCE  4C                 	db	76	;'L'
   710  00FFCF  45                 	db	69	;'E'
   711  00FFD0  44                 	db	68	;'D'
   712  00FFD1  73                 	db	115	;'s'
   713  00FFD2  20                 	db	32
   714  00FFD3  4F                 	db	79	;'O'
   715  00FFD4  6E                 	db	110	;'n'
   716  00FFD5  00                 	db	0
   717  00FFD6                     STR_20:
   718                           
   719                           ; BSR set to: 14
   720  00FFD6  2A                 	db	42
   721  00FFD7  49                 	db	73	;'I'
   722  00FFD8  44                 	db	68	;'D'
   723  00FFD9  4E                 	db	78	;'N'
   724  00FFDA  3F                 	db	63	;'?'
   725  00FFDB  00                 	db	0
   726  00FFDC                     STR_17:
   727                           
   728                           ; BSR set to: 14
   729  00FFDC  43                 	db	67	;'C'
   730  00FFDD  6C                 	db	108	;'l'
   731  00FFDE  65                 	db	101	;'e'
   732  00FFDF  61                 	db	97	;'a'
   733  00FFE0  72                 	db	114	;'r'
   734  00FFE1  00                 	db	0
   735  00FFE2                     STR_14:
   736                           
   737                           ; BSR set to: 14
   738  00FFE2  52                 	db	82	;'R'
   739  00FFE3  65                 	db	101	;'e'
   740  00FFE4  73                 	db	115	;'s'
   741  00FFE5  65                 	db	101	;'e'
   742  00FFE6  74                 	db	116	;'t'
   743  00FFE7  00                 	db	0
   744  00FFE8                     STR_25:
   745                           
   746                           ; BSR set to: 14
   747  00FFE8  48                 	db	72	;'H'
   748  00FFE9  65                 	db	101	;'e'
   749  00FFEA  6C                 	db	108	;'l'
   750  00FFEB  70                 	db	112	;'p'
   751  00FFEC  00                 	db	0
   752  00FFED                     STR_2:
   753                           
   754                           ; BSR set to: 14
   755  00FFED  1B                 	db	27
   756  00FFEE  5B                 	db	91	;'['
   757  00FFEF  32                 	db	50	;'2'
   758  00FFF0  4A                 	db	74	;'J'
   759  00FFF1  00                 	db	0
   760  00FFF2                     STR_21:
   761                           
   762                           ; BSR set to: 14
   763  00FFF2  49                 	db	73	;'I'
   764  00FFF3  44                 	db	68	;'D'
   765  00FFF4  4E                 	db	78	;'N'
   766  00FFF5  00                 	db	0
   767  00FFF6                     STR_3:
   768                           
   769                           ; BSR set to: 14
   770  00FFF6  1B                 	db	27
   771  00FFF7  5B                 	db	91	;'['
   772  00FFF8  48                 	db	72	;'H'
   773  00FFF9  00                 	db	0
   774  00FFFA                     STR_1:
   775                           
   776                           ; BSR set to: 14
   777  00FFFA  1B                 	db	27
   778  00FFFB  5B                 	db	91	;'['
   779  00FFFC  4B                 	db	75	;'K'
   780  00FFFD  00                 	db	0
   781  0000                     
   782                           ; #config settings
   783  00FFFE  00                 	db	0	; dummy byte at the end
   784  0000                     
   785                           	psect	cinit
   786  0105CA                     __pcinit:
   787                           	opt stack 0
   788  0105CA                     start_initialization:
   789                           	opt stack 0
   790  0105CA                     __initialization:
   791                           	opt stack 0
   792                           
   793                           ; Clear objects allocated to BANK1 (64 bytes)
   794  0105CA  EE01  F000         	lfsr	0,__pbssBANK1
   795  0105CE  0E40               	movlw	64
   796  0105D0                     clear_0:
   797  0105D0  6AEE               	clrf	postinc0,c
   798  0105D2  06E8               	decf	wreg,f,c
   799  0105D4  E1FD               	bnz	clear_0
   800                           
   801                           ; Clear objects allocated to BANK0 (128 bytes)
   802  0105D6  EE00  F060         	lfsr	0,__pbssBANK0
   803  0105DA  0E80               	movlw	128
   804  0105DC                     clear_1:
   805  0105DC  6AEE               	clrf	postinc0,c
   806  0105DE  06E8               	decf	wreg,f,c
   807  0105E0  E1FD               	bnz	clear_1
   808                           
   809                           ; Clear objects allocated to COMRAM (6 bytes)
   810  0105E2  6A38               	clrf	(__pbssCOMRAM+5)& (0+255),c
   811  0105E4  6A37               	clrf	(__pbssCOMRAM+4)& (0+255),c
   812  0105E6  6A36               	clrf	(__pbssCOMRAM+3)& (0+255),c
   813  0105E8  6A35               	clrf	(__pbssCOMRAM+2)& (0+255),c
   814  0105EA  6A34               	clrf	(__pbssCOMRAM+1)& (0+255),c
   815  0105EC  6A33               	clrf	__pbssCOMRAM& (0+255),c
   816  0105EE                     end_of_initialization:
   817                           	opt stack 0
   818  0105EE                     __end_of__initialization:
   819                           	opt stack 0
   820  0105EE  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   821  0105F0  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   822  0105F2  0100               	movlb	0
   823  0105F4  EF38  F083         	goto	_main	;jump to C main() function
   824                           postinc0	equ	0xFEE
   825                           wreg	equ	0xFE8
   826                           
   827                           	psect	bssCOMRAM
   828  000033                     __pbssCOMRAM:
   829                           	opt stack 0
   830  000033                     _eusart2RxStringReady:
   831                           	opt stack 0
   832  000033                     	ds	1
   833  000034                     _eusart2RxCount:
   834                           	opt stack 0
   835  000034                     	ds	1
   836  000035                     _eusart2RxTail:
   837                           	opt stack 0
   838  000035                     	ds	1
   839  000036                     _eusart2RxHead:
   840                           	opt stack 0
   841  000036                     	ds	1
   842  000037                     _eusart2TxTail:
   843                           	opt stack 0
   844  000037                     	ds	1
   845  000038                     _eusart2TxHead:
   846                           	opt stack 0
   847  000038                     	ds	1
   848                           postinc0	equ	0xFEE
   849                           wreg	equ	0xFE8
   850                           
   851                           	psect	bssBANK0
   852  000060                     __pbssBANK0:
   853                           	opt stack 0
   854  000060                     _eusart2RxBuffer:
   855                           	opt stack 0
   856  000060                     	ds	64
   857  0000A0                     _line:
   858                           	opt stack 0
   859  0000A0                     	ds	64
   860                           postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           
   863                           	psect	bssBANK1
   864  000100                     __pbssBANK1:
   865                           	opt stack 0
   866  000100                     _eusart2TxBuffer:
   867                           	opt stack 0
   868  000100                     	ds	64
   869                           postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           
   872                           	psect	cstackCOMRAM
   873  000001                     __pcstackCOMRAM:
   874                           	opt stack 0
   875  000001                     i2EUSART2_Write@txData:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x0
   879  000001                     	ds	1
   880  000002                     i2putch@txData:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x1
   884  000002                     	ds	1
   885  000003                     ?i2_printf:
   886                           	opt stack 0
   887  000003                     i2printf@f:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x2
   891  000003                     	ds	2
   892  000005                     i2printf@ap:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0x4
   896  000005                     	ds	2
   897  000007                     i2printf@c:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0x6
   901  000007                     	ds	1
   902  000008                     ??_INTERRUPT_InterruptManagerHigh:
   903                           
   904                           ; 1 bytes @ 0x7
   905  000008                     	ds	18
   906  00001A                     ?_strlen:
   907                           	opt stack 0
   908  00001A                     ?_strcmp:
   909                           	opt stack 0
   910  00001A                     EUSART2_Read@readValue:
   911                           	opt stack 0
   912  00001A                     EUSART2_Write@txData:
   913                           	opt stack 0
   914  00001A                     strcmp@s1:
   915                           	opt stack 0
   916  00001A                     strlen@s:
   917                           	opt stack 0
   918  00001A                     EUSART2_SetTxInterruptHandler@interruptHandler:
   919                           	opt stack 0
   920  00001A                     EUSART2_SetRxInterruptHandler@interruptHandler:
   921                           	opt stack 0
   922                           
   923                           ; 3 bytes @ 0x19
   924  00001A                     	ds	1
   925  00001B                     putch@txData:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x1A
   929  00001B                     	ds	1
   930  00001C                     ??_strlen:
   931  00001C                     ?_printf:
   932                           	opt stack 0
   933  00001C                     printf@f:
   934                           	opt stack 0
   935  00001C                     strcmp@s2:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x1B
   939  00001C                     	ds	1
   940  00001D                     
   941                           ; 1 bytes @ 0x1C
   942  00001D                     	ds	1
   943  00001E                     ??_strcmp:
   944  00001E                     printf@ap:
   945                           	opt stack 0
   946  00001E                     strlen@cp:
   947                           	opt stack 0
   948                           
   949                           ; 2 bytes @ 0x1D
   950  00001E                     	ds	1
   951  00001F                     strcmp@r:
   952                           	opt stack 0
   953                           
   954                           ; 1 bytes @ 0x1E
   955  00001F                     	ds	1
   956  000020                     printf@c:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x1F
   960  000020                     	ds	1
   961  000021                     ringBufferLUT@line:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x20
   965  000021                     	ds	2
   966  000023                     ??_ringBufferPull:
   967  000023                     
   968                           ; 1 bytes @ 0x22
   969  000023                     	ds	3
   970  000026                     ringBufferPull@charNumber:
   971                           	opt stack 0
   972                           
   973                           ; 2 bytes @ 0x25
   974  000026                     	ds	2
   975  000028                     ringBufferPull@index_572:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0x27
   979  000028                     	ds	2
   980  00002A                     ringBufferPull@index:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x29
   984  00002A                     	ds	2
   985  00002C                     postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           
   988                           ; 1 bytes @ 0x2B
   989 ;;
   990 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   991 ;;
   992 ;; *************** function _main *****************
   993 ;; Defined at:
   994 ;;		line 58 in file "main.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels required when called:   10
  1014 ;; This function calls:
  1015 ;;		_SYSTEM_Initialize
  1016 ;;		_printResetMessage
  1017 ;;		_ringBufferPull
  1018 ;; This function is called by:
  1019 ;;		Startup code after reset
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text0
  1024  010670                     __ptext0:
  1025                           	opt stack 0
  1026  010670                     _main:
  1027                           	opt stack 21
  1028                           
  1029                           ;main.c: 61: SYSTEM_Initialize();
  1030                           
  1031                           ;incstack = 0
  1032  010670  EC50  F083         	call	_SYSTEM_Initialize	;wreg free
  1033                           
  1034                           ;main.c: 68: (INTCONbits.GIEH = 1);
  1035  010674  8EF2               	bsf	intcon,7,c	;volatile
  1036                           
  1037                           ;main.c: 71: (INTCONbits.GIEL = 1);
  1038  010676  8CF2               	bsf	intcon,6,c	;volatile
  1039                           
  1040                           ;main.c: 74: printResetMessage();
  1041  010678  ECB3  F082         	call	_printResetMessage	;wreg free
  1042  01067C                     
  1043                           ;main.c: 77: {
  1044                           ;main.c: 80: if (eusart2RxStringReady) {
  1045  01067C  5033               	movf	_eusart2RxStringReady,w,c	;volatile
  1046  01067E  A4D8               	btfss	status,2,c
  1047                           
  1048                           ;main.c: 82: ringBufferPull();
  1049  010680  ECCC  F080         	call	_ringBufferPull	;wreg free
  1050                           
  1051                           ;main.c: 84: }
  1052                           ;main.c: 87: __nop();
  1053  010684  F000               	nop	
  1054  010686  D7FA               	goto	l287
  1055  010688                     __end_of_main:
  1056                           	opt stack 0
  1057                           intcon	equ	0xFF2
  1058                           postinc0	equ	0xFEE
  1059                           wreg	equ	0xFE8
  1060                           status	equ	0xFD8
  1061                           
  1062 ;; *************** function _ringBufferPull *****************
  1063 ;; Defined at:
  1064 ;;		line 8 in file "ring_buffer_interface.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  index           2   39[COMRAM] int 
  1069 ;;  index           2   41[COMRAM] int 
  1070 ;;  charNumber      2   37[COMRAM] int 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;Total ram usage:        9 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    9
  1087 ;; This function calls:
  1088 ;;		_EUSART2_Read
  1089 ;;		_ringBufferLUT
  1090 ;;		_strlen
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text1
  1097  010198                     __ptext1:
  1098                           	opt stack 0
  1099  010198                     _ringBufferPull:
  1100                           	opt stack 21
  1101                           
  1102                           ;ring_buffer_interface.c: 10: int charNumber = eusart2RxCount;
  1103                           
  1104                           ;incstack = 0
  1105  010198  C034  F026         	movff	_eusart2RxCount,ringBufferPull@charNumber	;volatile
  1106  01019C  6A27               	clrf	ringBufferPull@charNumber+1,c
  1107                           
  1108                           ;ring_buffer_interface.c: 13: for (int index = 0; index < 64; index++) {
  1109  01019E  0E00               	movlw	0
  1110  0101A0  6E2B               	movwf	ringBufferPull@index+1,c
  1111  0101A2  0E00               	movlw	0
  1112  0101A4  6E2A               	movwf	ringBufferPull@index,c
  1113  0101A6                     l1553:
  1114  0101A6  BE2B               	btfsc	ringBufferPull@index+1,7,c
  1115  0101A8  D006               	goto	l316
  1116  0101AA  502B               	movf	ringBufferPull@index+1,w,c
  1117  0101AC  E10F               	bnz	l1563
  1118  0101AE  0E40               	movlw	64
  1119  0101B0  5C2A               	subwf	ringBufferPull@index,w,c
  1120  0101B2  B0D8               	btfsc	status,0,c
  1121  0101B4  D00B               	goto	u700
  1122  0101B6                     l316:
  1123                           
  1124                           ;ring_buffer_interface.c: 15: line[index] = '\0';
  1125  0101B6  0EA0               	movlw	low _line
  1126  0101B8  242A               	addwf	ringBufferPull@index,w,c
  1127  0101BA  6ED9               	movwf	fsr2l,c
  1128  0101BC  0E00               	movlw	high _line
  1129  0101BE  202B               	addwfc	ringBufferPull@index+1,w,c
  1130  0101C0  6EDA               	movwf	fsr2h,c
  1131  0101C2  0E00               	movlw	0
  1132  0101C4  6EDF               	movwf	indf2,c
  1133  0101C6  4A2A               	infsnz	ringBufferPull@index,f,c
  1134  0101C8  2A2B               	incf	ringBufferPull@index+1,f,c
  1135  0101CA  D7ED               	goto	l1553
  1136  0101CC                     u700:
  1137  0101CC                     l1563:
  1138                           
  1139                           ;ring_buffer_interface.c: 17: }
  1140                           ;ring_buffer_interface.c: 20: for(int index = 0; index < charNumber; index++){
  1141  0101CC  0E00               	movlw	0
  1142  0101CE  6E29               	movwf	ringBufferPull@index_572+1,c
  1143  0101D0  0E00               	movlw	0
  1144  0101D2  6E28               	movwf	ringBufferPull@index_572,c
  1145  0101D4  D00D               	goto	l318
  1146  0101D6                     
  1147                           ;ring_buffer_interface.c: 22: line[index] = EUSART2_Read();
  1148  0101D6  EC98  F082         	call	_EUSART2_Read	;wreg free
  1149  0101DA  6E23               	movwf	??_ringBufferPull& (0+255),c
  1150  0101DC  0EA0               	movlw	low _line
  1151  0101DE  2428               	addwf	ringBufferPull@index_572,w,c
  1152  0101E0  6ED9               	movwf	fsr2l,c
  1153  0101E2  0E00               	movlw	high _line
  1154  0101E4  2029               	addwfc	ringBufferPull@index_572+1,w,c
  1155  0101E6  6EDA               	movwf	fsr2h,c
  1156  0101E8  C023  FFDF         	movff	??_ringBufferPull,indf2
  1157  0101EC  4A28               	infsnz	ringBufferPull@index_572,f,c
  1158  0101EE  2A29               	incf	ringBufferPull@index_572+1,f,c
  1159  0101F0                     l318:
  1160  0101F0  5026               	movf	ringBufferPull@charNumber,w,c
  1161  0101F2  5C28               	subwf	ringBufferPull@index_572,w,c
  1162  0101F4  5029               	movf	ringBufferPull@index_572+1,w,c
  1163  0101F6  0A80               	xorlw	128
  1164  0101F8  6E23               	movwf	??_ringBufferPull& (0+255),c
  1165  0101FA  5027               	movf	ringBufferPull@charNumber+1,w,c
  1166  0101FC  0A80               	xorlw	128
  1167  0101FE  5823               	subwfb	??_ringBufferPull& (0+255),w,c
  1168  010200  A0D8               	btfss	status,0,c
  1169  010202  D7E9               	goto	l319
  1170                           
  1171                           ;ring_buffer_interface.c: 24: }
  1172                           ;ring_buffer_interface.c: 27: eusart2RxTail = eusart2RxHead;
  1173  010204  C036  F035         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  1174                           
  1175                           ;ring_buffer_interface.c: 30: while((line[strlen(line) - 1] == (int) '\n') ||
  1176                           ;ring_buffer_interface.c: 31: (line[strlen(line) - 1] == (int) '\r')) {
  1177  010208  D016               	goto	l321
  1178  01020A                     
  1179                           ;ring_buffer_interface.c: 34: line[strlen(line) - 1] = '\0';
  1180  01020A  0EFF               	movlw	255
  1181  01020C  6E23               	movwf	??_ringBufferPull& (0+255),c
  1182  01020E  0EFF               	movlw	255
  1183  010210  6E24               	movwf	(??_ringBufferPull+1)& (0+255),c
  1184  010212  0EA0               	movlw	low _line
  1185  010214  6E1A               	movwf	strlen@s,c
  1186  010216  0E00               	movlw	high _line
  1187  010218  6E1B               	movwf	strlen@s+1,c
  1188  01021A  EC7B  F082         	call	_strlen	;wreg free
  1189  01021E  5023               	movf	??_ringBufferPull,w,c
  1190  010220  261A               	addwf	?_strlen,f,c
  1191  010222  5024               	movf	??_ringBufferPull+1,w,c
  1192  010224  221B               	addwfc	?_strlen+1,f,c
  1193  010226  0EA0               	movlw	low _line
  1194  010228  241A               	addwf	?_strlen,w,c
  1195  01022A  6ED9               	movwf	fsr2l,c
  1196  01022C  0E00               	movlw	high _line
  1197  01022E  201B               	addwfc	?_strlen+1,w,c
  1198  010230  6EDA               	movwf	fsr2h,c
  1199  010232  0E00               	movlw	0
  1200  010234  6EDF               	movwf	indf2,c
  1201  010236                     l321:
  1202  010236  0EFF               	movlw	255
  1203  010238  6E23               	movwf	??_ringBufferPull& (0+255),c
  1204  01023A  0EFF               	movlw	255
  1205  01023C  6E24               	movwf	(??_ringBufferPull+1)& (0+255),c
  1206  01023E  0EA0               	movlw	low _line
  1207  010240  6E1A               	movwf	strlen@s,c
  1208  010242  0E00               	movlw	high _line
  1209  010244  6E1B               	movwf	strlen@s+1,c
  1210  010246  EC7B  F082         	call	_strlen	;wreg free
  1211  01024A  5023               	movf	??_ringBufferPull,w,c
  1212  01024C  261A               	addwf	?_strlen,f,c
  1213  01024E  5024               	movf	??_ringBufferPull+1,w,c
  1214  010250  221B               	addwfc	?_strlen+1,f,c
  1215  010252  0EA0               	movlw	low _line
  1216  010254  241A               	addwf	?_strlen,w,c
  1217  010256  6ED9               	movwf	fsr2l,c
  1218  010258  0E00               	movlw	high _line
  1219  01025A  201B               	addwfc	?_strlen+1,w,c
  1220  01025C  6EDA               	movwf	fsr2h,c
  1221  01025E  0E0A               	movlw	10
  1222  010260  18DE               	xorwf	postinc2,w,c
  1223  010262  B4D8               	btfsc	status,2,c
  1224  010264  D7D2               	goto	l322
  1225  010266  0EFF               	movlw	255
  1226  010268  6E23               	movwf	??_ringBufferPull& (0+255),c
  1227  01026A  0EFF               	movlw	255
  1228  01026C  6E24               	movwf	(??_ringBufferPull+1)& (0+255),c
  1229  01026E  0EA0               	movlw	low _line
  1230  010270  6E1A               	movwf	strlen@s,c
  1231  010272  0E00               	movlw	high _line
  1232  010274  6E1B               	movwf	strlen@s+1,c
  1233  010276  EC7B  F082         	call	_strlen	;wreg free
  1234  01027A  5023               	movf	??_ringBufferPull,w,c
  1235  01027C  261A               	addwf	?_strlen,f,c
  1236  01027E  5024               	movf	??_ringBufferPull+1,w,c
  1237  010280  221B               	addwfc	?_strlen+1,f,c
  1238  010282  0EA0               	movlw	low _line
  1239  010284  241A               	addwf	?_strlen,w,c
  1240  010286  6ED9               	movwf	fsr2l,c
  1241  010288  0E00               	movlw	high _line
  1242  01028A  201B               	addwfc	?_strlen+1,w,c
  1243  01028C  6EDA               	movwf	fsr2h,c
  1244  01028E  0E0D               	movlw	13
  1245  010290  18DE               	xorwf	postinc2,w,c
  1246  010292  B4D8               	btfsc	status,2,c
  1247  010294  D7BA               	goto	l322
  1248                           
  1249                           ;ring_buffer_interface.c: 36: }
  1250                           ;ring_buffer_interface.c: 40: eusart2RxStringReady = 0;
  1251  010296  0E00               	movlw	0
  1252  010298  6E33               	movwf	_eusart2RxStringReady,c	;volatile
  1253                           
  1254                           ;ring_buffer_interface.c: 43: ringBufferLUT(line);
  1255  01029A  0EA0               	movlw	low _line
  1256  01029C  6E21               	movwf	ringBufferLUT@line,c
  1257  01029E  0E00               	movlw	high _line
  1258  0102A0  6E22               	movwf	ringBufferLUT@line+1,c
  1259  0102A2  EC00  F080         	call	_ringBufferLUT	;wreg free
  1260  0102A6  0012               	return		;funcret
  1261  0102A8                     __end_of_ringBufferPull:
  1262                           	opt stack 0
  1263                           intcon	equ	0xFF2
  1264                           postinc0	equ	0xFEE
  1265                           wreg	equ	0xFE8
  1266                           indf2	equ	0xFDF
  1267                           postinc2	equ	0xFDE
  1268                           fsr2h	equ	0xFDA
  1269                           fsr2l	equ	0xFD9
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _strlen *****************
  1273 ;; Defined at:
  1274 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  s               2   25[COMRAM] PTR const unsigned char 
  1277 ;;		 -> line(64), 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  cp              2   29[COMRAM] PTR const unsigned char 
  1280 ;;		 -> line(64), 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  2   25[COMRAM] unsigned int 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;Total ram usage:        6 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    5
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_ringBufferPull
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text2
  1305  0104F6                     __ptext2:
  1306                           	opt stack 0
  1307  0104F6                     _strlen:
  1308                           	opt stack 24
  1309                           
  1310                           ;incstack = 0
  1311  0104F6  C01A  F01E         	movff	strlen@s,strlen@cp
  1312  0104FA  C01B  F01F         	movff	strlen@s+1,strlen@cp+1
  1313  0104FE  D002               	goto	l919
  1314  010500  4A1E               	infsnz	strlen@cp,f,c
  1315  010502  2A1F               	incf	strlen@cp+1,f,c
  1316  010504                     l919:
  1317  010504  C01E  FFD9         	movff	strlen@cp,fsr2l
  1318  010508  C01F  FFDA         	movff	strlen@cp+1,fsr2h
  1319  01050C  50DF               	movf	indf2,w,c
  1320  01050E  A4D8               	btfss	status,2,c
  1321  010510  D7F7               	goto	l920
  1322  010512  C01A  F01C         	movff	strlen@s,??_strlen
  1323  010516  C01B  F01D         	movff	strlen@s+1,??_strlen+1
  1324  01051A  1E1C               	comf	??_strlen,f,c
  1325  01051C  1E1D               	comf	??_strlen+1,f,c
  1326  01051E  4A1C               	infsnz	??_strlen,f,c
  1327  010520  2A1D               	incf	??_strlen+1,f,c
  1328  010522  501E               	movf	strlen@cp,w,c
  1329  010524  241C               	addwf	??_strlen,w,c
  1330  010526  6E1A               	movwf	?_strlen,c
  1331  010528  501F               	movf	strlen@cp+1,w,c
  1332  01052A  201D               	addwfc	??_strlen+1,w,c
  1333  01052C  6E1B               	movwf	?_strlen+1,c
  1334  01052E  0012               	return	
  1335  010530                     __end_of_strlen:
  1336                           	opt stack 0
  1337                           intcon	equ	0xFF2
  1338                           postinc0	equ	0xFEE
  1339                           wreg	equ	0xFE8
  1340                           indf2	equ	0xFDF
  1341                           postinc2	equ	0xFDE
  1342                           fsr2h	equ	0xFDA
  1343                           fsr2l	equ	0xFD9
  1344                           status	equ	0xFD8
  1345                           
  1346 ;; *************** function _ringBufferLUT *****************
  1347 ;; Defined at:
  1348 ;;		line 7 in file "ring_buffer_LUT.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  line            2   32[COMRAM] PTR unsigned char 
  1351 ;;		 -> line(64), 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1367 ;;Total ram usage:        2 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    8
  1370 ;; This function calls:
  1371 ;;		_printf
  1372 ;;		_strcmp
  1373 ;; This function is called by:
  1374 ;;		_ringBufferPull
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text3
  1379  010000                     __ptext3:
  1380                           	opt stack 0
  1381  010000                     _ringBufferLUT:
  1382                           	opt stack 21
  1383                           
  1384                           ;ring_buffer_LUT.c: 13: if((0 == strcmp(line, "LEDs On"))) {
  1385                           
  1386                           ;incstack = 0
  1387  010000  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1388  010004  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1389  010008  0ECE               	movlw	low STR_6
  1390  01000A  6E1C               	movwf	strcmp@s2,c
  1391  01000C  0EFF               	movlw	high STR_6
  1392  01000E  6E1D               	movwf	strcmp@s2+1,c
  1393  010010  EC19  F082         	call	_strcmp	;wreg free
  1394  010014  501A               	movf	?_strcmp,w,c
  1395  010016  101B               	iorwf	?_strcmp+1,w,c
  1396  010018  A4D8               	btfss	status,2,c
  1397  01001A  D015               	goto	l340
  1398                           
  1399                           ;ring_buffer_LUT.c: 16: LATF = 0x00;
  1400  01001C  0E00               	movlw	0
  1401  01001E  6E7E               	movwf	3966,c	;volatile
  1402                           
  1403                           ;ring_buffer_LUT.c: 19: printf("\n\r");
  1404  010020  0EB4               	movlw	low (STR_8+15)
  1405  010022  6E1C               	movwf	printf@f,c
  1406  010024  0EFF               	movlw	high (STR_8+15)
  1407  010026  6E1D               	movwf	printf@f+1,c
  1408  010028  ECFC  F082         	call	_printf	;wreg free
  1409                           
  1410                           ;ring_buffer_LUT.c: 21: printf("    LATF = 0x00\n\r");
  1411  01002C  0EA5               	movlw	low STR_8
  1412  01002E  6E1C               	movwf	printf@f,c
  1413  010030  0EFF               	movlw	high STR_8
  1414  010032  6E1D               	movwf	printf@f+1,c
  1415  010034  ECFC  F082         	call	_printf	;wreg free
  1416                           
  1417                           ;ring_buffer_LUT.c: 24: printf("\n\r");
  1418  010038  0EB4               	movlw	low (STR_8+15)
  1419  01003A  6E1C               	movwf	printf@f,c
  1420  01003C  0EFF               	movlw	high (STR_8+15)
  1421  01003E  6E1D               	movwf	printf@f+1,c
  1422  010040  ECFC  F082         	call	_printf	;wreg free
  1423                           
  1424                           ;ring_buffer_LUT.c: 26: }
  1425  010044  0012               	return	
  1426  010046                     l340:
  1427                           
  1428                           ;ring_buffer_LUT.c: 30: else if((0 == strcmp(line, "LEDs Off"))) {
  1429  010046  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1430  01004A  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1431  01004E  0EC5               	movlw	low STR_10
  1432  010050  6E1C               	movwf	strcmp@s2,c
  1433  010052  0EFF               	movlw	high STR_10
  1434  010054  6E1D               	movwf	strcmp@s2+1,c
  1435  010056  EC19  F082         	call	_strcmp	;wreg free
  1436  01005A  501A               	movf	?_strcmp,w,c
  1437  01005C  101B               	iorwf	?_strcmp+1,w,c
  1438  01005E  A4D8               	btfss	status,2,c
  1439  010060  D014               	goto	l342
  1440                           
  1441                           ;ring_buffer_LUT.c: 33: LATF = 0xFF;
  1442  010062  687E               	setf	3966,c	;volatile
  1443                           
  1444                           ;ring_buffer_LUT.c: 36: printf("\n\r");
  1445  010064  0EB4               	movlw	low (STR_8+15)
  1446  010066  6E1C               	movwf	printf@f,c
  1447  010068  0EFF               	movlw	high (STR_8+15)
  1448  01006A  6E1D               	movwf	printf@f+1,c
  1449  01006C  ECFC  F082         	call	_printf	;wreg free
  1450                           
  1451                           ;ring_buffer_LUT.c: 38: printf("LATF = 0xFF\n\r");
  1452  010070  0EB7               	movlw	low STR_12
  1453  010072  6E1C               	movwf	printf@f,c
  1454  010074  0EFF               	movlw	high STR_12
  1455  010076  6E1D               	movwf	printf@f+1,c
  1456  010078  ECFC  F082         	call	_printf	;wreg free
  1457                           
  1458                           ;ring_buffer_LUT.c: 41: printf("\n\r");
  1459  01007C  0EB4               	movlw	low (STR_8+15)
  1460  01007E  6E1C               	movwf	printf@f,c
  1461  010080  0EFF               	movlw	high (STR_8+15)
  1462  010082  6E1D               	movwf	printf@f+1,c
  1463  010084  ECFC  F082         	call	_printf	;wreg free
  1464                           
  1465                           ;ring_buffer_LUT.c: 43: }
  1466  010088  0012               	return	
  1467  01008A                     l342:
  1468                           
  1469                           ;ring_buffer_LUT.c: 47: else if((0 == strcmp(line, "Reset"))) {
  1470  01008A  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1471  01008E  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1472  010092  0EE2               	movlw	low STR_14
  1473  010094  6E1C               	movwf	strcmp@s2,c
  1474  010096  0EFF               	movlw	high STR_14
  1475  010098  6E1D               	movwf	strcmp@s2+1,c
  1476  01009A  EC19  F082         	call	_strcmp	;wreg free
  1477  01009E  501A               	movf	?_strcmp,w,c
  1478  0100A0  101B               	iorwf	?_strcmp+1,w,c
  1479  0100A2  A4D8               	btfss	status,2,c
  1480  0100A4  D00E               	goto	l344
  1481                           
  1482                           ;ring_buffer_LUT.c: 50: printf("\033[2J");
  1483  0100A6  0EED               	movlw	low STR_2
  1484  0100A8  6E1C               	movwf	printf@f,c
  1485  0100AA  0EFF               	movlw	high STR_2
  1486  0100AC  6E1D               	movwf	printf@f+1,c
  1487  0100AE  ECFC  F082         	call	_printf	;wreg free
  1488                           
  1489                           ;ring_buffer_LUT.c: 53: printf("\033[H");
  1490  0100B2  0EF6               	movlw	low STR_3
  1491  0100B4  6E1C               	movwf	printf@f,c
  1492  0100B6  0EFF               	movlw	high STR_3
  1493  0100B8  6E1D               	movwf	printf@f+1,c
  1494  0100BA  ECFC  F082         	call	_printf	;wreg free
  1495  0100BE  00FF               	reset		;# 
  1496                           
  1497                           ;ring_buffer_LUT.c: 58: }
  1498  0100C0  0012               	return	
  1499  0100C2                     l344:
  1500                           
  1501                           ;ring_buffer_LUT.c: 61: else if((0 == strcmp(line, "Clear"))) {
  1502  0100C2  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1503  0100C6  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1504  0100CA  0EDC               	movlw	low STR_17
  1505  0100CC  6E1C               	movwf	strcmp@s2,c
  1506  0100CE  0EFF               	movlw	high STR_17
  1507  0100D0  6E1D               	movwf	strcmp@s2+1,c
  1508  0100D2  EC19  F082         	call	_strcmp	;wreg free
  1509  0100D6  501A               	movf	?_strcmp,w,c
  1510  0100D8  101B               	iorwf	?_strcmp+1,w,c
  1511  0100DA  A4D8               	btfss	status,2,c
  1512  0100DC  D00D               	goto	l346
  1513                           
  1514                           ;ring_buffer_LUT.c: 64: printf("\033[2J");
  1515  0100DE  0EED               	movlw	low STR_2
  1516  0100E0  6E1C               	movwf	printf@f,c
  1517  0100E2  0EFF               	movlw	high STR_2
  1518  0100E4  6E1D               	movwf	printf@f+1,c
  1519  0100E6  ECFC  F082         	call	_printf	;wreg free
  1520                           
  1521                           ;ring_buffer_LUT.c: 67: printf("\033[H");
  1522  0100EA  0EF6               	movlw	low STR_3
  1523  0100EC  6E1C               	movwf	printf@f,c
  1524  0100EE  0EFF               	movlw	high STR_3
  1525  0100F0  6E1D               	movwf	printf@f+1,c
  1526  0100F2  ECFC  F082         	call	_printf	;wreg free
  1527                           
  1528                           ;ring_buffer_LUT.c: 69: }
  1529  0100F6  0012               	return	
  1530  0100F8                     l346:
  1531                           
  1532                           ;ring_buffer_LUT.c: 72: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  1533  0100F8  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1534  0100FC  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1535  010100  0ED6               	movlw	low STR_20
  1536  010102  6E1C               	movwf	strcmp@s2,c
  1537  010104  0EFF               	movlw	high STR_20
  1538  010106  6E1D               	movwf	strcmp@s2+1,c
  1539  010108  EC19  F082         	call	_strcmp	;wreg free
  1540  01010C  501A               	movf	?_strcmp,w,c
  1541  01010E  101B               	iorwf	?_strcmp+1,w,c
  1542  010110  B4D8               	btfsc	status,2,c
  1543  010112  D00E               	goto	u580
  1544  010114  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1545  010118  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1546  01011C  0EF2               	movlw	low STR_21
  1547  01011E  6E1C               	movwf	strcmp@s2,c
  1548  010120  0EFF               	movlw	high STR_21
  1549  010122  6E1D               	movwf	strcmp@s2+1,c
  1550  010124  EC19  F082         	call	_strcmp	;wreg free
  1551  010128  501A               	movf	?_strcmp,w,c
  1552  01012A  101B               	iorwf	?_strcmp+1,w,c
  1553  01012C  A4D8               	btfss	status,2,c
  1554  01012E  D013               	goto	l348
  1555  010130                     u580:
  1556                           
  1557                           ;ring_buffer_LUT.c: 75: printf("\n\r");
  1558  010130  0EB4               	movlw	low (STR_8+15)
  1559  010132  6E1C               	movwf	printf@f,c
  1560  010134  0EFF               	movlw	high (STR_8+15)
  1561  010136  6E1D               	movwf	printf@f+1,c
  1562  010138  ECFC  F082         	call	_printf	;wreg free
  1563                           
  1564                           ;ring_buffer_LUT.c: 78: printf("    mTouch Test Board, REVA");
  1565  01013C  0E89               	movlw	low STR_23
  1566  01013E  6E1C               	movwf	printf@f,c
  1567  010140  0EFF               	movlw	high STR_23
  1568  010142  6E1D               	movwf	printf@f+1,c
  1569  010144  ECFC  F082         	call	_printf	;wreg free
  1570                           
  1571                           ;ring_buffer_LUT.c: 81: printf("\n\r");
  1572  010148  0EB4               	movlw	low (STR_8+15)
  1573  01014A  6E1C               	movwf	printf@f,c
  1574  01014C  0EFF               	movlw	high (STR_8+15)
  1575  01014E  6E1D               	movwf	printf@f+1,c
  1576  010150  ECFC  F082         	call	_printf	;wreg free
  1577                           
  1578                           ;ring_buffer_LUT.c: 83: }
  1579  010154  0012               	return	
  1580  010156                     l348:
  1581                           
  1582                           ;ring_buffer_LUT.c: 86: else if((0 == strcmp(line, "Help"))) {
  1583  010156  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1584  01015A  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1585  01015E  0EE8               	movlw	low STR_25
  1586  010160  6E1C               	movwf	strcmp@s2,c
  1587  010162  0EFF               	movlw	high STR_25
  1588  010164  6E1D               	movwf	strcmp@s2+1,c
  1589  010166  EC19  F082         	call	_strcmp	;wreg free
  1590  01016A  501A               	movf	?_strcmp,w,c
  1591  01016C  101B               	iorwf	?_strcmp+1,w,c
  1592  01016E  A4D8               	btfss	status,2,c
  1593  010170  0012               	return	
  1594                           
  1595                           ;ring_buffer_LUT.c: 89: printf("\n\r");
  1596  010172  0EB4               	movlw	low (STR_8+15)
  1597  010174  6E1C               	movwf	printf@f,c
  1598  010176  0EFF               	movlw	high (STR_8+15)
  1599  010178  6E1D               	movwf	printf@f+1,c
  1600  01017A  ECFC  F082         	call	_printf	;wreg free
  1601                           
  1602                           ;ring_buffer_LUT.c: 91: printf("   List of supported commands:\n\r"
  1603                           ;ring_buffer_LUT.c: 92: "   LEDs On: Turns all LEDs On\n\r"
  1604                           ;ring_buffer_LUT.c: 93: "   LEDs Off: Turns all LEDs Off\n\r"
  1605                           ;ring_buffer_LUT.c: 94: "   Reset: Clears the terminal and resets the micro\n\r"
  1606                           ;ring_buffer_LUT.c: 95: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  1607                           ;ring_buffer_LUT.c: 96: "   *IDN?: Returns device identification\n\r"
  1608                           ;ring_buffer_LUT.c: 97: "   Help: This message, lists commands\n\r");
  1609  01017E  0EBB               	movlw	low STR_27
  1610  010180  6E1C               	movwf	printf@f,c
  1611  010182  0EFD               	movlw	high STR_27
  1612  010184  6E1D               	movwf	printf@f+1,c
  1613  010186  ECFC  F082         	call	_printf	;wreg free
  1614                           
  1615                           ;ring_buffer_LUT.c: 100: printf("\n\r");
  1616  01018A  0EB4               	movlw	low (STR_8+15)
  1617  01018C  6E1C               	movwf	printf@f,c
  1618  01018E  0EFF               	movlw	high (STR_8+15)
  1619  010190  6E1D               	movwf	printf@f+1,c
  1620  010192  ECFC  F082         	call	_printf	;wreg free
  1621  010196  0012               	return	
  1622  010198                     __end_of_ringBufferLUT:
  1623                           	opt stack 0
  1624                           intcon	equ	0xFF2
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           indf2	equ	0xFDF
  1628                           postinc2	equ	0xFDE
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function _strcmp *****************
  1634 ;; Defined at:
  1635 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  s1              2   25[COMRAM] PTR const unsigned char 
  1638 ;;		 -> line(64), 
  1639 ;;  s2              2   27[COMRAM] PTR const unsigned char 
  1640 ;;		 -> STR_25(5), STR_21(4), STR_20(6), STR_17(6), 
  1641 ;;		 -> STR_14(6), STR_10(9), STR_6(8), 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  r               1   30[COMRAM] char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  2   25[COMRAM] int 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;Total ram usage:        6 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    5
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_ringBufferLUT
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text4
  1668  010432                     __ptext4:
  1669                           	opt stack 0
  1670  010432                     _strcmp:
  1671                           	opt stack 23
  1672                           
  1673                           ;incstack = 0
  1674  010432  D004               	goto	l911
  1675  010434  4A1A               	infsnz	strcmp@s1,f,c
  1676  010436  2A1B               	incf	strcmp@s1+1,f,c
  1677  010438  4A1C               	infsnz	strcmp@s2,f,c
  1678  01043A  2A1D               	incf	strcmp@s2+1,f,c
  1679  01043C                     l911:
  1680  01043C  C01A  FFD9         	movff	strcmp@s1,fsr2l
  1681  010440  C01B  FFDA         	movff	strcmp@s1+1,fsr2h
  1682  010444  50DF               	movf	indf2,w,c
  1683  010446  6E1E               	movwf	??_strcmp& (0+255),c
  1684  010448  C01C  FFF6         	movff	strcmp@s2,tblptrl
  1685  01044C  C01D  FFF7         	movff	strcmp@s2+1,tblptrh
  1686  010450                     	if	0	;tblptru may be non-zero
  1687  010450                     	endif
  1688  010450                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1689  010450  0E00               	movlw	low (__mediumconst shr (0+16))
  1690  010452  6EF8               	movwf	tblptru,c
  1691  010454                     	endif
  1692  010454  0008               	tblrd		*
  1693  010456  50F5               	movf	tablat,w,c
  1694  010458  0800               	sublw	0
  1695  01045A  241E               	addwf	??_strcmp,w,c
  1696  01045C  6E1F               	movwf	strcmp@r,c
  1697  01045E  501F               	movf	strcmp@r,w,c
  1698  010460  A4D8               	btfss	status,2,c
  1699  010462  D007               	goto	u490
  1700  010464  C01A  FFD9         	movff	strcmp@s1,fsr2l
  1701  010468  C01B  FFDA         	movff	strcmp@s1+1,fsr2h
  1702  01046C  50DF               	movf	indf2,w,c
  1703  01046E  A4D8               	btfss	status,2,c
  1704  010470  D7E1               	goto	l912
  1705  010472                     u490:
  1706  010472  501F               	movf	strcmp@r,w,c
  1707  010474  6E1A               	movwf	?_strcmp,c
  1708  010476  6A1B               	clrf	?_strcmp+1,c
  1709  010478  BE1A               	btfsc	?_strcmp,7,c
  1710  01047A  061B               	decf	?_strcmp+1,f,c
  1711  01047C  0012               	return	
  1712  01047E                     __end_of_strcmp:
  1713                           	opt stack 0
  1714                           tblptru	equ	0xFF8
  1715                           tblptrh	equ	0xFF7
  1716                           tblptrl	equ	0xFF6
  1717                           tablat	equ	0xFF5
  1718                           intcon	equ	0xFF2
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           indf2	equ	0xFDF
  1722                           postinc2	equ	0xFDE
  1723                           fsr2h	equ	0xFDA
  1724                           fsr2l	equ	0xFD9
  1725                           status	equ	0xFD8
  1726                           
  1727 ;; *************** function _EUSART2_Read *****************
  1728 ;; Defined at:
  1729 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  readValue       1   25[COMRAM] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      unsigned char 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1747 ;;Total ram usage:        1 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    5
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_ringBufferPull
  1754 ;;		_getch
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text5
  1759  010530                     __ptext5:
  1760                           	opt stack 0
  1761  010530                     _EUSART2_Read:
  1762                           	opt stack 24
  1763                           
  1764                           ;eusart2.c: 132: uint8_t readValue = 0;
  1765                           
  1766                           ;incstack = 0
  1767  010530  0E00               	movlw	0
  1768  010532  6E1A               	movwf	EUSART2_Read@readValue,c
  1769  010534                     
  1770                           ;eusart2.c: 135: {
  1771  010534  5034               	movf	_eusart2RxCount,w,c	;volatile
  1772  010536  B4D8               	btfsc	status,2,c
  1773  010538  D7FD               	goto	l178
  1774                           
  1775                           ;eusart2.c: 136: }
  1776                           ;eusart2.c: 138: readValue = eusart2RxBuffer[eusart2RxTail++];
  1777  01053A  5035               	movf	_eusart2RxTail,w,c	;volatile
  1778  01053C  0D01               	mullw	1
  1779  01053E  0E60               	movlw	low _eusart2RxBuffer
  1780  010540  24F3               	addwf	prodl,w,c
  1781  010542  6ED9               	movwf	fsr2l,c
  1782  010544  0E00               	movlw	high _eusart2RxBuffer
  1783  010546  20F4               	addwfc	prodh,w,c
  1784  010548  6EDA               	movwf	fsr2h,c
  1785  01054A  50DF               	movf	indf2,w,c
  1786  01054C  6E1A               	movwf	EUSART2_Read@readValue,c
  1787  01054E  2A35               	incf	_eusart2RxTail,f,c	;volatile
  1788                           
  1789                           ;eusart2.c: 139: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  1790  010550  0E3F               	movlw	63
  1791  010552  6435               	cpfsgt	_eusart2RxTail,c	;volatile
  1792  010554  D002               	goto	l180
  1793                           
  1794                           ;eusart2.c: 140: {
  1795                           ;eusart2.c: 141: eusart2RxTail = 0;
  1796  010556  0E00               	movlw	0
  1797  010558  6E35               	movwf	_eusart2RxTail,c	;volatile
  1798  01055A                     l180:
  1799                           
  1800                           ;eusart2.c: 142: }
  1801                           ;eusart2.c: 143: PIE3bits.RC2IE = 0;
  1802  01055A  010E               	movlb	14	; () banked
  1803  01055C  9F2C               	bcf	44,7,b	;volatile
  1804                           
  1805                           ; BSR set to: 14
  1806                           ;eusart2.c: 144: eusart2RxCount--;
  1807  01055E  0634               	decf	_eusart2RxCount,f,c	;volatile
  1808                           
  1809                           ; BSR set to: 14
  1810                           ;eusart2.c: 145: PIE3bits.RC2IE = 1;
  1811  010560  8F2C               	bsf	44,7,b	;volatile
  1812                           
  1813                           ; BSR set to: 14
  1814                           ;eusart2.c: 147: return readValue;
  1815  010562  501A               	movf	EUSART2_Read@readValue,w,c
  1816  010564  0012               	return	
  1817  010566                     __end_of_EUSART2_Read:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           prodh	equ	0xFF4
  1824                           prodl	equ	0xFF3
  1825                           intcon	equ	0xFF2
  1826                           postinc0	equ	0xFEE
  1827                           wreg	equ	0xFE8
  1828                           indf2	equ	0xFDF
  1829                           postinc2	equ	0xFDE
  1830                           fsr2h	equ	0xFDA
  1831                           fsr2l	equ	0xFD9
  1832                           status	equ	0xFD8
  1833                           
  1834 ;; *************** function _printResetMessage *****************
  1835 ;; Defined at:
  1836 ;;		line 50 in file "ring_buffer_interface.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    8
  1857 ;; This function calls:
  1858 ;;		_printf
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text6
  1865  010566                     __ptext6:
  1866                           	opt stack 0
  1867  010566                     _printResetMessage:
  1868                           	opt stack 22
  1869                           
  1870                           ;ring_buffer_interface.c: 53: printf("\033[2J");
  1871                           
  1872                           ; BSR set to: 14
  1873                           ;incstack = 0
  1874  010566  0EED               	movlw	low STR_2
  1875  010568  6E1C               	movwf	printf@f,c
  1876  01056A  0EFF               	movlw	high STR_2
  1877  01056C  6E1D               	movwf	printf@f+1,c
  1878  01056E  ECFC  F082         	call	_printf	;wreg free
  1879                           
  1880                           ;ring_buffer_interface.c: 56: printf("\033[H");
  1881  010572  0EF6               	movlw	low STR_3
  1882  010574  6E1C               	movwf	printf@f,c
  1883  010576  0EFF               	movlw	high STR_3
  1884  010578  6E1D               	movwf	printf@f+1,c
  1885  01057A  ECFC  F082         	call	_printf	;wreg free
  1886                           
  1887                           ;ring_buffer_interface.c: 59: printf("PIC18F67K40 mTouch Demo\n\r"
  1888                           ;ring_buffer_interface.c: 60: "Baud rate: 115200 kbps\n\r"
  1889                           ;ring_buffer_interface.c: 61: "No parity, 8 bits, no flow control, 1 stop bit\n\r"
  1890                           ;ring_buffer_interface.c: 62: "Commands are case sensitive\n\r"
  1891                           ;ring_buffer_interface.c: 63: "Enter a command, or Help for list of commands\n\r");
  1892  01057E  0EDB               	movlw	low STR_4
  1893  010580  6E1C               	movwf	printf@f,c
  1894  010582  0EFE               	movlw	high STR_4
  1895  010584  6E1D               	movwf	printf@f+1,c
  1896  010586  ECFC  F082         	call	_printf	;wreg free
  1897                           
  1898                           ;ring_buffer_interface.c: 67: printf("\n\r");
  1899  01058A  0EB4               	movlw	low (STR_8+15)
  1900  01058C  6E1C               	movwf	printf@f,c
  1901  01058E  0EFF               	movlw	high (STR_8+15)
  1902  010590  6E1D               	movwf	printf@f+1,c
  1903  010592  ECFC  F082         	call	_printf	;wreg free
  1904  010596  0012               	return		;funcret
  1905  010598                     __end_of_printResetMessage:
  1906                           	opt stack 0
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           prodh	equ	0xFF4
  1912                           prodl	equ	0xFF3
  1913                           intcon	equ	0xFF2
  1914                           postinc0	equ	0xFEE
  1915                           wreg	equ	0xFE8
  1916                           indf2	equ	0xFDF
  1917                           postinc2	equ	0xFDE
  1918                           fsr2h	equ	0xFDA
  1919                           fsr2l	equ	0xFD9
  1920                           status	equ	0xFD8
  1921                           
  1922 ;; *************** function _printf *****************
  1923 ;; Defined at:
  1924 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  f               2   27[COMRAM] PTR const unsigned char 
  1927 ;;		 -> STR_28(3), STR_27(288), STR_26(3), STR_24(3), 
  1928 ;;		 -> STR_23(28), STR_22(3), STR_19(4), STR_18(5), 
  1929 ;;		 -> STR_16(4), STR_15(5), STR_13(3), STR_12(14), 
  1930 ;;		 -> STR_11(3), STR_9(3), STR_8(18), STR_7(3), 
  1931 ;;		 -> STR_5(3), STR_4(174), STR_3(4), STR_2(5), 
  1932 ;;		 -> STR_1(4), 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  tmpval          4    0        struct .
  1935 ;;  cp              3    0        PTR const unsigned char 
  1936 ;;  ap              2   29[COMRAM] PTR void [1]
  1937 ;;		 -> ?i2_printf(2), ?_printf(2), 
  1938 ;;  len             2    0        unsigned int 
  1939 ;;  val             2    0        unsigned int 
  1940 ;;  c               1   31[COMRAM] char 
  1941 ;;  flag            1    0        unsigned char 
  1942 ;;  prec            1    0        char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  2   27[COMRAM] int 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1953 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;Total ram usage:        5 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    7
  1959 ;; This function calls:
  1960 ;;		_putch
  1961 ;; This function is called by:
  1962 ;;		_printResetMessage
  1963 ;;		_ringBufferLUT
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text7
  1968  0105F8                     __ptext7:
  1969                           	opt stack 0
  1970  0105F8                     _printf:
  1971                           	opt stack 21
  1972                           
  1973                           ;doprnt.c: 466: va_list ap;
  1974                           ;doprnt.c: 499: signed char c;
  1975                           ;doprnt.c: 506: signed char prec;
  1976                           ;doprnt.c: 508: unsigned char flag;
  1977                           ;doprnt.c: 523: union {
  1978                           ;doprnt.c: 524: unsigned long vd;
  1979                           ;doprnt.c: 525: double integ;
  1980                           ;doprnt.c: 526: } tmpval;
  1981                           ;doprnt.c: 528: unsigned int val;
  1982                           ;doprnt.c: 529: unsigned len;
  1983                           ;doprnt.c: 530: const char * cp;
  1984                           ;doprnt.c: 533: *ap = __va_start();
  1985                           
  1986                           ;incstack = 0
  1987  0105F8  0E1E               	movlw	low (?_printf+2)
  1988  0105FA  6E1E               	movwf	printf@ap,c
  1989  0105FC  0E00               	movlw	high (?_printf+2)
  1990  0105FE  6E1F               	movwf	printf@ap+1,c
  1991                           
  1992                           ;doprnt.c: 536: while(c = *f++) {
  1993  010600  D003               	goto	l360
  1994  010602                     
  1995                           ;doprnt.c: 540: {
  1996                           ;doprnt.c: 541: (putch(c) );
  1997  010602  5020               	movf	printf@c,w,c
  1998  010604  EC69  F083         	call	_putch
  1999  010608                     l360:
  2000  010608  C01C  FFF6         	movff	printf@f,tblptrl
  2001  01060C  C01D  FFF7         	movff	printf@f+1,tblptrh
  2002  010610  4A1C               	infsnz	printf@f,f,c
  2003  010612  2A1D               	incf	printf@f+1,f,c
  2004  010614                     	if	0	;tblptru may be non-zero
  2005  010614                     	endif
  2006  010614                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2007  010614  0E00               	movlw	low (__mediumconst shr (0+16))
  2008  010616  6EF8               	movwf	tblptru,c
  2009  010618                     	endif
  2010  010618  0008               	tblrd		*
  2011  01061A  CFF5 F020          	movff	tablat,printf@c
  2012  01061E  5020               	movf	printf@c,w,c
  2013  010620  B4D8               	btfsc	status,2,c
  2014  010622  0012               	return	
  2015  010624  D7EE               	goto	l361
  2016  010626                     __end_of_printf:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           prodh	equ	0xFF4
  2023                           prodl	equ	0xFF3
  2024                           intcon	equ	0xFF2
  2025                           postinc0	equ	0xFEE
  2026                           wreg	equ	0xFE8
  2027                           indf2	equ	0xFDF
  2028                           postinc2	equ	0xFDE
  2029                           fsr2h	equ	0xFDA
  2030                           fsr2l	equ	0xFD9
  2031                           status	equ	0xFD8
  2032                           
  2033 ;; *************** function _putch *****************
  2034 ;; Defined at:
  2035 ;;		line 178 in file "mcc_generated_files/eusart2.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  txData          1    wreg     unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  txData          1   26[COMRAM] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2053 ;;Total ram usage:        1 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    6
  2056 ;; This function calls:
  2057 ;;		_EUSART2_Write
  2058 ;; This function is called by:
  2059 ;;		_printf
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text8
  2064  0106D2                     __ptext8:
  2065                           	opt stack 0
  2066  0106D2                     _putch:
  2067                           	opt stack 21
  2068                           
  2069                           ;incstack = 0
  2070                           ;putch@txData stored from wreg
  2071  0106D2  6E1B               	movwf	putch@txData,c
  2072                           
  2073                           ;eusart2.c: 180: EUSART2_Write(txData);
  2074  0106D4  501B               	movf	putch@txData,w,c
  2075  0106D6  EC3F  F082         	call	_EUSART2_Write
  2076  0106DA  0012               	return		;funcret
  2077  0106DC                     __end_of_putch:
  2078                           	opt stack 0
  2079                           tblptru	equ	0xFF8
  2080                           tblptrh	equ	0xFF7
  2081                           tblptrl	equ	0xFF6
  2082                           tablat	equ	0xFF5
  2083                           prodh	equ	0xFF4
  2084                           prodl	equ	0xFF3
  2085                           intcon	equ	0xFF2
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           indf2	equ	0xFDF
  2089                           postinc2	equ	0xFDE
  2090                           fsr2h	equ	0xFDA
  2091                           fsr2l	equ	0xFD9
  2092                           status	equ	0xFD8
  2093                           
  2094 ;; *************** function _EUSART2_Write *****************
  2095 ;; Defined at:
  2096 ;;		line 150 in file "mcc_generated_files/eusart2.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  txData          1    wreg     unsigned char 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  txData          1   25[COMRAM] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;Total ram usage:        1 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    5
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_putch
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text9
  2125  01047E                     __ptext9:
  2126                           	opt stack 0
  2127  01047E                     _EUSART2_Write:
  2128                           	opt stack 21
  2129                           
  2130                           ;incstack = 0
  2131                           ;EUSART2_Write@txData stored from wreg
  2132  01047E  6E1A               	movwf	EUSART2_Write@txData,c
  2133  010480                     
  2134                           ;eusart2.c: 153: {
  2135                           
  2136                           ;eusart2.c: 152: while(0 == eusart2TxBufferRemaining)
  2137  010480  5032               	movf	_eusart2TxBufferRemaining,w,c	;volatile
  2138  010482  B4D8               	btfsc	status,2,c
  2139  010484  D7FD               	goto	l1323
  2140                           
  2141                           ;eusart2.c: 154: }
  2142                           ;eusart2.c: 156: if(0 == PIE3bits.TX2IE)
  2143  010486  010E               	movlb	14	; () banked
  2144  010488  BD2C               	btfsc	44,6,b	;volatile
  2145  01048A  D003               	goto	l187
  2146                           
  2147                           ; BSR set to: 14
  2148                           ;eusart2.c: 157: {
  2149                           ;eusart2.c: 158: TX2REG = txData;
  2150  01048C  C01A  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
  2151                           
  2152                           ;eusart2.c: 159: }
  2153  010490  D012               	goto	l188
  2154  010492                     l187:
  2155                           
  2156                           ; BSR set to: 14
  2157                           ;eusart2.c: 160: else
  2158                           ;eusart2.c: 161: {
  2159                           ;eusart2.c: 162: PIE3bits.TX2IE = 0;
  2160  010492  9D2C               	bcf	44,6,b	;volatile
  2161                           
  2162                           ; BSR set to: 14
  2163                           ;eusart2.c: 163: eusart2TxBuffer[eusart2TxHead++] = txData;
  2164  010494  5038               	movf	_eusart2TxHead,w,c	;volatile
  2165  010496  0D01               	mullw	1
  2166  010498  0E00               	movlw	low _eusart2TxBuffer
  2167  01049A  24F3               	addwf	prodl,w,c
  2168  01049C  6ED9               	movwf	fsr2l,c
  2169  01049E  0E01               	movlw	high _eusart2TxBuffer
  2170  0104A0  20F4               	addwfc	prodh,w,c
  2171  0104A2  6EDA               	movwf	fsr2h,c
  2172  0104A4  C01A  FFDF         	movff	EUSART2_Write@txData,indf2
  2173                           
  2174                           ; BSR set to: 14
  2175  0104A8  2A38               	incf	_eusart2TxHead,f,c	;volatile
  2176                           
  2177                           ; BSR set to: 14
  2178                           ;eusart2.c: 164: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  2179  0104AA  0E3F               	movlw	63
  2180  0104AC  6438               	cpfsgt	_eusart2TxHead,c	;volatile
  2181  0104AE  D002               	goto	l189
  2182                           
  2183                           ; BSR set to: 14
  2184                           ;eusart2.c: 165: {
  2185                           ;eusart2.c: 166: eusart2TxHead = 0;
  2186  0104B0  0E00               	movlw	0
  2187  0104B2  6E38               	movwf	_eusart2TxHead,c	;volatile
  2188  0104B4                     l189:
  2189                           
  2190                           ; BSR set to: 14
  2191                           ;eusart2.c: 167: }
  2192                           ;eusart2.c: 168: eusart2TxBufferRemaining--;
  2193                           
  2194                           ; BSR set to: 14
  2195  0104B4  0632               	decf	_eusart2TxBufferRemaining,f,c	;volatile
  2196  0104B6                     l188:
  2197                           
  2198                           ; BSR set to: 14
  2199                           ;eusart2.c: 169: }
  2200                           ;eusart2.c: 170: PIE3bits.TX2IE = 1;
  2201                           
  2202                           ; BSR set to: 14
  2203  0104B6  8D2C               	bsf	44,6,b	;volatile
  2204                           
  2205                           ; BSR set to: 14
  2206  0104B8  0012               	return		;funcret
  2207  0104BA                     __end_of_EUSART2_Write:
  2208                           	opt stack 0
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           prodh	equ	0xFF4
  2214                           prodl	equ	0xFF3
  2215                           intcon	equ	0xFF2
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           indf2	equ	0xFDF
  2219                           postinc2	equ	0xFDE
  2220                           fsr2h	equ	0xFDA
  2221                           fsr2l	equ	0xFD9
  2222                           status	equ	0xFD8
  2223                           
  2224 ;; *************** function _SYSTEM_Initialize *****************
  2225 ;; Defined at:
  2226 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;Total ram usage:        0 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    7
  2247 ;; This function calls:
  2248 ;;		_EUSART2_Initialize
  2249 ;;		_INTERRUPT_Initialize
  2250 ;;		_OSCILLATOR_Initialize
  2251 ;;		_PIN_MANAGER_Initialize
  2252 ;;		_PMD_Initialize
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text10
  2259  0106A0                     __ptext10:
  2260                           	opt stack 0
  2261  0106A0                     _SYSTEM_Initialize:
  2262                           	opt stack 23
  2263                           
  2264                           ;mcc.c: 52: INTERRUPT_Initialize();
  2265                           
  2266                           ; BSR set to: 14
  2267                           ;incstack = 0
  2268  0106A0  EC6E  F083         	call	_INTERRUPT_Initialize	;wreg free
  2269                           
  2270                           ;mcc.c: 53: PMD_Initialize();
  2271  0106A4  EC2A  F083         	call	_PMD_Initialize	;wreg free
  2272                           
  2273                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2274  0106A8  ECA1  F081         	call	_PIN_MANAGER_Initialize	;wreg free
  2275                           
  2276                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2277  0106AC  EC44  F083         	call	_OSCILLATOR_Initialize	;wreg free
  2278                           
  2279                           ;mcc.c: 56: EUSART2_Initialize();
  2280  0106B0  ECEC  F081         	call	_EUSART2_Initialize	;wreg free
  2281  0106B4  0012               	return		;funcret
  2282  0106B6                     __end_of_SYSTEM_Initialize:
  2283                           	opt stack 0
  2284                           tblptru	equ	0xFF8
  2285                           tblptrh	equ	0xFF7
  2286                           tblptrl	equ	0xFF6
  2287                           tablat	equ	0xFF5
  2288                           prodh	equ	0xFF4
  2289                           prodl	equ	0xFF3
  2290                           intcon	equ	0xFF2
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           indf2	equ	0xFDF
  2294                           postinc2	equ	0xFDE
  2295                           fsr2h	equ	0xFDA
  2296                           fsr2l	equ	0xFD9
  2297                           status	equ	0xFD8
  2298                           
  2299 ;; *************** function _PMD_Initialize *****************
  2300 ;; Defined at:
  2301 ;;		line 73 in file "mcc_generated_files/mcc.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    5
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_SYSTEM_Initialize
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text11
  2330  010654                     __ptext11:
  2331                           	opt stack 0
  2332  010654                     _PMD_Initialize:
  2333                           	opt stack 24
  2334                           
  2335                           ;mcc.c: 76: PMD0 = 0x00;
  2336                           
  2337                           ;incstack = 0
  2338  010654  0E00               	movlw	0
  2339  010656  010E               	movlb	14	; () banked
  2340  010658  6F4C               	movwf	76,b	;volatile
  2341                           
  2342                           ;mcc.c: 78: PMD1 = 0x00;
  2343  01065A  0E00               	movlw	0
  2344  01065C  6F4D               	movwf	77,b	;volatile
  2345                           
  2346                           ;mcc.c: 80: PMD2 = 0x00;
  2347  01065E  0E00               	movlw	0
  2348  010660  6F4E               	movwf	78,b	;volatile
  2349                           
  2350                           ;mcc.c: 82: PMD3 = 0x00;
  2351  010662  0E00               	movlw	0
  2352  010664  6F4F               	movwf	79,b	;volatile
  2353                           
  2354                           ;mcc.c: 84: PMD4 = 0x00;
  2355  010666  0E00               	movlw	0
  2356  010668  6F50               	movwf	80,b	;volatile
  2357                           
  2358                           ;mcc.c: 86: PMD5 = 0x00;
  2359  01066A  0E00               	movlw	0
  2360  01066C  6F51               	movwf	81,b	;volatile
  2361                           
  2362                           ; BSR set to: 14
  2363  01066E  0012               	return		;funcret
  2364  010670                     __end_of_PMD_Initialize:
  2365                           	opt stack 0
  2366                           tblptru	equ	0xFF8
  2367                           tblptrh	equ	0xFF7
  2368                           tblptrl	equ	0xFF6
  2369                           tablat	equ	0xFF5
  2370                           prodh	equ	0xFF4
  2371                           prodl	equ	0xFF3
  2372                           intcon	equ	0xFF2
  2373                           postinc0	equ	0xFEE
  2374                           wreg	equ	0xFE8
  2375                           indf2	equ	0xFDF
  2376                           postinc2	equ	0xFDE
  2377                           fsr2h	equ	0xFDA
  2378                           fsr2l	equ	0xFD9
  2379                           status	equ	0xFD8
  2380                           
  2381 ;; *************** function _PIN_MANAGER_Initialize *****************
  2382 ;; Defined at:
  2383 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    5
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_SYSTEM_Initialize
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text12
  2412  010342                     __ptext12:
  2413                           	opt stack 0
  2414  010342                     _PIN_MANAGER_Initialize:
  2415                           	opt stack 24
  2416                           
  2417                           ;pin_manager.c: 62: LATE = 0x00;
  2418                           
  2419                           ; BSR set to: 14
  2420                           ;incstack = 0
  2421  010342  0E00               	movlw	0
  2422  010344  6E7D               	movwf	3965,c	;volatile
  2423                           
  2424                           ;pin_manager.c: 63: LATD = 0x00;
  2425  010346  0E00               	movlw	0
  2426  010348  6E7C               	movwf	3964,c	;volatile
  2427                           
  2428                           ;pin_manager.c: 64: LATA = 0x00;
  2429  01034A  0E00               	movlw	0
  2430  01034C  6E79               	movwf	3961,c	;volatile
  2431                           
  2432                           ;pin_manager.c: 65: LATF = 0x00;
  2433  01034E  0E00               	movlw	0
  2434  010350  6E7E               	movwf	3966,c	;volatile
  2435                           
  2436                           ;pin_manager.c: 66: LATB = 0x00;
  2437  010352  0E00               	movlw	0
  2438  010354  6E7A               	movwf	3962,c	;volatile
  2439                           
  2440                           ;pin_manager.c: 67: LATG = 0x00;
  2441  010356  0E00               	movlw	0
  2442  010358  6E7F               	movwf	3967,c	;volatile
  2443                           
  2444                           ;pin_manager.c: 68: LATC = 0x00;
  2445  01035A  0E00               	movlw	0
  2446  01035C  6E7B               	movwf	3963,c	;volatile
  2447                           
  2448                           ;pin_manager.c: 69: LATH = 0x00;
  2449  01035E  0E00               	movlw	0
  2450  010360  6E80               	movwf	3968,c	;volatile
  2451                           
  2452                           ;pin_manager.c: 74: TRISE = 0xFF;
  2453  010362  6885               	setf	3973,c	;volatile
  2454                           
  2455                           ;pin_manager.c: 75: TRISF = 0xFF;
  2456  010364  6886               	setf	3974,c	;volatile
  2457                           
  2458                           ;pin_manager.c: 76: TRISA = 0xFF;
  2459  010366  6881               	setf	3969,c	;volatile
  2460                           
  2461                           ;pin_manager.c: 77: TRISG = 0x5F;
  2462  010368  0E5F               	movlw	95
  2463  01036A  6E87               	movwf	3975,c	;volatile
  2464                           
  2465                           ;pin_manager.c: 78: TRISB = 0xFF;
  2466  01036C  6882               	setf	3970,c	;volatile
  2467                           
  2468                           ;pin_manager.c: 79: TRISH = 0x0F;
  2469  01036E  0E0F               	movlw	15
  2470  010370  6E88               	movwf	3976,c	;volatile
  2471                           
  2472                           ;pin_manager.c: 80: TRISC = 0xFF;
  2473  010372  6883               	setf	3971,c	;volatile
  2474                           
  2475                           ;pin_manager.c: 81: TRISD = 0xFF;
  2476  010374  6884               	setf	3972,c	;volatile
  2477                           
  2478                           ;pin_manager.c: 86: ANSELD = 0xFF;
  2479  010376  010E               	movlb	14	; () banked
  2480  010378  69A7               	setf	167,b	;volatile
  2481                           
  2482                           ; BSR set to: 14
  2483                           ;pin_manager.c: 87: ANSELB = 0xFF;
  2484  01037A  699A               	setf	154,b	;volatile
  2485                           
  2486                           ; BSR set to: 14
  2487                           ;pin_manager.c: 88: ANSELE = 0xFF;
  2488  01037C  69AF               	setf	175,b	;volatile
  2489                           
  2490                           ;pin_manager.c: 89: ANSELG = 0xBF;
  2491  01037E  0EBF               	movlw	191
  2492  010380  6FBC               	movwf	188,b	;volatile
  2493                           
  2494                           ; BSR set to: 14
  2495                           ;pin_manager.c: 90: ANSELF = 0xFF;
  2496  010382  69B4               	setf	180,b	;volatile
  2497                           
  2498                           ; BSR set to: 14
  2499                           ;pin_manager.c: 91: ANSELA = 0xFF;
  2500  010384  6992               	setf	146,b	;volatile
  2501                           
  2502                           ;pin_manager.c: 96: WPUD = 0x00;
  2503  010386  0E00               	movlw	0
  2504  010388  6FA6               	movwf	166,b	;volatile
  2505                           
  2506                           ;pin_manager.c: 97: WPUF = 0x00;
  2507  01038A  0E00               	movlw	0
  2508  01038C  6FB3               	movwf	179,b	;volatile
  2509                           
  2510                           ;pin_manager.c: 98: WPUE = 0x00;
  2511  01038E  0E00               	movlw	0
  2512  010390  6FAE               	movwf	174,b	;volatile
  2513                           
  2514                           ;pin_manager.c: 99: WPUB = 0x00;
  2515  010392  0E00               	movlw	0
  2516  010394  6F99               	movwf	153,b	;volatile
  2517                           
  2518                           ;pin_manager.c: 100: WPUG = 0x00;
  2519  010396  0E00               	movlw	0
  2520  010398  6FBB               	movwf	187,b	;volatile
  2521                           
  2522                           ;pin_manager.c: 101: WPUA = 0x00;
  2523  01039A  0E00               	movlw	0
  2524  01039C  6F91               	movwf	145,b	;volatile
  2525                           
  2526                           ;pin_manager.c: 102: WPUC = 0x00;
  2527  01039E  0E00               	movlw	0
  2528  0103A0  6FA1               	movwf	161,b	;volatile
  2529                           
  2530                           ;pin_manager.c: 103: WPUH = 0x00;
  2531  0103A2  0E00               	movlw	0
  2532  0103A4  6FC0               	movwf	192,b	;volatile
  2533                           
  2534                           ;pin_manager.c: 108: ODCONE = 0x00;
  2535  0103A6  0E00               	movlw	0
  2536  0103A8  6FAD               	movwf	173,b	;volatile
  2537                           
  2538                           ;pin_manager.c: 109: ODCONF = 0x00;
  2539  0103AA  0E00               	movlw	0
  2540  0103AC  6FB2               	movwf	178,b	;volatile
  2541                           
  2542                           ;pin_manager.c: 110: ODCONA = 0x00;
  2543  0103AE  0E00               	movlw	0
  2544  0103B0  6F90               	movwf	144,b	;volatile
  2545                           
  2546                           ;pin_manager.c: 111: ODCONG = 0x00;
  2547  0103B2  0E00               	movlw	0
  2548  0103B4  6FBA               	movwf	186,b	;volatile
  2549                           
  2550                           ;pin_manager.c: 112: ODCONB = 0x00;
  2551  0103B6  0E00               	movlw	0
  2552  0103B8  6F98               	movwf	152,b	;volatile
  2553                           
  2554                           ;pin_manager.c: 113: ODCONH = 0x00;
  2555  0103BA  0E00               	movlw	0
  2556  0103BC  6FBF               	movwf	191,b	;volatile
  2557                           
  2558                           ;pin_manager.c: 114: ODCONC = 0x00;
  2559  0103BE  0E00               	movlw	0
  2560  0103C0  6FA0               	movwf	160,b	;volatile
  2561                           
  2562                           ;pin_manager.c: 115: ODCOND = 0x00;
  2563  0103C2  0E00               	movlw	0
  2564  0103C4  6FA5               	movwf	165,b	;volatile
  2565                           
  2566                           ;pin_manager.c: 124: RG7PPS = 0x0E;
  2567  0103C6  0E0E               	movlw	14
  2568  0103C8  6F89               	movwf	137,b	;volatile
  2569                           
  2570                           ; BSR set to: 14
  2571                           ;pin_manager.c: 125: RX2PPSbits.RX2PPS = 0x36;
  2572  0103CA  9111               	bcf	17,0,b	;volatile
  2573  0103CC  8311               	bsf	17,1,b	;volatile
  2574  0103CE  8511               	bsf	17,2,b	;volatile
  2575  0103D0  9711               	bcf	17,3,b	;volatile
  2576  0103D2  8911               	bsf	17,4,b	;volatile
  2577  0103D4  8B11               	bsf	17,5,b	;volatile
  2578                           
  2579                           ; BSR set to: 14
  2580  0103D6  0012               	return		;funcret
  2581  0103D8                     __end_of_PIN_MANAGER_Initialize:
  2582                           	opt stack 0
  2583                           tblptru	equ	0xFF8
  2584                           tblptrh	equ	0xFF7
  2585                           tblptrl	equ	0xFF6
  2586                           tablat	equ	0xFF5
  2587                           prodh	equ	0xFF4
  2588                           prodl	equ	0xFF3
  2589                           intcon	equ	0xFF2
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           indf2	equ	0xFDF
  2593                           postinc2	equ	0xFDE
  2594                           fsr2h	equ	0xFDA
  2595                           fsr2l	equ	0xFD9
  2596                           status	equ	0xFD8
  2597                           
  2598 ;; *************** function _OSCILLATOR_Initialize *****************
  2599 ;; Defined at:
  2600 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;Total ram usage:        0 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    5
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_SYSTEM_Initialize
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text13
  2629  010688                     __ptext13:
  2630                           	opt stack 0
  2631  010688                     _OSCILLATOR_Initialize:
  2632                           	opt stack 24
  2633                           
  2634                           ;mcc.c: 62: OSCCON1 = 0x60;
  2635                           
  2636                           ; BSR set to: 14
  2637                           ;incstack = 0
  2638  010688  0E60               	movlw	96
  2639  01068A  010E               	movlb	14	; () banked
  2640  01068C  6F43               	movwf	67,b	;volatile
  2641                           
  2642                           ;mcc.c: 64: OSCCON3 = 0x00;
  2643  01068E  0E00               	movlw	0
  2644  010690  6F45               	movwf	69,b	;volatile
  2645                           
  2646                           ;mcc.c: 66: OSCEN = 0x00;
  2647  010692  0E00               	movlw	0
  2648  010694  6F47               	movwf	71,b	;volatile
  2649                           
  2650                           ;mcc.c: 68: OSCFRQ = 0x08;
  2651  010696  0E08               	movlw	8
  2652  010698  6F49               	movwf	73,b	;volatile
  2653                           
  2654                           ;mcc.c: 70: OSCTUNE = 0x00;
  2655  01069A  0E00               	movlw	0
  2656  01069C  6F48               	movwf	72,b	;volatile
  2657                           
  2658                           ; BSR set to: 14
  2659  01069E  0012               	return		;funcret
  2660  0106A0                     __end_of_OSCILLATOR_Initialize:
  2661                           	opt stack 0
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           prodh	equ	0xFF4
  2667                           prodl	equ	0xFF3
  2668                           intcon	equ	0xFF2
  2669                           postinc0	equ	0xFEE
  2670                           wreg	equ	0xFE8
  2671                           indf2	equ	0xFDF
  2672                           postinc2	equ	0xFDE
  2673                           fsr2h	equ	0xFDA
  2674                           fsr2l	equ	0xFD9
  2675                           status	equ	0xFD8
  2676                           
  2677 ;; *************** function _INTERRUPT_Initialize *****************
  2678 ;; Defined at:
  2679 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		None
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    5
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_SYSTEM_Initialize
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text14
  2708  0106DC                     __ptext14:
  2709                           	opt stack 0
  2710  0106DC                     _INTERRUPT_Initialize:
  2711                           	opt stack 24
  2712                           
  2713                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
  2714                           
  2715                           ; BSR set to: 14
  2716                           ;incstack = 0
  2717  0106DC  8AF2               	bsf	intcon,5,c	;volatile
  2718                           
  2719                           ;interrupt_manager.c: 60: IPR3bits.TX2IP = 1;
  2720  0106DE  010E               	movlb	14	; () banked
  2721  0106E0  8D22               	bsf	34,6,b	;volatile
  2722                           
  2723                           ;interrupt_manager.c: 63: IPR3bits.RC2IP = 1;
  2724  0106E2  8F22               	bsf	34,7,b	;volatile
  2725                           
  2726                           ; BSR set to: 14
  2727  0106E4  0012               	return		;funcret
  2728  0106E6                     __end_of_INTERRUPT_Initialize:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           prodh	equ	0xFF4
  2735                           prodl	equ	0xFF3
  2736                           intcon	equ	0xFF2
  2737                           postinc0	equ	0xFEE
  2738                           wreg	equ	0xFE8
  2739                           indf2	equ	0xFDF
  2740                           postinc2	equ	0xFDE
  2741                           fsr2h	equ	0xFDA
  2742                           fsr2l	equ	0xFD9
  2743                           status	equ	0xFD8
  2744                           
  2745 ;; *************** function _EUSART2_Initialize *****************
  2746 ;; Defined at:
  2747 ;;		line 77 in file "mcc_generated_files/eusart2.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;Total ram usage:        0 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    6
  2768 ;; This function calls:
  2769 ;;		_EUSART2_SetRxInterruptHandler
  2770 ;;		_EUSART2_SetTxInterruptHandler
  2771 ;; This function is called by:
  2772 ;;		_SYSTEM_Initialize
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text15
  2777  0103D8                     __ptext15:
  2778                           	opt stack 0
  2779  0103D8                     _EUSART2_Initialize:
  2780                           	opt stack 23
  2781                           
  2782                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
  2783                           
  2784                           ; BSR set to: 14
  2785                           ;incstack = 0
  2786  0103D8  010E               	movlb	14	; () banked
  2787  0103DA  9F2C               	bcf	44,7,b	;volatile
  2788                           
  2789                           ; BSR set to: 14
  2790                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
  2791  0103DC  0EA8               	movlw	low _EUSART2_Receive_ISR
  2792  0103DE  6E1A               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler,c
  2793  0103E0  0E02               	movlw	high _EUSART2_Receive_ISR
  2794  0103E2  6E1B               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1,c
  2795  0103E4  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
  2796  0103E6  6E1C               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+2,c
  2797  0103E8  EC62  F083         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  2798                           
  2799                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
  2800  0103EC  010E               	movlb	14	; () banked
  2801  0103EE  9D2C               	bcf	44,6,b	;volatile
  2802                           
  2803                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
  2804  0103F0  0E98               	movlw	low _EUSART2_Transmit_ISR
  2805  0103F2  6E1A               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler,c
  2806  0103F4  0E05               	movlw	high _EUSART2_Transmit_ISR
  2807  0103F6  6E1B               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1,c
  2808  0103F8  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
  2809  0103FA  6E1C               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+2,c
  2810  0103FC  EC5B  F083         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  2811                           
  2812                           ;eusart2.c: 87: BAUD2CON = 0x08;
  2813  010400  0E08               	movlw	8
  2814  010402  010E               	movlb	14	; () banked
  2815  010404  6FF7               	movwf	247,b	;volatile
  2816                           
  2817                           ; BSR set to: 14
  2818                           ;eusart2.c: 90: RC2STA = 0x90;
  2819  010406  0E90               	movlw	144
  2820  010408  6FF5               	movwf	245,b	;volatile
  2821                           
  2822                           ; BSR set to: 14
  2823                           ;eusart2.c: 93: TX2STA = 0x24;
  2824  01040A  0E24               	movlw	36
  2825  01040C  6FF6               	movwf	246,b	;volatile
  2826                           
  2827                           ; BSR set to: 14
  2828                           ;eusart2.c: 96: SP2BRGL = 0x8A;
  2829  01040E  0E8A               	movlw	138
  2830  010410  6FF3               	movwf	243,b	;volatile
  2831                           
  2832                           ; BSR set to: 14
  2833                           ;eusart2.c: 99: SP2BRGH = 0x00;
  2834  010412  0E00               	movlw	0
  2835  010414  6FF4               	movwf	244,b	;volatile
  2836                           
  2837                           ; BSR set to: 14
  2838                           ;eusart2.c: 103: eusart2TxHead = 0;
  2839  010416  0E00               	movlw	0
  2840  010418  6E38               	movwf	_eusart2TxHead,c	;volatile
  2841                           
  2842                           ; BSR set to: 14
  2843                           ;eusart2.c: 104: eusart2TxTail = 0;
  2844  01041A  0E00               	movlw	0
  2845  01041C  6E37               	movwf	_eusart2TxTail,c	;volatile
  2846                           
  2847                           ; BSR set to: 14
  2848                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
  2849  01041E  0E40               	movlw	64
  2850  010420  6E32               	movwf	_eusart2TxBufferRemaining,c	;volatile
  2851                           
  2852                           ; BSR set to: 14
  2853                           ;eusart2.c: 107: eusart2RxHead = 0;
  2854  010422  0E00               	movlw	0
  2855  010424  6E36               	movwf	_eusart2RxHead,c	;volatile
  2856                           
  2857                           ; BSR set to: 14
  2858                           ;eusart2.c: 108: eusart2RxTail = 0;
  2859  010426  0E00               	movlw	0
  2860  010428  6E35               	movwf	_eusart2RxTail,c	;volatile
  2861                           
  2862                           ; BSR set to: 14
  2863                           ;eusart2.c: 109: eusart2RxCount = 0;
  2864  01042A  0E00               	movlw	0
  2865  01042C  6E34               	movwf	_eusart2RxCount,c	;volatile
  2866                           
  2867                           ; BSR set to: 14
  2868                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
  2869  01042E  8F2C               	bsf	44,7,b	;volatile
  2870                           
  2871                           ; BSR set to: 14
  2872  010430  0012               	return		;funcret
  2873  010432                     __end_of_EUSART2_Initialize:
  2874                           	opt stack 0
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           prodh	equ	0xFF4
  2880                           prodl	equ	0xFF3
  2881                           intcon	equ	0xFF2
  2882                           postinc0	equ	0xFEE
  2883                           wreg	equ	0xFE8
  2884                           indf2	equ	0xFDF
  2885                           postinc2	equ	0xFDE
  2886                           fsr2h	equ	0xFDA
  2887                           fsr2l	equ	0xFD9
  2888                           status	equ	0xFD8
  2889                           
  2890 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  2891 ;; Defined at:
  2892 ;;		line 258 in file "mcc_generated_files/eusart2.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  interruptHan    3   25[COMRAM] PTR FTN()void 
  2895 ;;		 -> EUSART2_Transmit_ISR(1), 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2907 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;Total ram usage:        3 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    5
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_EUSART2_Initialize
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text16
  2922  0106B6                     __ptext16:
  2923                           	opt stack 0
  2924  0106B6                     _EUSART2_SetTxInterruptHandler:
  2925                           	opt stack 23
  2926                           
  2927                           ;eusart2.c: 259: EUSART2_TxDefaultInterruptHandler = interruptHandler;
  2928                           
  2929                           ; BSR set to: 14
  2930                           ;incstack = 0
  2931  0106B6  C01A  F02F         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  2932  0106BA  C01B  F030         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  2933  0106BE  C01C  F031         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
  2934  0106C2  0012               	return		;funcret
  2935  0106C4                     __end_of_EUSART2_SetTxInterruptHandler:
  2936                           	opt stack 0
  2937                           tblptru	equ	0xFF8
  2938                           tblptrh	equ	0xFF7
  2939                           tblptrl	equ	0xFF6
  2940                           tablat	equ	0xFF5
  2941                           prodh	equ	0xFF4
  2942                           prodl	equ	0xFF3
  2943                           intcon	equ	0xFF2
  2944                           postinc0	equ	0xFEE
  2945                           wreg	equ	0xFE8
  2946                           indf2	equ	0xFDF
  2947                           postinc2	equ	0xFDE
  2948                           fsr2h	equ	0xFDA
  2949                           fsr2l	equ	0xFD9
  2950                           status	equ	0xFD8
  2951                           
  2952 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  2953 ;; Defined at:
  2954 ;;		line 262 in file "mcc_generated_files/eusart2.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  interruptHan    3   25[COMRAM] PTR FTN()void 
  2957 ;;		 -> EUSART2_Receive_ISR(1), 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2969 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2972 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;Total ram usage:        3 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    5
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_EUSART2_Initialize
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text17
  2984  0106C4                     __ptext17:
  2985                           	opt stack 0
  2986  0106C4                     _EUSART2_SetRxInterruptHandler:
  2987                           	opt stack 23
  2988                           
  2989                           ;eusart2.c: 263: EUSART2_RxDefaultInterruptHandler = interruptHandler;
  2990                           
  2991                           ;incstack = 0
  2992  0106C4  C01A  F02C         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  2993  0106C8  C01B  F02D         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  2994  0106CC  C01C  F02E         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
  2995  0106D0  0012               	return		;funcret
  2996  0106D2                     __end_of_EUSART2_SetRxInterruptHandler:
  2997                           	opt stack 0
  2998                           tblptru	equ	0xFF8
  2999                           tblptrh	equ	0xFF7
  3000                           tblptrl	equ	0xFF6
  3001                           tablat	equ	0xFF5
  3002                           prodh	equ	0xFF4
  3003                           prodl	equ	0xFF3
  3004                           intcon	equ	0xFF2
  3005                           postinc0	equ	0xFEE
  3006                           wreg	equ	0xFE8
  3007                           indf2	equ	0xFDF
  3008                           postinc2	equ	0xFDE
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  3014 ;; Defined at:
  3015 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;Total ram usage:       18 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    4
  3036 ;; This function calls:
  3037 ;;		Absolute function
  3038 ;;		_EUSART2_Receive_ISR
  3039 ;;		_EUSART2_Transmit_ISR
  3040 ;; This function is called by:
  3041 ;;		Interrupt level 2
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	intcode
  3046  000008                     __pintcode:
  3047                           	opt stack 0
  3048  000008                     _INTERRUPT_InterruptManagerHigh:
  3049                           	opt stack 21
  3050                           
  3051                           ;incstack = 0
  3052  000008  8239               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3053  00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  3054  00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  3055  000012  CFE9 F00A          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  3056  000016  CFEA F00B          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  3057  00001A  CFE1 F00C          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  3058  00001E  CFE2 F00D          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  3059  000022  CFD9 F00E          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  3060  000026  CFDA F00F          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  3061  00002A  CFF3 F010          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  3062  00002E  CFF4 F011          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  3063  000032  CFF6 F012          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  3064  000036  CFF7 F013          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  3065  00003A  CFF8 F014          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  3066  00003E  CFF5 F015          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  3067  000042  C039  F016         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
  3068  000046  C03A  F017         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
  3069  00004A  C03B  F018         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
  3070  00004E  C03C  F019         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
  3071                           
  3072                           ;interrupt_manager.c: 71: if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  3073  000052  010E               	movlb	14	; () banked
  3074  000054  BD2C               	btfsc	44,6,b	;volatile
  3075                           
  3076                           ; BSR set to: 14
  3077  000056  AD36               	btfss	54,6,b	;volatile
  3078  000058  D00A               	goto	i2l106
  3079                           
  3080                           ; BSR set to: 14
  3081                           ;interrupt_manager.c: 72: {
  3082                           ;interrupt_manager.c: 73: EUSART2_TxDefaultInterruptHandler();
  3083  00005A  D801               	call	i2u76_48
  3084  00005C  D017               	goto	i2u79_49
  3085  00005E                     i2u76_48:
  3086  00005E  0005               	push	
  3087  000060  6EFA               	movwf	pclath,c
  3088  000062  502F               	movf	_EUSART2_TxDefaultInterruptHandler,w,c
  3089  000064  6EFD               	movwf	tosl,c
  3090  000066  5030               	movf	_EUSART2_TxDefaultInterruptHandler+1,w,c
  3091  000068  6EFE               	movwf	tosh,c
  3092  00006A  5031               	movf	_EUSART2_TxDefaultInterruptHandler+2,w,c
  3093  00006C  D00C               	goto	L1
  3094  00006E                     i2l106:
  3095                           
  3096                           ; BSR set to: 14
  3097                           ;interrupt_manager.c: 75: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
  3098  00006E  BF2C               	btfsc	44,7,b	;volatile
  3099                           
  3100                           ; BSR set to: 14
  3101  000070  AF36               	btfss	54,7,b	;volatile
  3102  000072  D00C               	goto	i2u79_49
  3103                           
  3104                           ; BSR set to: 14
  3105                           ;interrupt_manager.c: 76: {
  3106                           ;interrupt_manager.c: 77: EUSART2_RxDefaultInterruptHandler();
  3107  000074  D801               	call	i2u79_48
  3108  000076  D00A               	goto	i2u79_49
  3109  000078                     i2u79_48:
  3110  000078  0005               	push	
  3111  00007A  6EFA               	movwf	pclath,c
  3112  00007C  502C               	movf	_EUSART2_RxDefaultInterruptHandler,w,c
  3113  00007E  6EFD               	movwf	tosl,c
  3114  000080  502D               	movf	_EUSART2_RxDefaultInterruptHandler+1,w,c
  3115  000082  6EFE               	movwf	tosh,c
  3116  000084  502E               	movf	_EUSART2_RxDefaultInterruptHandler+2,w,c
  3117  000086                     L1:
  3118  000086  6EFF               	movwf	tosu,c
  3119  000088  50FA               	movf	pclath,w,c
  3120  00008A  0012               	return		;indir
  3121  00008C                     i2u79_49:
  3122                           
  3123                           ;interrupt_manager.c: 79: else
  3124                           ;interrupt_manager.c: 80: {
  3125                           
  3126                           ;interrupt_manager.c: 78: }
  3127  00008C  C019  F03C         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
  3128  000090  C018  F03B         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
  3129  000094  C017  F03A         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
  3130  000098  C016  F039         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
  3131  00009C  C015  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  3132  0000A0  C014  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  3133  0000A4  C013  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  3134  0000A8  C012  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  3135  0000AC  C011  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  3136  0000B0  C010  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  3137  0000B4  C00F  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  3138  0000B8  C00E  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  3139  0000BC  C00D  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  3140  0000C0  C00C  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  3141  0000C4  C00B  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  3142  0000C8  C00A  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  3143  0000CC  C009  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  3144  0000D0  C008  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  3145  0000D4  9239               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3146  0000D6  0011               	retfie		f
  3147  0000D8                     __end_of_INTERRUPT_InterruptManagerHigh:
  3148                           	opt stack 0
  3149                           tosu	equ	0xFFF
  3150                           tosh	equ	0xFFE
  3151                           tosl	equ	0xFFD
  3152                           pclatu	equ	0xFFB
  3153                           pclath	equ	0xFFA
  3154                           tblptru	equ	0xFF8
  3155                           tblptrh	equ	0xFF7
  3156                           tblptrl	equ	0xFF6
  3157                           tablat	equ	0xFF5
  3158                           prodh	equ	0xFF4
  3159                           prodl	equ	0xFF3
  3160                           intcon	equ	0xFF2
  3161                           postinc0	equ	0xFEE
  3162                           fsr0h	equ	0xFEA
  3163                           fsr0l	equ	0xFE9
  3164                           wreg	equ	0xFE8
  3165                           fsr1h	equ	0xFE2
  3166                           fsr1l	equ	0xFE1
  3167                           indf2	equ	0xFDF
  3168                           postinc2	equ	0xFDE
  3169                           fsr2h	equ	0xFDA
  3170                           fsr2l	equ	0xFD9
  3171                           status	equ	0xFD8
  3172                           
  3173 ;; *************** function _EUSART2_Transmit_ISR *****************
  3174 ;; Defined at:
  3175 ;;		line 183 in file "mcc_generated_files/eusart2.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;Total ram usage:        0 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_EUSART2_Initialize
  3199 ;;		_INTERRUPT_InterruptManagerHigh
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text19
  3204  010598                     __ptext19:
  3205                           	opt stack 0
  3206  010598                     _EUSART2_Transmit_ISR:
  3207                           	opt stack 24
  3208                           
  3209                           ;eusart2.c: 187: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
  3210                           
  3211                           ;incstack = 0
  3212  010598  0E40               	movlw	64
  3213  01059A  6032               	cpfslt	_eusart2TxBufferRemaining,c	;volatile
  3214  01059C  D013               	goto	i2l199
  3215                           
  3216                           ;eusart2.c: 188: {
  3217                           ;eusart2.c: 189: TX2REG = eusart2TxBuffer[eusart2TxTail++];
  3218  01059E  5037               	movf	_eusart2TxTail,w,c	;volatile
  3219  0105A0  0D01               	mullw	1
  3220  0105A2  0E00               	movlw	low _eusart2TxBuffer
  3221  0105A4  24F3               	addwf	prodl,w,c
  3222  0105A6  6ED9               	movwf	fsr2l,c
  3223  0105A8  0E01               	movlw	high _eusart2TxBuffer
  3224  0105AA  20F4               	addwfc	prodh,w,c
  3225  0105AC  6EDA               	movwf	fsr2h,c
  3226  0105AE  50DF               	movf	indf2,w,c
  3227  0105B0  010E               	movlb	14	; () banked
  3228  0105B2  6FF2               	movwf	242,b	;volatile
  3229                           
  3230                           ; BSR set to: 14
  3231  0105B4  2A37               	incf	_eusart2TxTail,f,c	;volatile
  3232                           
  3233                           ; BSR set to: 14
  3234                           ;eusart2.c: 190: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
  3235  0105B6  0E3F               	movlw	63
  3236  0105B8  6437               	cpfsgt	_eusart2TxTail,c	;volatile
  3237  0105BA  D002               	goto	i2l200
  3238                           
  3239                           ; BSR set to: 14
  3240                           ;eusart2.c: 191: {
  3241                           ;eusart2.c: 192: eusart2TxTail = 0;
  3242  0105BC  0E00               	movlw	0
  3243  0105BE  6E37               	movwf	_eusart2TxTail,c	;volatile
  3244  0105C0                     i2l200:
  3245                           
  3246                           ; BSR set to: 14
  3247                           ;eusart2.c: 193: }
  3248                           ;eusart2.c: 194: eusart2TxBufferRemaining++;
  3249                           
  3250                           ; BSR set to: 14
  3251  0105C0  2A32               	incf	_eusart2TxBufferRemaining,f,c	;volatile
  3252                           
  3253                           ;eusart2.c: 195: }
  3254  0105C2  0012               	return	
  3255  0105C4                     i2l199:
  3256                           
  3257                           ;eusart2.c: 196: else
  3258                           ;eusart2.c: 197: {
  3259                           ;eusart2.c: 198: PIE3bits.TX2IE = 0;
  3260  0105C4  010E               	movlb	14	; () banked
  3261  0105C6  9D2C               	bcf	44,6,b	;volatile
  3262  0105C8  0012               	return	
  3263  0105CA                     __end_of_EUSART2_Transmit_ISR:
  3264                           	opt stack 0
  3265                           tosu	equ	0xFFF
  3266                           tosh	equ	0xFFE
  3267                           tosl	equ	0xFFD
  3268                           pclatu	equ	0xFFB
  3269                           pclath	equ	0xFFA
  3270                           tblptru	equ	0xFF8
  3271                           tblptrh	equ	0xFF7
  3272                           tblptrl	equ	0xFF6
  3273                           tablat	equ	0xFF5
  3274                           prodh	equ	0xFF4
  3275                           prodl	equ	0xFF3
  3276                           intcon	equ	0xFF2
  3277                           postinc0	equ	0xFEE
  3278                           fsr0h	equ	0xFEA
  3279                           fsr0l	equ	0xFE9
  3280                           wreg	equ	0xFE8
  3281                           fsr1h	equ	0xFE2
  3282                           fsr1l	equ	0xFE1
  3283                           indf2	equ	0xFDF
  3284                           postinc2	equ	0xFDE
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _EUSART2_Receive_ISR *****************
  3290 ;; Defined at:
  3291 ;;		line 202 in file "mcc_generated_files/eusart2.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    3
  3312 ;; This function calls:
  3313 ;;		i2_printf
  3314 ;; This function is called by:
  3315 ;;		_EUSART2_Initialize
  3316 ;;		_INTERRUPT_InterruptManagerHigh
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text20
  3321  0102A8                     __ptext20:
  3322                           	opt stack 0
  3323  0102A8                     _EUSART2_Receive_ISR:
  3324                           	opt stack 21
  3325                           
  3326                           ;eusart2.c: 205: if(1 == RC2STAbits.OERR)
  3327                           
  3328                           ; BSR set to: 14
  3329                           ;incstack = 0
  3330  0102A8  010E               	movlb	14	; () banked
  3331  0102AA  A3F5               	btfss	245,1,b	;volatile
  3332  0102AC  D002               	goto	i2l205
  3333                           
  3334                           ; BSR set to: 14
  3335                           ;eusart2.c: 206: {
  3336                           ;eusart2.c: 209: RC2STAbits.CREN = 0;
  3337  0102AE  99F5               	bcf	245,4,b	;volatile
  3338                           
  3339                           ;eusart2.c: 210: RC2STAbits.CREN = 1;
  3340  0102B0  89F5               	bsf	245,4,b	;volatile
  3341  0102B2                     i2l205:
  3342                           
  3343                           ; BSR set to: 14
  3344                           ;eusart2.c: 211: }
  3345                           ;eusart2.c: 214: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  3346                           
  3347                           ; BSR set to: 14
  3348  0102B2  5036               	movf	_eusart2RxHead,w,c	;volatile
  3349  0102B4  0D01               	mullw	1
  3350  0102B6  0E60               	movlw	low _eusart2RxBuffer
  3351  0102B8  24F3               	addwf	prodl,w,c
  3352  0102BA  6ED9               	movwf	fsr2l,c
  3353  0102BC  0E00               	movlw	high _eusart2RxBuffer
  3354  0102BE  20F4               	addwfc	prodh,w,c
  3355  0102C0  6EDA               	movwf	fsr2h,c
  3356  0102C2  CEF1 FFDF          	movff	3825,indf2	;volatile
  3357                           
  3358                           ; BSR set to: 14
  3359  0102C6  2A36               	incf	_eusart2RxHead,f,c	;volatile
  3360                           
  3361                           ; BSR set to: 14
  3362                           ;eusart2.c: 215: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  3363  0102C8  0E3F               	movlw	63
  3364  0102CA  6436               	cpfsgt	_eusart2RxHead,c	;volatile
  3365  0102CC  D002               	goto	i2l206
  3366                           
  3367                           ; BSR set to: 14
  3368                           ;eusart2.c: 216: {
  3369                           ;eusart2.c: 217: eusart2RxHead = 0;
  3370  0102CE  0E00               	movlw	0
  3371  0102D0  6E36               	movwf	_eusart2RxHead,c	;volatile
  3372  0102D2                     i2l206:
  3373                           
  3374                           ; BSR set to: 14
  3375                           ;eusart2.c: 218: }
  3376                           ;eusart2.c: 219: eusart2RxCount++;
  3377                           
  3378                           ; BSR set to: 14
  3379  0102D2  2A34               	incf	_eusart2RxCount,f,c	;volatile
  3380                           
  3381                           ; BSR set to: 14
  3382                           ;eusart2.c: 221: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
  3383  0102D4  0E0A               	movlw	10
  3384  0102D6  19F1               	xorwf	241,w,b	;volatile
  3385  0102D8  B4D8               	btfsc	status,2,c
  3386  0102DA  D004               	goto	i2u66_40
  3387                           
  3388                           ; BSR set to: 14
  3389  0102DC  0E0D               	movlw	13
  3390  0102DE  19F1               	xorwf	241,w,b	;volatile
  3391  0102E0  A4D8               	btfss	status,2,c
  3392  0102E2  D005               	goto	i2l207
  3393  0102E4                     i2u66_40:
  3394                           
  3395                           ; BSR set to: 14
  3396                           ;eusart2.c: 223: eusart2RxStringReady = 1;
  3397                           
  3398                           ; BSR set to: 14
  3399  0102E4  0E01               	movlw	1
  3400  0102E6  6E33               	movwf	_eusart2RxStringReady,c	;volatile
  3401                           
  3402                           ;eusart2.c: 226: RC2REG = 0;
  3403  0102E8  0E00               	movlw	0
  3404  0102EA  6FF1               	movwf	241,b	;volatile
  3405                           
  3406                           ;eusart2.c: 228: }
  3407  0102EC  D002               	goto	i2l210
  3408  0102EE                     i2l207:
  3409                           
  3410                           ; BSR set to: 14
  3411                           ;eusart2.c: 230: else {
  3412                           ;eusart2.c: 232: eusart2RxStringReady = 0;
  3413                           
  3414                           ; BSR set to: 14
  3415  0102EE  0E00               	movlw	0
  3416  0102F0  6E33               	movwf	_eusart2RxStringReady,c	;volatile
  3417  0102F2                     i2l210:
  3418                           
  3419                           ; BSR set to: 14
  3420                           ;eusart2.c: 234: }
  3421                           ;eusart2.c: 237: if((RC2REG == (int) '\b')) {
  3422                           
  3423                           ; BSR set to: 14
  3424  0102F2  0E08               	movlw	8
  3425  0102F4  19F1               	xorwf	241,w,b	;volatile
  3426  0102F6  A4D8               	btfss	status,2,c
  3427  0102F8  0012               	return	
  3428                           
  3429                           ; BSR set to: 14
  3430                           ;eusart2.c: 239: eusart2RxBuffer[eusart2RxHead] = '\0';
  3431  0102FA  5036               	movf	_eusart2RxHead,w,c	;volatile
  3432  0102FC  0D01               	mullw	1
  3433  0102FE  0E60               	movlw	low _eusart2RxBuffer
  3434  010300  24F3               	addwf	prodl,w,c
  3435  010302  6ED9               	movwf	fsr2l,c
  3436  010304  0E00               	movlw	high _eusart2RxBuffer
  3437  010306  20F4               	addwfc	prodh,w,c
  3438  010308  6EDA               	movwf	fsr2h,c
  3439  01030A  0E00               	movlw	0
  3440  01030C  6EDF               	movwf	indf2,c
  3441                           
  3442                           ; BSR set to: 14
  3443                           ;eusart2.c: 240: eusart2RxHead--;
  3444  01030E  0636               	decf	_eusart2RxHead,f,c	;volatile
  3445                           
  3446                           ; BSR set to: 14
  3447                           ;eusart2.c: 243: printf("\033[K");
  3448  010310  0EFA               	movlw	low STR_1
  3449  010312  6E03               	movwf	i2printf@f,c
  3450  010314  0EFF               	movlw	high STR_1
  3451  010316  6E04               	movwf	i2printf@f+1,c
  3452  010318  EC13  F083         	call	i2_printf	;wreg free
  3453                           
  3454                           ;eusart2.c: 245: if(eusart2RxHead != eusart2RxTail) {
  3455  01031C  5035               	movf	_eusart2RxTail,w,c	;volatile
  3456  01031E  1836               	xorwf	_eusart2RxHead,w,c	;volatile
  3457  010320  B4D8               	btfsc	status,2,c
  3458  010322  D00B               	goto	i2l212
  3459                           
  3460                           ;eusart2.c: 247: eusart2RxBuffer[eusart2RxHead] = '\0';
  3461  010324  5036               	movf	_eusart2RxHead,w,c	;volatile
  3462  010326  0D01               	mullw	1
  3463  010328  0E60               	movlw	low _eusart2RxBuffer
  3464  01032A  24F3               	addwf	prodl,w,c
  3465  01032C  6ED9               	movwf	fsr2l,c
  3466  01032E  0E00               	movlw	high _eusart2RxBuffer
  3467  010330  20F4               	addwfc	prodh,w,c
  3468  010332  6EDA               	movwf	fsr2h,c
  3469  010334  0E00               	movlw	0
  3470  010336  6EDF               	movwf	indf2,c
  3471                           
  3472                           ;eusart2.c: 248: eusart2RxHead--;
  3473  010338  0636               	decf	_eusart2RxHead,f,c	;volatile
  3474  01033A                     i2l212:
  3475                           
  3476                           ;eusart2.c: 250: }
  3477                           ;eusart2.c: 252: RC2REG = 0;
  3478  01033A  0E00               	movlw	0
  3479  01033C  010E               	movlb	14	; () banked
  3480  01033E  6FF1               	movwf	241,b	;volatile
  3481  010340  0012               	return	
  3482  010342                     __end_of_EUSART2_Receive_ISR:
  3483                           	opt stack 0
  3484                           tosu	equ	0xFFF
  3485                           tosh	equ	0xFFE
  3486                           tosl	equ	0xFFD
  3487                           pclatu	equ	0xFFB
  3488                           pclath	equ	0xFFA
  3489                           tblptru	equ	0xFF8
  3490                           tblptrh	equ	0xFF7
  3491                           tblptrl	equ	0xFF6
  3492                           tablat	equ	0xFF5
  3493                           prodh	equ	0xFF4
  3494                           prodl	equ	0xFF3
  3495                           intcon	equ	0xFF2
  3496                           postinc0	equ	0xFEE
  3497                           fsr0h	equ	0xFEA
  3498                           fsr0l	equ	0xFE9
  3499                           wreg	equ	0xFE8
  3500                           fsr1h	equ	0xFE2
  3501                           fsr1l	equ	0xFE1
  3502                           indf2	equ	0xFDF
  3503                           postinc2	equ	0xFDE
  3504                           fsr2h	equ	0xFDA
  3505                           fsr2l	equ	0xFD9
  3506                           status	equ	0xFD8
  3507                           
  3508 ;; *************** function i2_printf *****************
  3509 ;; Defined at:
  3510 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  f               2    2[COMRAM] PTR const unsigned char 
  3513 ;;		 -> STR_28(3), STR_27(288), STR_26(3), STR_24(3), 
  3514 ;;		 -> STR_23(28), STR_22(3), STR_19(4), STR_18(5), 
  3515 ;;		 -> STR_16(4), STR_15(5), STR_13(3), STR_12(14), 
  3516 ;;		 -> STR_11(3), STR_9(3), STR_8(18), STR_7(3), 
  3517 ;;		 -> STR_5(3), STR_4(174), STR_3(4), STR_2(5), 
  3518 ;;		 -> STR_1(4), 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  printf          4    0        struct .
  3521 ;;  printf          3    0        PTR const unsigned char 
  3522 ;;  printf          2    4[COMRAM] PTR void [1]
  3523 ;;		 -> ?i2_printf(2), ?_printf(2), 
  3524 ;;  printf          2    0        unsigned int 
  3525 ;;  printf          2    0        unsigned int 
  3526 ;;  printf          1    6[COMRAM] char 
  3527 ;;  printf          1    0        unsigned char 
  3528 ;;  printf          1    0        char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  2    2[COMRAM] int 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3539 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3542 ;;Total ram usage:        5 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    2
  3545 ;; This function calls:
  3546 ;;		i2_putch
  3547 ;; This function is called by:
  3548 ;;		_EUSART2_Receive_ISR
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text21
  3553  010626                     __ptext21:
  3554                           	opt stack 0
  3555  010626                     i2_printf:
  3556                           	opt stack 21
  3557                           
  3558                           ;doprnt.c: 466: va_list ap;
  3559                           ;doprnt.c: 499: signed char c;
  3560                           ;doprnt.c: 506: signed char prec;
  3561                           ;doprnt.c: 508: unsigned char flag;
  3562                           ;doprnt.c: 523: union {
  3563                           ;doprnt.c: 524: unsigned long vd;
  3564                           ;doprnt.c: 525: double integ;
  3565                           ;doprnt.c: 526: } tmpval;
  3566                           ;doprnt.c: 528: unsigned int val;
  3567                           ;doprnt.c: 529: unsigned len;
  3568                           ;doprnt.c: 530: const char * cp;
  3569                           ;doprnt.c: 533: *ap = __va_start();
  3570                           
  3571                           ; BSR set to: 14
  3572                           ;incstack = 0
  3573  010626  0E05               	movlw	low (?i2_printf+2)
  3574  010628  6E05               	movwf	i2printf@ap,c
  3575  01062A  0E00               	movlw	high (?i2_printf+2)
  3576  01062C  6E06               	movwf	i2printf@ap+1,c
  3577                           
  3578                           ;doprnt.c: 536: while(c = *f++) {
  3579  01062E  D003               	goto	i2l360
  3580  010630                     
  3581                           ;doprnt.c: 540: {
  3582                           ;doprnt.c: 541: (putch(c) );
  3583  010630  5007               	movf	i2printf@c,w,c
  3584  010632  EC73  F083         	call	i2_putch
  3585  010636                     i2l360:
  3586  010636  C003  FFF6         	movff	i2printf@f,tblptrl
  3587  01063A  C004  FFF7         	movff	i2printf@f+1,tblptrh
  3588  01063E  4A03               	infsnz	i2printf@f,f,c
  3589  010640  2A04               	incf	i2printf@f+1,f,c
  3590  010642                     	if	0	;tblptru may be non-zero
  3591  010642                     	endif
  3592  010642                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3593  010642  0E00               	movlw	low (__mediumconst shr (0+16))
  3594  010644  6EF8               	movwf	tblptru,c
  3595  010646                     	endif
  3596  010646  0008               	tblrd		*
  3597  010648  CFF5 F007          	movff	tablat,i2printf@c
  3598  01064C  5007               	movf	i2printf@c,w,c
  3599  01064E  B4D8               	btfsc	status,2,c
  3600  010650  0012               	return	
  3601  010652  D7EE               	goto	i2l361
  3602  010654                     __end_ofi2_printf:
  3603                           	opt stack 0
  3604                           tosu	equ	0xFFF
  3605                           tosh	equ	0xFFE
  3606                           tosl	equ	0xFFD
  3607                           pclatu	equ	0xFFB
  3608                           pclath	equ	0xFFA
  3609                           tblptru	equ	0xFF8
  3610                           tblptrh	equ	0xFF7
  3611                           tblptrl	equ	0xFF6
  3612                           tablat	equ	0xFF5
  3613                           prodh	equ	0xFF4
  3614                           prodl	equ	0xFF3
  3615                           intcon	equ	0xFF2
  3616                           postinc0	equ	0xFEE
  3617                           fsr0h	equ	0xFEA
  3618                           fsr0l	equ	0xFE9
  3619                           wreg	equ	0xFE8
  3620                           fsr1h	equ	0xFE2
  3621                           fsr1l	equ	0xFE1
  3622                           indf2	equ	0xFDF
  3623                           postinc2	equ	0xFDE
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function i2_putch *****************
  3629 ;; Defined at:
  3630 ;;		line 178 in file "mcc_generated_files/eusart2.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  txData          1    wreg     unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  txData          1    1[COMRAM] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3648 ;;Total ram usage:        1 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    1
  3651 ;; This function calls:
  3652 ;;		i2_EUSART2_Write
  3653 ;; This function is called by:
  3654 ;;		i2_printf
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text22
  3659  0106E6                     __ptext22:
  3660                           	opt stack 0
  3661  0106E6                     i2_putch:
  3662                           	opt stack 21
  3663                           
  3664                           ;incstack = 0
  3665                           ;i2putch@txData stored from wreg
  3666  0106E6  6E02               	movwf	i2putch@txData,c
  3667                           
  3668                           ;eusart2.c: 180: EUSART2_Write(txData);
  3669  0106E8  5002               	movf	i2putch@txData,w,c
  3670  0106EA  EC5D  F082         	call	i2_EUSART2_Write
  3671  0106EE  0012               	return		;funcret
  3672  0106F0                     __end_ofi2_putch:
  3673                           	opt stack 0
  3674                           tosu	equ	0xFFF
  3675                           tosh	equ	0xFFE
  3676                           tosl	equ	0xFFD
  3677                           pclatu	equ	0xFFB
  3678                           pclath	equ	0xFFA
  3679                           tblptru	equ	0xFF8
  3680                           tblptrh	equ	0xFF7
  3681                           tblptrl	equ	0xFF6
  3682                           tablat	equ	0xFF5
  3683                           prodh	equ	0xFF4
  3684                           prodl	equ	0xFF3
  3685                           intcon	equ	0xFF2
  3686                           postinc0	equ	0xFEE
  3687                           fsr0h	equ	0xFEA
  3688                           fsr0l	equ	0xFE9
  3689                           wreg	equ	0xFE8
  3690                           fsr1h	equ	0xFE2
  3691                           fsr1l	equ	0xFE1
  3692                           indf2	equ	0xFDF
  3693                           postinc2	equ	0xFDE
  3694                           fsr2h	equ	0xFDA
  3695                           fsr2l	equ	0xFD9
  3696                           status	equ	0xFD8
  3697                           
  3698 ;; *************** function i2_EUSART2_Write *****************
  3699 ;; Defined at:
  3700 ;;		line 150 in file "mcc_generated_files/eusart2.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  txData          1    wreg     unsigned char 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  txData          1    0[COMRAM] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;Total ram usage:        1 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		i2_putch
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text23
  3728  0104BA                     __ptext23:
  3729                           	opt stack 0
  3730  0104BA                     i2_EUSART2_Write:
  3731                           	opt stack 21
  3732                           
  3733                           ;incstack = 0
  3734                           ;i2EUSART2_Write@txData stored from wreg
  3735  0104BA  6E01               	movwf	i2EUSART2_Write@txData,c
  3736  0104BC                     
  3737                           ;eusart2.c: 153: {
  3738                           
  3739                           ;eusart2.c: 152: while(0 == eusart2TxBufferRemaining)
  3740  0104BC  5032               	movf	_eusart2TxBufferRemaining,w,c	;volatile
  3741  0104BE  B4D8               	btfsc	status,2,c
  3742  0104C0  D7FD               	goto	i2l1343
  3743                           
  3744                           ;eusart2.c: 154: }
  3745                           ;eusart2.c: 156: if(0 == PIE3bits.TX2IE)
  3746  0104C2  010E               	movlb	14	; () banked
  3747  0104C4  BD2C               	btfsc	44,6,b	;volatile
  3748  0104C6  D003               	goto	i2l187
  3749                           
  3750                           ; BSR set to: 14
  3751                           ;eusart2.c: 157: {
  3752                           ;eusart2.c: 158: TX2REG = txData;
  3753  0104C8  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
  3754                           
  3755                           ;eusart2.c: 159: }
  3756  0104CC  D012               	goto	i2l188
  3757  0104CE                     i2l187:
  3758                           
  3759                           ; BSR set to: 14
  3760                           ;eusart2.c: 160: else
  3761                           ;eusart2.c: 161: {
  3762                           ;eusart2.c: 162: PIE3bits.TX2IE = 0;
  3763  0104CE  9D2C               	bcf	44,6,b	;volatile
  3764                           
  3765                           ; BSR set to: 14
  3766                           ;eusart2.c: 163: eusart2TxBuffer[eusart2TxHead++] = txData;
  3767  0104D0  5038               	movf	_eusart2TxHead,w,c	;volatile
  3768  0104D2  0D01               	mullw	1
  3769  0104D4  0E00               	movlw	low _eusart2TxBuffer
  3770  0104D6  24F3               	addwf	prodl,w,c
  3771  0104D8  6ED9               	movwf	fsr2l,c
  3772  0104DA  0E01               	movlw	high _eusart2TxBuffer
  3773  0104DC  20F4               	addwfc	prodh,w,c
  3774  0104DE  6EDA               	movwf	fsr2h,c
  3775  0104E0  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
  3776                           
  3777                           ; BSR set to: 14
  3778  0104E4  2A38               	incf	_eusart2TxHead,f,c	;volatile
  3779                           
  3780                           ; BSR set to: 14
  3781                           ;eusart2.c: 164: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  3782  0104E6  0E3F               	movlw	63
  3783  0104E8  6438               	cpfsgt	_eusart2TxHead,c	;volatile
  3784  0104EA  D002               	goto	i2l189
  3785                           
  3786                           ; BSR set to: 14
  3787                           ;eusart2.c: 165: {
  3788                           ;eusart2.c: 166: eusart2TxHead = 0;
  3789  0104EC  0E00               	movlw	0
  3790  0104EE  6E38               	movwf	_eusart2TxHead,c	;volatile
  3791  0104F0                     i2l189:
  3792                           
  3793                           ; BSR set to: 14
  3794                           ;eusart2.c: 167: }
  3795                           ;eusart2.c: 168: eusart2TxBufferRemaining--;
  3796                           
  3797                           ; BSR set to: 14
  3798  0104F0  0632               	decf	_eusart2TxBufferRemaining,f,c	;volatile
  3799  0104F2                     i2l188:
  3800                           
  3801                           ; BSR set to: 14
  3802                           ;eusart2.c: 169: }
  3803                           ;eusart2.c: 170: PIE3bits.TX2IE = 1;
  3804                           
  3805                           ; BSR set to: 14
  3806  0104F2  8D2C               	bsf	44,6,b	;volatile
  3807                           
  3808                           ; BSR set to: 14
  3809  0104F4  0012               	return		;funcret
  3810  0104F6                     __end_ofi2_EUSART2_Write:
  3811                           	opt stack 0
  3812                           tosu	equ	0xFFF
  3813                           tosh	equ	0xFFE
  3814                           tosl	equ	0xFFD
  3815                           pclatu	equ	0xFFB
  3816                           pclath	equ	0xFFA
  3817                           tblptru	equ	0xFF8
  3818                           tblptrh	equ	0xFF7
  3819                           tblptrl	equ	0xFF6
  3820                           tablat	equ	0xFF5
  3821                           prodh	equ	0xFF4
  3822                           prodl	equ	0xFF3
  3823                           intcon	equ	0xFF2
  3824                           postinc0	equ	0xFEE
  3825                           fsr0h	equ	0xFEA
  3826                           fsr0l	equ	0xFE9
  3827                           wreg	equ	0xFE8
  3828                           fsr1h	equ	0xFE2
  3829                           fsr1l	equ	0xFE1
  3830                           indf2	equ	0xFDF
  3831                           postinc2	equ	0xFDE
  3832                           fsr2h	equ	0xFDA
  3833                           fsr2l	equ	0xFD9
  3834                           status	equ	0xFD8
  3835                           tosu	equ	0xFFF
  3836                           tosh	equ	0xFFE
  3837                           tosl	equ	0xFFD
  3838                           pclatu	equ	0xFFB
  3839                           pclath	equ	0xFFA
  3840                           tblptru	equ	0xFF8
  3841                           tblptrh	equ	0xFF7
  3842                           tblptrl	equ	0xFF6
  3843                           tablat	equ	0xFF5
  3844                           prodh	equ	0xFF4
  3845                           prodl	equ	0xFF3
  3846                           intcon	equ	0xFF2
  3847                           postinc0	equ	0xFEE
  3848                           fsr0h	equ	0xFEA
  3849                           fsr0l	equ	0xFE9
  3850                           wreg	equ	0xFE8
  3851                           fsr1h	equ	0xFE2
  3852                           fsr1l	equ	0xFE1
  3853                           indf2	equ	0xFDF
  3854                           postinc2	equ	0xFDE
  3855                           fsr2h	equ	0xFDA
  3856                           fsr2l	equ	0xFD9
  3857                           status	equ	0xFD8
  3858                           
  3859                           	psect	text24
  3860  000000                     __ptext24:
  3861                           	opt stack 0
  3862                           tosu	equ	0xFFF
  3863                           tosh	equ	0xFFE
  3864                           tosl	equ	0xFFD
  3865                           pclatu	equ	0xFFB
  3866                           pclath	equ	0xFFA
  3867                           tblptru	equ	0xFF8
  3868                           tblptrh	equ	0xFF7
  3869                           tblptrl	equ	0xFF6
  3870                           tablat	equ	0xFF5
  3871                           prodh	equ	0xFF4
  3872                           prodl	equ	0xFF3
  3873                           intcon	equ	0xFF2
  3874                           postinc0	equ	0xFEE
  3875                           fsr0h	equ	0xFEA
  3876                           fsr0l	equ	0xFE9
  3877                           wreg	equ	0xFE8
  3878                           fsr1h	equ	0xFE2
  3879                           fsr1l	equ	0xFE1
  3880                           indf2	equ	0xFDF
  3881                           postinc2	equ	0xFDE
  3882                           fsr2h	equ	0xFDA
  3883                           fsr2l	equ	0xFD9
  3884                           status	equ	0xFD8
  3885                           
  3886                           	psect	rparam
  3887  0000                     tosu	equ	0xFFF
  3888                           tosh	equ	0xFFE
  3889                           tosl	equ	0xFFD
  3890                           pclatu	equ	0xFFB
  3891                           pclath	equ	0xFFA
  3892                           tblptru	equ	0xFF8
  3893                           tblptrh	equ	0xFF7
  3894                           tblptrl	equ	0xFF6
  3895                           tablat	equ	0xFF5
  3896                           prodh	equ	0xFF4
  3897                           prodl	equ	0xFF3
  3898                           intcon	equ	0xFF2
  3899                           postinc0	equ	0xFEE
  3900                           fsr0h	equ	0xFEA
  3901                           fsr0l	equ	0xFE9
  3902                           wreg	equ	0xFE8
  3903                           fsr1h	equ	0xFE2
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           postinc2	equ	0xFDE
  3907                           fsr2h	equ	0xFDA
  3908                           fsr2l	equ	0xFD9
  3909                           status	equ	0xFD8
  3910                           
  3911                           	psect	temp
  3912  000039                     btemp:
  3913                           	opt stack 0
  3914  000039                     	ds	1
  3915  0000                     int$flags	set	btemp
  3916  0000                     wtemp6	set	btemp+1
  3917                           tosu	equ	0xFFF
  3918                           tosh	equ	0xFFE
  3919                           tosl	equ	0xFFD
  3920                           pclatu	equ	0xFFB
  3921                           pclath	equ	0xFFA
  3922                           tblptru	equ	0xFF8
  3923                           tblptrh	equ	0xFF7
  3924                           tblptrl	equ	0xFF6
  3925                           tablat	equ	0xFF5
  3926                           prodh	equ	0xFF4
  3927                           prodl	equ	0xFF3
  3928                           intcon	equ	0xFF2
  3929                           postinc0	equ	0xFEE
  3930                           fsr0h	equ	0xFEA
  3931                           fsr0l	equ	0xFE9
  3932                           wreg	equ	0xFE8
  3933                           fsr1h	equ	0xFE2
  3934                           fsr1l	equ	0xFE1
  3935                           indf2	equ	0xFDF
  3936                           postinc2	equ	0xFDE
  3937                           fsr2h	equ	0xFDA
  3938                           fsr2l	equ	0xFD9
  3939                           status	equ	0xFD8


Data Sizes:
    Strings     579
    Constant    0
    Data        0
    BSS         198
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      56
    BANK0           160      0     128
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_25(CODE[5]), STR_21(CODE[4]), STR_20(CODE[6]), STR_17(CODE[6]), 
		 -> STR_14(CODE[6]), STR_10(CODE[9]), STR_6(CODE[8]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 288
		 -> STR_28(CODE[3]), STR_27(CODE[288]), STR_26(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[28]), STR_22(CODE[3]), STR_19(CODE[4]), STR_18(CODE[5]), 
		 -> STR_16(CODE[4]), STR_15(CODE[5]), STR_13(CODE[3]), STR_12(CODE[14]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_8(CODE[18]), STR_7(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[174]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(COMRAM[2]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ringBufferPull
    _ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_printf
    _printResetMessage->_printf
    _printf->_putch
    _putch->_EUSART2_Write
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2_putch
    i2_putch->i2_EUSART2_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5424
                  _SYSTEM_Initialize
                  _printResetMessage
                     _ringBufferPull
 ---------------------------------------------------------------------------------
 (1) _ringBufferPull                                       9     9      0    3546
                                             34 COMRAM     9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     318
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                        2     0      2    3067
                                             32 COMRAM     2     0      2
                             _printf
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    1155
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      24
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printResetMessage                                    0     0      0    1682
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              18    16      2    1682
                                             27 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      66
                                             26 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     196
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3      98
                                             25 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3      98
                                             25 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerHigh                      18    18      0     138
                                              7 COMRAM    18    18      0
                   Absolute function *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Receive_ISR                                  0     0      0     138
                           i2_printf
 ---------------------------------------------------------------------------------
 (8) i2_printf                                            18    16      2     138
                                              2 COMRAM     5     3      2
                            i2_putch
 ---------------------------------------------------------------------------------
 (9) i2_putch                                              1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (10) i2_EUSART2_Write                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printResetMessage
     _printf
       _putch
         _EUSART2_Write
   _ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _printf
         _putch
           _EUSART2_Write
       _strcmp
     _strlen

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _EUSART2_Receive_ISR *
     i2_printf
       i2_putch
         i2_EUSART2_Write
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      38       1       59.6%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F8       8        0.0%
DATA                 0      0      F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Aug 28 14:30:41 2018

                                  __CFG_CP$OFF 000000                                            l321 0236  
                                          l322 020A                                            l180 055A  
                                          l340 0046                                            l316 01B6  
                                          l342 008A                                            l318 01F0  
                                          l319 01D6                                            l360 0608  
                                          l344 00C2                                            l361 0602  
                                          l178 0534                                            l346 00F8  
                                          l187 0492                                            l188 04B6  
                                          l348 0156                                            l189 04B4  
                                          l287 067C                                            l911 043C  
                                          l912 0434                                            l920 0500  
                                          l919 0504                                   __CFG_CPD$OFF 000000  
                                          u700 01CC                                            u490 0472  
                                          u580 0130                        __size_of_PMD_Initialize 001C  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                        __size_of_ringBufferPull 0110  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                         l1323 0480                                           l1553 01A6  
                                         l1563 01CC                                           STR_1 FFFA  
                                         STR_2 FFED                                           STR_3 FFF6  
                                         STR_4 FEDB                                           STR_5 FFB4  
                                         STR_6 FFCE                                           STR_7 FFB4  
                                         STR_8 FFA5                                           STR_9 FFB4  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 0008                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 047E                                           _main 0670  
                                         _line 00A0                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 0039  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00D8                   __end_of_EUSART2_Transmit_ISR 05CA  
                              __end_ofi2_putch 06F0                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                                  __CFG_SCANE$ON 000000  
                     __size_ofi2_EUSART2_Write 003C                 __size_of_OSCILLATOR_Initialize 0018  
                          ringBufferPull@index 002A                  __end_of_OSCILLATOR_Initialize 06A0  
                                        ?_main 0001                                          STR_10 FFC5  
                                        STR_11 FFB4                                          STR_20 FFD6  
                                        STR_12 FFB7                                          STR_13 FFB4  
                                        STR_21 FFF2                                          STR_22 FFB4  
                                        STR_14 FFE2                                          STR_15 FFED  
                                        STR_23 FF89                                          STR_24 FFB4  
                                        STR_16 FFF6                                          STR_25 FFE8  
                                        STR_17 FFDC                                  __CFG_WDTE$OFF 000000  
                                        STR_26 FFB4                                          STR_18 FFED  
                                        STR_19 FFF6                                          STR_27 FDBB  
                                        STR_28 FFB4                                 __CFG_DEBUG$OFF 000000  
                                        i2l200 05C0                                          i2l210 02F2  
                                        i2l106 006E                                          i2l212 033A  
                                        i2l205 02B2                                          i2l206 02D2  
                                        i2l207 02EE                                          i2l360 0636  
                                        i2l361 0630                                          i2l187 04CE  
                                        i2l188 04F2                                          i2l189 04F0  
                                        i2l199 05C4                                          _OSCEN 000E47  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                __CFG_WRT6$OFF 000000                                  __CFG_WRT7$OFF 000000  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                                 __CFG_EBTRB$OFF 000000  
                           __CFG_MCLRE$EXTMCLR 000000                                          _putch 06D2  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                                        tablat 000FF5                                 ??_EUSART2_Read 001A  
                                        status 000FD8                                          wtemp6 003A  
                             __end_ofi2_printf 0654          __end_of_EUSART2_SetTxInterruptHandler 06C4  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 06B6  
                              __initialization 05CA                                   __end_of_main 0688  
                                   i2printf@ap 0005                          __end_of_ringBufferLUT 0198  
                                       ??_main 002C                                  __activetblptr 000003  
                   __end_of_EUSART2_Initialize 0432                       _eusart2TxBufferRemaining 0032  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                                       _ANSELG 000EBC                                         _RC2REG 000EF1  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l1343 04BC  
                               __CFG_WDTCCS$SC 000000                                         _RG7PPS 000E89  
                                i2putch@txData 0002                                         _OSCFRQ 000E49  
                                    ??i2_putch 0002                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                                 __CFG_PWRTE$OFF 000000  
                               __CFG_XINST$OFF 000000                      __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                               __CFG_STVREN$ON 000000                                         clear_0 05D0  
                                       clear_1 05DC                           _eusart2RxStringReady 0033  
                                       _printf 05F8                                         _strcmp 0432  
                                       _strlen 04F6                              ??i2_EUSART2_Write 0001  
                               _PMD_Initialize 0654                                   __mediumconst FDBA  
                               _ringBufferPull 0198                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         _EUSART2_Transmit_ISR 0598                                ??_EUSART2_Write 001A  
                __size_of_INTERRUPT_Initialize 000A                                _eusart2RxBuffer 0060  
             ??_INTERRUPT_InterruptManagerHigh 0008                ?_INTERRUPT_InterruptManagerHigh 0001  
                            _SYSTEM_Initialize 06A0                                _eusart2TxBuffer 0100  
                                   __accesstop 0060                        __end_of__initialization 05EE  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                               __pcstackCOMRAM 0001                            ??_SYSTEM_Initialize 001D  
               ?_EUSART2_SetTxInterruptHandler 001A                                  __end_of_putch 06DC  
                       __end_of_PMD_Initialize 0670                           __end_of_EUSART2_Read 0566  
                       __end_of_ringBufferPull 02A8                          ?_EUSART2_Transmit_ISR 0001  
                                    ?i2_printf 0003                        ringBufferPull@index_572 0028  
                    __end_of_SYSTEM_Initialize 06B6                                        ??_putch 001B  
                                _eusart2RxHead 0036                                  _eusart2TxHead 0038  
                                   __pbssBANK0 0060                                     __pbssBANK1 0100  
                                _eusart2RxTail 0035                                  _eusart2TxTail 0037  
                                   __pnvCOMRAM 002C                          EUSART2_Read@readValue 001A  
                                      ?_printf 001C                                ?_PMD_Initialize 0001  
                                      ?_strcmp 001A                                        ?_strlen 001A  
                              ?_ringBufferPull 0001                                        _SP2BRGH 000EF4  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 0342  
                                   ??i2_printf 0005                                        _OSCTUNE 000E48  
                                      i2u66_40 02E4                                        i2u76_48 005E  
                                      i2u79_48 0078                                        i2u79_49 008C  
                                      i2_putch 06E6                                        __Hparam 0000  
                                      __Lparam 0000                                        __pcinit 05CA  
                                      __ramtop 0E00                                        __ptext0 0670  
                                      __ptext1 0198                                        __ptext2 04F6  
                                      __ptext3 0000                                        __ptext4 0432  
                                      __ptext5 0530                                        __ptext6 0566  
                                      __ptext7 05F8                                        __ptext8 06D2  
                                      __ptext9 047E                                __size_of_printf 002E  
                              __size_of_strcmp 004C                                __size_of_strlen 003A  
                        _OSCILLATOR_Initialize 0688                         ??_EUSART2_Transmit_ISR 0001  
                     ??_PIN_MANAGER_Initialize 001A                     __size_of_SYSTEM_Initialize 0016  
                        i2EUSART2_Write@txData 0001                              _printResetMessage 0566  
                         end_of_initialization 05EE                             ?_printResetMessage 0001  
                           _EUSART2_Initialize 03D8                            ??_printResetMessage 0021  
                              i2_EUSART2_Write 04BA                                        printf@c 0020  
                                      printf@f 001C                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0036  
                                      strcmp@r 001F                          __CFG_WDTCPS$WDTCPS_31 000000  
                          ?_EUSART2_Initialize 0001                                        strlen@s 001A  
                    __end_of_printResetMessage 0598                               __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART2_Initialize 001D                         __size_of_ringBufferLUT 0198  
                                 _EUSART2_Read 0530                       ringBufferPull@charNumber 0026  
                 __end_of_INTERRUPT_Initialize 06E6                         ?_OSCILLATOR_Initialize 0001  
                               __end_of_printf 0626                                 __end_of_strcmp 047E  
                               __end_of_strlen 0530                            start_initialization 05CA  
              __size_of_PIN_MANAGER_Initialize 0096                                      i2printf@c 0007  
                                    i2printf@f 0003  EUSART2_SetRxInterruptHandler@interruptHandler 001A  
EUSART2_SetTxInterruptHandler@interruptHandler 001A                                    putch@txData 001B  
                            __size_ofi2_printf 002E                          __end_of_EUSART2_Write 04BA  
                      __end_ofi2_EUSART2_Write 04F6                               __CFG_LPBOREN$OFF 000000  
                             ??_PMD_Initialize 001A                               ??_ringBufferPull 0023  
                                _ringBufferLUT 0000                                       ??_printf 001E  
                                     ??_strcmp 001E                                       ??_strlen 001C  
                               _eusart2RxCount 0034                                    __pbssCOMRAM 0033  
                   __size_of_printResetMessage 0032                            EUSART2_Write@txData 001A  
              ??_EUSART2_SetRxInterruptHandler 001D                                       ?i2_putch 0001  
                       _PIN_MANAGER_Initialize 0342                                      __pintcode 0008  
                                __pmediumconst FDBA                                 ?_ringBufferLUT 0021  
            _EUSART2_TxDefaultInterruptHandler 002F                               __CFG_PPS1WAY$OFF 000000  
                                     _BAUD2CON 000EF7                                 __size_of_putch 000A  
                         _INTERRUPT_Initialize 06DC                   __size_of_EUSART2_Receive_ISR 009A  
                             ?i2_EUSART2_Write 0001                                       _IPR3bits 000E22  
                                     _PIE3bits 000E2C                                       _PIR3bits 000E36  
                __size_of_EUSART2_Transmit_ISR 0032                                       i2_printf 0626  
                        ?_INTERRUPT_Initialize 0001                               __size_ofi2_putch 000A  
                                     __Hrparam 0000          __end_of_EUSART2_SetRxInterruptHandler 06D2  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 06C4  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 0023                        ??_OSCILLATOR_Initialize 001A  
                                     __ptext10 06A0                                       __ptext11 0654  
                                     __ptext20 02A8                                       __ptext12 0342  
                                     __ptext21 0626                                       __ptext13 0688  
                                     __ptext22 06E6                                       __ptext14 06DC  
                                     __ptext23 04BA                                       __ptext15 03D8  
                                     __ptext24 0000                                       __ptext16 06B6  
                                     __ptext17 06C4                                       __ptext19 0598  
                  __size_of_EUSART2_Initialize 005A                                  __size_of_main 0018  
                         __CFG_WDTCWS$WDTCWS_7 000000                             __CFG_BORV$VBOR_190 000000  
                                   _RC2STAbits 000EF5                                       int$flags 0039  
                                   _INTCONbits 000FF2                         ??_INTERRUPT_Initialize 001A  
                                     intlevel2 0000                        ?_PIN_MANAGER_Initialize 0001  
                            __CFG_CLKOUTEN$OFF 000000                                       printf@ap 001E  
               ?_EUSART2_SetRxInterruptHandler 001A                         __size_of_EUSART2_Write 003C  
                          _EUSART2_Receive_ISR 02A8         __end_of_INTERRUPT_InterruptManagerHigh 00D8  
      __size_of_INTERRUPT_InterruptManagerHigh 00D0                 _INTERRUPT_InterruptManagerHigh 0008  
                                   _RX2PPSbits 000E11                                       strcmp@s1 001A  
                                     strcmp@s2 001C                              ringBufferLUT@line 0021  
                                     strlen@cp 001E                                     _TX2STAbits 000EF6  
               __end_of_PIN_MANAGER_Initialize 03D8                ??_EUSART2_SetTxInterruptHandler 001D  
                         ?_EUSART2_Receive_ISR 0001              _EUSART2_RxDefaultInterruptHandler 002C  
