

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Aug 28 14:16:20 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 1.45 (B)
    42                           ; Generated 30/01/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18LF67K40 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	nvCOMRAM
    77  00002E                     __pnvCOMRAM:
    78                           	opt stack 0
    79  00002E                     _EUSART2_RxDefaultInterruptHandler:
    80                           	opt stack 0
    81  00002E                     	ds	3
    82  000031                     _EUSART2_TxDefaultInterruptHandler:
    83                           	opt stack 0
    84  000031                     	ds	3
    85  000034                     _eusart2TxBufferRemaining:
    86                           	opt stack 0
    87  000034                     	ds	1
    88  0000                     _PMD5	set	3665
    89  0000                     _PMD4	set	3664
    90  0000                     _PMD3	set	3663
    91  0000                     _PMD2	set	3662
    92  0000                     _PMD1	set	3661
    93  0000                     _PMD0	set	3660
    94  0000                     _OSCTUNE	set	3656
    95  0000                     _OSCFRQ	set	3657
    96  0000                     _OSCEN	set	3655
    97  0000                     _OSCCON3	set	3653
    98  0000                     _OSCCON1	set	3651
    99  0000                     _RC2REG	set	3825
   100  0000                     _RC2STAbits	set	3829
   101  0000                     _TX2REG	set	3826
   102  0000                     _TX2STAbits	set	3830
   103  0000                     _SP2BRGH	set	3828
   104  0000                     _SP2BRGL	set	3827
   105  0000                     _TX2STA	set	3830
   106  0000                     _RC2STA	set	3829
   107  0000                     _BAUD2CON	set	3831
   108  0000                     _PIR3bits	set	3638
   109  0000                     _PIE3bits	set	3628
   110  0000                     _IPR3bits	set	3618
   111  0000                     _RX2PPSbits	set	3601
   112  0000                     _RG7PPS	set	3721
   113  0000                     _ODCOND	set	3749
   114  0000                     _ODCONC	set	3744
   115  0000                     _ODCONH	set	3775
   116  0000                     _ODCONB	set	3736
   117  0000                     _ODCONG	set	3770
   118  0000                     _ODCONA	set	3728
   119  0000                     _ODCONF	set	3762
   120  0000                     _ODCONE	set	3757
   121  0000                     _WPUH	set	3776
   122  0000                     _WPUC	set	3745
   123  0000                     _WPUA	set	3729
   124  0000                     _WPUG	set	3771
   125  0000                     _WPUB	set	3737
   126  0000                     _WPUE	set	3758
   127  0000                     _WPUF	set	3763
   128  0000                     _WPUD	set	3750
   129  0000                     _ANSELA	set	3730
   130  0000                     _ANSELF	set	3764
   131  0000                     _ANSELG	set	3772
   132  0000                     _ANSELE	set	3759
   133  0000                     _ANSELB	set	3738
   134  0000                     _ANSELD	set	3751
   135  0000                     _INTCONbits	set	4082
   136  0000                     _TRISD	set	3972
   137  0000                     _TRISC	set	3971
   138  0000                     _TRISH	set	3976
   139  0000                     _TRISB	set	3970
   140  0000                     _TRISG	set	3975
   141  0000                     _TRISA	set	3969
   142  0000                     _TRISF	set	3974
   143  0000                     _TRISE	set	3973
   144  0000                     _LATH	set	3968
   145  0000                     _LATC	set	3963
   146  0000                     _LATG	set	3967
   147  0000                     _LATB	set	3962
   148  0000                     _LATF	set	3966
   149  0000                     _LATA	set	3961
   150  0000                     _LATD	set	3964
   151  0000                     _LATE	set	3965
   152                           
   153                           	psect	mediumconst
   154  00FE06                     __pmediumconst:
   155                           	opt stack 0
   156  00FE06  00                 	db	0
   157  00FE07                     STR_22:
   158                           
   159                           ; BSR set to: 14
   160  00FE07  20                 	db	32
   161  00FE08  20                 	db	32
   162  00FE09  20                 	db	32
   163  00FE0A  4C                 	db	76	;'L'
   164  00FE0B  69                 	db	105	;'i'
   165  00FE0C  73                 	db	115	;'s'
   166  00FE0D  74                 	db	116	;'t'
   167  00FE0E  20                 	db	32
   168  00FE0F  6F                 	db	111	;'o'
   169  00FE10  66                 	db	102	;'f'
   170  00FE11  20                 	db	32
   171  00FE12  73                 	db	115	;'s'
   172  00FE13  75                 	db	117	;'u'
   173  00FE14  70                 	db	112	;'p'
   174  00FE15  70                 	db	112	;'p'
   175  00FE16  6F                 	db	111	;'o'
   176  00FE17  72                 	db	114	;'r'
   177  00FE18  74                 	db	116	;'t'
   178  00FE19  65                 	db	101	;'e'
   179  00FE1A  64                 	db	100	;'d'
   180  00FE1B  20                 	db	32
   181  00FE1C  63                 	db	99	;'c'
   182  00FE1D  6F                 	db	111	;'o'
   183  00FE1E  6D                 	db	109	;'m'
   184  00FE1F  6D                 	db	109	;'m'
   185  00FE20  61                 	db	97	;'a'
   186  00FE21  6E                 	db	110	;'n'
   187  00FE22  64                 	db	100	;'d'
   188  00FE23  73                 	db	115	;'s'
   189  00FE24  20                 	db	32
   190  00FE25  73                 	db	115	;'s'
   191  00FE26  6F                 	db	111	;'o'
   192  00FE27  20                 	db	32
   193  00FE28  66                 	db	102	;'f'
   194  00FE29  61                 	db	97	;'a'
   195  00FE2A  72                 	db	114	;'r'
   196  00FE2B  3A                 	db	58	;':'
   197  00FE2C  0A                 	db	10
   198  00FE2D  0D                 	db	13
   199  00FE2E  20                 	db	32
   200  00FE2F  20                 	db	32
   201  00FE30  20                 	db	32
   202  00FE31  4C                 	db	76	;'L'
   203  00FE32  45                 	db	69	;'E'
   204  00FE33  44                 	db	68	;'D'
   205  00FE34  73                 	db	115	;'s'
   206  00FE35  20                 	db	32
   207  00FE36  4F                 	db	79	;'O'
   208  00FE37  6E                 	db	110	;'n'
   209  00FE38  3A                 	db	58	;':'
   210  00FE39  20                 	db	32
   211  00FE3A  54                 	db	84	;'T'
   212  00FE3B  75                 	db	117	;'u'
   213  00FE3C  72                 	db	114	;'r'
   214  00FE3D  6E                 	db	110	;'n'
   215  00FE3E  73                 	db	115	;'s'
   216  00FE3F  20                 	db	32
   217  00FE40  61                 	db	97	;'a'
   218  00FE41  6C                 	db	108	;'l'
   219  00FE42  6C                 	db	108	;'l'
   220  00FE43  20                 	db	32
   221  00FE44  4C                 	db	76	;'L'
   222  00FE45  45                 	db	69	;'E'
   223  00FE46  44                 	db	68	;'D'
   224  00FE47  73                 	db	115	;'s'
   225  00FE48  20                 	db	32
   226  00FE49  4F                 	db	79	;'O'
   227  00FE4A  6E                 	db	110	;'n'
   228  00FE4B  0A                 	db	10
   229  00FE4C  0D                 	db	13
   230  00FE4D  20                 	db	32
   231  00FE4E  20                 	db	32
   232  00FE4F  20                 	db	32
   233  00FE50  4C                 	db	76	;'L'
   234  00FE51  45                 	db	69	;'E'
   235  00FE52  44                 	db	68	;'D'
   236  00FE53  73                 	db	115	;'s'
   237  00FE54  20                 	db	32
   238  00FE55  4F                 	db	79	;'O'
   239  00FE56  66                 	db	102	;'f'
   240  00FE57  66                 	db	102	;'f'
   241  00FE58  3A                 	db	58	;':'
   242  00FE59  20                 	db	32
   243  00FE5A  54                 	db	84	;'T'
   244  00FE5B  75                 	db	117	;'u'
   245  00FE5C  72                 	db	114	;'r'
   246  00FE5D  6E                 	db	110	;'n'
   247  00FE5E  73                 	db	115	;'s'
   248  00FE5F  20                 	db	32
   249  00FE60  61                 	db	97	;'a'
   250  00FE61  6C                 	db	108	;'l'
   251  00FE62  6C                 	db	108	;'l'
   252  00FE63  20                 	db	32
   253  00FE64  4C                 	db	76	;'L'
   254  00FE65  45                 	db	69	;'E'
   255  00FE66  44                 	db	68	;'D'
   256  00FE67  73                 	db	115	;'s'
   257  00FE68  20                 	db	32
   258  00FE69  4F                 	db	79	;'O'
   259  00FE6A  66                 	db	102	;'f'
   260  00FE6B  66                 	db	102	;'f'
   261  00FE6C  0A                 	db	10
   262  00FE6D  0D                 	db	13
   263  00FE6E  20                 	db	32
   264  00FE6F  20                 	db	32
   265  00FE70  20                 	db	32
   266  00FE71  52                 	db	82	;'R'
   267  00FE72  65                 	db	101	;'e'
   268  00FE73  73                 	db	115	;'s'
   269  00FE74  65                 	db	101	;'e'
   270  00FE75  74                 	db	116	;'t'
   271  00FE76  3A                 	db	58	;':'
   272  00FE77  20                 	db	32
   273  00FE78  43                 	db	67	;'C'
   274  00FE79  6C                 	db	108	;'l'
   275  00FE7A  65                 	db	101	;'e'
   276  00FE7B  61                 	db	97	;'a'
   277  00FE7C  72                 	db	114	;'r'
   278  00FE7D  73                 	db	115	;'s'
   279  00FE7E  20                 	db	32
   280  00FE7F  74                 	db	116	;'t'
   281  00FE80  68                 	db	104	;'h'
   282  00FE81  65                 	db	101	;'e'
   283  00FE82  20                 	db	32
   284  00FE83  73                 	db	115	;'s'
   285  00FE84  63                 	db	99	;'c'
   286  00FE85  72                 	db	114	;'r'
   287  00FE86  65                 	db	101	;'e'
   288  00FE87  65                 	db	101	;'e'
   289  00FE88  6E                 	db	110	;'n'
   290  00FE89  20                 	db	32
   291  00FE8A  61                 	db	97	;'a'
   292  00FE8B  6E                 	db	110	;'n'
   293  00FE8C  64                 	db	100	;'d'
   294  00FE8D  20                 	db	32
   295  00FE8E  72                 	db	114	;'r'
   296  00FE8F  65                 	db	101	;'e'
   297  00FE90  73                 	db	115	;'s'
   298  00FE91  65                 	db	101	;'e'
   299  00FE92  74                 	db	116	;'t'
   300  00FE93  73                 	db	115	;'s'
   301  00FE94  20                 	db	32
   302  00FE95  74                 	db	116	;'t'
   303  00FE96  68                 	db	104	;'h'
   304  00FE97  65                 	db	101	;'e'
   305  00FE98  20                 	db	32
   306  00FE99  6D                 	db	109	;'m'
   307  00FE9A  69                 	db	105	;'i'
   308  00FE9B  63                 	db	99	;'c'
   309  00FE9C  72                 	db	114	;'r'
   310  00FE9D  6F                 	db	111	;'o'
   311  00FE9E  0A                 	db	10
   312  00FE9F  0D                 	db	13
   313  00FEA0  20                 	db	32
   314  00FEA1  20                 	db	32
   315  00FEA2  20                 	db	32
   316  00FEA3  43                 	db	67	;'C'
   317  00FEA4  6C                 	db	108	;'l'
   318  00FEA5  65                 	db	101	;'e'
   319  00FEA6  61                 	db	97	;'a'
   320  00FEA7  72                 	db	114	;'r'
   321  00FEA8  3A                 	db	58	;':'
   322  00FEA9  20                 	db	32
   323  00FEAA  43                 	db	67	;'C'
   324  00FEAB  6C                 	db	108	;'l'
   325  00FEAC  65                 	db	101	;'e'
   326  00FEAD  61                 	db	97	;'a'
   327  00FEAE  72                 	db	114	;'r'
   328  00FEAF  73                 	db	115	;'s'
   329  00FEB0  20                 	db	32
   330  00FEB1  74                 	db	116	;'t'
   331  00FEB2  68                 	db	104	;'h'
   332  00FEB3  65                 	db	101	;'e'
   333  00FEB4  20                 	db	32
   334  00FEB5  73                 	db	115	;'s'
   335  00FEB6  63                 	db	99	;'c'
   336  00FEB7  72                 	db	114	;'r'
   337  00FEB8  65                 	db	101	;'e'
   338  00FEB9  65                 	db	101	;'e'
   339  00FEBA  6E                 	db	110	;'n'
   340  00FEBB  20                 	db	32
   341  00FEBC  62                 	db	98	;'b'
   342  00FEBD  75                 	db	117	;'u'
   343  00FEBE  74                 	db	116	;'t'
   344  00FEBF  20                 	db	32
   345  00FEC0  64                 	db	100	;'d'
   346  00FEC1  6F                 	db	111	;'o'
   347  00FEC2  65                 	db	101	;'e'
   348  00FEC3  73                 	db	115	;'s'
   349  00FEC4  6E                 	db	110	;'n'
   350  00FEC5  27                 	db	39
   351  00FEC6  74                 	db	116	;'t'
   352  00FEC7  20                 	db	32
   353  00FEC8  72                 	db	114	;'r'
   354  00FEC9  65                 	db	101	;'e'
   355  00FECA  73                 	db	115	;'s'
   356  00FECB  65                 	db	101	;'e'
   357  00FECC  74                 	db	116	;'t'
   358  00FECD  20                 	db	32
   359  00FECE  74                 	db	116	;'t'
   360  00FECF  68                 	db	104	;'h'
   361  00FED0  65                 	db	101	;'e'
   362  00FED1  20                 	db	32
   363  00FED2  6D                 	db	109	;'m'
   364  00FED3  69                 	db	105	;'i'
   365  00FED4  63                 	db	99	;'c'
   366  00FED5  72                 	db	114	;'r'
   367  00FED6  6F                 	db	111	;'o'
   368  00FED7  0A                 	db	10
   369  00FED8  0D                 	db	13
   370  00FED9  20                 	db	32
   371  00FEDA  20                 	db	32
   372  00FEDB  20                 	db	32
   373  00FEDC  48                 	db	72	;'H'
   374  00FEDD  65                 	db	101	;'e'
   375  00FEDE  6C                 	db	108	;'l'
   376  00FEDF  70                 	db	112	;'p'
   377  00FEE0  3A                 	db	58	;':'
   378  00FEE1  20                 	db	32
   379  00FEE2  54                 	db	84	;'T'
   380  00FEE3  68                 	db	104	;'h'
   381  00FEE4  69                 	db	105	;'i'
   382  00FEE5  73                 	db	115	;'s'
   383  00FEE6  20                 	db	32
   384  00FEE7  6D                 	db	109	;'m'
   385  00FEE8  65                 	db	101	;'e'
   386  00FEE9  73                 	db	115	;'s'
   387  00FEEA  73                 	db	115	;'s'
   388  00FEEB  61                 	db	97	;'a'
   389  00FEEC  67                 	db	103	;'g'
   390  00FEED  65                 	db	101	;'e'
   391  00FEEE  2C                 	db	44
   392  00FEEF  20                 	db	32
   393  00FEF0  6C                 	db	108	;'l'
   394  00FEF1  69                 	db	105	;'i'
   395  00FEF2  73                 	db	115	;'s'
   396  00FEF3  74                 	db	116	;'t'
   397  00FEF4  73                 	db	115	;'s'
   398  00FEF5  20                 	db	32
   399  00FEF6  63                 	db	99	;'c'
   400  00FEF7  6F                 	db	111	;'o'
   401  00FEF8  6D                 	db	109	;'m'
   402  00FEF9  6D                 	db	109	;'m'
   403  00FEFA  61                 	db	97	;'a'
   404  00FEFB  6E                 	db	110	;'n'
   405  00FEFC  64                 	db	100	;'d'
   406  00FEFD  73                 	db	115	;'s'
   407  00FEFE  0A                 	db	10
   408  00FEFF  0D                 	db	13
   409  00FF00  00                 	db	0
   410  00FF01                     STR_4:
   411                           
   412                           ; BSR set to: 14
   413  00FF01  50                 	db	80	;'P'
   414  00FF02  49                 	db	73	;'I'
   415  00FF03  43                 	db	67	;'C'
   416  00FF04  31                 	db	49	;'1'
   417  00FF05  38                 	db	56	;'8'
   418  00FF06  46                 	db	70	;'F'
   419  00FF07  36                 	db	54	;'6'
   420  00FF08  37                 	db	55	;'7'
   421  00FF09  4B                 	db	75	;'K'
   422  00FF0A  34                 	db	52	;'4'
   423  00FF0B  30                 	db	48	;'0'
   424  00FF0C  20                 	db	32
   425  00FF0D  6D                 	db	109	;'m'
   426  00FF0E  54                 	db	84	;'T'
   427  00FF0F  6F                 	db	111	;'o'
   428  00FF10  75                 	db	117	;'u'
   429  00FF11  63                 	db	99	;'c'
   430  00FF12  68                 	db	104	;'h'
   431  00FF13  20                 	db	32
   432  00FF14  44                 	db	68	;'D'
   433  00FF15  65                 	db	101	;'e'
   434  00FF16  6D                 	db	109	;'m'
   435  00FF17  6F                 	db	111	;'o'
   436  00FF18  0A                 	db	10
   437  00FF19  0D                 	db	13
   438  00FF1A  42                 	db	66	;'B'
   439  00FF1B  61                 	db	97	;'a'
   440  00FF1C  75                 	db	117	;'u'
   441  00FF1D  64                 	db	100	;'d'
   442  00FF1E  20                 	db	32
   443  00FF1F  72                 	db	114	;'r'
   444  00FF20  61                 	db	97	;'a'
   445  00FF21  74                 	db	116	;'t'
   446  00FF22  65                 	db	101	;'e'
   447  00FF23  3A                 	db	58	;':'
   448  00FF24  20                 	db	32
   449  00FF25  31                 	db	49	;'1'
   450  00FF26  31                 	db	49	;'1'
   451  00FF27  35                 	db	53	;'5'
   452  00FF28  32                 	db	50	;'2'
   453  00FF29  30                 	db	48	;'0'
   454  00FF2A  30                 	db	48	;'0'
   455  00FF2B  20                 	db	32
   456  00FF2C  6B                 	db	107	;'k'
   457  00FF2D  62                 	db	98	;'b'
   458  00FF2E  70                 	db	112	;'p'
   459  00FF2F  73                 	db	115	;'s'
   460  00FF30  0A                 	db	10
   461  00FF31  0D                 	db	13
   462  00FF32  4E                 	db	78	;'N'
   463  00FF33  6F                 	db	111	;'o'
   464  00FF34  20                 	db	32
   465  00FF35  70                 	db	112	;'p'
   466  00FF36  61                 	db	97	;'a'
   467  00FF37  72                 	db	114	;'r'
   468  00FF38  69                 	db	105	;'i'
   469  00FF39  74                 	db	116	;'t'
   470  00FF3A  79                 	db	121	;'y'
   471  00FF3B  2C                 	db	44
   472  00FF3C  20                 	db	32
   473  00FF3D  38                 	db	56	;'8'
   474  00FF3E  20                 	db	32
   475  00FF3F  62                 	db	98	;'b'
   476  00FF40  69                 	db	105	;'i'
   477  00FF41  74                 	db	116	;'t'
   478  00FF42  73                 	db	115	;'s'
   479  00FF43  2C                 	db	44
   480  00FF44  20                 	db	32
   481  00FF45  6E                 	db	110	;'n'
   482  00FF46  6F                 	db	111	;'o'
   483  00FF47  20                 	db	32
   484  00FF48  66                 	db	102	;'f'
   485  00FF49  6C                 	db	108	;'l'
   486  00FF4A  6F                 	db	111	;'o'
   487  00FF4B  77                 	db	119	;'w'
   488  00FF4C  20                 	db	32
   489  00FF4D  63                 	db	99	;'c'
   490  00FF4E  6F                 	db	111	;'o'
   491  00FF4F  6E                 	db	110	;'n'
   492  00FF50  74                 	db	116	;'t'
   493  00FF51  72                 	db	114	;'r'
   494  00FF52  6F                 	db	111	;'o'
   495  00FF53  6C                 	db	108	;'l'
   496  00FF54  2C                 	db	44
   497  00FF55  20                 	db	32
   498  00FF56  31                 	db	49	;'1'
   499  00FF57  20                 	db	32
   500  00FF58  73                 	db	115	;'s'
   501  00FF59  74                 	db	116	;'t'
   502  00FF5A  6F                 	db	111	;'o'
   503  00FF5B  70                 	db	112	;'p'
   504  00FF5C  20                 	db	32
   505  00FF5D  62                 	db	98	;'b'
   506  00FF5E  69                 	db	105	;'i'
   507  00FF5F  74                 	db	116	;'t'
   508  00FF60  0A                 	db	10
   509  00FF61  0D                 	db	13
   510  00FF62  43                 	db	67	;'C'
   511  00FF63  6F                 	db	111	;'o'
   512  00FF64  6D                 	db	109	;'m'
   513  00FF65  6D                 	db	109	;'m'
   514  00FF66  61                 	db	97	;'a'
   515  00FF67  6E                 	db	110	;'n'
   516  00FF68  64                 	db	100	;'d'
   517  00FF69  73                 	db	115	;'s'
   518  00FF6A  20                 	db	32
   519  00FF6B  61                 	db	97	;'a'
   520  00FF6C  72                 	db	114	;'r'
   521  00FF6D  65                 	db	101	;'e'
   522  00FF6E  20                 	db	32
   523  00FF6F  63                 	db	99	;'c'
   524  00FF70  61                 	db	97	;'a'
   525  00FF71  73                 	db	115	;'s'
   526  00FF72  65                 	db	101	;'e'
   527  00FF73  20                 	db	32
   528  00FF74  73                 	db	115	;'s'
   529  00FF75  65                 	db	101	;'e'
   530  00FF76  6E                 	db	110	;'n'
   531  00FF77  73                 	db	115	;'s'
   532  00FF78  69                 	db	105	;'i'
   533  00FF79  74                 	db	116	;'t'
   534  00FF7A  69                 	db	105	;'i'
   535  00FF7B  76                 	db	118	;'v'
   536  00FF7C  65                 	db	101	;'e'
   537  00FF7D  0A                 	db	10
   538  00FF7E  0D                 	db	13
   539  00FF7F  45                 	db	69	;'E'
   540  00FF80  6E                 	db	110	;'n'
   541  00FF81  74                 	db	116	;'t'
   542  00FF82  65                 	db	101	;'e'
   543  00FF83  72                 	db	114	;'r'
   544  00FF84  20                 	db	32
   545  00FF85  61                 	db	97	;'a'
   546  00FF86  20                 	db	32
   547  00FF87  63                 	db	99	;'c'
   548  00FF88  6F                 	db	111	;'o'
   549  00FF89  6D                 	db	109	;'m'
   550  00FF8A  6D                 	db	109	;'m'
   551  00FF8B  61                 	db	97	;'a'
   552  00FF8C  6E                 	db	110	;'n'
   553  00FF8D  64                 	db	100	;'d'
   554  00FF8E  2C                 	db	44
   555  00FF8F  20                 	db	32
   556  00FF90  6F                 	db	111	;'o'
   557  00FF91  72                 	db	114	;'r'
   558  00FF92  20                 	db	32
   559  00FF93  48                 	db	72	;'H'
   560  00FF94  65                 	db	101	;'e'
   561  00FF95  6C                 	db	108	;'l'
   562  00FF96  70                 	db	112	;'p'
   563  00FF97  20                 	db	32
   564  00FF98  66                 	db	102	;'f'
   565  00FF99  6F                 	db	111	;'o'
   566  00FF9A  72                 	db	114	;'r'
   567  00FF9B  20                 	db	32
   568  00FF9C  6C                 	db	108	;'l'
   569  00FF9D  69                 	db	105	;'i'
   570  00FF9E  73                 	db	115	;'s'
   571  00FF9F  74                 	db	116	;'t'
   572  00FFA0  20                 	db	32
   573  00FFA1  6F                 	db	111	;'o'
   574  00FFA2  66                 	db	102	;'f'
   575  00FFA3  20                 	db	32
   576  00FFA4  63                 	db	99	;'c'
   577  00FFA5  6F                 	db	111	;'o'
   578  00FFA6  6D                 	db	109	;'m'
   579  00FFA7  6D                 	db	109	;'m'
   580  00FFA8  61                 	db	97	;'a'
   581  00FFA9  6E                 	db	110	;'n'
   582  00FFAA  64                 	db	100	;'d'
   583  00FFAB  73                 	db	115	;'s'
   584  00FFAC  0A                 	db	10
   585  00FFAD  0D                 	db	13
   586  00FFAE  00                 	db	0
   587  00FFAF                     STR_8:
   588                           
   589                           ; BSR set to: 14
   590  00FFAF  20                 	db	32
   591  00FFB0  20                 	db	32
   592  00FFB1  20                 	db	32
   593  00FFB2  20                 	db	32
   594  00FFB3  4C                 	db	76	;'L'
   595  00FFB4  41                 	db	65	;'A'
   596  00FFB5  54                 	db	84	;'T'
   597  00FFB6  46                 	db	70	;'F'
   598  00FFB7  20                 	db	32
   599  00FFB8  3D                 	db	61	;'='
   600  00FFB9  20                 	db	32
   601  00FFBA  30                 	db	48	;'0'
   602  00FFBB  78                 	db	120	;'x'
   603  00FFBC  30                 	db	48	;'0'
   604  00FFBD  30                 	db	48	;'0'
   605  00FFBE  0A                 	db	10
   606  00FFBF  0D                 	db	13
   607  00FFC0  00                 	db	0
   608  00FFC1                     STR_12:
   609                           
   610                           ; BSR set to: 14
   611  00FFC1  4C                 	db	76	;'L'
   612  00FFC2  41                 	db	65	;'A'
   613  00FFC3  54                 	db	84	;'T'
   614  00FFC4  46                 	db	70	;'F'
   615  00FFC5  20                 	db	32
   616  00FFC6  3D                 	db	61	;'='
   617  00FFC7  20                 	db	32
   618  00FFC8  30                 	db	48	;'0'
   619  00FFC9  78                 	db	120	;'x'
   620  00FFCA  46                 	db	70	;'F'
   621  00FFCB  46                 	db	70	;'F'
   622  00FFCC  0A                 	db	10
   623  00FFCD  0D                 	db	13
   624  00FFCE  00                 	db	0
   625  00FFCF                     STR_10:
   626                           
   627                           ; BSR set to: 14
   628  00FFCF  4C                 	db	76	;'L'
   629  00FFD0  45                 	db	69	;'E'
   630  00FFD1  44                 	db	68	;'D'
   631  00FFD2  73                 	db	115	;'s'
   632  00FFD3  20                 	db	32
   633  00FFD4  4F                 	db	79	;'O'
   634  00FFD5  66                 	db	102	;'f'
   635  00FFD6  66                 	db	102	;'f'
   636  00FFD7  00                 	db	0
   637  00FFD8                     STR_6:
   638                           
   639                           ; BSR set to: 14
   640  00FFD8  4C                 	db	76	;'L'
   641  00FFD9  45                 	db	69	;'E'
   642  00FFDA  44                 	db	68	;'D'
   643  00FFDB  73                 	db	115	;'s'
   644  00FFDC  20                 	db	32
   645  00FFDD  4F                 	db	79	;'O'
   646  00FFDE  6E                 	db	110	;'n'
   647  00FFDF  00                 	db	0
   648  00FFE0                     STR_17:
   649                           
   650                           ; BSR set to: 14
   651  00FFE0  43                 	db	67	;'C'
   652  00FFE1  6C                 	db	108	;'l'
   653  00FFE2  65                 	db	101	;'e'
   654  00FFE3  61                 	db	97	;'a'
   655  00FFE4  72                 	db	114	;'r'
   656  00FFE5  00                 	db	0
   657  00FFE6                     STR_14:
   658                           
   659                           ; BSR set to: 14
   660  00FFE6  52                 	db	82	;'R'
   661  00FFE7  65                 	db	101	;'e'
   662  00FFE8  73                 	db	115	;'s'
   663  00FFE9  65                 	db	101	;'e'
   664  00FFEA  74                 	db	116	;'t'
   665  00FFEB  00                 	db	0
   666  00FFEC                     STR_20:
   667                           
   668                           ; BSR set to: 14
   669  00FFEC  48                 	db	72	;'H'
   670  00FFED  65                 	db	101	;'e'
   671  00FFEE  6C                 	db	108	;'l'
   672  00FFEF  70                 	db	112	;'p'
   673  00FFF0  00                 	db	0
   674  00FFF1                     STR_2:
   675                           
   676                           ; BSR set to: 14
   677  00FFF1  1B                 	db	27
   678  00FFF2  5B                 	db	91	;'['
   679  00FFF3  32                 	db	50	;'2'
   680  00FFF4  4A                 	db	74	;'J'
   681  00FFF5  00                 	db	0
   682  00FFF6                     STR_3:
   683                           
   684                           ; BSR set to: 14
   685  00FFF6  1B                 	db	27
   686  00FFF7  5B                 	db	91	;'['
   687  00FFF8  48                 	db	72	;'H'
   688  00FFF9  00                 	db	0
   689  00FFFA                     STR_1:
   690                           
   691                           ; BSR set to: 14
   692  00FFFA  1B                 	db	27
   693  00FFFB  5B                 	db	91	;'['
   694  00FFFC  4B                 	db	75	;'K'
   695  00FFFD  00                 	db	0
   696  0000                     
   697                           ; #config settings
   698  00FFFE  00                 	db	0	; dummy byte at the end
   699  0000                     
   700                           	psect	cinit
   701  0105BA                     __pcinit:
   702                           	opt stack 0
   703  0105BA                     start_initialization:
   704                           	opt stack 0
   705  0105BA                     __initialization:
   706                           	opt stack 0
   707                           
   708                           ; Clear objects allocated to BANK1 (64 bytes)
   709  0105BA  EE01  F000         	lfsr	0,__pbssBANK1
   710  0105BE  0E40               	movlw	64
   711  0105C0                     clear_0:
   712  0105C0  6AEE               	clrf	postinc0,c
   713  0105C2  06E8               	decf	wreg,f,c
   714  0105C4  E1FD               	bnz	clear_0
   715                           
   716                           ; Clear objects allocated to BANK0 (128 bytes)
   717  0105C6  EE00  F060         	lfsr	0,__pbssBANK0
   718  0105CA  0E80               	movlw	128
   719  0105CC                     clear_1:
   720  0105CC  6AEE               	clrf	postinc0,c
   721  0105CE  06E8               	decf	wreg,f,c
   722  0105D0  E1FD               	bnz	clear_1
   723                           
   724                           ; Clear objects allocated to COMRAM (6 bytes)
   725  0105D2  6A3A               	clrf	(__pbssCOMRAM+5)& (0+255),c
   726  0105D4  6A39               	clrf	(__pbssCOMRAM+4)& (0+255),c
   727  0105D6  6A38               	clrf	(__pbssCOMRAM+3)& (0+255),c
   728  0105D8  6A37               	clrf	(__pbssCOMRAM+2)& (0+255),c
   729  0105DA  6A36               	clrf	(__pbssCOMRAM+1)& (0+255),c
   730  0105DC  6A35               	clrf	__pbssCOMRAM& (0+255),c
   731  0105DE                     end_of_initialization:
   732                           	opt stack 0
   733  0105DE                     __end_of__initialization:
   734                           	opt stack 0
   735  0105DE  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   736  0105E0  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   737  0105E2  0100               	movlb	0
   738  0105E4  EFEA  F081         	goto	_main	;jump to C main() function
   739                           postinc0	equ	0xFEE
   740                           wreg	equ	0xFE8
   741                           
   742                           	psect	bssCOMRAM
   743  000035                     __pbssCOMRAM:
   744                           	opt stack 0
   745  000035                     _eusart2RxStringReady:
   746                           	opt stack 0
   747  000035                     	ds	1
   748  000036                     _eusart2RxCount:
   749                           	opt stack 0
   750  000036                     	ds	1
   751  000037                     _eusart2RxTail:
   752                           	opt stack 0
   753  000037                     	ds	1
   754  000038                     _eusart2RxHead:
   755                           	opt stack 0
   756  000038                     	ds	1
   757  000039                     _eusart2TxTail:
   758                           	opt stack 0
   759  000039                     	ds	1
   760  00003A                     _eusart2TxHead:
   761                           	opt stack 0
   762  00003A                     	ds	1
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           
   766                           	psect	bssBANK0
   767  000060                     __pbssBANK0:
   768                           	opt stack 0
   769  000060                     _eusart2RxBuffer:
   770                           	opt stack 0
   771  000060                     	ds	64
   772  0000A0                     _line:
   773                           	opt stack 0
   774  0000A0                     	ds	64
   775                           postinc0	equ	0xFEE
   776                           wreg	equ	0xFE8
   777                           
   778                           	psect	bssBANK1
   779  000100                     __pbssBANK1:
   780                           	opt stack 0
   781  000100                     _eusart2TxBuffer:
   782                           	opt stack 0
   783  000100                     	ds	64
   784                           postinc0	equ	0xFEE
   785                           wreg	equ	0xFE8
   786                           
   787                           	psect	cstackCOMRAM
   788  000001                     __pcstackCOMRAM:
   789                           	opt stack 0
   790  000001                     i2EUSART2_Write@txData:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x0
   794  000001                     	ds	1
   795  000002                     i2putch@txData:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x1
   799  000002                     	ds	1
   800  000003                     ?i2_printf:
   801                           	opt stack 0
   802  000003                     i2printf@f:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x2
   806  000003                     	ds	2
   807  000005                     i2printf@ap:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x4
   811  000005                     	ds	2
   812  000007                     i2printf@c:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x6
   816  000007                     	ds	1
   817  000008                     ??_INTERRUPT_InterruptManagerHigh:
   818                           
   819                           ; 1 bytes @ 0x7
   820  000008                     	ds	18
   821  00001A                     ?_strlen:
   822                           	opt stack 0
   823  00001A                     ?_strcmp:
   824                           	opt stack 0
   825  00001A                     EUSART2_Read@readValue:
   826                           	opt stack 0
   827  00001A                     EUSART2_Write@txData:
   828                           	opt stack 0
   829  00001A                     strcmp@s1:
   830                           	opt stack 0
   831  00001A                     strlen@s:
   832                           	opt stack 0
   833  00001A                     EUSART2_SetTxInterruptHandler@interruptHandler:
   834                           	opt stack 0
   835  00001A                     EUSART2_SetRxInterruptHandler@interruptHandler:
   836                           	opt stack 0
   837                           
   838                           ; 3 bytes @ 0x19
   839  00001A                     	ds	1
   840  00001B                     putch@txData:
   841                           	opt stack 0
   842                           
   843                           ; 1 bytes @ 0x1A
   844  00001B                     	ds	1
   845  00001C                     ??_strlen:
   846  00001C                     ?_printf:
   847                           	opt stack 0
   848  00001C                     printf@f:
   849                           	opt stack 0
   850  00001C                     strcmp@s2:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x1B
   854  00001C                     	ds	1
   855  00001D                     
   856                           ; 1 bytes @ 0x1C
   857  00001D                     	ds	1
   858  00001E                     ??_strcmp:
   859  00001E                     printf@ap:
   860                           	opt stack 0
   861  00001E                     strlen@cp:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x1D
   865  00001E                     	ds	1
   866  00001F                     strcmp@r:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x1E
   870  00001F                     	ds	1
   871  000020                     printf@c:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x1F
   875  000020                     	ds	1
   876  000021                     ringBufferLUT@line:
   877                           	opt stack 0
   878                           
   879                           ; 2 bytes @ 0x20
   880  000021                     	ds	2
   881  000023                     ??_ringBufferPull:
   882  000023                     
   883                           ; 1 bytes @ 0x22
   884  000023                     	ds	3
   885  000026                     ringBufferPull@charNumber:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x25
   889  000026                     	ds	2
   890  000028                     ringBufferPull@index_575:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x27
   894  000028                     	ds	2
   895  00002A                     ringBufferPull@index:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x29
   899  00002A                     	ds	2
   900  00002C                     ??_main:
   901                           
   902                           ; 1 bytes @ 0x2B
   903  00002C                     	ds	2
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 58 in file "main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   930 ;;Total ram usage:        2 bytes
   931 ;; Hardware stack levels required when called:   10
   932 ;; This function calls:
   933 ;;		_SYSTEM_Initialize
   934 ;;		_printResetMessage
   935 ;;		_ringBufferPull
   936 ;; This function is called by:
   937 ;;		Startup code after reset
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text0
   942  0103D4                     __ptext0:
   943                           	opt stack 0
   944  0103D4                     _main:
   945                           	opt stack 21
   946                           
   947                           ;main.c: 61: SYSTEM_Initialize();
   948                           
   949                           ;incstack = 0
   950  0103D4  EC3C  F083         	call	_SYSTEM_Initialize	;wreg free
   951                           
   952                           ;main.c: 68: (INTCONbits.GIEH = 1);
   953  0103D8  8EF2               	bsf	intcon,7,c	;volatile
   954                           
   955                           ;main.c: 71: (INTCONbits.GIEL = 1);
   956  0103DA  8CF2               	bsf	intcon,6,c	;volatile
   957                           
   958                           ;main.c: 74: printResetMessage();
   959  0103DC  ECAB  F082         	call	_printResetMessage	;wreg free
   960  0103E0                     
   961                           ;main.c: 77: {
   962                           ;main.c: 80: LATF = 0x00;
   963  0103E0  0E00               	movlw	0
   964  0103E2  6E7E               	movwf	3966,c	;volatile
   965                           
   966                           ;main.c: 81: _delay((unsigned long)((500)*(64000000/4000.0)));
   967  0103E4  0E29               	movlw	41
   968  0103E6  6E2D               	movwf	(??_main+1)& (0+255),c
   969  0103E8  0E96               	movlw	150
   970  0103EA  6E2C               	movwf	??_main& (0+255),c
   971  0103EC  0E7F               	movlw	127
   972  0103EE                     u777:
   973  0103EE  2EE8               	decfsz	wreg,f,c
   974  0103F0  D7FE               	bra	u777
   975  0103F2  2E2C               	decfsz	??_main& (0+255),f,c
   976  0103F4  D7FC               	bra	u777
   977  0103F6  2E2D               	decfsz	(??_main+1)& (0+255),f,c
   978  0103F8  D7FA               	bra	u777
   979  0103FA  F000               	nop	
   980                           
   981                           ;main.c: 82: LATF = 0xFF;
   982  0103FC  687E               	setf	3966,c	;volatile
   983                           
   984                           ;main.c: 83: _delay((unsigned long)((500)*(64000000/4000.0)));
   985  0103FE  0E29               	movlw	41
   986  010400  6E2D               	movwf	(??_main+1)& (0+255),c
   987  010402  0E96               	movlw	150
   988  010404  6E2C               	movwf	??_main& (0+255),c
   989  010406  0E7F               	movlw	127
   990  010408                     u787:
   991  010408  2EE8               	decfsz	wreg,f,c
   992  01040A  D7FE               	bra	u787
   993  01040C  2E2C               	decfsz	??_main& (0+255),f,c
   994  01040E  D7FC               	bra	u787
   995  010410  2E2D               	decfsz	(??_main+1)& (0+255),f,c
   996  010412  D7FA               	bra	u787
   997  010414  F000               	nop	
   998                           
   999                           ;main.c: 86: if (eusart2RxStringReady) {
  1000  010416  5035               	movf	_eusart2RxStringReady,w,c	;volatile
  1001  010418  B4D8               	btfsc	status,2,c
  1002  01041A  D7E2               	goto	l289
  1003                           
  1004                           ;main.c: 88: ringBufferPull();
  1005  01041C  EC9D  F080         	call	_ringBufferPull	;wreg free
  1006  010420  D7DF               	goto	l289
  1007  010422                     __end_of_main:
  1008                           	opt stack 0
  1009                           intcon	equ	0xFF2
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           status	equ	0xFD8
  1013                           
  1014 ;; *************** function _ringBufferPull *****************
  1015 ;; Defined at:
  1016 ;;		line 8 in file "ring_buffer_interface.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  index           2   39[COMRAM] int 
  1021 ;;  index           2   41[COMRAM] int 
  1022 ;;  charNumber      2   37[COMRAM] int 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1034 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1035 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1036 ;;Total ram usage:        9 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    9
  1039 ;; This function calls:
  1040 ;;		_EUSART2_Read
  1041 ;;		_ringBufferLUT
  1042 ;;		_strlen
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text1
  1049  01013A                     __ptext1:
  1050                           	opt stack 0
  1051  01013A                     _ringBufferPull:
  1052                           	opt stack 21
  1053                           
  1054                           ;ring_buffer_interface.c: 10: int charNumber = eusart2RxCount;
  1055                           
  1056                           ;incstack = 0
  1057  01013A  C036  F026         	movff	_eusart2RxCount,ringBufferPull@charNumber	;volatile
  1058  01013E  6A27               	clrf	ringBufferPull@charNumber+1,c
  1059                           
  1060                           ;ring_buffer_interface.c: 13: for (int index = 0; index < 64; index++) {
  1061  010140  0E00               	movlw	0
  1062  010142  6E2B               	movwf	ringBufferPull@index+1,c
  1063  010144  0E00               	movlw	0
  1064  010146  6E2A               	movwf	ringBufferPull@index,c
  1065  010148                     l1545:
  1066  010148  BE2B               	btfsc	ringBufferPull@index+1,7,c
  1067  01014A  D006               	goto	l318
  1068  01014C  502B               	movf	ringBufferPull@index+1,w,c
  1069  01014E  E10F               	bnz	l1555
  1070  010150  0E40               	movlw	64
  1071  010152  5C2A               	subwf	ringBufferPull@index,w,c
  1072  010154  B0D8               	btfsc	status,0,c
  1073  010156  D00B               	goto	u660
  1074  010158                     l318:
  1075                           
  1076                           ;ring_buffer_interface.c: 15: line[index] = '\0';
  1077  010158  0EA0               	movlw	low _line
  1078  01015A  242A               	addwf	ringBufferPull@index,w,c
  1079  01015C  6ED9               	movwf	fsr2l,c
  1080  01015E  0E00               	movlw	high _line
  1081  010160  202B               	addwfc	ringBufferPull@index+1,w,c
  1082  010162  6EDA               	movwf	fsr2h,c
  1083  010164  0E00               	movlw	0
  1084  010166  6EDF               	movwf	indf2,c
  1085  010168  4A2A               	infsnz	ringBufferPull@index,f,c
  1086  01016A  2A2B               	incf	ringBufferPull@index+1,f,c
  1087  01016C  D7ED               	goto	l1545
  1088  01016E                     u660:
  1089  01016E                     l1555:
  1090                           
  1091                           ;ring_buffer_interface.c: 17: }
  1092                           ;ring_buffer_interface.c: 20: for(int index = 0; index < charNumber; index++){
  1093  01016E  0E00               	movlw	0
  1094  010170  6E29               	movwf	ringBufferPull@index_575+1,c
  1095  010172  0E00               	movlw	0
  1096  010174  6E28               	movwf	ringBufferPull@index_575,c
  1097  010176  D00D               	goto	l320
  1098  010178                     
  1099                           ;ring_buffer_interface.c: 22: line[index] = EUSART2_Read();
  1100  010178  EC90  F082         	call	_EUSART2_Read	;wreg free
  1101  01017C  6E23               	movwf	??_ringBufferPull& (0+255),c
  1102  01017E  0EA0               	movlw	low _line
  1103  010180  2428               	addwf	ringBufferPull@index_575,w,c
  1104  010182  6ED9               	movwf	fsr2l,c
  1105  010184  0E00               	movlw	high _line
  1106  010186  2029               	addwfc	ringBufferPull@index_575+1,w,c
  1107  010188  6EDA               	movwf	fsr2h,c
  1108  01018A  C023  FFDF         	movff	??_ringBufferPull,indf2
  1109  01018E  4A28               	infsnz	ringBufferPull@index_575,f,c
  1110  010190  2A29               	incf	ringBufferPull@index_575+1,f,c
  1111  010192                     l320:
  1112  010192  5026               	movf	ringBufferPull@charNumber,w,c
  1113  010194  5C28               	subwf	ringBufferPull@index_575,w,c
  1114  010196  5029               	movf	ringBufferPull@index_575+1,w,c
  1115  010198  0A80               	xorlw	128
  1116  01019A  6E23               	movwf	??_ringBufferPull& (0+255),c
  1117  01019C  5027               	movf	ringBufferPull@charNumber+1,w,c
  1118  01019E  0A80               	xorlw	128
  1119  0101A0  5823               	subwfb	??_ringBufferPull& (0+255),w,c
  1120  0101A2  A0D8               	btfss	status,0,c
  1121  0101A4  D7E9               	goto	l321
  1122                           
  1123                           ;ring_buffer_interface.c: 24: }
  1124                           ;ring_buffer_interface.c: 27: eusart2RxTail = eusart2RxHead;
  1125  0101A6  C038  F037         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  1126                           
  1127                           ;ring_buffer_interface.c: 30: while((line[strlen(line) - 1] == (int) '\n') ||
  1128                           ;ring_buffer_interface.c: 31: (line[strlen(line) - 1] == (int) '\r')) {
  1129  0101AA  D016               	goto	l323
  1130  0101AC                     
  1131                           ;ring_buffer_interface.c: 34: line[strlen(line) - 1] = '\0';
  1132  0101AC  0EFF               	movlw	255
  1133  0101AE  6E23               	movwf	??_ringBufferPull& (0+255),c
  1134  0101B0  0EFF               	movlw	255
  1135  0101B2  6E24               	movwf	(??_ringBufferPull+1)& (0+255),c
  1136  0101B4  0EA0               	movlw	low _line
  1137  0101B6  6E1A               	movwf	strlen@s,c
  1138  0101B8  0E00               	movlw	high _line
  1139  0101BA  6E1B               	movwf	strlen@s+1,c
  1140  0101BC  EC73  F082         	call	_strlen	;wreg free
  1141  0101C0  5023               	movf	??_ringBufferPull,w,c
  1142  0101C2  261A               	addwf	?_strlen,f,c
  1143  0101C4  5024               	movf	??_ringBufferPull+1,w,c
  1144  0101C6  221B               	addwfc	?_strlen+1,f,c
  1145  0101C8  0EA0               	movlw	low _line
  1146  0101CA  241A               	addwf	?_strlen,w,c
  1147  0101CC  6ED9               	movwf	fsr2l,c
  1148  0101CE  0E00               	movlw	high _line
  1149  0101D0  201B               	addwfc	?_strlen+1,w,c
  1150  0101D2  6EDA               	movwf	fsr2h,c
  1151  0101D4  0E00               	movlw	0
  1152  0101D6  6EDF               	movwf	indf2,c
  1153  0101D8                     l323:
  1154  0101D8  0EFF               	movlw	255
  1155  0101DA  6E23               	movwf	??_ringBufferPull& (0+255),c
  1156  0101DC  0EFF               	movlw	255
  1157  0101DE  6E24               	movwf	(??_ringBufferPull+1)& (0+255),c
  1158  0101E0  0EA0               	movlw	low _line
  1159  0101E2  6E1A               	movwf	strlen@s,c
  1160  0101E4  0E00               	movlw	high _line
  1161  0101E6  6E1B               	movwf	strlen@s+1,c
  1162  0101E8  EC73  F082         	call	_strlen	;wreg free
  1163  0101EC  5023               	movf	??_ringBufferPull,w,c
  1164  0101EE  261A               	addwf	?_strlen,f,c
  1165  0101F0  5024               	movf	??_ringBufferPull+1,w,c
  1166  0101F2  221B               	addwfc	?_strlen+1,f,c
  1167  0101F4  0EA0               	movlw	low _line
  1168  0101F6  241A               	addwf	?_strlen,w,c
  1169  0101F8  6ED9               	movwf	fsr2l,c
  1170  0101FA  0E00               	movlw	high _line
  1171  0101FC  201B               	addwfc	?_strlen+1,w,c
  1172  0101FE  6EDA               	movwf	fsr2h,c
  1173  010200  0E0A               	movlw	10
  1174  010202  18DE               	xorwf	postinc2,w,c
  1175  010204  B4D8               	btfsc	status,2,c
  1176  010206  D7D2               	goto	l324
  1177  010208  0EFF               	movlw	255
  1178  01020A  6E23               	movwf	??_ringBufferPull& (0+255),c
  1179  01020C  0EFF               	movlw	255
  1180  01020E  6E24               	movwf	(??_ringBufferPull+1)& (0+255),c
  1181  010210  0EA0               	movlw	low _line
  1182  010212  6E1A               	movwf	strlen@s,c
  1183  010214  0E00               	movlw	high _line
  1184  010216  6E1B               	movwf	strlen@s+1,c
  1185  010218  EC73  F082         	call	_strlen	;wreg free
  1186  01021C  5023               	movf	??_ringBufferPull,w,c
  1187  01021E  261A               	addwf	?_strlen,f,c
  1188  010220  5024               	movf	??_ringBufferPull+1,w,c
  1189  010222  221B               	addwfc	?_strlen+1,f,c
  1190  010224  0EA0               	movlw	low _line
  1191  010226  241A               	addwf	?_strlen,w,c
  1192  010228  6ED9               	movwf	fsr2l,c
  1193  01022A  0E00               	movlw	high _line
  1194  01022C  201B               	addwfc	?_strlen+1,w,c
  1195  01022E  6EDA               	movwf	fsr2h,c
  1196  010230  0E0D               	movlw	13
  1197  010232  18DE               	xorwf	postinc2,w,c
  1198  010234  B4D8               	btfsc	status,2,c
  1199  010236  D7BA               	goto	l324
  1200                           
  1201                           ;ring_buffer_interface.c: 36: }
  1202                           ;ring_buffer_interface.c: 40: eusart2RxStringReady = 0;
  1203  010238  0E00               	movlw	0
  1204  01023A  6E35               	movwf	_eusart2RxStringReady,c	;volatile
  1205                           
  1206                           ;ring_buffer_interface.c: 43: ringBufferLUT(line);
  1207  01023C  0EA0               	movlw	low _line
  1208  01023E  6E21               	movwf	ringBufferLUT@line,c
  1209  010240  0E00               	movlw	high _line
  1210  010242  6E22               	movwf	ringBufferLUT@line+1,c
  1211  010244  EC00  F080         	call	_ringBufferLUT	;wreg free
  1212  010248  0012               	return		;funcret
  1213  01024A                     __end_of_ringBufferPull:
  1214                           	opt stack 0
  1215                           intcon	equ	0xFF2
  1216                           postinc0	equ	0xFEE
  1217                           wreg	equ	0xFE8
  1218                           indf2	equ	0xFDF
  1219                           postinc2	equ	0xFDE
  1220                           fsr2h	equ	0xFDA
  1221                           fsr2l	equ	0xFD9
  1222                           status	equ	0xFD8
  1223                           
  1224 ;; *************** function _strlen *****************
  1225 ;; Defined at:
  1226 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  s               2   25[COMRAM] PTR const unsigned char 
  1229 ;;		 -> line(64), 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  cp              2   29[COMRAM] PTR const unsigned char 
  1232 ;;		 -> line(64), 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  2   25[COMRAM] unsigned int 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1243 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1245 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1246 ;;Total ram usage:        6 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    5
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_ringBufferPull
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text2
  1257  0104E6                     __ptext2:
  1258                           	opt stack 0
  1259  0104E6                     _strlen:
  1260                           	opt stack 24
  1261                           
  1262                           ;incstack = 0
  1263  0104E6  C01A  F01E         	movff	strlen@s,strlen@cp
  1264  0104EA  C01B  F01F         	movff	strlen@s+1,strlen@cp+1
  1265  0104EE  D002               	goto	l917
  1266  0104F0  4A1E               	infsnz	strlen@cp,f,c
  1267  0104F2  2A1F               	incf	strlen@cp+1,f,c
  1268  0104F4                     l917:
  1269  0104F4  C01E  FFD9         	movff	strlen@cp,fsr2l
  1270  0104F8  C01F  FFDA         	movff	strlen@cp+1,fsr2h
  1271  0104FC  50DF               	movf	indf2,w,c
  1272  0104FE  A4D8               	btfss	status,2,c
  1273  010500  D7F7               	goto	l918
  1274  010502  C01A  F01C         	movff	strlen@s,??_strlen
  1275  010506  C01B  F01D         	movff	strlen@s+1,??_strlen+1
  1276  01050A  1E1C               	comf	??_strlen,f,c
  1277  01050C  1E1D               	comf	??_strlen+1,f,c
  1278  01050E  4A1C               	infsnz	??_strlen,f,c
  1279  010510  2A1D               	incf	??_strlen+1,f,c
  1280  010512  501E               	movf	strlen@cp,w,c
  1281  010514  241C               	addwf	??_strlen,w,c
  1282  010516  6E1A               	movwf	?_strlen,c
  1283  010518  501F               	movf	strlen@cp+1,w,c
  1284  01051A  201D               	addwfc	??_strlen+1,w,c
  1285  01051C  6E1B               	movwf	?_strlen+1,c
  1286  01051E  0012               	return	
  1287  010520                     __end_of_strlen:
  1288                           	opt stack 0
  1289                           intcon	equ	0xFF2
  1290                           postinc0	equ	0xFEE
  1291                           wreg	equ	0xFE8
  1292                           indf2	equ	0xFDF
  1293                           postinc2	equ	0xFDE
  1294                           fsr2h	equ	0xFDA
  1295                           fsr2l	equ	0xFD9
  1296                           status	equ	0xFD8
  1297                           
  1298 ;; *************** function _ringBufferLUT *****************
  1299 ;; Defined at:
  1300 ;;		line 7 in file "ring_buffer_LUT.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  line            2   32[COMRAM] PTR unsigned char 
  1303 ;;		 -> line(64), 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1319 ;;Total ram usage:        2 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    8
  1322 ;; This function calls:
  1323 ;;		_printf
  1324 ;;		_strcmp
  1325 ;; This function is called by:
  1326 ;;		_ringBufferPull
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text3
  1331  010000                     __ptext3:
  1332                           	opt stack 0
  1333  010000                     _ringBufferLUT:
  1334                           	opt stack 21
  1335                           
  1336                           ;ring_buffer_LUT.c: 13: if((0 == strcmp(line, "LEDs On"))) {
  1337                           
  1338                           ;incstack = 0
  1339  010000  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1340  010004  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1341  010008  0ED8               	movlw	low STR_6
  1342  01000A  6E1C               	movwf	strcmp@s2,c
  1343  01000C  0EFF               	movlw	high STR_6
  1344  01000E  6E1D               	movwf	strcmp@s2+1,c
  1345  010010  EC11  F082         	call	_strcmp	;wreg free
  1346  010014  501A               	movf	?_strcmp,w,c
  1347  010016  101B               	iorwf	?_strcmp+1,w,c
  1348  010018  A4D8               	btfss	status,2,c
  1349  01001A  D015               	goto	l342
  1350                           
  1351                           ;ring_buffer_LUT.c: 16: LATF = 0x00;
  1352  01001C  0E00               	movlw	0
  1353  01001E  6E7E               	movwf	3966,c	;volatile
  1354                           
  1355                           ;ring_buffer_LUT.c: 19: printf("\n\r");
  1356  010020  0EBE               	movlw	low (STR_8+15)
  1357  010022  6E1C               	movwf	printf@f,c
  1358  010024  0EFF               	movlw	high (STR_8+15)
  1359  010026  6E1D               	movwf	printf@f+1,c
  1360  010028  ECF4  F082         	call	_printf	;wreg free
  1361                           
  1362                           ;ring_buffer_LUT.c: 21: printf("    LATF = 0x00\n\r");
  1363  01002C  0EAF               	movlw	low STR_8
  1364  01002E  6E1C               	movwf	printf@f,c
  1365  010030  0EFF               	movlw	high STR_8
  1366  010032  6E1D               	movwf	printf@f+1,c
  1367  010034  ECF4  F082         	call	_printf	;wreg free
  1368                           
  1369                           ;ring_buffer_LUT.c: 24: printf("\n\r");
  1370  010038  0EBE               	movlw	low (STR_8+15)
  1371  01003A  6E1C               	movwf	printf@f,c
  1372  01003C  0EFF               	movlw	high (STR_8+15)
  1373  01003E  6E1D               	movwf	printf@f+1,c
  1374  010040  ECF4  F082         	call	_printf	;wreg free
  1375                           
  1376                           ;ring_buffer_LUT.c: 26: }
  1377  010044  0012               	return	
  1378  010046                     l342:
  1379                           
  1380                           ;ring_buffer_LUT.c: 30: else if((0 == strcmp(line, "LEDs Off"))) {
  1381  010046  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1382  01004A  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1383  01004E  0ECF               	movlw	low STR_10
  1384  010050  6E1C               	movwf	strcmp@s2,c
  1385  010052  0EFF               	movlw	high STR_10
  1386  010054  6E1D               	movwf	strcmp@s2+1,c
  1387  010056  EC11  F082         	call	_strcmp	;wreg free
  1388  01005A  501A               	movf	?_strcmp,w,c
  1389  01005C  101B               	iorwf	?_strcmp+1,w,c
  1390  01005E  A4D8               	btfss	status,2,c
  1391  010060  D014               	goto	l344
  1392                           
  1393                           ;ring_buffer_LUT.c: 33: LATF = 0xFF;
  1394  010062  687E               	setf	3966,c	;volatile
  1395                           
  1396                           ;ring_buffer_LUT.c: 36: printf("\n\r");
  1397  010064  0EBE               	movlw	low (STR_8+15)
  1398  010066  6E1C               	movwf	printf@f,c
  1399  010068  0EFF               	movlw	high (STR_8+15)
  1400  01006A  6E1D               	movwf	printf@f+1,c
  1401  01006C  ECF4  F082         	call	_printf	;wreg free
  1402                           
  1403                           ;ring_buffer_LUT.c: 38: printf("LATF = 0xFF\n\r");
  1404  010070  0EC1               	movlw	low STR_12
  1405  010072  6E1C               	movwf	printf@f,c
  1406  010074  0EFF               	movlw	high STR_12
  1407  010076  6E1D               	movwf	printf@f+1,c
  1408  010078  ECF4  F082         	call	_printf	;wreg free
  1409                           
  1410                           ;ring_buffer_LUT.c: 41: printf("\n\r");
  1411  01007C  0EBE               	movlw	low (STR_8+15)
  1412  01007E  6E1C               	movwf	printf@f,c
  1413  010080  0EFF               	movlw	high (STR_8+15)
  1414  010082  6E1D               	movwf	printf@f+1,c
  1415  010084  ECF4  F082         	call	_printf	;wreg free
  1416                           
  1417                           ;ring_buffer_LUT.c: 43: }
  1418  010088  0012               	return	
  1419  01008A                     l344:
  1420                           
  1421                           ;ring_buffer_LUT.c: 47: else if((0 == strcmp(line, "Reset"))) {
  1422  01008A  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1423  01008E  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1424  010092  0EE6               	movlw	low STR_14
  1425  010094  6E1C               	movwf	strcmp@s2,c
  1426  010096  0EFF               	movlw	high STR_14
  1427  010098  6E1D               	movwf	strcmp@s2+1,c
  1428  01009A  EC11  F082         	call	_strcmp	;wreg free
  1429  01009E  501A               	movf	?_strcmp,w,c
  1430  0100A0  101B               	iorwf	?_strcmp+1,w,c
  1431  0100A2  A4D8               	btfss	status,2,c
  1432  0100A4  D00E               	goto	l346
  1433                           
  1434                           ;ring_buffer_LUT.c: 50: printf("\033[2J");
  1435  0100A6  0EF1               	movlw	low STR_2
  1436  0100A8  6E1C               	movwf	printf@f,c
  1437  0100AA  0EFF               	movlw	high STR_2
  1438  0100AC  6E1D               	movwf	printf@f+1,c
  1439  0100AE  ECF4  F082         	call	_printf	;wreg free
  1440                           
  1441                           ;ring_buffer_LUT.c: 53: printf("\033[H");
  1442  0100B2  0EF6               	movlw	low STR_3
  1443  0100B4  6E1C               	movwf	printf@f,c
  1444  0100B6  0EFF               	movlw	high STR_3
  1445  0100B8  6E1D               	movwf	printf@f+1,c
  1446  0100BA  ECF4  F082         	call	_printf	;wreg free
  1447  0100BE  00FF               	reset		;# 
  1448                           
  1449                           ;ring_buffer_LUT.c: 58: }
  1450  0100C0  0012               	return	
  1451  0100C2                     l346:
  1452                           
  1453                           ;ring_buffer_LUT.c: 61: else if((0 == strcmp(line, "Clear"))) {
  1454  0100C2  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1455  0100C6  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1456  0100CA  0EE0               	movlw	low STR_17
  1457  0100CC  6E1C               	movwf	strcmp@s2,c
  1458  0100CE  0EFF               	movlw	high STR_17
  1459  0100D0  6E1D               	movwf	strcmp@s2+1,c
  1460  0100D2  EC11  F082         	call	_strcmp	;wreg free
  1461  0100D6  501A               	movf	?_strcmp,w,c
  1462  0100D8  101B               	iorwf	?_strcmp+1,w,c
  1463  0100DA  A4D8               	btfss	status,2,c
  1464  0100DC  D00D               	goto	l348
  1465                           
  1466                           ;ring_buffer_LUT.c: 64: printf("\033[2J");
  1467  0100DE  0EF1               	movlw	low STR_2
  1468  0100E0  6E1C               	movwf	printf@f,c
  1469  0100E2  0EFF               	movlw	high STR_2
  1470  0100E4  6E1D               	movwf	printf@f+1,c
  1471  0100E6  ECF4  F082         	call	_printf	;wreg free
  1472                           
  1473                           ;ring_buffer_LUT.c: 67: printf("\033[H");
  1474  0100EA  0EF6               	movlw	low STR_3
  1475  0100EC  6E1C               	movwf	printf@f,c
  1476  0100EE  0EFF               	movlw	high STR_3
  1477  0100F0  6E1D               	movwf	printf@f+1,c
  1478  0100F2  ECF4  F082         	call	_printf	;wreg free
  1479                           
  1480                           ;ring_buffer_LUT.c: 69: }
  1481  0100F6  0012               	return	
  1482  0100F8                     l348:
  1483                           
  1484                           ;ring_buffer_LUT.c: 72: else if((0 == strcmp(line, "Help"))) {
  1485  0100F8  C021  F01A         	movff	ringBufferLUT@line,strcmp@s1
  1486  0100FC  C022  F01B         	movff	ringBufferLUT@line+1,strcmp@s1+1
  1487  010100  0EEC               	movlw	low STR_20
  1488  010102  6E1C               	movwf	strcmp@s2,c
  1489  010104  0EFF               	movlw	high STR_20
  1490  010106  6E1D               	movwf	strcmp@s2+1,c
  1491  010108  EC11  F082         	call	_strcmp	;wreg free
  1492  01010C  501A               	movf	?_strcmp,w,c
  1493  01010E  101B               	iorwf	?_strcmp+1,w,c
  1494  010110  A4D8               	btfss	status,2,c
  1495  010112  0012               	return	
  1496                           
  1497                           ;ring_buffer_LUT.c: 75: printf("\n\r");
  1498  010114  0EBE               	movlw	low (STR_8+15)
  1499  010116  6E1C               	movwf	printf@f,c
  1500  010118  0EFF               	movlw	high (STR_8+15)
  1501  01011A  6E1D               	movwf	printf@f+1,c
  1502  01011C  ECF4  F082         	call	_printf	;wreg free
  1503                           
  1504                           ;ring_buffer_LUT.c: 77: printf("   List of supported commands so far:\n\r"
  1505                           ;ring_buffer_LUT.c: 78: "   LEDs On: Turns all LEDs On\n\r"
  1506                           ;ring_buffer_LUT.c: 79: "   LEDs Off: Turns all LEDs Off\n\r"
  1507                           ;ring_buffer_LUT.c: 80: "   Reset: Clears the screen and resets the micro\n\r"
  1508                           ;ring_buffer_LUT.c: 81: "   Clear: Clears the screen but doesn't reset the micro\n\r"
  1509                           ;ring_buffer_LUT.c: 82: "   Help: This message, lists commands\n\r");
  1510  010120  0E07               	movlw	low STR_22
  1511  010122  6E1C               	movwf	printf@f,c
  1512  010124  0EFE               	movlw	high STR_22
  1513  010126  6E1D               	movwf	printf@f+1,c
  1514  010128  ECF4  F082         	call	_printf	;wreg free
  1515                           
  1516                           ;ring_buffer_LUT.c: 85: printf("\n\r");
  1517  01012C  0EBE               	movlw	low (STR_8+15)
  1518  01012E  6E1C               	movwf	printf@f,c
  1519  010130  0EFF               	movlw	high (STR_8+15)
  1520  010132  6E1D               	movwf	printf@f+1,c
  1521  010134  ECF4  F082         	call	_printf	;wreg free
  1522  010138  0012               	return	
  1523  01013A                     __end_of_ringBufferLUT:
  1524                           	opt stack 0
  1525                           intcon	equ	0xFF2
  1526                           postinc0	equ	0xFEE
  1527                           wreg	equ	0xFE8
  1528                           indf2	equ	0xFDF
  1529                           postinc2	equ	0xFDE
  1530                           fsr2h	equ	0xFDA
  1531                           fsr2l	equ	0xFD9
  1532                           status	equ	0xFD8
  1533                           
  1534 ;; *************** function _strcmp *****************
  1535 ;; Defined at:
  1536 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  s1              2   25[COMRAM] PTR const unsigned char 
  1539 ;;		 -> line(64), 
  1540 ;;  s2              2   27[COMRAM] PTR const unsigned char 
  1541 ;;		 -> STR_20(5), STR_17(6), STR_14(6), STR_10(9), 
  1542 ;;		 -> STR_6(8), 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  r               1   30[COMRAM] char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  2   25[COMRAM] int 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;Total ram usage:        6 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    5
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_ringBufferLUT
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text4
  1569  010422                     __ptext4:
  1570                           	opt stack 0
  1571  010422                     _strcmp:
  1572                           	opt stack 23
  1573                           
  1574                           ;incstack = 0
  1575  010422  D004               	goto	l909
  1576  010424  4A1A               	infsnz	strcmp@s1,f,c
  1577  010426  2A1B               	incf	strcmp@s1+1,f,c
  1578  010428  4A1C               	infsnz	strcmp@s2,f,c
  1579  01042A  2A1D               	incf	strcmp@s2+1,f,c
  1580  01042C                     l909:
  1581  01042C  C01A  FFD9         	movff	strcmp@s1,fsr2l
  1582  010430  C01B  FFDA         	movff	strcmp@s1+1,fsr2h
  1583  010434  50DF               	movf	indf2,w,c
  1584  010436  6E1E               	movwf	??_strcmp& (0+255),c
  1585  010438  C01C  FFF6         	movff	strcmp@s2,tblptrl
  1586  01043C  C01D  FFF7         	movff	strcmp@s2+1,tblptrh
  1587  010440                     	if	0	;tblptru may be non-zero
  1588  010440                     	endif
  1589  010440                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1590  010440  0E00               	movlw	low (__mediumconst shr (0+16))
  1591  010442  6EF8               	movwf	tblptru,c
  1592  010444                     	endif
  1593  010444  0008               	tblrd		*
  1594  010446  50F5               	movf	tablat,w,c
  1595  010448  0800               	sublw	0
  1596  01044A  241E               	addwf	??_strcmp,w,c
  1597  01044C  6E1F               	movwf	strcmp@r,c
  1598  01044E  501F               	movf	strcmp@r,w,c
  1599  010450  A4D8               	btfss	status,2,c
  1600  010452  D007               	goto	u470
  1601  010454  C01A  FFD9         	movff	strcmp@s1,fsr2l
  1602  010458  C01B  FFDA         	movff	strcmp@s1+1,fsr2h
  1603  01045C  50DF               	movf	indf2,w,c
  1604  01045E  A4D8               	btfss	status,2,c
  1605  010460  D7E1               	goto	l910
  1606  010462                     u470:
  1607  010462  501F               	movf	strcmp@r,w,c
  1608  010464  6E1A               	movwf	?_strcmp,c
  1609  010466  6A1B               	clrf	?_strcmp+1,c
  1610  010468  BE1A               	btfsc	?_strcmp,7,c
  1611  01046A  061B               	decf	?_strcmp+1,f,c
  1612  01046C  0012               	return	
  1613  01046E                     __end_of_strcmp:
  1614                           	opt stack 0
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           intcon	equ	0xFF2
  1620                           postinc0	equ	0xFEE
  1621                           wreg	equ	0xFE8
  1622                           indf2	equ	0xFDF
  1623                           postinc2	equ	0xFDE
  1624                           fsr2h	equ	0xFDA
  1625                           fsr2l	equ	0xFD9
  1626                           status	equ	0xFD8
  1627                           
  1628 ;; *************** function _EUSART2_Read *****************
  1629 ;; Defined at:
  1630 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  readValue       1   25[COMRAM] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      unsigned char 
  1637 ;; Registers used:
  1638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1648 ;;Total ram usage:        1 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    5
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_ringBufferPull
  1655 ;;		_getch
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text5
  1660  010520                     __ptext5:
  1661                           	opt stack 0
  1662  010520                     _EUSART2_Read:
  1663                           	opt stack 24
  1664                           
  1665                           ;eusart2.c: 132: uint8_t readValue = 0;
  1666                           
  1667                           ;incstack = 0
  1668  010520  0E00               	movlw	0
  1669  010522  6E1A               	movwf	EUSART2_Read@readValue,c
  1670  010524                     
  1671                           ;eusart2.c: 135: {
  1672  010524  5036               	movf	_eusart2RxCount,w,c	;volatile
  1673  010526  B4D8               	btfsc	status,2,c
  1674  010528  D7FD               	goto	l178
  1675                           
  1676                           ;eusart2.c: 136: }
  1677                           ;eusart2.c: 138: readValue = eusart2RxBuffer[eusart2RxTail++];
  1678  01052A  5037               	movf	_eusart2RxTail,w,c	;volatile
  1679  01052C  0D01               	mullw	1
  1680  01052E  0E60               	movlw	low _eusart2RxBuffer
  1681  010530  24F3               	addwf	prodl,w,c
  1682  010532  6ED9               	movwf	fsr2l,c
  1683  010534  0E00               	movlw	high _eusart2RxBuffer
  1684  010536  20F4               	addwfc	prodh,w,c
  1685  010538  6EDA               	movwf	fsr2h,c
  1686  01053A  50DF               	movf	indf2,w,c
  1687  01053C  6E1A               	movwf	EUSART2_Read@readValue,c
  1688  01053E  2A37               	incf	_eusart2RxTail,f,c	;volatile
  1689                           
  1690                           ;eusart2.c: 139: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  1691  010540  0E3F               	movlw	63
  1692  010542  6437               	cpfsgt	_eusart2RxTail,c	;volatile
  1693  010544  D002               	goto	l180
  1694                           
  1695                           ;eusart2.c: 140: {
  1696                           ;eusart2.c: 141: eusart2RxTail = 0;
  1697  010546  0E00               	movlw	0
  1698  010548  6E37               	movwf	_eusart2RxTail,c	;volatile
  1699  01054A                     l180:
  1700                           
  1701                           ;eusart2.c: 142: }
  1702                           ;eusart2.c: 143: PIE3bits.RC2IE = 0;
  1703  01054A  010E               	movlb	14	; () banked
  1704  01054C  9F2C               	bcf	44,7,b	;volatile
  1705                           
  1706                           ; BSR set to: 14
  1707                           ;eusart2.c: 144: eusart2RxCount--;
  1708  01054E  0636               	decf	_eusart2RxCount,f,c	;volatile
  1709                           
  1710                           ; BSR set to: 14
  1711                           ;eusart2.c: 145: PIE3bits.RC2IE = 1;
  1712  010550  8F2C               	bsf	44,7,b	;volatile
  1713                           
  1714                           ; BSR set to: 14
  1715                           ;eusart2.c: 147: return readValue;
  1716  010552  501A               	movf	EUSART2_Read@readValue,w,c
  1717  010554  0012               	return	
  1718  010556                     __end_of_EUSART2_Read:
  1719                           	opt stack 0
  1720                           tblptru	equ	0xFF8
  1721                           tblptrh	equ	0xFF7
  1722                           tblptrl	equ	0xFF6
  1723                           tablat	equ	0xFF5
  1724                           prodh	equ	0xFF4
  1725                           prodl	equ	0xFF3
  1726                           intcon	equ	0xFF2
  1727                           postinc0	equ	0xFEE
  1728                           wreg	equ	0xFE8
  1729                           indf2	equ	0xFDF
  1730                           postinc2	equ	0xFDE
  1731                           fsr2h	equ	0xFDA
  1732                           fsr2l	equ	0xFD9
  1733                           status	equ	0xFD8
  1734                           
  1735 ;; *************** function _printResetMessage *****************
  1736 ;; Defined at:
  1737 ;;		line 50 in file "ring_buffer_interface.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    8
  1758 ;; This function calls:
  1759 ;;		_printf
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text6
  1766  010556                     __ptext6:
  1767                           	opt stack 0
  1768  010556                     _printResetMessage:
  1769                           	opt stack 22
  1770                           
  1771                           ;ring_buffer_interface.c: 53: printf("\033[2J");
  1772                           
  1773                           ; BSR set to: 14
  1774                           ;incstack = 0
  1775  010556  0EF1               	movlw	low STR_2
  1776  010558  6E1C               	movwf	printf@f,c
  1777  01055A  0EFF               	movlw	high STR_2
  1778  01055C  6E1D               	movwf	printf@f+1,c
  1779  01055E  ECF4  F082         	call	_printf	;wreg free
  1780                           
  1781                           ;ring_buffer_interface.c: 56: printf("\033[H");
  1782  010562  0EF6               	movlw	low STR_3
  1783  010564  6E1C               	movwf	printf@f,c
  1784  010566  0EFF               	movlw	high STR_3
  1785  010568  6E1D               	movwf	printf@f+1,c
  1786  01056A  ECF4  F082         	call	_printf	;wreg free
  1787                           
  1788                           ;ring_buffer_interface.c: 59: printf("PIC18F67K40 mTouch Demo\n\r"
  1789                           ;ring_buffer_interface.c: 60: "Baud rate: 115200 kbps\n\r"
  1790                           ;ring_buffer_interface.c: 61: "No parity, 8 bits, no flow control, 1 stop bit\n\r"
  1791                           ;ring_buffer_interface.c: 62: "Commands are case sensitive\n\r"
  1792                           ;ring_buffer_interface.c: 63: "Enter a command, or Help for list of commands\n\r");
  1793  01056E  0E01               	movlw	low STR_4
  1794  010570  6E1C               	movwf	printf@f,c
  1795  010572  0EFF               	movlw	high STR_4
  1796  010574  6E1D               	movwf	printf@f+1,c
  1797  010576  ECF4  F082         	call	_printf	;wreg free
  1798                           
  1799                           ;ring_buffer_interface.c: 67: printf("\n\r");
  1800  01057A  0EBE               	movlw	low (STR_8+15)
  1801  01057C  6E1C               	movwf	printf@f,c
  1802  01057E  0EFF               	movlw	high (STR_8+15)
  1803  010580  6E1D               	movwf	printf@f+1,c
  1804  010582  ECF4  F082         	call	_printf	;wreg free
  1805  010586  0012               	return		;funcret
  1806  010588                     __end_of_printResetMessage:
  1807                           	opt stack 0
  1808                           tblptru	equ	0xFF8
  1809                           tblptrh	equ	0xFF7
  1810                           tblptrl	equ	0xFF6
  1811                           tablat	equ	0xFF5
  1812                           prodh	equ	0xFF4
  1813                           prodl	equ	0xFF3
  1814                           intcon	equ	0xFF2
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           indf2	equ	0xFDF
  1818                           postinc2	equ	0xFDE
  1819                           fsr2h	equ	0xFDA
  1820                           fsr2l	equ	0xFD9
  1821                           status	equ	0xFD8
  1822                           
  1823 ;; *************** function _printf *****************
  1824 ;; Defined at:
  1825 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  f               2   27[COMRAM] PTR const unsigned char 
  1828 ;;		 -> STR_23(3), STR_22(250), STR_21(3), STR_19(4), 
  1829 ;;		 -> STR_18(5), STR_16(4), STR_15(5), STR_13(3), 
  1830 ;;		 -> STR_12(14), STR_11(3), STR_9(3), STR_8(18), 
  1831 ;;		 -> STR_7(3), STR_5(3), STR_4(174), STR_3(4), 
  1832 ;;		 -> STR_2(5), STR_1(4), 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  tmpval          4    0        struct .
  1835 ;;  cp              3    0        PTR const unsigned char 
  1836 ;;  ap              2   29[COMRAM] PTR void [1]
  1837 ;;		 -> ?i2_printf(2), ?_printf(2), 
  1838 ;;  len             2    0        unsigned int 
  1839 ;;  val             2    0        unsigned int 
  1840 ;;  c               1   31[COMRAM] char 
  1841 ;;  flag            1    0        unsigned char 
  1842 ;;  prec            1    0        char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2   27[COMRAM] int 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;Total ram usage:        5 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    7
  1859 ;; This function calls:
  1860 ;;		_putch
  1861 ;; This function is called by:
  1862 ;;		_printResetMessage
  1863 ;;		_ringBufferLUT
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text7
  1868  0105E8                     __ptext7:
  1869                           	opt stack 0
  1870  0105E8                     _printf:
  1871                           	opt stack 21
  1872                           
  1873                           ;doprnt.c: 466: va_list ap;
  1874                           ;doprnt.c: 499: signed char c;
  1875                           ;doprnt.c: 506: signed char prec;
  1876                           ;doprnt.c: 508: unsigned char flag;
  1877                           ;doprnt.c: 523: union {
  1878                           ;doprnt.c: 524: unsigned long vd;
  1879                           ;doprnt.c: 525: double integ;
  1880                           ;doprnt.c: 526: } tmpval;
  1881                           ;doprnt.c: 528: unsigned int val;
  1882                           ;doprnt.c: 529: unsigned len;
  1883                           ;doprnt.c: 530: const char * cp;
  1884                           ;doprnt.c: 533: *ap = __va_start();
  1885                           
  1886                           ;incstack = 0
  1887  0105E8  0E1E               	movlw	low (?_printf+2)
  1888  0105EA  6E1E               	movwf	printf@ap,c
  1889  0105EC  0E00               	movlw	high (?_printf+2)
  1890  0105EE  6E1F               	movwf	printf@ap+1,c
  1891                           
  1892                           ;doprnt.c: 536: while(c = *f++) {
  1893  0105F0  D003               	goto	l358
  1894  0105F2                     
  1895                           ;doprnt.c: 540: {
  1896                           ;doprnt.c: 541: (putch(c) );
  1897  0105F2  5020               	movf	printf@c,w,c
  1898  0105F4  EC55  F083         	call	_putch
  1899  0105F8                     l358:
  1900  0105F8  C01C  FFF6         	movff	printf@f,tblptrl
  1901  0105FC  C01D  FFF7         	movff	printf@f+1,tblptrh
  1902  010600  4A1C               	infsnz	printf@f,f,c
  1903  010602  2A1D               	incf	printf@f+1,f,c
  1904  010604                     	if	0	;tblptru may be non-zero
  1905  010604                     	endif
  1906  010604                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1907  010604  0E00               	movlw	low (__mediumconst shr (0+16))
  1908  010606  6EF8               	movwf	tblptru,c
  1909  010608                     	endif
  1910  010608  0008               	tblrd		*
  1911  01060A  CFF5 F020          	movff	tablat,printf@c
  1912  01060E  5020               	movf	printf@c,w,c
  1913  010610  B4D8               	btfsc	status,2,c
  1914  010612  0012               	return	
  1915  010614  D7EE               	goto	l359
  1916  010616                     __end_of_printf:
  1917                           	opt stack 0
  1918                           tblptru	equ	0xFF8
  1919                           tblptrh	equ	0xFF7
  1920                           tblptrl	equ	0xFF6
  1921                           tablat	equ	0xFF5
  1922                           prodh	equ	0xFF4
  1923                           prodl	equ	0xFF3
  1924                           intcon	equ	0xFF2
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           indf2	equ	0xFDF
  1928                           postinc2	equ	0xFDE
  1929                           fsr2h	equ	0xFDA
  1930                           fsr2l	equ	0xFD9
  1931                           status	equ	0xFD8
  1932                           
  1933 ;; *************** function _putch *****************
  1934 ;; Defined at:
  1935 ;;		line 178 in file "mcc_generated_files/eusart2.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  txData          1    wreg     unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  txData          1   26[COMRAM] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1953 ;;Total ram usage:        1 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    6
  1956 ;; This function calls:
  1957 ;;		_EUSART2_Write
  1958 ;; This function is called by:
  1959 ;;		_printf
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text8
  1964  0106AA                     __ptext8:
  1965                           	opt stack 0
  1966  0106AA                     _putch:
  1967                           	opt stack 21
  1968                           
  1969                           ;incstack = 0
  1970                           ;putch@txData stored from wreg
  1971  0106AA  6E1B               	movwf	putch@txData,c
  1972                           
  1973                           ;eusart2.c: 180: EUSART2_Write(txData);
  1974  0106AC  501B               	movf	putch@txData,w,c
  1975  0106AE  EC37  F082         	call	_EUSART2_Write
  1976  0106B2  0012               	return		;funcret
  1977  0106B4                     __end_of_putch:
  1978                           	opt stack 0
  1979                           tblptru	equ	0xFF8
  1980                           tblptrh	equ	0xFF7
  1981                           tblptrl	equ	0xFF6
  1982                           tablat	equ	0xFF5
  1983                           prodh	equ	0xFF4
  1984                           prodl	equ	0xFF3
  1985                           intcon	equ	0xFF2
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           indf2	equ	0xFDF
  1989                           postinc2	equ	0xFDE
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _EUSART2_Write *****************
  1995 ;; Defined at:
  1996 ;;		line 150 in file "mcc_generated_files/eusart2.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  txData          1    wreg     unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  txData          1   25[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;Total ram usage:        1 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    5
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_putch
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text9
  2025  01046E                     __ptext9:
  2026                           	opt stack 0
  2027  01046E                     _EUSART2_Write:
  2028                           	opt stack 21
  2029                           
  2030                           ;incstack = 0
  2031                           ;EUSART2_Write@txData stored from wreg
  2032  01046E  6E1A               	movwf	EUSART2_Write@txData,c
  2033  010470                     
  2034                           ;eusart2.c: 153: {
  2035                           
  2036                           ;eusart2.c: 152: while(0 == eusart2TxBufferRemaining)
  2037  010470  5034               	movf	_eusart2TxBufferRemaining,w,c	;volatile
  2038  010472  B4D8               	btfsc	status,2,c
  2039  010474  D7FD               	goto	l1321
  2040                           
  2041                           ;eusart2.c: 154: }
  2042                           ;eusart2.c: 156: if(0 == PIE3bits.TX2IE)
  2043  010476  010E               	movlb	14	; () banked
  2044  010478  BD2C               	btfsc	44,6,b	;volatile
  2045  01047A  D003               	goto	l187
  2046                           
  2047                           ; BSR set to: 14
  2048                           ;eusart2.c: 157: {
  2049                           ;eusart2.c: 158: TX2REG = txData;
  2050  01047C  C01A  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
  2051                           
  2052                           ;eusart2.c: 159: }
  2053  010480  D012               	goto	l188
  2054  010482                     l187:
  2055                           
  2056                           ; BSR set to: 14
  2057                           ;eusart2.c: 160: else
  2058                           ;eusart2.c: 161: {
  2059                           ;eusart2.c: 162: PIE3bits.TX2IE = 0;
  2060  010482  9D2C               	bcf	44,6,b	;volatile
  2061                           
  2062                           ; BSR set to: 14
  2063                           ;eusart2.c: 163: eusart2TxBuffer[eusart2TxHead++] = txData;
  2064  010484  503A               	movf	_eusart2TxHead,w,c	;volatile
  2065  010486  0D01               	mullw	1
  2066  010488  0E00               	movlw	low _eusart2TxBuffer
  2067  01048A  24F3               	addwf	prodl,w,c
  2068  01048C  6ED9               	movwf	fsr2l,c
  2069  01048E  0E01               	movlw	high _eusart2TxBuffer
  2070  010490  20F4               	addwfc	prodh,w,c
  2071  010492  6EDA               	movwf	fsr2h,c
  2072  010494  C01A  FFDF         	movff	EUSART2_Write@txData,indf2
  2073                           
  2074                           ; BSR set to: 14
  2075  010498  2A3A               	incf	_eusart2TxHead,f,c	;volatile
  2076                           
  2077                           ; BSR set to: 14
  2078                           ;eusart2.c: 164: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  2079  01049A  0E3F               	movlw	63
  2080  01049C  643A               	cpfsgt	_eusart2TxHead,c	;volatile
  2081  01049E  D002               	goto	l189
  2082                           
  2083                           ; BSR set to: 14
  2084                           ;eusart2.c: 165: {
  2085                           ;eusart2.c: 166: eusart2TxHead = 0;
  2086  0104A0  0E00               	movlw	0
  2087  0104A2  6E3A               	movwf	_eusart2TxHead,c	;volatile
  2088  0104A4                     l189:
  2089                           
  2090                           ; BSR set to: 14
  2091                           ;eusart2.c: 167: }
  2092                           ;eusart2.c: 168: eusart2TxBufferRemaining--;
  2093                           
  2094                           ; BSR set to: 14
  2095  0104A4  0634               	decf	_eusart2TxBufferRemaining,f,c	;volatile
  2096  0104A6                     l188:
  2097                           
  2098                           ; BSR set to: 14
  2099                           ;eusart2.c: 169: }
  2100                           ;eusart2.c: 170: PIE3bits.TX2IE = 1;
  2101                           
  2102                           ; BSR set to: 14
  2103  0104A6  8D2C               	bsf	44,6,b	;volatile
  2104                           
  2105                           ; BSR set to: 14
  2106  0104A8  0012               	return		;funcret
  2107  0104AA                     __end_of_EUSART2_Write:
  2108                           	opt stack 0
  2109                           tblptru	equ	0xFF8
  2110                           tblptrh	equ	0xFF7
  2111                           tblptrl	equ	0xFF6
  2112                           tablat	equ	0xFF5
  2113                           prodh	equ	0xFF4
  2114                           prodl	equ	0xFF3
  2115                           intcon	equ	0xFF2
  2116                           postinc0	equ	0xFEE
  2117                           wreg	equ	0xFE8
  2118                           indf2	equ	0xFDF
  2119                           postinc2	equ	0xFDE
  2120                           fsr2h	equ	0xFDA
  2121                           fsr2l	equ	0xFD9
  2122                           status	equ	0xFD8
  2123                           
  2124 ;; *************** function _SYSTEM_Initialize *****************
  2125 ;; Defined at:
  2126 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    7
  2147 ;; This function calls:
  2148 ;;		_EUSART2_Initialize
  2149 ;;		_INTERRUPT_Initialize
  2150 ;;		_OSCILLATOR_Initialize
  2151 ;;		_PIN_MANAGER_Initialize
  2152 ;;		_PMD_Initialize
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text10
  2159  010678                     __ptext10:
  2160                           	opt stack 0
  2161  010678                     _SYSTEM_Initialize:
  2162                           	opt stack 23
  2163                           
  2164                           ;mcc.c: 52: INTERRUPT_Initialize();
  2165                           
  2166                           ; BSR set to: 14
  2167                           ;incstack = 0
  2168  010678  EC5A  F083         	call	_INTERRUPT_Initialize	;wreg free
  2169                           
  2170                           ;mcc.c: 53: PMD_Initialize();
  2171  01067C  EC22  F083         	call	_PMD_Initialize	;wreg free
  2172                           
  2173                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2174  010680  EC72  F081         	call	_PIN_MANAGER_Initialize	;wreg free
  2175                           
  2176                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2177  010684  EC30  F083         	call	_OSCILLATOR_Initialize	;wreg free
  2178                           
  2179                           ;mcc.c: 56: EUSART2_Initialize();
  2180  010688  ECBD  F081         	call	_EUSART2_Initialize	;wreg free
  2181  01068C  0012               	return		;funcret
  2182  01068E                     __end_of_SYSTEM_Initialize:
  2183                           	opt stack 0
  2184                           tblptru	equ	0xFF8
  2185                           tblptrh	equ	0xFF7
  2186                           tblptrl	equ	0xFF6
  2187                           tablat	equ	0xFF5
  2188                           prodh	equ	0xFF4
  2189                           prodl	equ	0xFF3
  2190                           intcon	equ	0xFF2
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           indf2	equ	0xFDF
  2194                           postinc2	equ	0xFDE
  2195                           fsr2h	equ	0xFDA
  2196                           fsr2l	equ	0xFD9
  2197                           status	equ	0xFD8
  2198                           
  2199 ;; *************** function _PMD_Initialize *****************
  2200 ;; Defined at:
  2201 ;;		line 73 in file "mcc_generated_files/mcc.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    5
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_SYSTEM_Initialize
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text11
  2230  010644                     __ptext11:
  2231                           	opt stack 0
  2232  010644                     _PMD_Initialize:
  2233                           	opt stack 24
  2234                           
  2235                           ;mcc.c: 76: PMD0 = 0x00;
  2236                           
  2237                           ;incstack = 0
  2238  010644  0E00               	movlw	0
  2239  010646  010E               	movlb	14	; () banked
  2240  010648  6F4C               	movwf	76,b	;volatile
  2241                           
  2242                           ;mcc.c: 78: PMD1 = 0x00;
  2243  01064A  0E00               	movlw	0
  2244  01064C  6F4D               	movwf	77,b	;volatile
  2245                           
  2246                           ;mcc.c: 80: PMD2 = 0x00;
  2247  01064E  0E00               	movlw	0
  2248  010650  6F4E               	movwf	78,b	;volatile
  2249                           
  2250                           ;mcc.c: 82: PMD3 = 0x00;
  2251  010652  0E00               	movlw	0
  2252  010654  6F4F               	movwf	79,b	;volatile
  2253                           
  2254                           ;mcc.c: 84: PMD4 = 0x00;
  2255  010656  0E00               	movlw	0
  2256  010658  6F50               	movwf	80,b	;volatile
  2257                           
  2258                           ;mcc.c: 86: PMD5 = 0x00;
  2259  01065A  0E00               	movlw	0
  2260  01065C  6F51               	movwf	81,b	;volatile
  2261                           
  2262                           ; BSR set to: 14
  2263  01065E  0012               	return		;funcret
  2264  010660                     __end_of_PMD_Initialize:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           prodh	equ	0xFF4
  2271                           prodl	equ	0xFF3
  2272                           intcon	equ	0xFF2
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           indf2	equ	0xFDF
  2276                           postinc2	equ	0xFDE
  2277                           fsr2h	equ	0xFDA
  2278                           fsr2l	equ	0xFD9
  2279                           status	equ	0xFD8
  2280                           
  2281 ;; *************** function _PIN_MANAGER_Initialize *****************
  2282 ;; Defined at:
  2283 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;		None
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2301 ;;Total ram usage:        0 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    5
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_SYSTEM_Initialize
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text12
  2312  0102E4                     __ptext12:
  2313                           	opt stack 0
  2314  0102E4                     _PIN_MANAGER_Initialize:
  2315                           	opt stack 24
  2316                           
  2317                           ;pin_manager.c: 62: LATE = 0x00;
  2318                           
  2319                           ; BSR set to: 14
  2320                           ;incstack = 0
  2321  0102E4  0E00               	movlw	0
  2322  0102E6  6E7D               	movwf	3965,c	;volatile
  2323                           
  2324                           ;pin_manager.c: 63: LATD = 0x00;
  2325  0102E8  0E00               	movlw	0
  2326  0102EA  6E7C               	movwf	3964,c	;volatile
  2327                           
  2328                           ;pin_manager.c: 64: LATA = 0x00;
  2329  0102EC  0E00               	movlw	0
  2330  0102EE  6E79               	movwf	3961,c	;volatile
  2331                           
  2332                           ;pin_manager.c: 65: LATF = 0x00;
  2333  0102F0  0E00               	movlw	0
  2334  0102F2  6E7E               	movwf	3966,c	;volatile
  2335                           
  2336                           ;pin_manager.c: 66: LATB = 0x00;
  2337  0102F4  0E00               	movlw	0
  2338  0102F6  6E7A               	movwf	3962,c	;volatile
  2339                           
  2340                           ;pin_manager.c: 67: LATG = 0x00;
  2341  0102F8  0E00               	movlw	0
  2342  0102FA  6E7F               	movwf	3967,c	;volatile
  2343                           
  2344                           ;pin_manager.c: 68: LATC = 0x00;
  2345  0102FC  0E00               	movlw	0
  2346  0102FE  6E7B               	movwf	3963,c	;volatile
  2347                           
  2348                           ;pin_manager.c: 69: LATH = 0x00;
  2349  010300  0E00               	movlw	0
  2350  010302  6E80               	movwf	3968,c	;volatile
  2351                           
  2352                           ;pin_manager.c: 74: TRISE = 0xFF;
  2353  010304  6885               	setf	3973,c	;volatile
  2354                           
  2355                           ;pin_manager.c: 75: TRISF = 0xFF;
  2356  010306  6886               	setf	3974,c	;volatile
  2357                           
  2358                           ;pin_manager.c: 76: TRISA = 0xFF;
  2359  010308  6881               	setf	3969,c	;volatile
  2360                           
  2361                           ;pin_manager.c: 77: TRISG = 0x5F;
  2362  01030A  0E5F               	movlw	95
  2363  01030C  6E87               	movwf	3975,c	;volatile
  2364                           
  2365                           ;pin_manager.c: 78: TRISB = 0xFF;
  2366  01030E  6882               	setf	3970,c	;volatile
  2367                           
  2368                           ;pin_manager.c: 79: TRISH = 0x0F;
  2369  010310  0E0F               	movlw	15
  2370  010312  6E88               	movwf	3976,c	;volatile
  2371                           
  2372                           ;pin_manager.c: 80: TRISC = 0xFF;
  2373  010314  6883               	setf	3971,c	;volatile
  2374                           
  2375                           ;pin_manager.c: 81: TRISD = 0xFF;
  2376  010316  6884               	setf	3972,c	;volatile
  2377                           
  2378                           ;pin_manager.c: 86: ANSELD = 0xFF;
  2379  010318  010E               	movlb	14	; () banked
  2380  01031A  69A7               	setf	167,b	;volatile
  2381                           
  2382                           ; BSR set to: 14
  2383                           ;pin_manager.c: 87: ANSELB = 0xFF;
  2384  01031C  699A               	setf	154,b	;volatile
  2385                           
  2386                           ; BSR set to: 14
  2387                           ;pin_manager.c: 88: ANSELE = 0xFF;
  2388  01031E  69AF               	setf	175,b	;volatile
  2389                           
  2390                           ;pin_manager.c: 89: ANSELG = 0xBF;
  2391  010320  0EBF               	movlw	191
  2392  010322  6FBC               	movwf	188,b	;volatile
  2393                           
  2394                           ; BSR set to: 14
  2395                           ;pin_manager.c: 90: ANSELF = 0xFF;
  2396  010324  69B4               	setf	180,b	;volatile
  2397                           
  2398                           ; BSR set to: 14
  2399                           ;pin_manager.c: 91: ANSELA = 0xFF;
  2400  010326  6992               	setf	146,b	;volatile
  2401                           
  2402                           ;pin_manager.c: 96: WPUD = 0x00;
  2403  010328  0E00               	movlw	0
  2404  01032A  6FA6               	movwf	166,b	;volatile
  2405                           
  2406                           ;pin_manager.c: 97: WPUF = 0x00;
  2407  01032C  0E00               	movlw	0
  2408  01032E  6FB3               	movwf	179,b	;volatile
  2409                           
  2410                           ;pin_manager.c: 98: WPUE = 0x00;
  2411  010330  0E00               	movlw	0
  2412  010332  6FAE               	movwf	174,b	;volatile
  2413                           
  2414                           ;pin_manager.c: 99: WPUB = 0x00;
  2415  010334  0E00               	movlw	0
  2416  010336  6F99               	movwf	153,b	;volatile
  2417                           
  2418                           ;pin_manager.c: 100: WPUG = 0x00;
  2419  010338  0E00               	movlw	0
  2420  01033A  6FBB               	movwf	187,b	;volatile
  2421                           
  2422                           ;pin_manager.c: 101: WPUA = 0x00;
  2423  01033C  0E00               	movlw	0
  2424  01033E  6F91               	movwf	145,b	;volatile
  2425                           
  2426                           ;pin_manager.c: 102: WPUC = 0x00;
  2427  010340  0E00               	movlw	0
  2428  010342  6FA1               	movwf	161,b	;volatile
  2429                           
  2430                           ;pin_manager.c: 103: WPUH = 0x00;
  2431  010344  0E00               	movlw	0
  2432  010346  6FC0               	movwf	192,b	;volatile
  2433                           
  2434                           ;pin_manager.c: 108: ODCONE = 0x00;
  2435  010348  0E00               	movlw	0
  2436  01034A  6FAD               	movwf	173,b	;volatile
  2437                           
  2438                           ;pin_manager.c: 109: ODCONF = 0x00;
  2439  01034C  0E00               	movlw	0
  2440  01034E  6FB2               	movwf	178,b	;volatile
  2441                           
  2442                           ;pin_manager.c: 110: ODCONA = 0x00;
  2443  010350  0E00               	movlw	0
  2444  010352  6F90               	movwf	144,b	;volatile
  2445                           
  2446                           ;pin_manager.c: 111: ODCONG = 0x00;
  2447  010354  0E00               	movlw	0
  2448  010356  6FBA               	movwf	186,b	;volatile
  2449                           
  2450                           ;pin_manager.c: 112: ODCONB = 0x00;
  2451  010358  0E00               	movlw	0
  2452  01035A  6F98               	movwf	152,b	;volatile
  2453                           
  2454                           ;pin_manager.c: 113: ODCONH = 0x00;
  2455  01035C  0E00               	movlw	0
  2456  01035E  6FBF               	movwf	191,b	;volatile
  2457                           
  2458                           ;pin_manager.c: 114: ODCONC = 0x00;
  2459  010360  0E00               	movlw	0
  2460  010362  6FA0               	movwf	160,b	;volatile
  2461                           
  2462                           ;pin_manager.c: 115: ODCOND = 0x00;
  2463  010364  0E00               	movlw	0
  2464  010366  6FA5               	movwf	165,b	;volatile
  2465                           
  2466                           ;pin_manager.c: 124: RG7PPS = 0x0E;
  2467  010368  0E0E               	movlw	14
  2468  01036A  6F89               	movwf	137,b	;volatile
  2469                           
  2470                           ; BSR set to: 14
  2471                           ;pin_manager.c: 125: RX2PPSbits.RX2PPS = 0x36;
  2472  01036C  9111               	bcf	17,0,b	;volatile
  2473  01036E  8311               	bsf	17,1,b	;volatile
  2474  010370  8511               	bsf	17,2,b	;volatile
  2475  010372  9711               	bcf	17,3,b	;volatile
  2476  010374  8911               	bsf	17,4,b	;volatile
  2477  010376  8B11               	bsf	17,5,b	;volatile
  2478                           
  2479                           ; BSR set to: 14
  2480  010378  0012               	return		;funcret
  2481  01037A                     __end_of_PIN_MANAGER_Initialize:
  2482                           	opt stack 0
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           prodh	equ	0xFF4
  2488                           prodl	equ	0xFF3
  2489                           intcon	equ	0xFF2
  2490                           postinc0	equ	0xFEE
  2491                           wreg	equ	0xFE8
  2492                           indf2	equ	0xFDF
  2493                           postinc2	equ	0xFDE
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           
  2498 ;; *************** function _OSCILLATOR_Initialize *****************
  2499 ;; Defined at:
  2500 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    5
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_SYSTEM_Initialize
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text13
  2529  010660                     __ptext13:
  2530                           	opt stack 0
  2531  010660                     _OSCILLATOR_Initialize:
  2532                           	opt stack 24
  2533                           
  2534                           ;mcc.c: 62: OSCCON1 = 0x60;
  2535                           
  2536                           ; BSR set to: 14
  2537                           ;incstack = 0
  2538  010660  0E60               	movlw	96
  2539  010662  010E               	movlb	14	; () banked
  2540  010664  6F43               	movwf	67,b	;volatile
  2541                           
  2542                           ;mcc.c: 64: OSCCON3 = 0x00;
  2543  010666  0E00               	movlw	0
  2544  010668  6F45               	movwf	69,b	;volatile
  2545                           
  2546                           ;mcc.c: 66: OSCEN = 0x00;
  2547  01066A  0E00               	movlw	0
  2548  01066C  6F47               	movwf	71,b	;volatile
  2549                           
  2550                           ;mcc.c: 68: OSCFRQ = 0x08;
  2551  01066E  0E08               	movlw	8
  2552  010670  6F49               	movwf	73,b	;volatile
  2553                           
  2554                           ;mcc.c: 70: OSCTUNE = 0x00;
  2555  010672  0E00               	movlw	0
  2556  010674  6F48               	movwf	72,b	;volatile
  2557                           
  2558                           ; BSR set to: 14
  2559  010676  0012               	return		;funcret
  2560  010678                     __end_of_OSCILLATOR_Initialize:
  2561                           	opt stack 0
  2562                           tblptru	equ	0xFF8
  2563                           tblptrh	equ	0xFF7
  2564                           tblptrl	equ	0xFF6
  2565                           tablat	equ	0xFF5
  2566                           prodh	equ	0xFF4
  2567                           prodl	equ	0xFF3
  2568                           intcon	equ	0xFF2
  2569                           postinc0	equ	0xFEE
  2570                           wreg	equ	0xFE8
  2571                           indf2	equ	0xFDF
  2572                           postinc2	equ	0xFDE
  2573                           fsr2h	equ	0xFDA
  2574                           fsr2l	equ	0xFD9
  2575                           status	equ	0xFD8
  2576                           
  2577 ;; *************** function _INTERRUPT_Initialize *****************
  2578 ;; Defined at:
  2579 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		None
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;Total ram usage:        0 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    5
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_SYSTEM_Initialize
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text14
  2608  0106B4                     __ptext14:
  2609                           	opt stack 0
  2610  0106B4                     _INTERRUPT_Initialize:
  2611                           	opt stack 24
  2612                           
  2613                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
  2614                           
  2615                           ; BSR set to: 14
  2616                           ;incstack = 0
  2617  0106B4  8AF2               	bsf	intcon,5,c	;volatile
  2618                           
  2619                           ;interrupt_manager.c: 60: IPR3bits.TX2IP = 1;
  2620  0106B6  010E               	movlb	14	; () banked
  2621  0106B8  8D22               	bsf	34,6,b	;volatile
  2622                           
  2623                           ;interrupt_manager.c: 63: IPR3bits.RC2IP = 1;
  2624  0106BA  8F22               	bsf	34,7,b	;volatile
  2625                           
  2626                           ; BSR set to: 14
  2627  0106BC  0012               	return		;funcret
  2628  0106BE                     __end_of_INTERRUPT_Initialize:
  2629                           	opt stack 0
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           prodh	equ	0xFF4
  2635                           prodl	equ	0xFF3
  2636                           intcon	equ	0xFF2
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           indf2	equ	0xFDF
  2640                           postinc2	equ	0xFDE
  2641                           fsr2h	equ	0xFDA
  2642                           fsr2l	equ	0xFD9
  2643                           status	equ	0xFD8
  2644                           
  2645 ;; *************** function _EUSART2_Initialize *****************
  2646 ;; Defined at:
  2647 ;;		line 77 in file "mcc_generated_files/eusart2.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    6
  2668 ;; This function calls:
  2669 ;;		_EUSART2_SetRxInterruptHandler
  2670 ;;		_EUSART2_SetTxInterruptHandler
  2671 ;; This function is called by:
  2672 ;;		_SYSTEM_Initialize
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text15
  2677  01037A                     __ptext15:
  2678                           	opt stack 0
  2679  01037A                     _EUSART2_Initialize:
  2680                           	opt stack 23
  2681                           
  2682                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
  2683                           
  2684                           ; BSR set to: 14
  2685                           ;incstack = 0
  2686  01037A  010E               	movlb	14	; () banked
  2687  01037C  9F2C               	bcf	44,7,b	;volatile
  2688                           
  2689                           ; BSR set to: 14
  2690                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
  2691  01037E  0E4A               	movlw	low _EUSART2_Receive_ISR
  2692  010380  6E1A               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler,c
  2693  010382  0E02               	movlw	high _EUSART2_Receive_ISR
  2694  010384  6E1B               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1,c
  2695  010386  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
  2696  010388  6E1C               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+2,c
  2697  01038A  EC4E  F083         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  2698                           
  2699                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
  2700  01038E  010E               	movlb	14	; () banked
  2701  010390  9D2C               	bcf	44,6,b	;volatile
  2702                           
  2703                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
  2704  010392  0E88               	movlw	low _EUSART2_Transmit_ISR
  2705  010394  6E1A               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler,c
  2706  010396  0E05               	movlw	high _EUSART2_Transmit_ISR
  2707  010398  6E1B               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1,c
  2708  01039A  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
  2709  01039C  6E1C               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+2,c
  2710  01039E  EC47  F083         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  2711                           
  2712                           ;eusart2.c: 87: BAUD2CON = 0x08;
  2713  0103A2  0E08               	movlw	8
  2714  0103A4  010E               	movlb	14	; () banked
  2715  0103A6  6FF7               	movwf	247,b	;volatile
  2716                           
  2717                           ; BSR set to: 14
  2718                           ;eusart2.c: 90: RC2STA = 0x90;
  2719  0103A8  0E90               	movlw	144
  2720  0103AA  6FF5               	movwf	245,b	;volatile
  2721                           
  2722                           ; BSR set to: 14
  2723                           ;eusart2.c: 93: TX2STA = 0x24;
  2724  0103AC  0E24               	movlw	36
  2725  0103AE  6FF6               	movwf	246,b	;volatile
  2726                           
  2727                           ; BSR set to: 14
  2728                           ;eusart2.c: 96: SP2BRGL = 0x8A;
  2729  0103B0  0E8A               	movlw	138
  2730  0103B2  6FF3               	movwf	243,b	;volatile
  2731                           
  2732                           ; BSR set to: 14
  2733                           ;eusart2.c: 99: SP2BRGH = 0x00;
  2734  0103B4  0E00               	movlw	0
  2735  0103B6  6FF4               	movwf	244,b	;volatile
  2736                           
  2737                           ; BSR set to: 14
  2738                           ;eusart2.c: 103: eusart2TxHead = 0;
  2739  0103B8  0E00               	movlw	0
  2740  0103BA  6E3A               	movwf	_eusart2TxHead,c	;volatile
  2741                           
  2742                           ; BSR set to: 14
  2743                           ;eusart2.c: 104: eusart2TxTail = 0;
  2744  0103BC  0E00               	movlw	0
  2745  0103BE  6E39               	movwf	_eusart2TxTail,c	;volatile
  2746                           
  2747                           ; BSR set to: 14
  2748                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
  2749  0103C0  0E40               	movlw	64
  2750  0103C2  6E34               	movwf	_eusart2TxBufferRemaining,c	;volatile
  2751                           
  2752                           ; BSR set to: 14
  2753                           ;eusart2.c: 107: eusart2RxHead = 0;
  2754  0103C4  0E00               	movlw	0
  2755  0103C6  6E38               	movwf	_eusart2RxHead,c	;volatile
  2756                           
  2757                           ; BSR set to: 14
  2758                           ;eusart2.c: 108: eusart2RxTail = 0;
  2759  0103C8  0E00               	movlw	0
  2760  0103CA  6E37               	movwf	_eusart2RxTail,c	;volatile
  2761                           
  2762                           ; BSR set to: 14
  2763                           ;eusart2.c: 109: eusart2RxCount = 0;
  2764  0103CC  0E00               	movlw	0
  2765  0103CE  6E36               	movwf	_eusart2RxCount,c	;volatile
  2766                           
  2767                           ; BSR set to: 14
  2768                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
  2769  0103D0  8F2C               	bsf	44,7,b	;volatile
  2770                           
  2771                           ; BSR set to: 14
  2772  0103D2  0012               	return		;funcret
  2773  0103D4                     __end_of_EUSART2_Initialize:
  2774                           	opt stack 0
  2775                           tblptru	equ	0xFF8
  2776                           tblptrh	equ	0xFF7
  2777                           tblptrl	equ	0xFF6
  2778                           tablat	equ	0xFF5
  2779                           prodh	equ	0xFF4
  2780                           prodl	equ	0xFF3
  2781                           intcon	equ	0xFF2
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           indf2	equ	0xFDF
  2785                           postinc2	equ	0xFDE
  2786                           fsr2h	equ	0xFDA
  2787                           fsr2l	equ	0xFD9
  2788                           status	equ	0xFD8
  2789                           
  2790 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  2791 ;; Defined at:
  2792 ;;		line 258 in file "mcc_generated_files/eusart2.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  interruptHan    3   25[COMRAM] PTR FTN()void 
  2795 ;;		 -> EUSART2_Transmit_ISR(1), 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2807 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;Total ram usage:        3 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    5
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_EUSART2_Initialize
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text16
  2822  01068E                     __ptext16:
  2823                           	opt stack 0
  2824  01068E                     _EUSART2_SetTxInterruptHandler:
  2825                           	opt stack 23
  2826                           
  2827                           ;eusart2.c: 259: EUSART2_TxDefaultInterruptHandler = interruptHandler;
  2828                           
  2829                           ; BSR set to: 14
  2830                           ;incstack = 0
  2831  01068E  C01A  F031         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  2832  010692  C01B  F032         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  2833  010696  C01C  F033         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
  2834  01069A  0012               	return		;funcret
  2835  01069C                     __end_of_EUSART2_SetTxInterruptHandler:
  2836                           	opt stack 0
  2837                           tblptru	equ	0xFF8
  2838                           tblptrh	equ	0xFF7
  2839                           tblptrl	equ	0xFF6
  2840                           tablat	equ	0xFF5
  2841                           prodh	equ	0xFF4
  2842                           prodl	equ	0xFF3
  2843                           intcon	equ	0xFF2
  2844                           postinc0	equ	0xFEE
  2845                           wreg	equ	0xFE8
  2846                           indf2	equ	0xFDF
  2847                           postinc2	equ	0xFDE
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  2853 ;; Defined at:
  2854 ;;		line 262 in file "mcc_generated_files/eusart2.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  interruptHan    3   25[COMRAM] PTR FTN()void 
  2857 ;;		 -> EUSART2_Receive_ISR(1), 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2869 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;Total ram usage:        3 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    5
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_EUSART2_Initialize
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text17
  2884  01069C                     __ptext17:
  2885                           	opt stack 0
  2886  01069C                     _EUSART2_SetRxInterruptHandler:
  2887                           	opt stack 23
  2888                           
  2889                           ;eusart2.c: 263: EUSART2_RxDefaultInterruptHandler = interruptHandler;
  2890                           
  2891                           ;incstack = 0
  2892  01069C  C01A  F02E         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  2893  0106A0  C01B  F02F         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  2894  0106A4  C01C  F030         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
  2895  0106A8  0012               	return		;funcret
  2896  0106AA                     __end_of_EUSART2_SetRxInterruptHandler:
  2897                           	opt stack 0
  2898                           tblptru	equ	0xFF8
  2899                           tblptrh	equ	0xFF7
  2900                           tblptrl	equ	0xFF6
  2901                           tablat	equ	0xFF5
  2902                           prodh	equ	0xFF4
  2903                           prodl	equ	0xFF3
  2904                           intcon	equ	0xFF2
  2905                           postinc0	equ	0xFEE
  2906                           wreg	equ	0xFE8
  2907                           indf2	equ	0xFDF
  2908                           postinc2	equ	0xFDE
  2909                           fsr2h	equ	0xFDA
  2910                           fsr2l	equ	0xFD9
  2911                           status	equ	0xFD8
  2912                           
  2913 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  2914 ;; Defined at:
  2915 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2931 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2932 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2933 ;;Total ram usage:       18 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    4
  2936 ;; This function calls:
  2937 ;;		Absolute function
  2938 ;;		_EUSART2_Receive_ISR
  2939 ;;		_EUSART2_Transmit_ISR
  2940 ;; This function is called by:
  2941 ;;		Interrupt level 2
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	intcode
  2946  000008                     __pintcode:
  2947                           	opt stack 0
  2948  000008                     _INTERRUPT_InterruptManagerHigh:
  2949                           	opt stack 21
  2950                           
  2951                           ;incstack = 0
  2952  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2953  00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  2954  00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  2955  000012  CFE9 F00A          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  2956  000016  CFEA F00B          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  2957  00001A  CFE1 F00C          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  2958  00001E  CFE2 F00D          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  2959  000022  CFD9 F00E          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  2960  000026  CFDA F00F          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  2961  00002A  CFF3 F010          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  2962  00002E  CFF4 F011          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  2963  000032  CFF6 F012          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  2964  000036  CFF7 F013          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  2965  00003A  CFF8 F014          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  2966  00003E  CFF5 F015          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  2967  000042  C03B  F016         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
  2968  000046  C03C  F017         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
  2969  00004A  C03D  F018         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
  2970  00004E  C03E  F019         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
  2971                           
  2972                           ;interrupt_manager.c: 71: if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  2973  000052  010E               	movlb	14	; () banked
  2974  000054  BD2C               	btfsc	44,6,b	;volatile
  2975                           
  2976                           ; BSR set to: 14
  2977  000056  AD36               	btfss	54,6,b	;volatile
  2978  000058  D00A               	goto	i2l106
  2979                           
  2980                           ; BSR set to: 14
  2981                           ;interrupt_manager.c: 72: {
  2982                           ;interrupt_manager.c: 73: EUSART2_TxDefaultInterruptHandler();
  2983  00005A  D801               	call	i2u72_48
  2984  00005C  D017               	goto	i2u75_49
  2985  00005E                     i2u72_48:
  2986  00005E  0005               	push	
  2987  000060  6EFA               	movwf	pclath,c
  2988  000062  5031               	movf	_EUSART2_TxDefaultInterruptHandler,w,c
  2989  000064  6EFD               	movwf	tosl,c
  2990  000066  5032               	movf	_EUSART2_TxDefaultInterruptHandler+1,w,c
  2991  000068  6EFE               	movwf	tosh,c
  2992  00006A  5033               	movf	_EUSART2_TxDefaultInterruptHandler+2,w,c
  2993  00006C  D00C               	goto	L1
  2994  00006E                     i2l106:
  2995                           
  2996                           ; BSR set to: 14
  2997                           ;interrupt_manager.c: 75: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
  2998  00006E  BF2C               	btfsc	44,7,b	;volatile
  2999                           
  3000                           ; BSR set to: 14
  3001  000070  AF36               	btfss	54,7,b	;volatile
  3002  000072  D00C               	goto	i2u75_49
  3003                           
  3004                           ; BSR set to: 14
  3005                           ;interrupt_manager.c: 76: {
  3006                           ;interrupt_manager.c: 77: EUSART2_RxDefaultInterruptHandler();
  3007  000074  D801               	call	i2u75_48
  3008  000076  D00A               	goto	i2u75_49
  3009  000078                     i2u75_48:
  3010  000078  0005               	push	
  3011  00007A  6EFA               	movwf	pclath,c
  3012  00007C  502E               	movf	_EUSART2_RxDefaultInterruptHandler,w,c
  3013  00007E  6EFD               	movwf	tosl,c
  3014  000080  502F               	movf	_EUSART2_RxDefaultInterruptHandler+1,w,c
  3015  000082  6EFE               	movwf	tosh,c
  3016  000084  5030               	movf	_EUSART2_RxDefaultInterruptHandler+2,w,c
  3017  000086                     L1:
  3018  000086  6EFF               	movwf	tosu,c
  3019  000088  50FA               	movf	pclath,w,c
  3020  00008A  0012               	return		;indir
  3021  00008C                     i2u75_49:
  3022                           
  3023                           ;interrupt_manager.c: 79: else
  3024                           ;interrupt_manager.c: 80: {
  3025                           
  3026                           ;interrupt_manager.c: 78: }
  3027  00008C  C019  F03E         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
  3028  000090  C018  F03D         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
  3029  000094  C017  F03C         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
  3030  000098  C016  F03B         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
  3031  00009C  C015  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  3032  0000A0  C014  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  3033  0000A4  C013  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  3034  0000A8  C012  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  3035  0000AC  C011  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  3036  0000B0  C010  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  3037  0000B4  C00F  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  3038  0000B8  C00E  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  3039  0000BC  C00D  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  3040  0000C0  C00C  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  3041  0000C4  C00B  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  3042  0000C8  C00A  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  3043  0000CC  C009  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  3044  0000D0  C008  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  3045  0000D4  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3046  0000D6  0011               	retfie		f
  3047  0000D8                     __end_of_INTERRUPT_InterruptManagerHigh:
  3048                           	opt stack 0
  3049                           tosu	equ	0xFFF
  3050                           tosh	equ	0xFFE
  3051                           tosl	equ	0xFFD
  3052                           pclatu	equ	0xFFB
  3053                           pclath	equ	0xFFA
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           prodh	equ	0xFF4
  3059                           prodl	equ	0xFF3
  3060                           intcon	equ	0xFF2
  3061                           postinc0	equ	0xFEE
  3062                           fsr0h	equ	0xFEA
  3063                           fsr0l	equ	0xFE9
  3064                           wreg	equ	0xFE8
  3065                           fsr1h	equ	0xFE2
  3066                           fsr1l	equ	0xFE1
  3067                           indf2	equ	0xFDF
  3068                           postinc2	equ	0xFDE
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073 ;; *************** function _EUSART2_Transmit_ISR *****************
  3074 ;; Defined at:
  3075 ;;		line 183 in file "mcc_generated_files/eusart2.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;Total ram usage:        0 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_EUSART2_Initialize
  3099 ;;		_INTERRUPT_InterruptManagerHigh
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text19
  3104  010588                     __ptext19:
  3105                           	opt stack 0
  3106  010588                     _EUSART2_Transmit_ISR:
  3107                           	opt stack 24
  3108                           
  3109                           ;eusart2.c: 187: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
  3110                           
  3111                           ;incstack = 0
  3112  010588  0E40               	movlw	64
  3113  01058A  6034               	cpfslt	_eusart2TxBufferRemaining,c	;volatile
  3114  01058C  D013               	goto	i2l199
  3115                           
  3116                           ;eusart2.c: 188: {
  3117                           ;eusart2.c: 189: TX2REG = eusart2TxBuffer[eusart2TxTail++];
  3118  01058E  5039               	movf	_eusart2TxTail,w,c	;volatile
  3119  010590  0D01               	mullw	1
  3120  010592  0E00               	movlw	low _eusart2TxBuffer
  3121  010594  24F3               	addwf	prodl,w,c
  3122  010596  6ED9               	movwf	fsr2l,c
  3123  010598  0E01               	movlw	high _eusart2TxBuffer
  3124  01059A  20F4               	addwfc	prodh,w,c
  3125  01059C  6EDA               	movwf	fsr2h,c
  3126  01059E  50DF               	movf	indf2,w,c
  3127  0105A0  010E               	movlb	14	; () banked
  3128  0105A2  6FF2               	movwf	242,b	;volatile
  3129                           
  3130                           ; BSR set to: 14
  3131  0105A4  2A39               	incf	_eusart2TxTail,f,c	;volatile
  3132                           
  3133                           ; BSR set to: 14
  3134                           ;eusart2.c: 190: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
  3135  0105A6  0E3F               	movlw	63
  3136  0105A8  6439               	cpfsgt	_eusart2TxTail,c	;volatile
  3137  0105AA  D002               	goto	i2l200
  3138                           
  3139                           ; BSR set to: 14
  3140                           ;eusart2.c: 191: {
  3141                           ;eusart2.c: 192: eusart2TxTail = 0;
  3142  0105AC  0E00               	movlw	0
  3143  0105AE  6E39               	movwf	_eusart2TxTail,c	;volatile
  3144  0105B0                     i2l200:
  3145                           
  3146                           ; BSR set to: 14
  3147                           ;eusart2.c: 193: }
  3148                           ;eusart2.c: 194: eusart2TxBufferRemaining++;
  3149                           
  3150                           ; BSR set to: 14
  3151  0105B0  2A34               	incf	_eusart2TxBufferRemaining,f,c	;volatile
  3152                           
  3153                           ;eusart2.c: 195: }
  3154  0105B2  0012               	return	
  3155  0105B4                     i2l199:
  3156                           
  3157                           ;eusart2.c: 196: else
  3158                           ;eusart2.c: 197: {
  3159                           ;eusart2.c: 198: PIE3bits.TX2IE = 0;
  3160  0105B4  010E               	movlb	14	; () banked
  3161  0105B6  9D2C               	bcf	44,6,b	;volatile
  3162  0105B8  0012               	return	
  3163  0105BA                     __end_of_EUSART2_Transmit_ISR:
  3164                           	opt stack 0
  3165                           tosu	equ	0xFFF
  3166                           tosh	equ	0xFFE
  3167                           tosl	equ	0xFFD
  3168                           pclatu	equ	0xFFB
  3169                           pclath	equ	0xFFA
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           prodh	equ	0xFF4
  3175                           prodl	equ	0xFF3
  3176                           intcon	equ	0xFF2
  3177                           postinc0	equ	0xFEE
  3178                           fsr0h	equ	0xFEA
  3179                           fsr0l	equ	0xFE9
  3180                           wreg	equ	0xFE8
  3181                           fsr1h	equ	0xFE2
  3182                           fsr1l	equ	0xFE1
  3183                           indf2	equ	0xFDF
  3184                           postinc2	equ	0xFDE
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _EUSART2_Receive_ISR *****************
  3190 ;; Defined at:
  3191 ;;		line 202 in file "mcc_generated_files/eusart2.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    3
  3212 ;; This function calls:
  3213 ;;		i2_printf
  3214 ;; This function is called by:
  3215 ;;		_EUSART2_Initialize
  3216 ;;		_INTERRUPT_InterruptManagerHigh
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text20
  3221  01024A                     __ptext20:
  3222                           	opt stack 0
  3223  01024A                     _EUSART2_Receive_ISR:
  3224                           	opt stack 21
  3225                           
  3226                           ;eusart2.c: 205: if(1 == RC2STAbits.OERR)
  3227                           
  3228                           ; BSR set to: 14
  3229                           ;incstack = 0
  3230  01024A  010E               	movlb	14	; () banked
  3231  01024C  A3F5               	btfss	245,1,b	;volatile
  3232  01024E  D002               	goto	i2l205
  3233                           
  3234                           ; BSR set to: 14
  3235                           ;eusart2.c: 206: {
  3236                           ;eusart2.c: 209: RC2STAbits.CREN = 0;
  3237  010250  99F5               	bcf	245,4,b	;volatile
  3238                           
  3239                           ;eusart2.c: 210: RC2STAbits.CREN = 1;
  3240  010252  89F5               	bsf	245,4,b	;volatile
  3241  010254                     i2l205:
  3242                           
  3243                           ; BSR set to: 14
  3244                           ;eusart2.c: 211: }
  3245                           ;eusart2.c: 214: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  3246                           
  3247                           ; BSR set to: 14
  3248  010254  5038               	movf	_eusart2RxHead,w,c	;volatile
  3249  010256  0D01               	mullw	1
  3250  010258  0E60               	movlw	low _eusart2RxBuffer
  3251  01025A  24F3               	addwf	prodl,w,c
  3252  01025C  6ED9               	movwf	fsr2l,c
  3253  01025E  0E00               	movlw	high _eusart2RxBuffer
  3254  010260  20F4               	addwfc	prodh,w,c
  3255  010262  6EDA               	movwf	fsr2h,c
  3256  010264  CEF1 FFDF          	movff	3825,indf2	;volatile
  3257                           
  3258                           ; BSR set to: 14
  3259  010268  2A38               	incf	_eusart2RxHead,f,c	;volatile
  3260                           
  3261                           ; BSR set to: 14
  3262                           ;eusart2.c: 215: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  3263  01026A  0E3F               	movlw	63
  3264  01026C  6438               	cpfsgt	_eusart2RxHead,c	;volatile
  3265  01026E  D002               	goto	i2l206
  3266                           
  3267                           ; BSR set to: 14
  3268                           ;eusart2.c: 216: {
  3269                           ;eusart2.c: 217: eusart2RxHead = 0;
  3270  010270  0E00               	movlw	0
  3271  010272  6E38               	movwf	_eusart2RxHead,c	;volatile
  3272  010274                     i2l206:
  3273                           
  3274                           ; BSR set to: 14
  3275                           ;eusart2.c: 218: }
  3276                           ;eusart2.c: 219: eusart2RxCount++;
  3277                           
  3278                           ; BSR set to: 14
  3279  010274  2A36               	incf	_eusart2RxCount,f,c	;volatile
  3280                           
  3281                           ; BSR set to: 14
  3282                           ;eusart2.c: 221: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
  3283  010276  0E0A               	movlw	10
  3284  010278  19F1               	xorwf	241,w,b	;volatile
  3285  01027A  B4D8               	btfsc	status,2,c
  3286  01027C  D004               	goto	i2u62_40
  3287                           
  3288                           ; BSR set to: 14
  3289  01027E  0E0D               	movlw	13
  3290  010280  19F1               	xorwf	241,w,b	;volatile
  3291  010282  A4D8               	btfss	status,2,c
  3292  010284  D005               	goto	i2l207
  3293  010286                     i2u62_40:
  3294                           
  3295                           ; BSR set to: 14
  3296                           ;eusart2.c: 223: eusart2RxStringReady = 1;
  3297                           
  3298                           ; BSR set to: 14
  3299  010286  0E01               	movlw	1
  3300  010288  6E35               	movwf	_eusart2RxStringReady,c	;volatile
  3301                           
  3302                           ;eusart2.c: 226: RC2REG = 0;
  3303  01028A  0E00               	movlw	0
  3304  01028C  6FF1               	movwf	241,b	;volatile
  3305                           
  3306                           ;eusart2.c: 228: }
  3307  01028E  D002               	goto	i2l210
  3308  010290                     i2l207:
  3309                           
  3310                           ; BSR set to: 14
  3311                           ;eusart2.c: 230: else {
  3312                           ;eusart2.c: 232: eusart2RxStringReady = 0;
  3313                           
  3314                           ; BSR set to: 14
  3315  010290  0E00               	movlw	0
  3316  010292  6E35               	movwf	_eusart2RxStringReady,c	;volatile
  3317  010294                     i2l210:
  3318                           
  3319                           ; BSR set to: 14
  3320                           ;eusart2.c: 234: }
  3321                           ;eusart2.c: 237: if((RC2REG == (int) '\b')) {
  3322                           
  3323                           ; BSR set to: 14
  3324  010294  0E08               	movlw	8
  3325  010296  19F1               	xorwf	241,w,b	;volatile
  3326  010298  A4D8               	btfss	status,2,c
  3327  01029A  0012               	return	
  3328                           
  3329                           ; BSR set to: 14
  3330                           ;eusart2.c: 239: eusart2RxBuffer[eusart2RxHead] = '\0';
  3331  01029C  5038               	movf	_eusart2RxHead,w,c	;volatile
  3332  01029E  0D01               	mullw	1
  3333  0102A0  0E60               	movlw	low _eusart2RxBuffer
  3334  0102A2  24F3               	addwf	prodl,w,c
  3335  0102A4  6ED9               	movwf	fsr2l,c
  3336  0102A6  0E00               	movlw	high _eusart2RxBuffer
  3337  0102A8  20F4               	addwfc	prodh,w,c
  3338  0102AA  6EDA               	movwf	fsr2h,c
  3339  0102AC  0E00               	movlw	0
  3340  0102AE  6EDF               	movwf	indf2,c
  3341                           
  3342                           ; BSR set to: 14
  3343                           ;eusart2.c: 240: eusart2RxHead--;
  3344  0102B0  0638               	decf	_eusart2RxHead,f,c	;volatile
  3345                           
  3346                           ; BSR set to: 14
  3347                           ;eusart2.c: 243: printf("\033[K");
  3348  0102B2  0EFA               	movlw	low STR_1
  3349  0102B4  6E03               	movwf	i2printf@f,c
  3350  0102B6  0EFF               	movlw	high STR_1
  3351  0102B8  6E04               	movwf	i2printf@f+1,c
  3352  0102BA  EC0B  F083         	call	i2_printf	;wreg free
  3353                           
  3354                           ;eusart2.c: 245: if(eusart2RxHead != eusart2RxTail) {
  3355  0102BE  5037               	movf	_eusart2RxTail,w,c	;volatile
  3356  0102C0  1838               	xorwf	_eusart2RxHead,w,c	;volatile
  3357  0102C2  B4D8               	btfsc	status,2,c
  3358  0102C4  D00B               	goto	i2l212
  3359                           
  3360                           ;eusart2.c: 247: eusart2RxBuffer[eusart2RxHead] = '\0';
  3361  0102C6  5038               	movf	_eusart2RxHead,w,c	;volatile
  3362  0102C8  0D01               	mullw	1
  3363  0102CA  0E60               	movlw	low _eusart2RxBuffer
  3364  0102CC  24F3               	addwf	prodl,w,c
  3365  0102CE  6ED9               	movwf	fsr2l,c
  3366  0102D0  0E00               	movlw	high _eusart2RxBuffer
  3367  0102D2  20F4               	addwfc	prodh,w,c
  3368  0102D4  6EDA               	movwf	fsr2h,c
  3369  0102D6  0E00               	movlw	0
  3370  0102D8  6EDF               	movwf	indf2,c
  3371                           
  3372                           ;eusart2.c: 248: eusart2RxHead--;
  3373  0102DA  0638               	decf	_eusart2RxHead,f,c	;volatile
  3374  0102DC                     i2l212:
  3375                           
  3376                           ;eusart2.c: 250: }
  3377                           ;eusart2.c: 252: RC2REG = 0;
  3378  0102DC  0E00               	movlw	0
  3379  0102DE  010E               	movlb	14	; () banked
  3380  0102E0  6FF1               	movwf	241,b	;volatile
  3381  0102E2  0012               	return	
  3382  0102E4                     __end_of_EUSART2_Receive_ISR:
  3383                           	opt stack 0
  3384                           tosu	equ	0xFFF
  3385                           tosh	equ	0xFFE
  3386                           tosl	equ	0xFFD
  3387                           pclatu	equ	0xFFB
  3388                           pclath	equ	0xFFA
  3389                           tblptru	equ	0xFF8
  3390                           tblptrh	equ	0xFF7
  3391                           tblptrl	equ	0xFF6
  3392                           tablat	equ	0xFF5
  3393                           prodh	equ	0xFF4
  3394                           prodl	equ	0xFF3
  3395                           intcon	equ	0xFF2
  3396                           postinc0	equ	0xFEE
  3397                           fsr0h	equ	0xFEA
  3398                           fsr0l	equ	0xFE9
  3399                           wreg	equ	0xFE8
  3400                           fsr1h	equ	0xFE2
  3401                           fsr1l	equ	0xFE1
  3402                           indf2	equ	0xFDF
  3403                           postinc2	equ	0xFDE
  3404                           fsr2h	equ	0xFDA
  3405                           fsr2l	equ	0xFD9
  3406                           status	equ	0xFD8
  3407                           
  3408 ;; *************** function i2_printf *****************
  3409 ;; Defined at:
  3410 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  f               2    2[COMRAM] PTR const unsigned char 
  3413 ;;		 -> STR_23(3), STR_22(250), STR_21(3), STR_19(4), 
  3414 ;;		 -> STR_18(5), STR_16(4), STR_15(5), STR_13(3), 
  3415 ;;		 -> STR_12(14), STR_11(3), STR_9(3), STR_8(18), 
  3416 ;;		 -> STR_7(3), STR_5(3), STR_4(174), STR_3(4), 
  3417 ;;		 -> STR_2(5), STR_1(4), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  printf          4    0        struct .
  3420 ;;  printf          3    0        PTR const unsigned char 
  3421 ;;  printf          2    4[COMRAM] PTR void [1]
  3422 ;;		 -> ?i2_printf(2), ?_printf(2), 
  3423 ;;  printf          2    0        unsigned int 
  3424 ;;  printf          2    0        unsigned int 
  3425 ;;  printf          1    6[COMRAM] char 
  3426 ;;  printf          1    0        unsigned char 
  3427 ;;  printf          1    0        char 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  2    2[COMRAM] int 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3438 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;Total ram usage:        5 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    2
  3444 ;; This function calls:
  3445 ;;		i2_putch
  3446 ;; This function is called by:
  3447 ;;		_EUSART2_Receive_ISR
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text21
  3452  010616                     __ptext21:
  3453                           	opt stack 0
  3454  010616                     i2_printf:
  3455                           	opt stack 21
  3456                           
  3457                           ;doprnt.c: 466: va_list ap;
  3458                           ;doprnt.c: 499: signed char c;
  3459                           ;doprnt.c: 506: signed char prec;
  3460                           ;doprnt.c: 508: unsigned char flag;
  3461                           ;doprnt.c: 523: union {
  3462                           ;doprnt.c: 524: unsigned long vd;
  3463                           ;doprnt.c: 525: double integ;
  3464                           ;doprnt.c: 526: } tmpval;
  3465                           ;doprnt.c: 528: unsigned int val;
  3466                           ;doprnt.c: 529: unsigned len;
  3467                           ;doprnt.c: 530: const char * cp;
  3468                           ;doprnt.c: 533: *ap = __va_start();
  3469                           
  3470                           ; BSR set to: 14
  3471                           ;incstack = 0
  3472  010616  0E05               	movlw	low (?i2_printf+2)
  3473  010618  6E05               	movwf	i2printf@ap,c
  3474  01061A  0E00               	movlw	high (?i2_printf+2)
  3475  01061C  6E06               	movwf	i2printf@ap+1,c
  3476                           
  3477                           ;doprnt.c: 536: while(c = *f++) {
  3478  01061E  D003               	goto	i2l358
  3479  010620                     
  3480                           ;doprnt.c: 540: {
  3481                           ;doprnt.c: 541: (putch(c) );
  3482  010620  5007               	movf	i2printf@c,w,c
  3483  010622  EC5F  F083         	call	i2_putch
  3484  010626                     i2l358:
  3485  010626  C003  FFF6         	movff	i2printf@f,tblptrl
  3486  01062A  C004  FFF7         	movff	i2printf@f+1,tblptrh
  3487  01062E  4A03               	infsnz	i2printf@f,f,c
  3488  010630  2A04               	incf	i2printf@f+1,f,c
  3489  010632                     	if	0	;tblptru may be non-zero
  3490  010632                     	endif
  3491  010632                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3492  010632  0E00               	movlw	low (__mediumconst shr (0+16))
  3493  010634  6EF8               	movwf	tblptru,c
  3494  010636                     	endif
  3495  010636  0008               	tblrd		*
  3496  010638  CFF5 F007          	movff	tablat,i2printf@c
  3497  01063C  5007               	movf	i2printf@c,w,c
  3498  01063E  B4D8               	btfsc	status,2,c
  3499  010640  0012               	return	
  3500  010642  D7EE               	goto	i2l359
  3501  010644                     __end_ofi2_printf:
  3502                           	opt stack 0
  3503                           tosu	equ	0xFFF
  3504                           tosh	equ	0xFFE
  3505                           tosl	equ	0xFFD
  3506                           pclatu	equ	0xFFB
  3507                           pclath	equ	0xFFA
  3508                           tblptru	equ	0xFF8
  3509                           tblptrh	equ	0xFF7
  3510                           tblptrl	equ	0xFF6
  3511                           tablat	equ	0xFF5
  3512                           prodh	equ	0xFF4
  3513                           prodl	equ	0xFF3
  3514                           intcon	equ	0xFF2
  3515                           postinc0	equ	0xFEE
  3516                           fsr0h	equ	0xFEA
  3517                           fsr0l	equ	0xFE9
  3518                           wreg	equ	0xFE8
  3519                           fsr1h	equ	0xFE2
  3520                           fsr1l	equ	0xFE1
  3521                           indf2	equ	0xFDF
  3522                           postinc2	equ	0xFDE
  3523                           fsr2h	equ	0xFDA
  3524                           fsr2l	equ	0xFD9
  3525                           status	equ	0xFD8
  3526                           
  3527 ;; *************** function i2_putch *****************
  3528 ;; Defined at:
  3529 ;;		line 178 in file "mcc_generated_files/eusart2.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  txData          1    wreg     unsigned char 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  txData          1    1[COMRAM] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;Total ram usage:        1 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    1
  3550 ;; This function calls:
  3551 ;;		i2_EUSART2_Write
  3552 ;; This function is called by:
  3553 ;;		i2_printf
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text22
  3558  0106BE                     __ptext22:
  3559                           	opt stack 0
  3560  0106BE                     i2_putch:
  3561                           	opt stack 21
  3562                           
  3563                           ;incstack = 0
  3564                           ;i2putch@txData stored from wreg
  3565  0106BE  6E02               	movwf	i2putch@txData,c
  3566                           
  3567                           ;eusart2.c: 180: EUSART2_Write(txData);
  3568  0106C0  5002               	movf	i2putch@txData,w,c
  3569  0106C2  EC55  F082         	call	i2_EUSART2_Write
  3570  0106C6  0012               	return		;funcret
  3571  0106C8                     __end_ofi2_putch:
  3572                           	opt stack 0
  3573                           tosu	equ	0xFFF
  3574                           tosh	equ	0xFFE
  3575                           tosl	equ	0xFFD
  3576                           pclatu	equ	0xFFB
  3577                           pclath	equ	0xFFA
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           prodh	equ	0xFF4
  3583                           prodl	equ	0xFF3
  3584                           intcon	equ	0xFF2
  3585                           postinc0	equ	0xFEE
  3586                           fsr0h	equ	0xFEA
  3587                           fsr0l	equ	0xFE9
  3588                           wreg	equ	0xFE8
  3589                           fsr1h	equ	0xFE2
  3590                           fsr1l	equ	0xFE1
  3591                           indf2	equ	0xFDF
  3592                           postinc2	equ	0xFDE
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597 ;; *************** function i2_EUSART2_Write *****************
  3598 ;; Defined at:
  3599 ;;		line 150 in file "mcc_generated_files/eusart2.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  txData          1    wreg     unsigned char 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  txData          1    0[COMRAM] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;Total ram usage:        1 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		i2_putch
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text23
  3627  0104AA                     __ptext23:
  3628                           	opt stack 0
  3629  0104AA                     i2_EUSART2_Write:
  3630                           	opt stack 21
  3631                           
  3632                           ;incstack = 0
  3633                           ;i2EUSART2_Write@txData stored from wreg
  3634  0104AA  6E01               	movwf	i2EUSART2_Write@txData,c
  3635  0104AC                     
  3636                           ;eusart2.c: 153: {
  3637                           
  3638                           ;eusart2.c: 152: while(0 == eusart2TxBufferRemaining)
  3639  0104AC  5034               	movf	_eusart2TxBufferRemaining,w,c	;volatile
  3640  0104AE  B4D8               	btfsc	status,2,c
  3641  0104B0  D7FD               	goto	i2l1341
  3642                           
  3643                           ;eusart2.c: 154: }
  3644                           ;eusart2.c: 156: if(0 == PIE3bits.TX2IE)
  3645  0104B2  010E               	movlb	14	; () banked
  3646  0104B4  BD2C               	btfsc	44,6,b	;volatile
  3647  0104B6  D003               	goto	i2l187
  3648                           
  3649                           ; BSR set to: 14
  3650                           ;eusart2.c: 157: {
  3651                           ;eusart2.c: 158: TX2REG = txData;
  3652  0104B8  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
  3653                           
  3654                           ;eusart2.c: 159: }
  3655  0104BC  D012               	goto	i2l188
  3656  0104BE                     i2l187:
  3657                           
  3658                           ; BSR set to: 14
  3659                           ;eusart2.c: 160: else
  3660                           ;eusart2.c: 161: {
  3661                           ;eusart2.c: 162: PIE3bits.TX2IE = 0;
  3662  0104BE  9D2C               	bcf	44,6,b	;volatile
  3663                           
  3664                           ; BSR set to: 14
  3665                           ;eusart2.c: 163: eusart2TxBuffer[eusart2TxHead++] = txData;
  3666  0104C0  503A               	movf	_eusart2TxHead,w,c	;volatile
  3667  0104C2  0D01               	mullw	1
  3668  0104C4  0E00               	movlw	low _eusart2TxBuffer
  3669  0104C6  24F3               	addwf	prodl,w,c
  3670  0104C8  6ED9               	movwf	fsr2l,c
  3671  0104CA  0E01               	movlw	high _eusart2TxBuffer
  3672  0104CC  20F4               	addwfc	prodh,w,c
  3673  0104CE  6EDA               	movwf	fsr2h,c
  3674  0104D0  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
  3675                           
  3676                           ; BSR set to: 14
  3677  0104D4  2A3A               	incf	_eusart2TxHead,f,c	;volatile
  3678                           
  3679                           ; BSR set to: 14
  3680                           ;eusart2.c: 164: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  3681  0104D6  0E3F               	movlw	63
  3682  0104D8  643A               	cpfsgt	_eusart2TxHead,c	;volatile
  3683  0104DA  D002               	goto	i2l189
  3684                           
  3685                           ; BSR set to: 14
  3686                           ;eusart2.c: 165: {
  3687                           ;eusart2.c: 166: eusart2TxHead = 0;
  3688  0104DC  0E00               	movlw	0
  3689  0104DE  6E3A               	movwf	_eusart2TxHead,c	;volatile
  3690  0104E0                     i2l189:
  3691                           
  3692                           ; BSR set to: 14
  3693                           ;eusart2.c: 167: }
  3694                           ;eusart2.c: 168: eusart2TxBufferRemaining--;
  3695                           
  3696                           ; BSR set to: 14
  3697  0104E0  0634               	decf	_eusart2TxBufferRemaining,f,c	;volatile
  3698  0104E2                     i2l188:
  3699                           
  3700                           ; BSR set to: 14
  3701                           ;eusart2.c: 169: }
  3702                           ;eusart2.c: 170: PIE3bits.TX2IE = 1;
  3703                           
  3704                           ; BSR set to: 14
  3705  0104E2  8D2C               	bsf	44,6,b	;volatile
  3706                           
  3707                           ; BSR set to: 14
  3708  0104E4  0012               	return		;funcret
  3709  0104E6                     __end_ofi2_EUSART2_Write:
  3710                           	opt stack 0
  3711                           tosu	equ	0xFFF
  3712                           tosh	equ	0xFFE
  3713                           tosl	equ	0xFFD
  3714                           pclatu	equ	0xFFB
  3715                           pclath	equ	0xFFA
  3716                           tblptru	equ	0xFF8
  3717                           tblptrh	equ	0xFF7
  3718                           tblptrl	equ	0xFF6
  3719                           tablat	equ	0xFF5
  3720                           prodh	equ	0xFF4
  3721                           prodl	equ	0xFF3
  3722                           intcon	equ	0xFF2
  3723                           postinc0	equ	0xFEE
  3724                           fsr0h	equ	0xFEA
  3725                           fsr0l	equ	0xFE9
  3726                           wreg	equ	0xFE8
  3727                           fsr1h	equ	0xFE2
  3728                           fsr1l	equ	0xFE1
  3729                           indf2	equ	0xFDF
  3730                           postinc2	equ	0xFDE
  3731                           fsr2h	equ	0xFDA
  3732                           fsr2l	equ	0xFD9
  3733                           status	equ	0xFD8
  3734                           tosu	equ	0xFFF
  3735                           tosh	equ	0xFFE
  3736                           tosl	equ	0xFFD
  3737                           pclatu	equ	0xFFB
  3738                           pclath	equ	0xFFA
  3739                           tblptru	equ	0xFF8
  3740                           tblptrh	equ	0xFF7
  3741                           tblptrl	equ	0xFF6
  3742                           tablat	equ	0xFF5
  3743                           prodh	equ	0xFF4
  3744                           prodl	equ	0xFF3
  3745                           intcon	equ	0xFF2
  3746                           postinc0	equ	0xFEE
  3747                           fsr0h	equ	0xFEA
  3748                           fsr0l	equ	0xFE9
  3749                           wreg	equ	0xFE8
  3750                           fsr1h	equ	0xFE2
  3751                           fsr1l	equ	0xFE1
  3752                           indf2	equ	0xFDF
  3753                           postinc2	equ	0xFDE
  3754                           fsr2h	equ	0xFDA
  3755                           fsr2l	equ	0xFD9
  3756                           status	equ	0xFD8
  3757                           
  3758                           	psect	text24
  3759  000000                     __ptext24:
  3760                           	opt stack 0
  3761                           tosu	equ	0xFFF
  3762                           tosh	equ	0xFFE
  3763                           tosl	equ	0xFFD
  3764                           pclatu	equ	0xFFB
  3765                           pclath	equ	0xFFA
  3766                           tblptru	equ	0xFF8
  3767                           tblptrh	equ	0xFF7
  3768                           tblptrl	equ	0xFF6
  3769                           tablat	equ	0xFF5
  3770                           prodh	equ	0xFF4
  3771                           prodl	equ	0xFF3
  3772                           intcon	equ	0xFF2
  3773                           postinc0	equ	0xFEE
  3774                           fsr0h	equ	0xFEA
  3775                           fsr0l	equ	0xFE9
  3776                           wreg	equ	0xFE8
  3777                           fsr1h	equ	0xFE2
  3778                           fsr1l	equ	0xFE1
  3779                           indf2	equ	0xFDF
  3780                           postinc2	equ	0xFDE
  3781                           fsr2h	equ	0xFDA
  3782                           fsr2l	equ	0xFD9
  3783                           status	equ	0xFD8
  3784                           
  3785                           	psect	rparam
  3786  0000                     tosu	equ	0xFFF
  3787                           tosh	equ	0xFFE
  3788                           tosl	equ	0xFFD
  3789                           pclatu	equ	0xFFB
  3790                           pclath	equ	0xFFA
  3791                           tblptru	equ	0xFF8
  3792                           tblptrh	equ	0xFF7
  3793                           tblptrl	equ	0xFF6
  3794                           tablat	equ	0xFF5
  3795                           prodh	equ	0xFF4
  3796                           prodl	equ	0xFF3
  3797                           intcon	equ	0xFF2
  3798                           postinc0	equ	0xFEE
  3799                           fsr0h	equ	0xFEA
  3800                           fsr0l	equ	0xFE9
  3801                           wreg	equ	0xFE8
  3802                           fsr1h	equ	0xFE2
  3803                           fsr1l	equ	0xFE1
  3804                           indf2	equ	0xFDF
  3805                           postinc2	equ	0xFDE
  3806                           fsr2h	equ	0xFDA
  3807                           fsr2l	equ	0xFD9
  3808                           status	equ	0xFD8
  3809                           
  3810                           	psect	temp
  3811  00003B                     btemp:
  3812                           	opt stack 0
  3813  00003B                     	ds	1
  3814  0000                     int$flags	set	btemp
  3815  0000                     wtemp6	set	btemp+1
  3816                           tosu	equ	0xFFF
  3817                           tosh	equ	0xFFE
  3818                           tosl	equ	0xFFD
  3819                           pclatu	equ	0xFFB
  3820                           pclath	equ	0xFFA
  3821                           tblptru	equ	0xFF8
  3822                           tblptrh	equ	0xFF7
  3823                           tblptrl	equ	0xFF6
  3824                           tablat	equ	0xFF5
  3825                           prodh	equ	0xFF4
  3826                           prodl	equ	0xFF3
  3827                           intcon	equ	0xFF2
  3828                           postinc0	equ	0xFEE
  3829                           fsr0h	equ	0xFEA
  3830                           fsr0l	equ	0xFE9
  3831                           wreg	equ	0xFE8
  3832                           fsr1h	equ	0xFE2
  3833                           fsr1l	equ	0xFE1
  3834                           indf2	equ	0xFDF
  3835                           postinc2	equ	0xFDE
  3836                           fsr2h	equ	0xFDA
  3837                           fsr2l	equ	0xFD9
  3838                           status	equ	0xFD8


Data Sizes:
    Strings     503
    Constant    0
    Data        0
    BSS         198
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      58
    BANK0           160      0     128
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_20(CODE[5]), STR_17(CODE[6]), STR_14(CODE[6]), STR_10(CODE[9]), 
		 -> STR_6(CODE[8]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 250
		 -> STR_23(CODE[3]), STR_22(CODE[250]), STR_21(CODE[3]), STR_19(CODE[4]), 
		 -> STR_18(CODE[5]), STR_16(CODE[4]), STR_15(CODE[5]), STR_13(CODE[3]), 
		 -> STR_12(CODE[14]), STR_11(CODE[3]), STR_9(CODE[3]), STR_8(CODE[18]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_4(CODE[174]), STR_3(CODE[4]), 
		 -> STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(COMRAM[2]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK0[64]), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ringBufferPull
    _ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_printf
    _printResetMessage->_printf
    _printf->_putch
    _putch->_EUSART2_Write
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2_putch
    i2_putch->i2_EUSART2_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4620
                                             43 COMRAM     2     2      0
                  _SYSTEM_Initialize
                  _printResetMessage
                     _ringBufferPull
 ---------------------------------------------------------------------------------
 (1) _ringBufferPull                                       9     9      0    2970
                                             34 COMRAM     9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     318
                                             25 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                        2     0      2    2491
                                             32 COMRAM     2     0      2
                             _printf
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4     851
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      24
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printResetMessage                                    0     0      0    1454
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              18    16      2    1454
                                             27 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      66
                                             26 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      44
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     196
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3      98
                                             25 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3      98
                                             25 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManagerHigh                      18    18      0     138
                                              7 COMRAM    18    18      0
                   Absolute function *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART2_Receive_ISR                                  0     0      0     138
                           i2_printf
 ---------------------------------------------------------------------------------
 (8) i2_printf                                            18    16      2     138
                                              2 COMRAM     5     3      2
                            i2_putch
 ---------------------------------------------------------------------------------
 (9) i2_putch                                              1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (10) i2_EUSART2_Write                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printResetMessage
     _printf
       _putch
         _EUSART2_Write
   _ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _printf
         _putch
           _EUSART2_Write
       _strcmp
     _strlen

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _EUSART2_Receive_ISR *
     i2_printf
       i2_putch
         i2_EUSART2_Write
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      3A       1       61.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FA       8        0.0%
DATA                 0      0      FA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Aug 28 14:16:20 2018

                                  __CFG_CP$OFF 000000                                            l320 0192  
                                          l321 0178                                            l323 01D8  
                                          l180 054A                                            l324 01AC  
                                          l342 0046                                            l318 0158  
                                          l344 008A                                            l178 0524  
                                          l346 00C2                                            l187 0482  
                                          l188 04A6                                            l348 00F8  
                                          l189 04A4                                            l358 05F8  
                                          l359 05F2                                            l289 03E0  
                                          l910 0424                                            l909 042C  
                                          l917 04F4                                            l918 04F0  
                                 __CFG_CPD$OFF 000000                                            u470 0462  
                                          u660 016E                                            u777 03EE  
                                          u787 0408                        __size_of_PMD_Initialize 001C  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                        __size_of_ringBufferPull 0110  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                         l1321 0470                                           l1545 0148  
                                         l1555 016E                                           STR_1 FFFA  
                                         STR_2 FFF1                                           STR_3 FFF6  
                                         STR_4 FF01                                           STR_5 FFBE  
                                         STR_6 FFD8                                           STR_7 FFBE  
                                         STR_8 FFAF                                           STR_9 FFBE  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 0008                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 046E                                           _main 03D4  
                                         _line 00A0                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 003B  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00D8                   __end_of_EUSART2_Transmit_ISR 05BA  
                              __end_ofi2_putch 06C8                                  __CFG_CSWEN$ON 000000  
                                 ___param_bank 000000                                  __CFG_SCANE$ON 000000  
                     __size_ofi2_EUSART2_Write 003C                 __size_of_OSCILLATOR_Initialize 0018  
                          ringBufferPull@index 002A                  __end_of_OSCILLATOR_Initialize 0678  
                                        ?_main 0001                                          STR_10 FFCF  
                                        STR_11 FFBE                                          STR_20 FFEC  
                                        STR_12 FFC1                                          STR_21 FFBE  
                                        STR_13 FFBE                                          STR_14 FFE6  
                                        STR_22 FE07                                          STR_23 FFBE  
                                        STR_15 FFF1                                          STR_16 FFF6  
                                        STR_17 FFE0                                  __CFG_WDTE$OFF 000000  
                                        STR_18 FFF1                                          STR_19 FFF6  
                               __CFG_DEBUG$OFF 000000                                          i2l200 05B0  
                                        i2l210 0294                                          i2l106 006E  
                                        i2l212 02DC                                          i2l205 0254  
                                        i2l206 0274                                          i2l207 0290  
                                        i2l187 04BE                                          i2l188 04E2  
                                        i2l189 04E0                                          i2l358 0626  
                                        i2l359 0620                                          i2l199 05B4  
                                        _OSCEN 000E47                                          _TRISA 000F81  
                                        _TRISB 000F82                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                __CFG_WRT3$OFF 000000                                  __CFG_WRT4$OFF 000000  
                                __CFG_WRT5$OFF 000000                                  __CFG_WRT6$OFF 000000  
                                __CFG_WRT7$OFF 000000                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                               __CFG_EBTRB$OFF 000000                             __CFG_MCLRE$EXTMCLR 000000  
                                        _putch 06AA                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                                          tablat 000FF5  
                               ??_EUSART2_Read 001A                                          status 000FD8  
                                        wtemp6 003C                               __end_ofi2_printf 0644  
        __end_of_EUSART2_SetTxInterruptHandler 069C         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 068E                                __initialization 05BA  
                                 __end_of_main 0422                                     i2printf@ap 0005  
                        __end_of_ringBufferLUT 013A                                         ??_main 002C  
                                __activetblptr 000003                     __end_of_EUSART2_Initialize 03D4  
                     _eusart2TxBufferRemaining 0034                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                                       _RC2REG 000EF1                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l1341 04AC                                 __CFG_WDTCCS$SC 000000  
                                       _RG7PPS 000E89                                  i2putch@txData 0002  
                                       _OSCFRQ 000E49                                      ??i2_putch 0002  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                               __CFG_PWRTE$OFF 000000                                 __CFG_XINST$OFF 000000  
                    __CFG_RSTOSC$HFINTOSC_1MHZ 000000                                 __CFG_STVREN$ON 000000  
                                       clear_0 05C0                                         clear_1 05CC  
                         _eusart2RxStringReady 0035                                         _printf 05E8  
                                       _strcmp 0422                                         _strlen 04E6  
                            ??i2_EUSART2_Write 0001                                 _PMD_Initialize 0644  
                                 __mediumconst FE06                                 _ringBufferPull 013A  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                           _EUSART2_Transmit_ISR 0588  
                              ??_EUSART2_Write 001A                  __size_of_INTERRUPT_Initialize 000A  
                              _eusart2RxBuffer 0060               ??_INTERRUPT_InterruptManagerHigh 0008  
              ?_INTERRUPT_InterruptManagerHigh 0001                              _SYSTEM_Initialize 0678  
                              _eusart2TxBuffer 0100                                     __accesstop 0060  
                      __end_of__initialization 05DE                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 000001                                 __pcstackCOMRAM 0001  
                          ??_SYSTEM_Initialize 001D                 ?_EUSART2_SetTxInterruptHandler 001A  
                                __end_of_putch 06B4                         __end_of_PMD_Initialize 0660  
                         __end_of_EUSART2_Read 0556                         __end_of_ringBufferPull 024A  
                        ?_EUSART2_Transmit_ISR 0001                                      ?i2_printf 0003  
                      ringBufferPull@index_575 0028                      __end_of_SYSTEM_Initialize 068E  
                                      ??_putch 001B                                  _eusart2RxHead 0038  
                                _eusart2TxHead 003A                                     __pbssBANK0 0060  
                                   __pbssBANK1 0100                                  _eusart2RxTail 0037  
                                _eusart2TxTail 0039                                     __pnvCOMRAM 002E  
                        EUSART2_Read@readValue 001A                                        ?_printf 001C  
                              ?_PMD_Initialize 0001                                        ?_strcmp 001A  
                                      ?_strlen 001A                                ?_ringBufferPull 0001  
                                      _SP2BRGH 000EF4                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 02E4                                     ??i2_printf 0005  
                                      i2u62_40 0286                                        _OSCTUNE 000E48  
                                      i2u72_48 005E                                        i2u75_48 0078  
                                      i2u75_49 008C                                        i2_putch 06BE  
                                      __Hparam 0000                                        __Lparam 0000  
                                      __pcinit 05BA                                        __ramtop 0E00  
                                      __ptext0 03D4                                        __ptext1 013A  
                                      __ptext2 04E6                                        __ptext3 0000  
                                      __ptext4 0422                                        __ptext5 0520  
                                      __ptext6 0556                                        __ptext7 05E8  
                                      __ptext8 06AA                                        __ptext9 046E  
                              __size_of_printf 002E                                __size_of_strcmp 004C  
                              __size_of_strlen 003A                          _OSCILLATOR_Initialize 0660  
                       ??_EUSART2_Transmit_ISR 0001                       ??_PIN_MANAGER_Initialize 001A  
                   __size_of_SYSTEM_Initialize 0016                          i2EUSART2_Write@txData 0001  
                            _printResetMessage 0556                           end_of_initialization 05DE  
                           ?_printResetMessage 0001                             _EUSART2_Initialize 037A  
                          ??_printResetMessage 0021                                i2_EUSART2_Write 04AA  
                                      printf@c 0020                                        printf@f 001C  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0036                                        strcmp@r 001F  
                        __CFG_WDTCPS$WDTCPS_31 000000                            ?_EUSART2_Initialize 0001  
                                      strlen@s 001A                      __end_of_printResetMessage 0588  
                             __CFG_FEXTOSC$OFF 000000                           ??_EUSART2_Initialize 001D  
                       __size_of_ringBufferLUT 013A                                   _EUSART2_Read 0520  
                     ringBufferPull@charNumber 0026                   __end_of_INTERRUPT_Initialize 06BE  
                       ?_OSCILLATOR_Initialize 0001                                 __end_of_printf 0616  
                               __end_of_strcmp 046E                                 __end_of_strlen 0520  
                          start_initialization 05BA                __size_of_PIN_MANAGER_Initialize 0096  
                                    i2printf@c 0007                                      i2printf@f 0003  
EUSART2_SetRxInterruptHandler@interruptHandler 001A  EUSART2_SetTxInterruptHandler@interruptHandler 001A  
                                  putch@txData 001B                              __size_ofi2_printf 002E  
                        __end_of_EUSART2_Write 04AA                        __end_ofi2_EUSART2_Write 04E6  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 001A  
                             ??_ringBufferPull 0023                                  _ringBufferLUT 0000  
                                     ??_printf 001E                                       ??_strcmp 001E  
                                     ??_strlen 001C                                 _eusart2RxCount 0036  
                                  __pbssCOMRAM 0035                     __size_of_printResetMessage 0032  
                          EUSART2_Write@txData 001A                ??_EUSART2_SetRxInterruptHandler 001D  
                                     ?i2_putch 0001                         _PIN_MANAGER_Initialize 02E4  
                                    __pintcode 0008                                  __pmediumconst FE06  
                               ?_ringBufferLUT 0021              _EUSART2_TxDefaultInterruptHandler 0031  
                             __CFG_PPS1WAY$OFF 000000                                       _BAUD2CON 000EF7  
                               __size_of_putch 000A                           _INTERRUPT_Initialize 06B4  
                 __size_of_EUSART2_Receive_ISR 009A                               ?i2_EUSART2_Write 0001  
                                     _IPR3bits 000E22                                       _PIE3bits 000E2C  
                                     _PIR3bits 000E36                  __size_of_EUSART2_Transmit_ISR 0032  
                                     i2_printf 0616                          ?_INTERRUPT_Initialize 0001  
                             __size_ofi2_putch 000A                                       __Hrparam 0000  
        __end_of_EUSART2_SetRxInterruptHandler 06AA         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 069C                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 0023  
                      ??_OSCILLATOR_Initialize 001A                                       __ptext10 0678  
                                     __ptext11 0644                                       __ptext20 024A  
                                     __ptext12 02E4                                       __ptext21 0616  
                                     __ptext13 0660                                       __ptext22 06BE  
                                     __ptext14 06B4                                       __ptext23 04AA  
                                     __ptext15 037A                                       __ptext24 0000  
                                     __ptext16 068E                                       __ptext17 069C  
                                     __ptext19 0588                    __size_of_EUSART2_Initialize 005A  
                                __size_of_main 004E                           __CFG_WDTCWS$WDTCWS_7 000000  
                           __CFG_BORV$VBOR_190 000000                                     _RC2STAbits 000EF5  
                                     int$flags 003B                                     _INTCONbits 000FF2  
                       ??_INTERRUPT_Initialize 001A                                       intlevel2 0000  
                      ?_PIN_MANAGER_Initialize 0001                              __CFG_CLKOUTEN$OFF 000000  
                                     printf@ap 001E                 ?_EUSART2_SetRxInterruptHandler 001A  
                       __size_of_EUSART2_Write 003C                            _EUSART2_Receive_ISR 024A  
       __end_of_INTERRUPT_InterruptManagerHigh 00D8        __size_of_INTERRUPT_InterruptManagerHigh 00D0  
               _INTERRUPT_InterruptManagerHigh 0008                                     _RX2PPSbits 000E11  
                                     strcmp@s1 001A                                       strcmp@s2 001C  
                            ringBufferLUT@line 0021                                       strlen@cp 001E  
                                   _TX2STAbits 000EF6                 __end_of_PIN_MANAGER_Initialize 037A  
              ??_EUSART2_SetTxInterruptHandler 001D                           ?_EUSART2_Receive_ISR 0001  
            _EUSART2_RxDefaultInterruptHandler 002E  
